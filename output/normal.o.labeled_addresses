nv_clear	CALL,5:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	30
0x8a73	              0x55	                                push rbp	      5464	normal.c	FUNCTION_61
0x8a74	          0x4889e5	                            mov rbp, rsp	      5464	normal.c	FUNCTION_61
0x8a77	        0x4883ec20	                           sub rsp, 0x20	      5464	normal.c	FUNCTION_61
0x8a7b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5464	normal.c	FUNCTION_61
0x8a7f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5465	normal.c	FUNCTION_61	IF_1	CALL_1
0x8a83	          0x488b00	                    mov rax, qword [rax]	      5465	normal.c	FUNCTION_61	IF_1	CALL_1
0x8a86	          0x4889c7	                            mov rdi, rax	      5465	normal.c	FUNCTION_61	IF_1	CALL_1
0x8a89	      0xe8baceffff	                   call sym.checkclearop	      5465	normal.c	FUNCTION_61	IF_1	CALL_1
0x8a8e	            0x85c0	                           test eax, eax	      5465	normal.c	FUNCTION_61	IF_1	CALL_1
0x8a90	            0x754f	                           jne 0x4008b21	      5465	normal.c	FUNCTION_61	IF_1	CALL_1
0x8a92	    0x488b05000000	            mov rax, qword [0x04008ad9] 	      5477	normal.c	FUNCTION_61	IF_1	CALL_3
0x8a99	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5477	normal.c	FUNCTION_61	IF_1	CALL_3
0x8a9d	          0x4889c7	                            mov rdi, rax	      5477	normal.c	FUNCTION_61	IF_1	CALL_3
0x8aa0	      0xe800000000	                          call 0x4008ae5	      5477	normal.c	FUNCTION_61	IF_1	CALL_3
0x8aa5	    0x488b05000000	            mov rax, qword [0x04008aec] 	      5482	normal.c	FUNCTION_61	IF_1	CALL_4
0x8aac	        0x488945f8	                mov qword [rbp - 8], rax	      5482	normal.c	FUNCTION_61	IF_1	CALL_4
0x8ab0	            0xeb1e	                           jmp 0x4008b10	      5482	normal.c	FUNCTION_61	IF_1	CALL_4
0x8ab2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5483	normal.c	FUNCTION_61	IF_1
0x8ab6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5483	normal.c	FUNCTION_61	IF_1
0x8aba	    0xc78054020000	              mov dword [rax + 0x254], 0	      5483	normal.c	FUNCTION_61	IF_1
0x8ac4	        0x488b45f8	                mov rax, qword [rbp - 8]	      5482	normal.c	FUNCTION_61	IF_1	CALL_4
0x8ac8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5482	normal.c	FUNCTION_61	IF_1	CALL_4
0x8acc	        0x488945f8	                mov qword [rbp - 8], rax	      5482	normal.c	FUNCTION_61	IF_1	CALL_4
0x8ad0	      0x48837df800	                  cmp qword [rbp - 8], 0	      5482	normal.c	FUNCTION_61	IF_1	CALL_4
0x8ad5	            0x75db	                           jne 0x4008af2	      5482	normal.c	FUNCTION_61	IF_1	CALL_4
0x8ad7	      0xbf32000000	                           mov edi, 0x32	      5487	normal.c	FUNCTION_61	IF_1	CALL_5
0x8adc	      0xe800000000	                          call 0x4008b21	      5487	normal.c	FUNCTION_61	IF_1	CALL_5
0x8ae1	              0x90	                                     nop	      5489	normal.c	FUNCTION_61
0x8ae2	              0xc9	                                   leave	      5489	normal.c	FUNCTION_61
0x8ae3	              0xc3	                                     ret	      5489	normal.c	FUNCTION_61
find_ident_under_cursor	CALL,1:ELSE,0:DO,0:FOR,0:functions,0:IF,0:WHILE,0:SWITCH,0	17
0x516d	              0x55	                                push rbp	      3429	normal.c	FUNCTION_18
0x516e	          0x4889e5	                            mov rbp, rsp	      3429	normal.c	FUNCTION_18
0x5171	        0x4883ec10	                           sub rsp, 0x10	      3429	normal.c	FUNCTION_18
0x5175	        0x48897df8	                mov qword [rbp - 8], rdi	      3429	normal.c	FUNCTION_18
0x5179	          0x8975f4	              mov dword [rbp - 0xc], esi	      3429	normal.c	FUNCTION_18
0x517c	    0x488b05000000	            mov rax, qword [0x040051c3] 	      3431	normal.c	FUNCTION_18
0x5183	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3430	normal.c	FUNCTION_18	CALL_1
0x5186	    0x488b05000000	            mov rax, qword [0x040051cd] 	      3430	normal.c	FUNCTION_18	CALL_1
0x518d	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      3430	normal.c	FUNCTION_18	CALL_1
0x5191	    0x488b05000000	            mov rax, qword [0x040051d8] 	      3430	normal.c	FUNCTION_18	CALL_1
0x5198	          0x8b7df4	              mov edi, dword [rbp - 0xc]	      3430	normal.c	FUNCTION_18	CALL_1
0x519b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3430	normal.c	FUNCTION_18	CALL_1
0x519f	          0x4189f8	                            mov r8d, edi	      3430	normal.c	FUNCTION_18	CALL_1
0x51a2	          0x4889c7	                            mov rdi, rax	      3430	normal.c	FUNCTION_18	CALL_1
0x51a5	      0xe800000000	                          call 0x40051ea	      3430	normal.c	FUNCTION_18	CALL_1
0x51aa	              0xc9	                                   leave	      3432	normal.c	FUNCTION_18
0x51ab	              0xc3	                                     ret	      3432	normal.c	FUNCTION_18
nv_tilde	CALL,2:ELSE,1:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	25
0xeae8	              0x55	                                push rbp	      8569	normal.c	FUNCTION_112
0xeae9	          0x4889e5	                            mov rbp, rsp	      8569	normal.c	FUNCTION_112
0xeaec	        0x4883ec10	                           sub rsp, 0x10	      8569	normal.c	FUNCTION_112
0xeaf0	        0x48897df8	                mov qword [rbp - 8], rdi	      8569	normal.c	FUNCTION_112
0xeaf4	    0x8b0500000000	            mov eax, dword [0x0400eb3a] 	      8570	normal.c	FUNCTION_112	IF_1
0xeafa	            0x85c0	                           test eax, eax	      8570	normal.c	FUNCTION_112	IF_1
0xeafc	            0x7526	                           jne 0x400eb64	      8570	normal.c	FUNCTION_112	IF_1
0xeafe	    0x8b0500000000	            mov eax, dword [0x0400eb44] 	      8570	normal.c	FUNCTION_112	IF_1
0xeb04	            0x85c0	                           test eax, eax	      8570	normal.c	FUNCTION_112	IF_1
0xeb06	            0x751c	                           jne 0x400eb64	      8570	normal.c	FUNCTION_112	IF_1
0xeb08	        0x488b45f8	                mov rax, qword [rbp - 8]	      8570	normal.c	FUNCTION_112	IF_1
0xeb0c	          0x488b00	                    mov rax, qword [rax]	      8570	normal.c	FUNCTION_112	IF_1
0xeb0f	            0x8b00	                    mov eax, dword [rax]	      8570	normal.c	FUNCTION_112	IF_1
0xeb11	          0x83f807	                              cmp eax, 7	      8570	normal.c	FUNCTION_112	IF_1
0xeb14	            0x740e	                            je 0x400eb64	      8570	normal.c	FUNCTION_112	IF_1
0xeb16	        0x488b45f8	                mov rax, qword [rbp - 8]	      8571	normal.c	FUNCTION_112	CALL_1
0xeb1a	          0x4889c7	                            mov rdi, rax	      8571	normal.c	FUNCTION_112	CALL_1
0xeb1d	      0xe8e9dbffff	                     call sym.n_swapchar	      8571	normal.c	FUNCTION_112	CALL_1
0xeb22	            0xeb0c	                           jmp 0x400eb70	      8571	normal.c	FUNCTION_112	CALL_1
0xeb24	        0x488b45f8	                mov rax, qword [rbp - 8]	      8573	normal.c	FUNCTION_112	CALL_2
0xeb28	          0x4889c7	                            mov rdi, rax	      8573	normal.c	FUNCTION_112	CALL_2
0xeb2b	      0xe803000000	                    call sym.nv_operator	      8573	normal.c	FUNCTION_112	CALL_2
0xeb30	              0x90	                                     nop	      8574	normal.c	FUNCTION_112
0xeb31	              0xc9	                                   leave	      8574	normal.c	FUNCTION_112
0xeb32	              0xc3	                                     ret	      8574	normal.c	FUNCTION_112
nv_lineop	CALL,4:ELSE,2:DO,0:FOR,0:functions,0:IF,3:WHILE,0:SWITCH,0	64
0xec40	              0x55	                                push rbp	      8631	normal.c	FUNCTION_115
0xec41	          0x4889e5	                            mov rbp, rsp	      8631	normal.c	FUNCTION_115
0xec44	        0x4883ec10	                           sub rsp, 0x10	      8631	normal.c	FUNCTION_115
0xec48	        0x48897df8	                mov qword [rbp - 8], rdi	      8631	normal.c	FUNCTION_115
0xec4c	        0x488b45f8	                mov rax, qword [rbp - 8]	      8632	normal.c	FUNCTION_115
0xec50	          0x488b00	                    mov rax, qword [rax]	      8632	normal.c	FUNCTION_115
0xec53	    0xc74008010000	                  mov dword [rax + 8], 1	      8632	normal.c	FUNCTION_115
0xec5a	        0x488b45f8	                mov rax, qword [rbp - 8]	      8633	normal.c	FUNCTION_115	IF_1	CALL_1
0xec5e	          0x488b00	                    mov rax, qword [rax]	      8633	normal.c	FUNCTION_115	IF_1	CALL_1
0xec61	            0x8b00	                    mov eax, dword [rax]	      8633	normal.c	FUNCTION_115	IF_1	CALL_1
0xec63	            0x85c0	                           test eax, eax	      8633	normal.c	FUNCTION_115	IF_1	CALL_1
0xec65	           0xf94c0	                                 sete al	      8633	normal.c	FUNCTION_115	IF_1	CALL_1
0xec68	           0xfb6c0	                           movzx eax, al	      8633	normal.c	FUNCTION_115	IF_1	CALL_1
0xec6b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      8633	normal.c	FUNCTION_115	IF_1	CALL_1
0xec6f	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      8633	normal.c	FUNCTION_115	IF_1	CALL_1
0xec73	        0x4883ea01	                              sub rdx, 1	      8633	normal.c	FUNCTION_115	IF_1	CALL_1
0xec77	            0x89c6	                            mov esi, eax	      8633	normal.c	FUNCTION_115	IF_1	CALL_1
0xec79	          0x4889d7	                            mov rdi, rdx	      8633	normal.c	FUNCTION_115	IF_1	CALL_1
0xec7c	      0xe800000000	                          call 0x400ecc1	      8633	normal.c	FUNCTION_115	IF_1	CALL_1
0xec81	            0x85c0	                           test eax, eax	      8633	normal.c	FUNCTION_115	IF_1	CALL_1
0xec83	            0x7511	                           jne 0x400ecd6	      8633	normal.c	FUNCTION_115	IF_1	CALL_1
0xec85	        0x488b45f8	                mov rax, qword [rbp - 8]	      8634	normal.c	FUNCTION_115	CALL_2
0xec89	          0x488b00	                    mov rax, qword [rax]	      8634	normal.c	FUNCTION_115	CALL_2
0xec8c	          0x4889c7	                            mov rdi, rax	      8634	normal.c	FUNCTION_115	CALL_2
0xec8f	      0xe8546dffff	                    call sym.clearopbeep	      8634	normal.c	FUNCTION_115	CALL_2
0xec94	            0xeb6c	                           jmp 0x400ed42	      8643	normal.c	FUNCTION_115
0xec96	        0x488b45f8	                mov rax, qword [rbp - 8]	      8635	normal.c	FUNCTION_115	ELSE_1	IF_2
0xec9a	          0x488b00	                    mov rax, qword [rax]	      8635	normal.c	FUNCTION_115	ELSE_1	IF_2
0xec9d	            0x8b00	                    mov eax, dword [rax]	      8635	normal.c	FUNCTION_115	ELSE_1	IF_2
0xec9f	          0x83f801	                              cmp eax, 1	      8635	normal.c	FUNCTION_115	ELSE_1	IF_2
0xeca2	            0x751e	                           jne 0x400ed02	      8635	normal.c	FUNCTION_115	ELSE_1	IF_2
0xeca4	        0x488b45f8	                mov rax, qword [rbp - 8]	      8636	normal.c	FUNCTION_115	ELSE_1	IF_2
0xeca8	          0x488b00	                    mov rax, qword [rax]	      8636	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecab	          0x8b400c	              mov eax, dword [rax + 0xc]	      8636	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecae	          0x83f876	                           cmp eax, 0x76	      8636	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecb1	            0x740f	                            je 0x400ed02	      8636	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecb3	        0x488b45f8	                mov rax, qword [rbp - 8]	      8637	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecb7	          0x488b00	                    mov rax, qword [rax]	      8637	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecba	          0x8b400c	              mov eax, dword [rax + 0xc]	      8637	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecbd	          0x83f816	                           cmp eax, 0x16	      8637	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecc0	            0x751c	                           jne 0x400ed1e	      8637	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      8638	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecc6	          0x488b00	                    mov rax, qword [rax]	      8638	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecc9	            0x8b00	                    mov eax, dword [rax]	      8638	normal.c	FUNCTION_115	ELSE_1	IF_2
0xeccb	          0x83f804	                              cmp eax, 4	      8638	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecce	            0x740e	                            je 0x400ed1e	      8638	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecd0	        0x488b45f8	                mov rax, qword [rbp - 8]	      8639	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecd4	          0x488b00	                    mov rax, qword [rax]	      8639	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecd7	            0x8b00	                    mov eax, dword [rax]	      8639	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecd9	          0x83f805	                              cmp eax, 5	      8639	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecdc	            0x750c	                           jne 0x400ed2a	      8639	normal.c	FUNCTION_115	ELSE_1	IF_2
0xecde	      0xbf06000000	                              mov edi, 6	      8640	normal.c	FUNCTION_115	ELSE_1	IF_2
0xece3	      0xe800000000	                          call 0x400ed28	      8640	normal.c	FUNCTION_115	ELSE_1	IF_2
0xece8	            0xeb18	                           jmp 0x400ed42	      8643	normal.c	FUNCTION_115
0xecea	        0x488b45f8	                mov rax, qword [rbp - 8]	      8641	normal.c	FUNCTION_115	ELSE_2	IF_3
0xecee	          0x488b00	                    mov rax, qword [rax]	      8641	normal.c	FUNCTION_115	ELSE_2	IF_3
0xecf1	            0x8b00	                    mov eax, dword [rax]	      8641	normal.c	FUNCTION_115	ELSE_2	IF_3
0xecf3	          0x83f802	                              cmp eax, 2	      8641	normal.c	FUNCTION_115	ELSE_2	IF_3
0xecf6	            0x740a	                            je 0x400ed42	      8641	normal.c	FUNCTION_115	ELSE_2	IF_3
0xecf8	      0xbf05000000	                              mov edi, 5	      8642	normal.c	FUNCTION_115	ELSE_2	IF_3
0xecfd	      0xe800000000	                          call 0x400ed42	      8642	normal.c	FUNCTION_115	ELSE_2	IF_3
0xed02	              0x90	                                     nop	      8643	normal.c	FUNCTION_115
0xed03	              0xc9	                                   leave	      8643	normal.c	FUNCTION_115
0xed04	              0xc3	                                     ret	      8643	normal.c	FUNCTION_115
find_end_of_word	CALL,3:ELSE,0:DO,0:FOR,0:functions,0:IF,3:WHILE,1:SWITCH,0	95
0x4d46	              0x55	                                push rbp	      3213	normal.c	FUNCTION_11
0x4d47	          0x4889e5	                            mov rbp, rsp	      3213	normal.c	FUNCTION_11
0x4d4a	              0x53	                                push rbx	      3213	normal.c	FUNCTION_11
0x4d4b	        0x4883ec28	                           sub rsp, 0x28	      3213	normal.c	FUNCTION_11
0x4d4f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3213	normal.c	FUNCTION_11
0x4d53	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3218	normal.c	FUNCTION_11	CALL_1
0x4d57	          0x488b00	                    mov rax, qword [rax]	      3218	normal.c	FUNCTION_11	CALL_1
0x4d5a	          0x4889c7	                            mov rdi, rax	      3218	normal.c	FUNCTION_11	CALL_1
0x4d5d	      0xe800000000	                          call 0x4004da2	      3218	normal.c	FUNCTION_11	CALL_1
0x4d62	        0x488945e8	             mov qword [rbp - 0x18], rax	      3218	normal.c	FUNCTION_11	CALL_1
0x4d66	    0x488b05000000	            mov rax, qword [0x04004dad] 	      3219	normal.c	FUNCTION_11	IF_1
0x4d6d	           0xfb600	                   movzx eax, byte [rax]	      3219	normal.c	FUNCTION_11	IF_1
0x4d70	            0x3c65	                            cmp al, 0x65	      3219	normal.c	FUNCTION_11	IF_1
0x4d72	            0x7554	                           jne 0x4004e08	      3219	normal.c	FUNCTION_11	IF_1
0x4d74	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3219	normal.c	FUNCTION_11	IF_1
0x4d78	          0x8b4008	                mov eax, dword [rax + 8]	      3219	normal.c	FUNCTION_11	IF_1
0x4d7b	            0x85c0	                           test eax, eax	      3219	normal.c	FUNCTION_11	IF_1
0x4d7d	            0x7e49	                           jle 0x4004e08	      3219	normal.c	FUNCTION_11	IF_1
0x4d7f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3221	normal.c	FUNCTION_11	IF_1
0x4d83	          0x8b4008	                mov eax, dword [rax + 8]	      3221	normal.c	FUNCTION_11	IF_1
0x4d86	          0x8d50ff	                      lea edx, [rax - 1]	      3221	normal.c	FUNCTION_11	IF_1
0x4d89	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3221	normal.c	FUNCTION_11	IF_1
0x4d8d	          0x895008	                mov dword [rax + 8], edx	      3221	normal.c	FUNCTION_11	IF_1
0x4d90	    0x488b05000000	            mov rax, qword [0x04004dd7] 	      3223	normal.c	FUNCTION_11	IF_1
0x4d97	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3223	normal.c	FUNCTION_11	IF_1
0x4d9b	          0x8b5208	                mov edx, dword [rdx + 8]	      3223	normal.c	FUNCTION_11	IF_1
0x4d9e	          0x4863ca	                         movsxd rcx, edx	      3223	normal.c	FUNCTION_11	IF_1
0x4da1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3223	normal.c	FUNCTION_11	IF_1
0x4da5	          0x4801d1	                            add rcx, rdx	      3223	normal.c	FUNCTION_11	IF_1
0x4da8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3223	normal.c	FUNCTION_11	IF_1
0x4dac	          0x4889ce	                            mov rsi, rcx	      3223	normal.c	FUNCTION_11	IF_1
0x4daf	          0x4889d7	                            mov rdi, rdx	      3223	normal.c	FUNCTION_11	IF_1
0x4db2	            0xffd0	                                call rax	      3223	normal.c	FUNCTION_11	IF_1
0x4db4	            0x89c2	                            mov edx, eax	      3223	normal.c	FUNCTION_11	IF_1
0x4db6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3223	normal.c	FUNCTION_11	IF_1
0x4dba	          0x8b4008	                mov eax, dword [rax + 8]	      3223	normal.c	FUNCTION_11	IF_1
0x4dbd	            0x29d0	                            sub eax, edx	      3223	normal.c	FUNCTION_11	IF_1
0x4dbf	            0x89c2	                            mov edx, eax	      3223	normal.c	FUNCTION_11	IF_1
0x4dc1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3223	normal.c	FUNCTION_11	IF_1
0x4dc5	          0x895008	                mov dword [rax + 8], edx	      3223	normal.c	FUNCTION_11	IF_1
0x4dc8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3226	normal.c	FUNCTION_11	CALL_2
0x4dcc	          0x8b4008	                mov eax, dword [rax + 8]	      3226	normal.c	FUNCTION_11	CALL_2
0x4dcf	          0x4863d0	                         movsxd rdx, eax	      3226	normal.c	FUNCTION_11	CALL_2
0x4dd2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3226	normal.c	FUNCTION_11	CALL_2
0x4dd6	          0x4801d0	                            add rax, rdx	      3226	normal.c	FUNCTION_11	CALL_2
0x4dd9	          0x4889c7	                            mov rdi, rax	      3226	normal.c	FUNCTION_11	CALL_2
0x4ddc	      0xe88f000000	                call sym.get_mouse_class	      3226	normal.c	FUNCTION_11	CALL_2
0x4de1	          0x8945e0	             mov dword [rbp - 0x20], eax	      3226	normal.c	FUNCTION_11	CALL_2
0x4de4	            0xeb67	                           jmp 0x4004e8d	      3227	normal.c	FUNCTION_11	WHILE_1
0x4de6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3230	normal.c	FUNCTION_11	WHILE_1
0x4dea	          0x8b5808	                mov ebx, dword [rax + 8]	      3230	normal.c	FUNCTION_11	WHILE_1
0x4ded	    0x488b05000000	            mov rax, qword [0x04004e34] 	      3230	normal.c	FUNCTION_11	WHILE_1
0x4df4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3230	normal.c	FUNCTION_11	WHILE_1
0x4df8	          0x8b5208	                mov edx, dword [rdx + 8]	      3230	normal.c	FUNCTION_11	WHILE_1
0x4dfb	          0x4863ca	                         movsxd rcx, edx	      3230	normal.c	FUNCTION_11	WHILE_1
0x4dfe	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3230	normal.c	FUNCTION_11	WHILE_1
0x4e02	          0x4801ca	                            add rdx, rcx	      3230	normal.c	FUNCTION_11	WHILE_1
0x4e05	          0x4889d7	                            mov rdi, rdx	      3230	normal.c	FUNCTION_11	WHILE_1
0x4e08	            0xffd0	                                call rax	      3230	normal.c	FUNCTION_11	WHILE_1
0x4e0a	             0x1d8	                            add eax, ebx	      3230	normal.c	FUNCTION_11	WHILE_1
0x4e0c	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3230	normal.c	FUNCTION_11	WHILE_1
0x4e0f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3234	normal.c	FUNCTION_11	WHILE_1	IF_2	CALL_3
0x4e12	          0x4863d0	                         movsxd rdx, eax	      3234	normal.c	FUNCTION_11	WHILE_1	IF_2	CALL_3
0x4e15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3234	normal.c	FUNCTION_11	WHILE_1	IF_2	CALL_3
0x4e19	          0x4801d0	                            add rax, rdx	      3234	normal.c	FUNCTION_11	WHILE_1	IF_2	CALL_3
0x4e1c	          0x4889c7	                            mov rdi, rax	      3234	normal.c	FUNCTION_11	WHILE_1	IF_2	CALL_3
0x4e1f	      0xe84c000000	                call sym.get_mouse_class	      3234	normal.c	FUNCTION_11	WHILE_1	IF_2	CALL_3
0x4e24	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3234	normal.c	FUNCTION_11	WHILE_1	IF_2	CALL_3
0x4e27	            0x741a	                            je 0x4004e83	      3234	normal.c	FUNCTION_11	WHILE_1	IF_2	CALL_3
0x4e29	    0x488b05000000	            mov rax, qword [0x04004e70] 	      3236	normal.c	FUNCTION_11	WHILE_1	IF_2	IF_3
0x4e30	           0xfb600	                   movzx eax, byte [rax]	      3236	normal.c	FUNCTION_11	WHILE_1	IF_2	IF_3
0x4e33	            0x3c65	                            cmp al, 0x65	      3236	normal.c	FUNCTION_11	WHILE_1	IF_2	IF_3
0x4e35	            0x7530	                           jne 0x4004ea7	      3236	normal.c	FUNCTION_11	WHILE_1	IF_2	IF_3
0x4e37	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3237	normal.c	FUNCTION_11	WHILE_1	IF_2	IF_3
0x4e3b	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      3237	normal.c	FUNCTION_11	WHILE_1	IF_2	IF_3
0x4e3e	          0x895008	                mov dword [rax + 8], edx	      3237	normal.c	FUNCTION_11	WHILE_1	IF_2	IF_3
0x4e41	            0xeb24	                           jmp 0x4004ea7	      3238	normal.c	FUNCTION_11	WHILE_1	IF_2
0x4e43	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3240	normal.c	FUNCTION_11	WHILE_1
0x4e47	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      3240	normal.c	FUNCTION_11	WHILE_1
0x4e4a	          0x895008	                mov dword [rax + 8], edx	      3240	normal.c	FUNCTION_11	WHILE_1
0x4e4d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3227	normal.c	FUNCTION_11	WHILE_1
0x4e51	          0x8b4008	                mov eax, dword [rax + 8]	      3227	normal.c	FUNCTION_11	WHILE_1
0x4e54	          0x4863d0	                         movsxd rdx, eax	      3227	normal.c	FUNCTION_11	WHILE_1
0x4e57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3227	normal.c	FUNCTION_11	WHILE_1
0x4e5b	          0x4801d0	                            add rax, rdx	      3227	normal.c	FUNCTION_11	WHILE_1
0x4e5e	           0xfb600	                   movzx eax, byte [rax]	      3227	normal.c	FUNCTION_11	WHILE_1
0x4e61	            0x84c0	                             test al, al	      3227	normal.c	FUNCTION_11	WHILE_1
0x4e63	            0x7581	                           jne 0x4004e26	      3227	normal.c	FUNCTION_11	WHILE_1
0x4e65	            0xeb01	                           jmp 0x4004ea8	      3242	normal.c	FUNCTION_11
0x4e67	              0x90	                                     nop	      3238	normal.c	FUNCTION_11	WHILE_1	IF_2
0x4e68	              0x90	                                     nop	      3242	normal.c	FUNCTION_11
0x4e69	        0x4883c428	                           add rsp, 0x28	      3242	normal.c	FUNCTION_11
0x4e6d	              0x5b	                                 pop rbx	      3242	normal.c	FUNCTION_11
0x4e6e	              0x5d	                                 pop rbp	      3242	normal.c	FUNCTION_11
0x4e6f	              0xc3	                                     ret	      3242	normal.c	FUNCTION_11
nv_Zet	CALL,4:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,1	30
0x8b84	              0x55	                                push rbp	      5527	normal.c	FUNCTION_64
0x8b85	          0x4889e5	                            mov rbp, rsp	      5527	normal.c	FUNCTION_64
0x8b88	        0x4883ec10	                           sub rsp, 0x10	      5527	normal.c	FUNCTION_64
0x8b8c	        0x48897df8	                mov qword [rbp - 8], rdi	      5527	normal.c	FUNCTION_64
0x8b90	        0x488b45f8	                mov rax, qword [rbp - 8]	      5528	normal.c	FUNCTION_64	IF_1	CALL_1
0x8b94	          0x488b00	                    mov rax, qword [rax]	      5528	normal.c	FUNCTION_64	IF_1	CALL_1
0x8b97	          0x4889c7	                            mov rdi, rax	      5528	normal.c	FUNCTION_64	IF_1	CALL_1
0x8b9a	      0xe8d9cdffff	                  call sym.checkclearopq	      5528	normal.c	FUNCTION_64	IF_1	CALL_1
0x8b9f	            0x85c0	                           test eax, eax	      5528	normal.c	FUNCTION_64	IF_1	CALL_1
0x8ba1	            0x753a	                           jne 0x4008c1d	      5528	normal.c	FUNCTION_64	IF_1	CALL_1
0x8ba3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5530	normal.c	FUNCTION_64	IF_1	SWITCH_1
0x8ba7	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5530	normal.c	FUNCTION_64	IF_1	SWITCH_1
0x8baa	          0x83f851	                           cmp eax, 0x51	      5530	normal.c	FUNCTION_64	IF_1	SWITCH_1
0x8bad	            0x7411	                            je 0x4008c00	      5530	normal.c	FUNCTION_64	IF_1	SWITCH_1
0x8baf	          0x83f85a	                           cmp eax, 0x5a	      5530	normal.c	FUNCTION_64	IF_1	SWITCH_1
0x8bb2	            0x7518	                           jne 0x4008c0c	      5530	normal.c	FUNCTION_64	IF_1	SWITCH_1
0x8bb4	      0xbf00000000	                              mov edi, 0	      5533	normal.c	FUNCTION_64	IF_1	SWITCH_1	CALL_2
0x8bb9	      0xe800000000	                          call 0x4008bfe	      5533	normal.c	FUNCTION_64	IF_1	SWITCH_1	CALL_2
0x8bbe	            0xeb1d	                           jmp 0x4008c1d	      5534	normal.c	FUNCTION_64	IF_1	SWITCH_1
0x8bc0	      0xbf00000000	                              mov edi, 0	      5537	normal.c	FUNCTION_64	IF_1	SWITCH_1	CALL_3
0x8bc5	      0xe800000000	                          call 0x4008c0a	      5537	normal.c	FUNCTION_64	IF_1	SWITCH_1	CALL_3
0x8bca	            0xeb11	                           jmp 0x4008c1d	      5538	normal.c	FUNCTION_64	IF_1	SWITCH_1
0x8bcc	        0x488b45f8	                mov rax, qword [rbp - 8]	      5540	normal.c	FUNCTION_64	IF_1	SWITCH_1	CALL_4
0x8bd0	          0x488b00	                    mov rax, qword [rax]	      5540	normal.c	FUNCTION_64	IF_1	SWITCH_1	CALL_4
0x8bd3	          0x4889c7	                            mov rdi, rax	      5540	normal.c	FUNCTION_64	IF_1	SWITCH_1	CALL_4
0x8bd6	      0xe80dceffff	                    call sym.clearopbeep	      5540	normal.c	FUNCTION_64	IF_1	SWITCH_1	CALL_4
0x8bdb	            0xeb00	                           jmp 0x4008c1d	      5543	normal.c	FUNCTION_64
0x8bdd	              0x90	                                     nop	      5543	normal.c	FUNCTION_64
0x8bde	              0xc9	                                   leave	      5543	normal.c	FUNCTION_64
0x8bdf	              0xc3	                                     ret	      5543	normal.c	FUNCTION_64
nv_ident	CALL,61:ELSE,15:DO,0:FOR,1:functions,0:IF,31:WHILE,2:SWITCH,1	635
0x8c7a	              0x55	                                push rbp	      5572	normal.c	FUNCTION_66
0x8c7b	          0x4889e5	                            mov rbp, rsp	      5572	normal.c	FUNCTION_66
0x8c7e	            0x4154	                                push r12	      5572	normal.c	FUNCTION_66
0x8c80	              0x53	                                push rbx	      5572	normal.c	FUNCTION_66
0x8c81	        0x4883c480	             add rsp, 0xffffffffffffff80	      5572	normal.c	FUNCTION_66
0x8c85	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      5572	normal.c	FUNCTION_66
0x8c8c	    0x64488b042528	                mov rax, qword fs:[0x28]	      5572	normal.c	FUNCTION_66
0x8c95	        0x488945e8	             mov qword [rbp - 0x18], rax	      5572	normal.c	FUNCTION_66
0x8c99	            0x31c0	                            xor eax, eax	      5572	normal.c	FUNCTION_66
0x8c9b	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      5573	normal.c	FUNCTION_66
0x8ca3	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      5581	normal.c	FUNCTION_66
0x8caa	    0xc74598000000	               mov dword [rbp - 0x68], 0	      5584	normal.c	FUNCTION_66
0x8cb1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5589	normal.c	FUNCTION_66	IF_1
0x8cb8	          0x8b400c	              mov eax, dword [rax + 0xc]	      5589	normal.c	FUNCTION_66	IF_1
0x8cbb	          0x83f867	                           cmp eax, 0x67	      5589	normal.c	FUNCTION_66	IF_1
0x8cbe	            0x7516	                           jne 0x4008d16	      5589	normal.c	FUNCTION_66	IF_1
0x8cc0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5591	normal.c	FUNCTION_66	IF_1
0x8cc7	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5591	normal.c	FUNCTION_66	IF_1
0x8cca	          0x894590	             mov dword [rbp - 0x70], eax	      5591	normal.c	FUNCTION_66	IF_1
0x8ccd	    0xc74594010000	               mov dword [rbp - 0x6c], 1	      5592	normal.c	FUNCTION_66	IF_1
0x8cd4	            0xeb14	                           jmp 0x4008d2a	      5592	normal.c	FUNCTION_66	IF_1
0x8cd6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5596	normal.c	FUNCTION_66	ELSE_1
0x8cdd	          0x8b400c	              mov eax, dword [rax + 0xc]	      5596	normal.c	FUNCTION_66	ELSE_1
0x8ce0	          0x894590	             mov dword [rbp - 0x70], eax	      5596	normal.c	FUNCTION_66	ELSE_1
0x8ce3	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      5597	normal.c	FUNCTION_66	ELSE_1
0x8cea	    0x817d90a30000	           cmp dword [rbp - 0x70], 0xa3 	      5600	normal.c	FUNCTION_66	IF_2
0x8cf1	            0x7507	                           jne 0x4008d3a	      5600	normal.c	FUNCTION_66	IF_2
0x8cf3	    0xc74590230000	           mov dword [rbp - 0x70], 0x23 	      5601	normal.c	FUNCTION_66	IF_2
0x8cfa	        0x837d905d	           cmp dword [rbp - 0x70], 0x5d 	      5606	normal.c	FUNCTION_66	IF_3
0x8cfe	            0x740c	                            je 0x4008d4c	      5606	normal.c	FUNCTION_66	IF_3
0x8d00	        0x837d901d	           cmp dword [rbp - 0x70], 0x1d 	      5606	normal.c	FUNCTION_66	IF_3
0x8d04	            0x7406	                            je 0x4008d4c	      5606	normal.c	FUNCTION_66	IF_3
0x8d06	        0x837d904b	           cmp dword [rbp - 0x70], 0x4b 	      5606	normal.c	FUNCTION_66	IF_3
0x8d0a	            0x7546	                           jne 0x4008d92	      5606	normal.c	FUNCTION_66	IF_3
0x8d0c	    0x8b0500000000	            mov eax, dword [0x04008d52] 	      5608	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x8d12	            0x85c0	                           test eax, eax	      5608	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x8d14	            0x7422	                            je 0x4008d78	      5608	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x8d16	        0x488d558c	                   lea rdx, [rbp - 0x74]	      5608	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x8d1a	        0x488d4db8	                   lea rcx, [rbp - 0x48]	      5608	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x8d1e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5608	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x8d25	          0x4889ce	                            mov rsi, rcx	      5608	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x8d28	          0x4889c7	                            mov rdi, rax	      5608	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x8d2b	      0xe800000000	                          call 0x4008d70	      5608	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x8d30	            0x85c0	                           test eax, eax	      5608	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x8d32	     0xf8488080000	                            je 0x4009600	      5608	normal.c	FUNCTION_66	IF_3	IF_4	CALL_1
0x8d38	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5610	normal.c	FUNCTION_66	IF_3	IF_5	CALL_2
0x8d3f	          0x488b00	                    mov rax, qword [rax]	      5610	normal.c	FUNCTION_66	IF_3	IF_5	CALL_2
0x8d42	          0x4889c7	                            mov rdi, rax	      5610	normal.c	FUNCTION_66	IF_3	IF_5	CALL_2
0x8d45	      0xe82eccffff	                  call sym.checkclearopq	      5610	normal.c	FUNCTION_66	IF_3	IF_5	CALL_2
0x8d4a	            0x85c0	                           test eax, eax	      5610	normal.c	FUNCTION_66	IF_3	IF_5	CALL_2
0x8d4c	     0xf8571080000	                           jne 0x4009603	      5610	normal.c	FUNCTION_66	IF_3	IF_5	CALL_2
0x8d52	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d56	          0x4885c0	                           test rax, rax	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d59	            0x7547	                           jne 0x4008de2	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d5b	        0x837d902a	           cmp dword [rbp - 0x70], 0x2a 	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d5f	            0x7406	                            je 0x4008da7	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d61	        0x837d9023	           cmp dword [rbp - 0x70], 0x23 	      5615	normal.c	FUNCTION_66	IF_6
0x8d65	            0x7507	                           jne 0x4008dae	      5615	normal.c	FUNCTION_66	IF_6
0x8d67	      0xba03000000	                              mov edx, 3	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d6c	            0xeb05	                           jmp 0x4008db3	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d6e	      0xba01000000	                              mov edx, 1	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d73	        0x488d45b8	                   lea rax, [rbp - 0x48]	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d77	            0x89d6	                            mov esi, edx	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d79	          0x4889c7	                            mov rdi, rax	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d7c	      0xe800000000	                          call 0x4008dc1	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d81	          0x89458c	             mov dword [rbp - 0x74], eax	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d84	          0x8b458c	             mov eax, dword [rbp - 0x74]	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d87	            0x85c0	                           test eax, eax	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d89	            0x7517	                           jne 0x4008de2	      5614	normal.c	FUNCTION_66	IF_6	CALL_3
0x8d8b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5618	normal.c	FUNCTION_66	IF_6	CALL_4
0x8d92	          0x488b00	                    mov rax, qword [rax]	      5618	normal.c	FUNCTION_66	IF_6	CALL_4
0x8d95	          0x4889c7	                            mov rdi, rax	      5618	normal.c	FUNCTION_66	IF_6	CALL_4
0x8d98	      0xe815ccffff	                        call sym.clearop	      5618	normal.c	FUNCTION_66	IF_6	CALL_4
0x8d9d	      0xe925080000	                           jmp 0x4009607	      5619	normal.c	FUNCTION_66	IF_6
0x8da2	    0x488b05000000	            mov rax, qword [0x04008de9] 	      5625	normal.c	FUNCTION_66
0x8da9	    0x488b80001500	          mov rax, qword [rax + 0x1500] 	      5625	normal.c	FUNCTION_66
0x8db0	           0xfb600	                   movzx eax, byte [rax]	      5625	normal.c	FUNCTION_66
0x8db3	            0x84c0	                             test al, al	      5625	normal.c	FUNCTION_66
0x8db5	            0x7410	                            je 0x4008e07	      5625	normal.c	FUNCTION_66
0x8db7	    0x488b05000000	            mov rax, qword [0x04008dfe] 	      5625	normal.c	FUNCTION_66
0x8dbe	    0x488b80001500	          mov rax, qword [rax + 0x1500] 	      5625	normal.c	FUNCTION_66
0x8dc5	            0xeb07	                           jmp 0x4008e0e	      5625	normal.c	FUNCTION_66
0x8dc7	    0x488b05000000	            mov rax, qword [0x04008e0e] 	      5625	normal.c	FUNCTION_66
0x8dce	        0x488945d8	             mov qword [rbp - 0x28], rax	      5625	normal.c	FUNCTION_66
0x8dd2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5626	normal.c	FUNCTION_66	CALL_5
0x8dd6	           0xfb600	                   movzx eax, byte [rax]	      5626	normal.c	FUNCTION_66	CALL_5
0x8dd9	            0x84c0	                             test al, al	      5627	normal.c	FUNCTION_66	CALL_6
0x8ddb	            0x742a	                            je 0x4008e47	      5627	normal.c	FUNCTION_66	CALL_6
0x8ddd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5626	normal.c	FUNCTION_66	CALL_5
0x8de1	      0xbe00000000	                              mov esi, 0	      5626	normal.c	FUNCTION_66	CALL_5
0x8de6	          0x4889c7	                            mov rdi, rax	      5626	normal.c	FUNCTION_66	CALL_5
0x8de9	      0xe800000000	                          call 0x4008e2e	      5626	normal.c	FUNCTION_66	CALL_5
0x8dee	            0x85c0	                           test eax, eax	      5626	normal.c	FUNCTION_66	CALL_5
0x8df0	            0x7415	                            je 0x4008e47	      5626	normal.c	FUNCTION_66	CALL_5
0x8df2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5627	normal.c	FUNCTION_66	CALL_6
0x8df6	      0xbe00000000	                              mov esi, 0	      5627	normal.c	FUNCTION_66	CALL_6
0x8dfb	          0x4889c7	                            mov rdi, rax	      5627	normal.c	FUNCTION_66	CALL_6
0x8dfe	      0xe800000000	                          call 0x4008e43	      5627	normal.c	FUNCTION_66	CALL_6
0x8e03	            0x85c0	                           test eax, eax	      5627	normal.c	FUNCTION_66	CALL_6
0x8e05	            0x7507	                           jne 0x4008e4e	      5627	normal.c	FUNCTION_66	CALL_6
0x8e07	      0xb801000000	                              mov eax, 1	      5627	normal.c	FUNCTION_66	CALL_6
0x8e0c	            0xeb05	                           jmp 0x4008e53	      5627	normal.c	FUNCTION_66	CALL_6
0x8e0e	      0xb800000000	                              mov eax, 0	      5627	normal.c	FUNCTION_66	CALL_6
0x8e13	          0x8945a0	             mov dword [rbp - 0x60], eax	      5626	normal.c	FUNCTION_66	CALL_5
0x8e16	        0x837da000	               cmp dword [rbp - 0x60], 0	      5628	normal.c	FUNCTION_66	IF_7	CALL_7
0x8e1a	            0x742f	                            je 0x4008e8b	      5628	normal.c	FUNCTION_66	IF_7	CALL_7
0x8e1c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5628	normal.c	FUNCTION_66	IF_7	CALL_7
0x8e20	          0x4889c7	                            mov rdi, rax	      5628	normal.c	FUNCTION_66	IF_7	CALL_7
0x8e23	      0xe800000000	                          call 0x4008e68	      5628	normal.c	FUNCTION_66	IF_7	CALL_7
0x8e28	           0xfb600	                   movzx eax, byte [rax]	      5628	normal.c	FUNCTION_66	IF_7	CALL_7
0x8e2b	            0x84c0	                             test al, al	      5628	normal.c	FUNCTION_66	IF_7	CALL_7
0x8e2d	            0x751c	                           jne 0x4008e8b	      5628	normal.c	FUNCTION_66	IF_7	CALL_7
0x8e2f	    0x488b05000000	            mov rax, qword [0x04008e76] 	      5630	normal.c	FUNCTION_66	IF_7	CALL_9
0x8e36	          0x4889c7	                            mov rdi, rax	      5630	normal.c	FUNCTION_66	IF_7	CALL_9
0x8e39	      0xe800000000	                          call 0x4008e7e	      5630	normal.c	FUNCTION_66	IF_7	CALL_9
0x8e3e	          0x4889c7	                            mov rdi, rax	      5630	normal.c	FUNCTION_66	IF_7	CALL_9
0x8e41	      0xe800000000	                          call 0x4008e86	      5630	normal.c	FUNCTION_66	IF_7	CALL_9
0x8e46	      0xe97c070000	                           jmp 0x4009607	      5631	normal.c	FUNCTION_66	IF_7
0x8e4b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5633	normal.c	FUNCTION_66
0x8e4f	           0xfb600	                   movzx eax, byte [rax]	      5633	normal.c	FUNCTION_66
0x8e52	            0x3c3a	                            cmp al, 0x3a	      5633	normal.c	FUNCTION_66
0x8e54	           0xf94c0	                                 sete al	      5633	normal.c	FUNCTION_66
0x8e57	           0xfb6c0	                           movzx eax, al	      5633	normal.c	FUNCTION_66
0x8e5a	          0x8945a4	             mov dword [rbp - 0x5c], eax	      5633	normal.c	FUNCTION_66
0x8e5d	          0x8b458c	             mov eax, dword [rbp - 0x74]	      5634	normal.c	FUNCTION_66	CALL_10
0x8e60	             0x1c0	                            add eax, eax	      5634	normal.c	FUNCTION_66	CALL_10
0x8e62	            0x89c3	                            mov ebx, eax	      5634	normal.c	FUNCTION_66	CALL_10
0x8e64	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5634	normal.c	FUNCTION_66	CALL_10
0x8e68	          0x4889c7	                            mov rdi, rax	      5634	normal.c	FUNCTION_66	CALL_10
0x8e6b	      0xe800000000	                          call 0x4008eb0	      5634	normal.c	FUNCTION_66	CALL_10
0x8e70	             0x1d8	                            add eax, ebx	      5634	normal.c	FUNCTION_66	CALL_10
0x8e72	          0x83c01e	                           add eax, 0x1e	      5634	normal.c	FUNCTION_66	CALL_10
0x8e75	          0x8945a8	             mov dword [rbp - 0x58], eax	      5634	normal.c	FUNCTION_66	CALL_10
0x8e78	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      5635	normal.c	FUNCTION_66	CALL_11
0x8e7b	            0x89c7	                            mov edi, eax	      5635	normal.c	FUNCTION_66	CALL_11
0x8e7d	      0xe800000000	                          call 0x4008ec2	      5635	normal.c	FUNCTION_66	CALL_11
0x8e82	        0x488945c0	             mov qword [rbp - 0x40], rax	      5635	normal.c	FUNCTION_66	CALL_11
0x8e86	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      5636	normal.c	FUNCTION_66	IF_8
0x8e8b	     0xf8435070000	                            je 0x4009606	      5636	normal.c	FUNCTION_66	IF_8
0x8e91	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5638	normal.c	FUNCTION_66
0x8e95	          0xc60000	                       mov byte [rax], 0	      5638	normal.c	FUNCTION_66
0x8e98	          0x8b4590	             mov eax, dword [rbp - 0x70]	      5640	normal.c	FUNCTION_66	SWITCH_1
0x8e9b	          0x83f82a	                           cmp eax, 0x2a	      5640	normal.c	FUNCTION_66	SWITCH_1
0x8e9e	            0x7422	                            je 0x4008f02	      5640	normal.c	FUNCTION_66	SWITCH_1
0x8ea0	          0x83f82a	                           cmp eax, 0x2a	      5640	normal.c	FUNCTION_66	SWITCH_1
0x8ea3	            0x7f0a	                            jg 0x4008eef	      5640	normal.c	FUNCTION_66	SWITCH_1
0x8ea5	          0x83f823	                           cmp eax, 0x23	      5640	normal.c	FUNCTION_66	SWITCH_1
0x8ea8	            0x7418	                            je 0x4008f02	      5640	normal.c	FUNCTION_66	SWITCH_1
0x8eaa	      0xe958030000	                           jmp 0x4009247	      5640	normal.c	FUNCTION_66	SWITCH_1
0x8eaf	          0x83f84b	                           cmp eax, 0x4b	      5640	normal.c	FUNCTION_66	SWITCH_1
0x8eb2	            0x7461	                            je 0x4008f55	      5640	normal.c	FUNCTION_66	SWITCH_1
0x8eb4	          0x83f85d	                           cmp eax, 0x5d	      5640	normal.c	FUNCTION_66	SWITCH_1
0x8eb7	     0xf8417030000	                            je 0x4009214	      5640	normal.c	FUNCTION_66	SWITCH_1
0x8ebd	      0xe945030000	                           jmp 0x4009247	      5640	normal.c	FUNCTION_66	SWITCH_1
0x8ec2	      0xe800000000	                          call 0x4008f07	      5650	normal.c	FUNCTION_66	SWITCH_1	CALL_12
0x8ec7	    0x488b1d000000	            mov rbx, qword [0x04008f0e] 	      5651	normal.c	FUNCTION_66	SWITCH_1	CALL_13
0x8ece	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5651	normal.c	FUNCTION_66	SWITCH_1	CALL_13
0x8ed2	          0x4989c4	                            mov r12, rax	      5651	normal.c	FUNCTION_66	SWITCH_1	CALL_13
0x8ed5	      0xe800000000	                          call 0x4008f1a	      5651	normal.c	FUNCTION_66	SWITCH_1	CALL_13
0x8eda	          0x4929c4	                            sub r12, rax	      5651	normal.c	FUNCTION_66	SWITCH_1	CALL_13
0x8edd	          0x4c89e0	                            mov rax, r12	      5651	normal.c	FUNCTION_66	SWITCH_1	CALL_13
0x8ee0	          0x894340	             mov dword [rbx + 0x40], eax	      5651	normal.c	FUNCTION_66	SWITCH_1	CALL_13
0x8ee3	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5653	normal.c	FUNCTION_66	SWITCH_1	IF_9	CALL_14
0x8ee7	            0x751d	                           jne 0x4008f46	      5653	normal.c	FUNCTION_66	SWITCH_1	IF_9	CALL_14
0x8ee9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5653	normal.c	FUNCTION_66	SWITCH_1	IF_9	CALL_14
0x8eed	          0x4889c7	                            mov rdi, rax	      5653	normal.c	FUNCTION_66	SWITCH_1	IF_9	CALL_14
0x8ef0	      0xe800000000	                          call 0x4008f35	      5653	normal.c	FUNCTION_66	SWITCH_1	IF_9	CALL_14
0x8ef5	            0x85c0	                           test eax, eax	      5653	normal.c	FUNCTION_66	SWITCH_1	IF_9	CALL_14
0x8ef7	            0x740d	                            je 0x4008f46	      5653	normal.c	FUNCTION_66	SWITCH_1	IF_9	CALL_14
0x8ef9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5654	normal.c	FUNCTION_66	SWITCH_1	CALL_15
0x8efd	      0x66c7005c3c	                  mov word [rax], 0x3c5c	      5654	normal.c	FUNCTION_66	SWITCH_1	CALL_15
0x8f02	        0xc6400200	                   mov byte [rax + 2], 0	      5654	normal.c	FUNCTION_66	SWITCH_1	CALL_15
0x8f06	    0xc70500000000	               mov dword [0x04008f50], 1	      5655	normal.c	FUNCTION_66	SWITCH_1
0x8f10	      0xe950030000	                           jmp 0x40092a5	      5656	normal.c	FUNCTION_66	SWITCH_1
0x8f15	        0x837da000	               cmp dword [rbp - 0x60], 0	      5659	normal.c	FUNCTION_66	SWITCH_1	IF_10
0x8f19	            0x7413	                            je 0x4008f6e	      5659	normal.c	FUNCTION_66	SWITCH_1	IF_10
0x8f1b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5660	normal.c	FUNCTION_66	SWITCH_1	CALL_16
0x8f1f	    0xc70068652120	            mov dword [rax], 0x20216568 	      5660	normal.c	FUNCTION_66	SWITCH_1	CALL_16
0x8f25	        0xc6400400	                   mov byte [rax + 4], 0	      5660	normal.c	FUNCTION_66	SWITCH_1	CALL_16
0x8f29	      0xe936030000	                           jmp 0x40092a4	      5705	normal.c	FUNCTION_66	SWITCH_1
0x8f2e	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5661	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11
0x8f32	     0xf849b000000	                            je 0x4009013	      5661	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11
0x8f38	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5663	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12
0x8f3f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5663	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12
0x8f43	          0x4885c0	                           test rax, rax	      5663	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12
0x8f46	            0x7430	                            je 0x4008fb8	      5663	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12
0x8f48	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5664	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x8f4f	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      5664	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x8f53	          0x8b75a8	             mov esi, dword [rbp - 0x58]	      5664	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x8f56	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5664	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x8f5a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5664	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x8f5e	          0x4989c8	                             mov r8, rcx	      5664	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x8f61	          0x4889d1	                            mov rcx, rdx	      5664	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x8f64	      0xba00000000	                              mov edx, 0	      5664	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x8f69	          0x4889c7	                            mov rdi, rax	      5664	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x8f6c	      0xb800000000	                              mov eax, 0	      5664	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x8f71	      0xe800000000	                          call 0x4008fb6	      5664	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x8f76	            0xeb13	                           jmp 0x4008fcb	      5664	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_17
0x8f78	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5667	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_18
0x8f7c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5667	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_18
0x8f80	          0x4889d6	                            mov rsi, rdx	      5667	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_18
0x8f83	          0x4889c7	                            mov rdi, rax	      5667	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_18
0x8f86	      0xe800000000	                          call 0x4008fcb	      5667	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_18
0x8f8b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5668	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_19
0x8f8f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5668	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_19
0x8f96	          0x4889c2	                            mov rdx, rax	      5668	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_19
0x8f99	      0xb800000000	                              mov eax, 0	      5668	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_19
0x8f9e	          0x4889d7	                            mov rdi, rdx	      5668	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_19
0x8fa1	            0xf2ae	              repne scasb al, byte [rdi]	      5668	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_19
0x8fa3	          0x4889c8	                            mov rax, rcx	      5668	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_19
0x8fa6	          0x48f7d0	                                 not rax	      5668	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_19
0x8fa9	        0x488d50ff	                      lea rdx, [rax - 1]	      5668	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_19
0x8fad	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5668	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_19
0x8fb1	          0x4801d0	                            add rax, rdx	      5668	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_19
0x8fb4	      0x66c7002000	                    mov word [rax], 0x20	      5668	normal.c	FUNCTION_66	SWITCH_1	ELSE_2	IF_11	CALL_19
0x8fb9	      0xe9a6020000	                           jmp 0x40092a4	      5705	normal.c	FUNCTION_66	SWITCH_1
0x8fbe	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5676	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x8fc2	        0x4883c001	                              add rax, 1	      5676	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x8fc6	        0x488945b8	             mov qword [rbp - 0x48], rax	      5676	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x8fca	          0x8b458c	             mov eax, dword [rbp - 0x74]	      5677	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x8fcd	          0x83e801	                              sub eax, 1	      5677	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x8fd0	          0x89458c	             mov dword [rbp - 0x74], eax	      5677	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x8fd3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5674	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x8fd7	           0xfb600	                   movzx eax, byte [rax]	      5674	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x8fda	            0x3c2d	                            cmp al, 0x2d	      5674	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x8fdc	            0x7507	                           jne 0x4009025	      5674	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x8fde	          0x8b458c	             mov eax, dword [rbp - 0x74]	      5674	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x8fe1	            0x85c0	                           test eax, eax	      5674	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x8fe3	            0x7fd9	                            jg 0x4008ffe	      5674	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	WHILE_1
0x8fe5	          0x8b458c	             mov eax, dword [rbp - 0x74]	      5679	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13
0x8fe8	            0x85c0	                           test eax, eax	      5679	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13
0x8fea	            0x7528	                           jne 0x4009054	      5679	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13
0x8fec	    0x488b05000000	            mov rax, qword [0x04009033] 	      5681	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_21
0x8ff3	          0x4889c7	                            mov rdi, rax	      5681	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_21
0x8ff6	      0xe800000000	                          call 0x400903b	      5681	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_21
0x8ffb	          0x4889c7	                            mov rdi, rax	      5681	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_21
0x8ffe	      0xe800000000	                          call 0x4009043	      5681	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_21
0x9003	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5682	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_22
0x9007	          0x4889c7	                            mov rdi, rax	      5682	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_22
0x900a	      0xe800000000	                          call 0x400904f	      5682	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13	CALL_22
0x900f	      0xe9b3050000	                           jmp 0x4009607	      5683	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_13
0x9014	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5688	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x9018	      0xbe00000000	                              mov esi, 0	      5688	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x901d	          0x4889c7	                            mov rdi, rax	      5688	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x9020	      0xe800000000	                          call 0x4009065	      5688	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x9025	            0x85c0	                           test eax, eax	      5688	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x9027	           0xf94c0	                                 sete al	      5688	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x902a	           0xfb6c0	                           movzx eax, al	      5688	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x902d	          0x8945ac	             mov dword [rbp - 0x54], eax	      5688	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_23
0x9030	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5689	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x9034	      0xbe00000000	                              mov esi, 0	      5689	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x9039	          0x4889c7	                            mov rdi, rax	      5689	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x903c	      0xe800000000	                          call 0x4009081	      5689	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x9041	            0x85c0	                           test eax, eax	      5689	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x9043	           0xf94c0	                                 sete al	      5689	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x9046	           0xfb6c0	                           movzx eax, al	      5689	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x9049	          0x8945b0	             mov dword [rbp - 0x50], eax	      5689	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_24
0x904c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5690	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_14
0x9053	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5690	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_14
0x9057	          0x4885c0	                           test rax, rax	      5690	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_14
0x905a	            0x7431	                            je 0x40090cd	      5690	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_14
0x905c	        0x837dac00	               cmp dword [rbp - 0x54], 0	      5690	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_14
0x9060	            0x752b	                           jne 0x40090cd	      5690	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_14
0x9062	        0x837db000	               cmp dword [rbp - 0x50], 0	      5690	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_14
0x9066	            0x7525	                           jne 0x40090cd	      5690	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_14
0x9068	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5691	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_25
0x906f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5691	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_25
0x9073	        0x488d50ff	                      lea rdx, [rax - 1]	      5691	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_25
0x9077	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5691	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_25
0x907b	      0xbe00000000	                              mov esi, 0	      5691	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_25
0x9080	          0x4889c7	                            mov rdi, rax	      5691	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_25
0x9083	      0xb800000000	                              mov eax, 0	      5691	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_25
0x9088	      0xe800000000	                          call 0x40090cd	      5691	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_25
0x908d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5693	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_26
0x9091	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5693	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_26
0x9098	          0x4889c2	                            mov rdx, rax	      5693	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_26
0x909b	      0xb800000000	                              mov eax, 0	      5693	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_26
0x90a0	          0x4889d7	                            mov rdi, rdx	      5693	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_26
0x90a3	            0xf2ae	              repne scasb al, byte [rdi]	      5693	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_26
0x90a5	          0x4889c8	                            mov rax, rcx	      5693	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_26
0x90a8	          0x48f7d0	                                 not rax	      5693	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_26
0x90ab	        0x488d50ff	                      lea rdx, [rax - 1]	      5693	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_26
0x90af	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5693	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_26
0x90b3	          0x4801d0	                            add rax, rdx	      5693	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_26
0x90b6	      0x66c7002120	                  mov word [rax], 0x2021	      5693	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_26
0x90bb	        0xc6400200	                   mov byte [rax + 2], 0	      5693	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_26
0x90bf	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5694	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_15
0x90c6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5694	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_15
0x90ca	          0x4885c0	                           test rax, rax	      5694	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_15
0x90cd	            0x7537	                           jne 0x4009146	      5694	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_15
0x90cf	        0x837db000	               cmp dword [rbp - 0x50], 0	      5694	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_15
0x90d3	            0x7431	                            je 0x4009146	      5694	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_15
0x90d5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5695	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_27
0x90d9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5695	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_27
0x90e0	          0x4889c2	                            mov rdx, rax	      5695	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_27
0x90e3	      0xb800000000	                              mov eax, 0	      5695	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_27
0x90e8	          0x4889d7	                            mov rdi, rdx	      5695	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_27
0x90eb	            0xf2ae	              repne scasb al, byte [rdi]	      5695	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_27
0x90ed	          0x4889c8	                            mov rax, rcx	      5695	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_27
0x90f0	          0x48f7d0	                                 not rax	      5695	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_27
0x90f3	        0x488d50ff	                      lea rdx, [rax - 1]	      5695	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_27
0x90f7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5695	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_27
0x90fb	          0x4801d0	                            add rax, rdx	      5695	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_27
0x90fe	    0xc7006d616e00	               mov dword [rax], 0x6e616d	      5695	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_27
0x9104	            0xeb13	                           jmp 0x4009159	      5695	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_27
0x9106	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5697	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_28
0x910a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5697	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_28
0x910e	          0x4889d6	                            mov rsi, rdx	      5697	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_28
0x9111	          0x4889c7	                            mov rdi, rax	      5697	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_28
0x9114	      0xe800000000	                          call 0x4009159	      5697	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_28
0x9119	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5698	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_29
0x911d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5698	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_29
0x9124	          0x4889c2	                            mov rdx, rax	      5698	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_29
0x9127	      0xb800000000	                              mov eax, 0	      5698	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_29
0x912c	          0x4889d7	                            mov rdi, rdx	      5698	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_29
0x912f	            0xf2ae	              repne scasb al, byte [rdi]	      5698	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_29
0x9131	          0x4889c8	                            mov rax, rcx	      5698	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_29
0x9134	          0x48f7d0	                                 not rax	      5698	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_29
0x9137	        0x488d50ff	                      lea rdx, [rax - 1]	      5698	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_29
0x913b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5698	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_29
0x913f	          0x4801d0	                            add rax, rdx	      5698	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_29
0x9142	      0x66c7002000	                    mov word [rax], 0x20	      5698	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	CALL_29
0x9147	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5699	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16
0x914e	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5699	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16
0x9152	          0x4885c0	                           test rax, rax	      5699	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16
0x9155	     0xf8409010000	                            je 0x40092a4	      5699	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16
0x915b	        0x837dac00	               cmp dword [rbp - 0x54], 0	      5699	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16
0x915f	            0x750a	                           jne 0x40091ab	      5699	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16
0x9161	        0x837db000	               cmp dword [rbp - 0x50], 0	      5699	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16
0x9165	     0xf84f9000000	                            je 0x40092a4	      5699	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16
0x916b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5701	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x9172	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      5701	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x9176	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5701	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x917a	          0x4889c7	                            mov rdi, rax	      5701	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x917d	      0xe800000000	                          call 0x40091c2	      5701	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x9182	          0x4889c2	                            mov rdx, rax	      5701	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x9185	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5701	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x9189	          0x4801d0	                            add rax, rdx	      5701	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x918c	          0x4889da	                            mov rdx, rbx	      5701	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x918f	      0xbe00000000	                              mov esi, 0	      5701	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x9194	          0x4889c7	                            mov rdi, rax	      5701	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x9197	      0xb800000000	                              mov eax, 0	      5701	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x919c	      0xe800000000	                          call 0x40091e1	      5701	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_31
0x91a1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5702	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_32
0x91a5	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5702	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_32
0x91ac	          0x4889c2	                            mov rdx, rax	      5702	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_32
0x91af	      0xb800000000	                              mov eax, 0	      5702	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_32
0x91b4	          0x4889d7	                            mov rdi, rdx	      5702	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_32
0x91b7	            0xf2ae	              repne scasb al, byte [rdi]	      5702	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_32
0x91b9	          0x4889c8	                            mov rax, rcx	      5702	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_32
0x91bc	          0x48f7d0	                                 not rax	      5702	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_32
0x91bf	        0x488d50ff	                      lea rdx, [rax - 1]	      5702	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_32
0x91c3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5702	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_32
0x91c7	          0x4801d0	                            add rax, rdx	      5702	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_32
0x91ca	      0x66c7002000	                    mov word [rax], 0x20	      5702	normal.c	FUNCTION_66	SWITCH_1	ELSE_4	IF_16	CALL_32
0x91cf	      0xe990000000	                           jmp 0x40092a4	      5705	normal.c	FUNCTION_66	SWITCH_1
0x91d4	    0xc74598010000	               mov dword [rbp - 0x68], 1	      5708	normal.c	FUNCTION_66	SWITCH_1
0x91db	    0x8b0500000000	            mov eax, dword [0x04009221] 	      5710	normal.c	FUNCTION_66	SWITCH_1	IF_17
0x91e1	            0x85c0	                           test eax, eax	      5710	normal.c	FUNCTION_66	SWITCH_1	IF_17
0x91e3	            0x7416	                            je 0x400923b	      5710	normal.c	FUNCTION_66	SWITCH_1	IF_17
0x91e5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5711	normal.c	FUNCTION_66	SWITCH_1	CALL_33
0x91e9	    0xc70063737461	            mov dword [rax], 0x61747363 	      5711	normal.c	FUNCTION_66	SWITCH_1	CALL_33
0x91ef	    0x66c740046720	              mov word [rax + 4], 0x2067	      5711	normal.c	FUNCTION_66	SWITCH_1	CALL_33
0x91f5	        0xc6400600	                   mov byte [rax + 6], 0	      5711	normal.c	FUNCTION_66	SWITCH_1	CALL_33
0x91f9	            0xeb6a	                           jmp 0x40092a5	      5715	normal.c	FUNCTION_66	SWITCH_1
0x91fb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5714	normal.c	FUNCTION_66	SWITCH_1	CALL_34
0x91ff	    0xc70074732000	               mov dword [rax], 0x207374	      5714	normal.c	FUNCTION_66	SWITCH_1	CALL_34
0x9205	            0xeb5e	                           jmp 0x40092a5	      5715	normal.c	FUNCTION_66	SWITCH_1
0x9207	    0xc74598010000	               mov dword [rbp - 0x68], 1	      5718	normal.c	FUNCTION_66	SWITCH_1
0x920e	    0x488b05000000	            mov rax, qword [0x04009255] 	      5719	normal.c	FUNCTION_66	SWITCH_1	IF_18
0x9215	    0x8b8038170000	          mov eax, dword [rax + 0x1738] 	      5719	normal.c	FUNCTION_66	SWITCH_1	IF_18
0x921b	            0x85c0	                           test eax, eax	      5719	normal.c	FUNCTION_66	SWITCH_1	IF_18
0x921d	            0x7410	                            je 0x400926f	      5719	normal.c	FUNCTION_66	SWITCH_1	IF_18
0x921f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5720	normal.c	FUNCTION_66	SWITCH_1	CALL_35
0x9223	    0xc70068652120	            mov dword [rax], 0x20216568 	      5720	normal.c	FUNCTION_66	SWITCH_1	CALL_35
0x9229	        0xc6400400	                   mov byte [rax + 4], 0	      5720	normal.c	FUNCTION_66	SWITCH_1	CALL_35
0x922d	            0xeb36	                           jmp 0x40092a5	      5720	normal.c	FUNCTION_66	SWITCH_1	CALL_35
0x922f	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5723	normal.c	FUNCTION_66	SWITCH_1	ELSE_7	IF_19
0x9233	            0x740c	                            je 0x4009281	      5723	normal.c	FUNCTION_66	SWITCH_1	ELSE_7	IF_19
0x9235	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5724	normal.c	FUNCTION_66	SWITCH_1	ELSE_7	CALL_36
0x9239	    0xc700746a2000	               mov dword [rax], 0x206a74	      5724	normal.c	FUNCTION_66	SWITCH_1	ELSE_7	CALL_36
0x923f	            0xeb24	                           jmp 0x40092a5	      5724	normal.c	FUNCTION_66	SWITCH_1	ELSE_7	CALL_36
0x9241	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5726	normal.c	FUNCTION_66	SWITCH_1	ELSE_7	CALL_37
0x9248	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5726	normal.c	FUNCTION_66	SWITCH_1	ELSE_7	CALL_37
0x924c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5726	normal.c	FUNCTION_66	SWITCH_1	ELSE_7	CALL_37
0x9250	      0xbe00000000	                              mov esi, 0	      5726	normal.c	FUNCTION_66	SWITCH_1	ELSE_7	CALL_37
0x9255	          0x4889c7	                            mov rdi, rax	      5726	normal.c	FUNCTION_66	SWITCH_1	ELSE_7	CALL_37
0x9258	      0xb800000000	                              mov eax, 0	      5726	normal.c	FUNCTION_66	SWITCH_1	ELSE_7	CALL_37
0x925d	      0xe800000000	                          call 0x40092a2	      5726	normal.c	FUNCTION_66	SWITCH_1	ELSE_7	CALL_37
0x9262	            0xeb01	                           jmp 0x40092a5	      5726	normal.c	FUNCTION_66	SWITCH_1	ELSE_7	CALL_37
0x9264	              0x90	                                     nop	      5705	normal.c	FUNCTION_66	SWITCH_1
0x9265	        0x837d904b	           cmp dword [rbp - 0x70], 0x4b 	      5733	normal.c	FUNCTION_66	IF_20
0x9269	     0xf85ff000000	                           jne 0x40093ae	      5733	normal.c	FUNCTION_66	IF_20
0x926f	        0x837da000	               cmp dword [rbp - 0x60], 0	      5733	normal.c	FUNCTION_66	IF_20
0x9273	     0xf85f5000000	                           jne 0x40093ae	      5733	normal.c	FUNCTION_66	IF_20
0x9279	          0x8b558c	             mov edx, dword [rbp - 0x74]	      5735	normal.c	FUNCTION_66	IF_20	CALL_38
0x927c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5735	normal.c	FUNCTION_66	IF_20	CALL_38
0x9280	            0x89d6	                            mov esi, edx	      5735	normal.c	FUNCTION_66	IF_20	CALL_38
0x9282	          0x4889c7	                            mov rdi, rax	      5735	normal.c	FUNCTION_66	IF_20	CALL_38
0x9285	      0xe800000000	                          call 0x40092ca	      5735	normal.c	FUNCTION_66	IF_20	CALL_38
0x928a	        0x488945b8	             mov qword [rbp - 0x48], rax	      5735	normal.c	FUNCTION_66	IF_20	CALL_38
0x928e	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5736	normal.c	FUNCTION_66	IF_20	IF_21
0x9292	            0x7417	                            je 0x40092eb	      5736	normal.c	FUNCTION_66	IF_20	IF_21
0x9294	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5738	normal.c	FUNCTION_66	IF_20	CALL_39
0x9298	      0xbe00000000	                              mov esi, 0	      5738	normal.c	FUNCTION_66	IF_20	CALL_39
0x929d	          0x4889c7	                            mov rdi, rax	      5738	normal.c	FUNCTION_66	IF_20	CALL_39
0x92a0	      0xe800000000	                          call 0x40092e5	      5738	normal.c	FUNCTION_66	IF_20	CALL_39
0x92a5	        0x488945c8	             mov qword [rbp - 0x38], rax	      5738	normal.c	FUNCTION_66	IF_20	CALL_39
0x92a9	            0xeb1a	                           jmp 0x4009305	      5738	normal.c	FUNCTION_66	IF_20	CALL_39
0x92ab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5741	normal.c	FUNCTION_66	IF_20	CALL_40
0x92af	      0xba01000000	                              mov edx, 1	      5741	normal.c	FUNCTION_66	IF_20	CALL_40
0x92b4	      0xbe01000000	                              mov esi, 1	      5741	normal.c	FUNCTION_66	IF_20	CALL_40
0x92b9	          0x4889c7	                            mov rdi, rax	      5741	normal.c	FUNCTION_66	IF_20	CALL_40
0x92bc	      0xe800000000	                          call 0x4009301	      5741	normal.c	FUNCTION_66	IF_20	CALL_40
0x92c1	        0x488945c8	             mov qword [rbp - 0x38], rax	      5741	normal.c	FUNCTION_66	IF_20	CALL_40
0x92c5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5742	normal.c	FUNCTION_66	IF_20	CALL_41
0x92c9	          0x4889c7	                            mov rdi, rax	      5742	normal.c	FUNCTION_66	IF_20	CALL_41
0x92cc	      0xe800000000	                          call 0x4009311	      5742	normal.c	FUNCTION_66	IF_20	CALL_41
0x92d1	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      5743	normal.c	FUNCTION_66	IF_20	IF_22
0x92d6	            0x7511	                           jne 0x4009329	      5743	normal.c	FUNCTION_66	IF_20	IF_22
0x92d8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5745	normal.c	FUNCTION_66	IF_20	IF_22	CALL_42
0x92dc	          0x4889c7	                            mov rdi, rax	      5745	normal.c	FUNCTION_66	IF_20	IF_22	CALL_42
0x92df	      0xe800000000	                          call 0x4009324	      5745	normal.c	FUNCTION_66	IF_20	IF_22	CALL_42
0x92e4	      0xe9de020000	                           jmp 0x4009607	      5746	normal.c	FUNCTION_66	IF_20	IF_22
0x92e9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5748	normal.c	FUNCTION_66	IF_20	CALL_45
0x92ed	          0x4889c7	                            mov rdi, rax	      5748	normal.c	FUNCTION_66	IF_20	CALL_45
0x92f0	      0xe800000000	                          call 0x4009335	      5748	normal.c	FUNCTION_66	IF_20	CALL_45
0x92f5	          0x4889c3	                            mov rbx, rax	      5748	normal.c	FUNCTION_66	IF_20	CALL_45
0x92f8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5748	normal.c	FUNCTION_66	IF_20	CALL_45
0x92fc	          0x4889c7	                            mov rdi, rax	      5748	normal.c	FUNCTION_66	IF_20	CALL_45
0x92ff	      0xe800000000	                          call 0x4009344	      5748	normal.c	FUNCTION_66	IF_20	CALL_45
0x9304	          0x4801d8	                            add rax, rbx	      5748	normal.c	FUNCTION_66	IF_20	CALL_45
0x9307	        0x488d5001	                      lea rdx, [rax + 1]	      5748	normal.c	FUNCTION_66	IF_20	CALL_45
0x930b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5748	normal.c	FUNCTION_66	IF_20	CALL_45
0x930f	          0x4889d6	                            mov rsi, rdx	      5748	normal.c	FUNCTION_66	IF_20	CALL_45
0x9312	          0x4889c7	                            mov rdi, rax	      5748	normal.c	FUNCTION_66	IF_20	CALL_45
0x9315	      0xe800000000	                          call 0x400935a	      5748	normal.c	FUNCTION_66	IF_20	CALL_45
0x931a	        0x488945e0	             mov qword [rbp - 0x20], rax	      5748	normal.c	FUNCTION_66	IF_20	CALL_45
0x931e	      0x48837de000	               cmp qword [rbp - 0x20], 0	      5749	normal.c	FUNCTION_66	IF_20	IF_23
0x9323	            0x751d	                           jne 0x4009382	      5749	normal.c	FUNCTION_66	IF_20	IF_23
0x9325	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5751	normal.c	FUNCTION_66	IF_20	IF_23	CALL_46
0x9329	          0x4889c7	                            mov rdi, rax	      5751	normal.c	FUNCTION_66	IF_20	IF_23	CALL_46
0x932c	      0xe800000000	                          call 0x4009371	      5751	normal.c	FUNCTION_66	IF_20	IF_23	CALL_46
0x9331	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5752	normal.c	FUNCTION_66	IF_20	IF_23	CALL_47
0x9335	          0x4889c7	                            mov rdi, rax	      5752	normal.c	FUNCTION_66	IF_20	IF_23	CALL_47
0x9338	      0xe800000000	                          call 0x400937d	      5752	normal.c	FUNCTION_66	IF_20	IF_23	CALL_47
0x933d	      0xe985020000	                           jmp 0x4009607	      5753	normal.c	FUNCTION_66	IF_20	IF_23
0x9342	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5755	normal.c	FUNCTION_66	IF_20
0x9346	        0x488945c0	             mov qword [rbp - 0x40], rax	      5755	normal.c	FUNCTION_66	IF_20
0x934a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      5756	normal.c	FUNCTION_66	IF_20	CALL_48
0x934e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5756	normal.c	FUNCTION_66	IF_20	CALL_48
0x9352	          0x4889d6	                            mov rsi, rdx	      5756	normal.c	FUNCTION_66	IF_20	CALL_48
0x9355	          0x4889c7	                            mov rdi, rax	      5756	normal.c	FUNCTION_66	IF_20	CALL_48
0x9358	      0xe800000000	                          call 0x400939d	      5756	normal.c	FUNCTION_66	IF_20	CALL_48
0x935d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5757	normal.c	FUNCTION_66	IF_20	CALL_49
0x9361	          0x4889c7	                            mov rdi, rax	      5757	normal.c	FUNCTION_66	IF_20	CALL_49
0x9364	      0xe800000000	                          call 0x40093a9	      5757	normal.c	FUNCTION_66	IF_20	CALL_49
0x9369	      0xe959010000	                           jmp 0x4009507	      5757	normal.c	FUNCTION_66	IF_20	CALL_49
0x936e	        0x837d902a	           cmp dword [rbp - 0x70], 0x2a 	      5761	normal.c	FUNCTION_66	ELSE_10	IF_24
0x9372	            0x751c	                           jne 0x40093d0	      5761	normal.c	FUNCTION_66	ELSE_10	IF_24
0x9374	    0x8b0500000000	            mov eax, dword [0x040093ba] 	      5762	normal.c	FUNCTION_66	ELSE_10	IF_24
0x937a	            0x85c0	                           test eax, eax	      5762	normal.c	FUNCTION_66	ELSE_10	IF_24
0x937c	            0x7407	                            je 0x40093c5	      5762	normal.c	FUNCTION_66	ELSE_10	IF_24
0x937e	      0xb800000000	                              mov eax, 0	      5762	normal.c	FUNCTION_66	ELSE_10	IF_24
0x9383	            0xeb05	                           jmp 0x40093ca	      5762	normal.c	FUNCTION_66	ELSE_10	IF_24
0x9385	      0xb800000000	                              mov eax, 0	      5762	normal.c	FUNCTION_66	ELSE_10	IF_24
0x938a	        0x488945d0	             mov qword [rbp - 0x30], rax	      5762	normal.c	FUNCTION_66	ELSE_10	IF_24
0x938e	            0xeb55	                           jmp 0x4009425	      5762	normal.c	FUNCTION_66	ELSE_10	IF_24
0x9390	        0x837d9023	           cmp dword [rbp - 0x70], 0x23 	      5763	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x9394	            0x751c	                           jne 0x40093f2	      5763	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x9396	    0x8b0500000000	            mov eax, dword [0x040093dc] 	      5764	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x939c	            0x85c0	                           test eax, eax	      5764	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x939e	            0x7407	                            je 0x40093e7	      5764	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x93a0	      0xb800000000	                              mov eax, 0	      5764	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x93a5	            0xeb05	                           jmp 0x40093ec	      5764	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x93a7	      0xb800000000	                              mov eax, 0	      5764	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x93ac	        0x488945d0	             mov qword [rbp - 0x30], rax	      5764	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x93b0	            0xeb33	                           jmp 0x4009425	      5764	normal.c	FUNCTION_66	ELSE_10	ELSE_11	IF_25
0x93b2	        0x837d9800	               cmp dword [rbp - 0x68], 0	      5765	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26
0x93b6	            0x7425	                            je 0x400941d	      5765	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26
0x93b8	    0x488b05000000	            mov rax, qword [0x040093ff] 	      5767	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26	IF_27
0x93bf	    0x8b8038170000	          mov eax, dword [rax + 0x1738] 	      5767	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26	IF_27
0x93c5	            0x85c0	                           test eax, eax	      5767	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26	IF_27
0x93c7	            0x740a	                            je 0x4009413	      5767	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26	IF_27
0x93c9	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      5769	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26	IF_27
0x93d1	            0xeb12	                           jmp 0x4009425	      5769	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26	IF_27
0x93d3	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      5771	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26	ELSE_13
0x93db	            0xeb08	                           jmp 0x4009425	      5771	normal.c	FUNCTION_66	ELSE_10	ELSE_12	IF_26	ELSE_13
0x93dd	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      5774	normal.c	FUNCTION_66	ELSE_10	ELSE_14
0x93e5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5776	normal.c	FUNCTION_66	ELSE_10	CALL_50
0x93e9	          0x4889c7	                            mov rdi, rax	      5776	normal.c	FUNCTION_66	ELSE_10	CALL_50
0x93ec	      0xe800000000	                          call 0x4009431	      5776	normal.c	FUNCTION_66	ELSE_10	CALL_50
0x93f1	          0x4889c2	                            mov rdx, rax	      5776	normal.c	FUNCTION_66	ELSE_10	CALL_50
0x93f4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5776	normal.c	FUNCTION_66	ELSE_10	CALL_50
0x93f8	          0x4801d0	                            add rax, rdx	      5776	normal.c	FUNCTION_66	ELSE_10	CALL_50
0x93fb	        0x488945c8	             mov qword [rbp - 0x38], rax	      5776	normal.c	FUNCTION_66	ELSE_10	CALL_50
0x93ff	      0xe9ab000000	                           jmp 0x40094ef	      5777	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x9404	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5780	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28	CALL_51
0x9408	           0xfb600	                   movzx eax, byte [rax]	      5780	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28	CALL_51
0x940b	           0xfb6d0	                           movzx edx, al	      5780	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28	CALL_51
0x940e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5780	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28	CALL_51
0x9412	            0x89d6	                            mov esi, edx	      5780	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28	CALL_51
0x9414	          0x4889c7	                            mov rdi, rax	      5780	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28	CALL_51
0x9417	      0xe800000000	                          call 0x400945c	      5780	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28	CALL_51
0x941c	          0x4885c0	                           test rax, rax	      5780	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28	CALL_51
0x941f	            0x740f	                            je 0x4009470	      5780	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28	CALL_51
0x9421	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5781	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28
0x9425	        0x488d5001	                      lea rdx, [rax + 1]	      5781	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28
0x9429	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5781	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28
0x942d	          0xc6005c	                    mov byte [rax], 0x5c	      5781	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_28
0x9430	    0x8b0500000000	            mov eax, dword [0x04009476] 	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29
0x9436	            0x85c0	                           test eax, eax	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29
0x9438	            0x7458	                            je 0x40094d2	      5785	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29
0x943a	    0x488b05000000	            mov rax, qword [0x04009481] 	      5788	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29
0x9441	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      5788	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29
0x9445	          0x4889d7	                            mov rdi, rdx	      5788	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29
0x9448	            0xffd0	                                call rax	      5788	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29
0x944a	          0x83e801	                              sub eax, 1	      5788	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29
0x944d	          0x8945b4	             mov dword [rbp - 0x4c], eax	      5788	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29
0x9450	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      5790	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x9457	            0xeb2a	                           jmp 0x40094c3	      5790	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x9459	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5791	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x945d	        0x488d5001	                      lea rdx, [rax + 1]	      5791	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x9461	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5791	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x9465	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      5791	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x9469	        0x488d4a01	                      lea rcx, [rdx + 1]	      5791	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x946d	        0x48894db8	             mov qword [rbp - 0x48], rcx	      5791	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x9471	           0xfb612	                   movzx edx, byte [rdx]	      5791	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x9474	            0x8810	                      mov byte [rax], dl	      5791	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x9476	        0x83459c01	               add dword [rbp - 0x64], 1	      5790	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x947a	          0x8b458c	             mov eax, dword [rbp - 0x74]	      5790	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x947d	          0x83e801	                              sub eax, 1	      5790	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x9480	          0x89458c	             mov dword [rbp - 0x74], eax	      5790	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x9483	          0x8b459c	             mov eax, dword [rbp - 0x64]	      5790	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x9486	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      5790	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x9489	            0x7d07	                           jge 0x40094d2	      5790	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x948b	          0x8b458c	             mov eax, dword [rbp - 0x74]	      5790	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x948e	            0x85c0	                           test eax, eax	      5790	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x9490	            0x7fc7	                            jg 0x4009499	      5790	normal.c	FUNCTION_66	ELSE_10	WHILE_2	IF_29	FOR_1
0x9492	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5794	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x9496	        0x488d5001	                      lea rdx, [rax + 1]	      5794	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x949a	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5794	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x949e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      5794	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x94a2	        0x488d4a01	                      lea rcx, [rdx + 1]	      5794	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x94a6	        0x48894db8	             mov qword [rbp - 0x48], rcx	      5794	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x94aa	           0xfb612	                   movzx edx, byte [rdx]	      5794	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x94ad	            0x8810	                      mov byte [rax], dl	      5794	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x94af	          0x8b458c	             mov eax, dword [rbp - 0x74]	      5777	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x94b2	          0x8d50ff	                      lea edx, [rax - 1]	      5777	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x94b5	          0x89558c	             mov dword [rbp - 0x74], edx	      5777	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x94b8	            0x85c0	                           test eax, eax	      5777	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x94ba	     0xf8f44ffffff	                            jg 0x4009444	      5777	normal.c	FUNCTION_66	ELSE_10	WHILE_2
0x94c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5796	normal.c	FUNCTION_66	ELSE_10
0x94c4	          0xc60000	                       mov byte [rax], 0	      5796	normal.c	FUNCTION_66	ELSE_10
0x94c7	        0x837d902a	           cmp dword [rbp - 0x70], 0x2a 	      5802	normal.c	FUNCTION_66	IF_30
0x94cb	            0x740a	                            je 0x4009517	      5802	normal.c	FUNCTION_66	IF_30
0x94cd	        0x837d9023	           cmp dword [rbp - 0x70], 0x23 	      5802	normal.c	FUNCTION_66	IF_30
0x94d1	     0xf85cf000000	                           jne 0x40095e6	      5802	normal.c	FUNCTION_66	IF_30
0x94d7	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5804	normal.c	FUNCTION_66	IF_30	IF_31
0x94db	            0x757d	                           jne 0x400959a	      5804	normal.c	FUNCTION_66	IF_30	IF_31
0x94dd	    0x8b0500000000	            mov eax, dword [0x04009523] 	      5806	normal.c	FUNCTION_66	IF_30	IF_31	CALL_54
0x94e3	            0x85c0	                           test eax, eax	      5804	normal.c	FUNCTION_66	IF_30	IF_31
0x94e5	            0x7423	                            je 0x400954a	      5804	normal.c	FUNCTION_66	IF_30	IF_31
0x94e7	        0x488b5db8	             mov rbx, qword [rbp - 0x48]	      5806	normal.c	FUNCTION_66	IF_30	IF_31	CALL_54
0x94eb	      0xe800000000	                          call 0x4009530	      5806	normal.c	FUNCTION_66	IF_30	IF_31	CALL_54
0x94f0	          0x4889de	                            mov rsi, rbx	      5806	normal.c	FUNCTION_66	IF_30	IF_31	CALL_54
0x94f3	          0x4889c7	                            mov rdi, rax	      5806	normal.c	FUNCTION_66	IF_30	IF_31	CALL_54
0x94f6	      0xe800000000	                          call 0x400953b	      5806	normal.c	FUNCTION_66	IF_30	IF_31	CALL_54
0x94fb	          0x4889c7	                            mov rdi, rax	      5806	normal.c	FUNCTION_66	IF_30	IF_31	CALL_54
0x94fe	      0xe800000000	                          call 0x4009543	      5806	normal.c	FUNCTION_66	IF_30	IF_31	CALL_54
0x9503	            0x85c0	                           test eax, eax	      5804	normal.c	FUNCTION_66	IF_30	IF_31
0x9505	           0xf95c0	                                setne al	      5804	normal.c	FUNCTION_66	IF_30	IF_31
0x9508	            0xeb1a	                           jmp 0x4009564	      5804	normal.c	FUNCTION_66	IF_30	IF_31
0x950a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5808	normal.c	FUNCTION_66	IF_30	IF_31	CALL_55
0x950e	        0x4883e801	                              sub rax, 1	      5808	normal.c	FUNCTION_66	IF_30	IF_31	CALL_55
0x9512	           0xfb600	                   movzx eax, byte [rax]	      5808	normal.c	FUNCTION_66	IF_30	IF_31	CALL_55
0x9515	           0xfb6c0	                           movzx eax, al	      5808	normal.c	FUNCTION_66	IF_30	IF_31	CALL_55
0x9518	            0x89c7	                            mov edi, eax	      5808	normal.c	FUNCTION_66	IF_30	IF_31	CALL_55
0x951a	      0xe800000000	                          call 0x400955f	      5808	normal.c	FUNCTION_66	IF_30	IF_31	CALL_55
0x951f	            0x85c0	                           test eax, eax	      5804	normal.c	FUNCTION_66	IF_30	IF_31
0x9521	           0xf95c0	                                setne al	      5804	normal.c	FUNCTION_66	IF_30	IF_31
0x9524	            0x84c0	                             test al, al	      5804	normal.c	FUNCTION_66	IF_30	IF_31
0x9526	            0x7432	                            je 0x400959a	      5804	normal.c	FUNCTION_66	IF_30	IF_31
0x9528	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5809	normal.c	FUNCTION_66	IF_30	CALL_56
0x952c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5809	normal.c	FUNCTION_66	IF_30	CALL_56
0x9533	          0x4889c2	                            mov rdx, rax	      5809	normal.c	FUNCTION_66	IF_30	CALL_56
0x9536	      0xb800000000	                              mov eax, 0	      5809	normal.c	FUNCTION_66	IF_30	CALL_56
0x953b	          0x4889d7	                            mov rdi, rdx	      5809	normal.c	FUNCTION_66	IF_30	CALL_56
0x953e	            0xf2ae	              repne scasb al, byte [rdi]	      5809	normal.c	FUNCTION_66	IF_30	CALL_56
0x9540	          0x4889c8	                            mov rax, rcx	      5809	normal.c	FUNCTION_66	IF_30	CALL_56
0x9543	          0x48f7d0	                                 not rax	      5809	normal.c	FUNCTION_66	IF_30	CALL_56
0x9546	        0x488d50ff	                      lea rdx, [rax - 1]	      5809	normal.c	FUNCTION_66	IF_30	CALL_56
0x954a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5809	normal.c	FUNCTION_66	IF_30	CALL_56
0x954e	          0x4801d0	                            add rax, rdx	      5809	normal.c	FUNCTION_66	IF_30	CALL_56
0x9551	      0x66c7005c3e	                  mov word [rax], 0x3e5c	      5809	normal.c	FUNCTION_66	IF_30	CALL_56
0x9556	        0xc6400200	                   mov byte [rax + 2], 0	      5809	normal.c	FUNCTION_66	IF_30	CALL_56
0x955a	      0xe800000000	                          call 0x400959f	      5812	normal.c	FUNCTION_66	IF_30	CALL_57
0x955f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5813	normal.c	FUNCTION_66	IF_30	CALL_58
0x9563	      0xb900000000	                              mov ecx, 0	      5813	normal.c	FUNCTION_66	IF_30	CALL_58
0x9568	      0xba01000000	                              mov edx, 1	      5813	normal.c	FUNCTION_66	IF_30	CALL_58
0x956d	          0x4889c6	                            mov rsi, rax	      5813	normal.c	FUNCTION_66	IF_30	CALL_58
0x9570	      0xbf01000000	                              mov edi, 1	      5813	normal.c	FUNCTION_66	IF_30	CALL_58
0x9575	      0xe800000000	                          call 0x40095ba	      5813	normal.c	FUNCTION_66	IF_30	CALL_58
0x957a	        0x837d902a	           cmp dword [rbp - 0x70], 0x2a 	      5815	normal.c	FUNCTION_66	IF_30	CALL_59
0x957e	            0x7507	                           jne 0x40095c7	      5815	normal.c	FUNCTION_66	IF_30	CALL_59
0x9580	      0xbe2f000000	                           mov esi, 0x2f	      5815	normal.c	FUNCTION_66	IF_30	CALL_59
0x9585	            0xeb05	                           jmp 0x40095cc	      5815	normal.c	FUNCTION_66	IF_30	CALL_59
0x9587	      0xbe3f000000	                           mov esi, 0x3f	      5815	normal.c	FUNCTION_66	IF_30	CALL_59
0x958c	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      5815	normal.c	FUNCTION_66	IF_30	CALL_59
0x9590	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5815	normal.c	FUNCTION_66	IF_30	CALL_59
0x9597	      0xb900000000	                              mov ecx, 0	      5815	normal.c	FUNCTION_66	IF_30	CALL_59
0x959c	          0x4889c7	                            mov rdi, rax	      5815	normal.c	FUNCTION_66	IF_30	CALL_59
0x959f	      0xe8cd110000	                  call sym.normal_search	      5815	normal.c	FUNCTION_66	IF_30	CALL_59
0x95a4	            0xeb0c	                           jmp 0x40095f2	      5815	normal.c	FUNCTION_66	IF_30	CALL_59
0x95a6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5818	normal.c	FUNCTION_66	CALL_60
0x95aa	          0x4889c7	                            mov rdi, rax	      5818	normal.c	FUNCTION_66	CALL_60
0x95ad	      0xe800000000	                          call 0x40095f2	      5818	normal.c	FUNCTION_66	CALL_60
0x95b2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5820	normal.c	FUNCTION_66	CALL_61
0x95b6	          0x4889c7	                            mov rdi, rax	      5820	normal.c	FUNCTION_66	CALL_61
0x95b9	      0xe800000000	                          call 0x40095fe	      5820	normal.c	FUNCTION_66	CALL_61
0x95be	            0xeb07	                           jmp 0x4009607	      5820	normal.c	FUNCTION_66	CALL_61
0x95c0	              0x90	                                     nop	      5609	normal.c	FUNCTION_66	IF_3	IF_4
0x95c1	            0xeb04	                           jmp 0x4009607	      5609	normal.c	FUNCTION_66	IF_3	IF_4
0x95c3	              0x90	                                     nop	      5611	normal.c	FUNCTION_66	IF_3	IF_5
0x95c4	            0xeb01	                           jmp 0x4009607	      5611	normal.c	FUNCTION_66	IF_3	IF_5
0x95c6	              0x90	                                     nop	      5637	normal.c	FUNCTION_66	IF_8
0x95c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5821	normal.c	FUNCTION_66
0x95cb	    0x644833042528	                xor rax, qword fs:[0x28]	      5821	normal.c	FUNCTION_66
0x95d4	            0x7405	                            je 0x400961b	      5821	normal.c	FUNCTION_66
0x95d6	      0xe800000000	                          call 0x400961b	      5821	normal.c	FUNCTION_66
0x95db	        0x4883ec80	             sub rsp, 0xffffffffffffff80	      5821	normal.c	FUNCTION_66
0x95df	              0x5b	                                 pop rbx	      5821	normal.c	FUNCTION_66
0x95e0	            0x415c	                                 pop r12	      5821	normal.c	FUNCTION_66
0x95e2	              0x5d	                                 pop rbp	      5821	normal.c	FUNCTION_66
0x95e3	              0xc3	                                     ret	      5821	normal.c	FUNCTION_66
end_visual_mode	CALL,5:ELSE,0:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	43
0x4f47	              0x55	                                push rbp	      3304	normal.c	FUNCTION_14
0x4f48	          0x4889e5	                            mov rbp, rsp	      3304	normal.c	FUNCTION_14
0x4f4b	    0x8b0500000000	            mov eax, dword [0x04004f91] 	      3312	normal.c	FUNCTION_14	IF_1
0x4f51	            0x85c0	                           test eax, eax	      3312	normal.c	FUNCTION_14	IF_1
0x4f53	            0x740f	                            je 0x4004fa4	      3312	normal.c	FUNCTION_14	IF_1
0x4f55	    0x8b0500000000	            mov eax, dword [0x04004f9b] 	      3312	normal.c	FUNCTION_14	IF_1
0x4f5b	            0x85c0	                           test eax, eax	      3312	normal.c	FUNCTION_14	IF_1
0x4f5d	            0x7405	                            je 0x4004fa4	      3312	normal.c	FUNCTION_14	IF_1
0x4f5f	      0xe800000000	                          call 0x4004fa4	      3313	normal.c	FUNCTION_14	CALL_1
0x4f64	    0xc70500000000	               mov dword [0x04004fae], 0	      3316	normal.c	FUNCTION_14
0x4f6e	      0xe800000000	                          call 0x4004fb3	      3318	normal.c	FUNCTION_14	CALL_2
0x4f73	    0xc70500000000	               mov dword [0x04004fbd], 0	      3319	normal.c	FUNCTION_14
0x4f7d	    0x488b05000000	            mov rax, qword [0x04004fc4] 	      3323	normal.c	FUNCTION_14
0x4f84	    0x8b1500000000	            mov edx, dword [0x04004fca] 	      3323	normal.c	FUNCTION_14
0x4f8a	    0x899008030000	            mov dword [rax + 0x308], edx	      3323	normal.c	FUNCTION_14
0x4f90	    0x488b0d000000	            mov rcx, qword [0x04004fd7] 	      3324	normal.c	FUNCTION_14
0x4f97	    0x488b05000000	            mov rax, qword [0x04004fde] 	      3324	normal.c	FUNCTION_14
0x4f9e	    0x488b15000000	            mov rdx, qword [0x04004fe5] 	      3324	normal.c	FUNCTION_14
0x4fa5	    0x488981e80200	            mov qword [rcx + 0x2e8], rax	      3324	normal.c	FUNCTION_14
0x4fac	    0x488991f00200	            mov qword [rcx + 0x2f0], rdx	      3324	normal.c	FUNCTION_14
0x4fb3	    0x488b0d000000	            mov rcx, qword [0x04004ffa] 	      3325	normal.c	FUNCTION_14
0x4fba	    0x488b05000000	            mov rax, qword [0x04005001] 	      3325	normal.c	FUNCTION_14
0x4fc1	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3325	normal.c	FUNCTION_14
0x4fc5	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3325	normal.c	FUNCTION_14
0x4fc9	    0x488981f80200	            mov qword [rcx + 0x2f8], rax	      3325	normal.c	FUNCTION_14
0x4fd0	    0x488991000300	            mov qword [rcx + 0x300], rdx	      3325	normal.c	FUNCTION_14
0x4fd7	    0x488b05000000	            mov rax, qword [0x0400501e] 	      3326	normal.c	FUNCTION_14
0x4fde	    0x488b15000000	            mov rdx, qword [0x04005025] 	      3326	normal.c	FUNCTION_14
0x4fe5	          0x8b5248	            mov edx, dword [rdx + 0x48] 	      3326	normal.c	FUNCTION_14
0x4fe8	    0x89900c030000	            mov dword [rax + 0x30c], edx	      3326	normal.c	FUNCTION_14
0x4fee	    0x488b05000000	            mov rax, qword [0x04005035] 	      3328	normal.c	FUNCTION_14
0x4ff5	    0x8b1500000000	            mov edx, dword [0x0400503b] 	      3328	normal.c	FUNCTION_14
0x4ffb	    0x899010030000	            mov dword [rax + 0x310], edx	      3328	normal.c	FUNCTION_14
0x5001	      0xe800000000	                          call 0x4005046	      3331	normal.c	FUNCTION_14	IF_2	CALL_3
0x5006	            0x85c0	                           test eax, eax	      3331	normal.c	FUNCTION_14	IF_2	CALL_3
0x5008	            0x750e	                           jne 0x4005058	      3331	normal.c	FUNCTION_14	IF_2	CALL_3
0x500a	    0x488b05000000	            mov rax, qword [0x04005051] 	      3332	normal.c	FUNCTION_14	IF_2
0x5011	    0xc74044000000	               mov dword [rax + 0x44], 0	      3332	normal.c	FUNCTION_14	IF_2
0x5018	      0xe89f0a0000	              call sym.may_clear_cmdline	      3334	normal.c	FUNCTION_14	CALL_4
0x501d	      0xe800000000	                          call 0x4005062	      3336	normal.c	FUNCTION_14	CALL_5
0x5022	              0x90	                                     nop	      3337	normal.c	FUNCTION_14
0x5023	              0x5d	                                 pop rbp	      3337	normal.c	FUNCTION_14
0x5024	              0xc3	                                     ret	      3337	normal.c	FUNCTION_14
reset_VIsual_and_resel	CALL,2:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	12
0x5025	              0x55	                                push rbp	      3344	normal.c	FUNCTION_15
0x5026	          0x4889e5	                            mov rbp, rsp	      3344	normal.c	FUNCTION_15
0x5029	    0x8b0500000000	            mov eax, dword [0x0400506f] 	      3345	normal.c	FUNCTION_15	IF_1
0x502f	            0x85c0	                           test eax, eax	      3345	normal.c	FUNCTION_15	IF_1
0x5031	            0x740f	                            je 0x4005082	      3345	normal.c	FUNCTION_15	IF_1
0x5033	      0xe800000000	                          call 0x4005078	      3347	normal.c	FUNCTION_15	IF_1	CALL_1
0x5038	      0xbf14000000	                           mov edi, 0x14	      3348	normal.c	FUNCTION_15	IF_1	CALL_2
0x503d	      0xe800000000	                          call 0x4005082	      3348	normal.c	FUNCTION_15	IF_1	CALL_2
0x5042	    0xc70500000000	               mov dword [0x0400508c], 0	      3350	normal.c	FUNCTION_15
0x504c	              0x90	                                     nop	      3351	normal.c	FUNCTION_15
0x504d	              0x5d	                                 pop rbp	      3351	normal.c	FUNCTION_15
0x504e	              0xc3	                                     ret	      3351	normal.c	FUNCTION_15
get_visual_text	CALL,8:ELSE,2:DO,0:FOR,0:functions,0:IF,6:WHILE,0:SWITCH,0	119
0x95e4	              0x55	                                push rbp	      5832	normal.c	FUNCTION_67
0x95e5	          0x4889e5	                            mov rbp, rsp	      5832	normal.c	FUNCTION_67
0x95e8	        0x4883ec20	                           sub rsp, 0x20	      5832	normal.c	FUNCTION_67
0x95ec	        0x48897df8	                mov qword [rbp - 8], rdi	      5832	normal.c	FUNCTION_67
0x95f0	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5832	normal.c	FUNCTION_67
0x95f4	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5832	normal.c	FUNCTION_67
0x95f8	    0x8b0500000000	            mov eax, dword [0x0400963e] 	      5833	normal.c	FUNCTION_67	IF_1
0x95fe	          0x83f856	                           cmp eax, 0x56	      5833	normal.c	FUNCTION_67	IF_1
0x9601	            0x7405	                            je 0x4009648	      5833	normal.c	FUNCTION_67	IF_1
0x9603	      0xe8805c0000	               call sym.unadjust_for_sel	      5834	normal.c	FUNCTION_67	CALL_1
0x9608	    0x488b15000000	            mov rdx, qword [0x0400964f] 	      5835	normal.c	FUNCTION_67	IF_2
0x960f	    0x488b05000000	            mov rax, qword [0x04009656] 	      5835	normal.c	FUNCTION_67	IF_2
0x9616	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5835	normal.c	FUNCTION_67	IF_2
0x961a	          0x4839c2	                            cmp rdx, rax	      5835	normal.c	FUNCTION_67	IF_2
0x961d	            0x7420	                            je 0x400967f	      5835	normal.c	FUNCTION_67	IF_2
0x961f	      0x48837df800	                  cmp qword [rbp - 8], 0	      5837	normal.c	FUNCTION_67	IF_2	IF_3
0x9624	            0x740f	                            je 0x4009675	      5837	normal.c	FUNCTION_67	IF_2	IF_3
0x9626	        0x488b45f8	                mov rax, qword [rbp - 8]	      5838	normal.c	FUNCTION_67	IF_2	CALL_2
0x962a	          0x488b00	                    mov rax, qword [rax]	      5838	normal.c	FUNCTION_67	IF_2	CALL_2
0x962d	          0x4889c7	                            mov rdi, rax	      5838	normal.c	FUNCTION_67	IF_2	CALL_2
0x9630	      0xe8b3c3ffff	                    call sym.clearopbeep	      5838	normal.c	FUNCTION_67	IF_2	CALL_2
0x9635	      0xb800000000	                              mov eax, 0	      5839	normal.c	FUNCTION_67	IF_2
0x963a	      0xe960010000	                           jmp 0x40097df	      5839	normal.c	FUNCTION_67	IF_2
0x963f	    0x8b0500000000	            mov eax, dword [0x04009685] 	      5841	normal.c	FUNCTION_67	IF_4
0x9645	          0x83f856	                           cmp eax, 0x56	      5841	normal.c	FUNCTION_67	IF_4
0x9648	            0x752b	                           jne 0x40096b5	      5841	normal.c	FUNCTION_67	IF_4
0x964a	      0xe800000000	                          call 0x400968f	      5843	normal.c	FUNCTION_67	IF_4	CALL_3
0x964f	          0x4889c2	                            mov rdx, rax	      5843	normal.c	FUNCTION_67	IF_4	CALL_3
0x9652	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5843	normal.c	FUNCTION_67	IF_4	CALL_3
0x9656	          0x488910	                    mov qword [rax], rdx	      5843	normal.c	FUNCTION_67	IF_4	CALL_3
0x9659	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5844	normal.c	FUNCTION_67	IF_4	CALL_4
0x965d	          0x488b00	                    mov rax, qword [rax]	      5844	normal.c	FUNCTION_67	IF_4	CALL_4
0x9660	          0x4889c7	                            mov rdi, rax	      5844	normal.c	FUNCTION_67	IF_4	CALL_4
0x9663	      0xe800000000	                          call 0x40096a8	      5844	normal.c	FUNCTION_67	IF_4	CALL_4
0x9668	            0x89c2	                            mov edx, eax	      5844	normal.c	FUNCTION_67	IF_4	CALL_4
0x966a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5844	normal.c	FUNCTION_67	IF_4	CALL_4
0x966e	            0x8910	                    mov dword [rax], edx	      5844	normal.c	FUNCTION_67	IF_4	CALL_4
0x9670	      0xe920010000	                           jmp 0x40097d5	      5844	normal.c	FUNCTION_67	IF_4	CALL_4
0x9675	    0x488b05000000	            mov rax, qword [0x040096bc] 	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x967c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x9680	    0x488b05000000	            mov rax, qword [0x040096c7] 	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x9687	          0x4839c2	                            cmp rdx, rax	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x968a	            0x741a	                            je 0x40096e6	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x968c	    0x488b05000000	            mov rax, qword [0x040096d3] 	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x9693	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x9697	    0x488b05000000	            mov rax, qword [0x040096de] 	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x969e	          0x4839c2	                            cmp rdx, rax	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96a1	           0xf9cc0	                                 setl al	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96a4	            0xeb40	                           jmp 0x4009726	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96a6	    0x488b05000000	            mov rax, qword [0x040096ed] 	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96ad	          0x8b5040	            mov edx, dword [rax + 0x40] 	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96b0	    0x8b0500000000	            mov eax, dword [0x040096f6] 	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96b6	            0x39c2	                            cmp edx, eax	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96b8	            0x7417	                            je 0x4009711	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96ba	    0x488b05000000	            mov rax, qword [0x04009701] 	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96c1	          0x8b5040	            mov edx, dword [rax + 0x40] 	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96c4	    0x8b0500000000	            mov eax, dword [0x0400970a] 	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96ca	            0x39c2	                            cmp edx, eax	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96cc	           0xf9cc0	                                 setl al	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96cf	            0xeb15	                           jmp 0x4009726	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96d1	    0x488b05000000	            mov rax, qword [0x04009718] 	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96d8	          0x8b5044	            mov edx, dword [rax + 0x44] 	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96db	    0x8b0500000000	            mov eax, dword [0x04009721] 	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96e1	            0x39c2	                            cmp edx, eax	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96e3	           0xf9cc0	                                 setl al	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96e6	            0x84c0	                             test al, al	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96e8	            0x743c	                            je 0x4009766	      5848	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_5
0x96ea	    0x488b05000000	            mov rax, qword [0x04009731] 	      5850	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_6
0x96f1	        0x4883c038	                           add rax, 0x38	      5850	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_6
0x96f5	          0x4889c7	                            mov rdi, rax	      5850	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_6
0x96f8	      0xe800000000	                          call 0x400973d	      5850	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_6
0x96fd	          0x4889c2	                            mov rdx, rax	      5850	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_6
0x9700	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5850	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_6
0x9704	          0x488910	                    mov qword [rax], rdx	      5850	normal.c	FUNCTION_67	ELSE_1	IF_5	CALL_6
0x9707	    0x8b1500000000	            mov edx, dword [0x0400974d] 	      5851	normal.c	FUNCTION_67	ELSE_1	IF_5
0x970d	    0x488b05000000	            mov rax, qword [0x04009754] 	      5851	normal.c	FUNCTION_67	ELSE_1	IF_5
0x9714	          0x8b4040	            mov eax, dword [rax + 0x40] 	      5851	normal.c	FUNCTION_67	ELSE_1	IF_5
0x9717	            0x29c2	                            sub edx, eax	      5851	normal.c	FUNCTION_67	ELSE_1	IF_5
0x9719	            0x89d0	                            mov eax, edx	      5851	normal.c	FUNCTION_67	ELSE_1	IF_5
0x971b	          0x8d5001	                      lea edx, [rax + 1]	      5851	normal.c	FUNCTION_67	ELSE_1	IF_5
0x971e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5851	normal.c	FUNCTION_67	ELSE_1	IF_5
0x9722	            0x8910	                    mov dword [rax], edx	      5851	normal.c	FUNCTION_67	ELSE_1	IF_5
0x9724	            0xeb31	                           jmp 0x4009797	      5851	normal.c	FUNCTION_67	ELSE_1	IF_5
0x9726	      0xbf00000000	                              mov edi, 0	      5855	normal.c	FUNCTION_67	ELSE_1	ELSE_2	CALL_7
0x972b	      0xe800000000	                          call 0x4009770	      5855	normal.c	FUNCTION_67	ELSE_1	ELSE_2	CALL_7
0x9730	          0x4889c2	                            mov rdx, rax	      5855	normal.c	FUNCTION_67	ELSE_1	ELSE_2	CALL_7
0x9733	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5855	normal.c	FUNCTION_67	ELSE_1	ELSE_2	CALL_7
0x9737	          0x488910	                    mov qword [rax], rdx	      5855	normal.c	FUNCTION_67	ELSE_1	ELSE_2	CALL_7
0x973a	    0x488b05000000	            mov rax, qword [0x04009781] 	      5856	normal.c	FUNCTION_67	ELSE_1	ELSE_2
0x9741	          0x8b5040	            mov edx, dword [rax + 0x40] 	      5856	normal.c	FUNCTION_67	ELSE_1	ELSE_2
0x9744	    0x8b0500000000	            mov eax, dword [0x0400978a] 	      5856	normal.c	FUNCTION_67	ELSE_1	ELSE_2
0x974a	            0x29c2	                            sub edx, eax	      5856	normal.c	FUNCTION_67	ELSE_1	ELSE_2
0x974c	            0x89d0	                            mov eax, edx	      5856	normal.c	FUNCTION_67	ELSE_1	ELSE_2
0x974e	          0x8d5001	                      lea edx, [rax + 1]	      5856	normal.c	FUNCTION_67	ELSE_1	ELSE_2
0x9751	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5856	normal.c	FUNCTION_67	ELSE_1	ELSE_2
0x9755	            0x8910	                    mov dword [rax], edx	      5856	normal.c	FUNCTION_67	ELSE_1	ELSE_2
0x9757	    0x8b0500000000	            mov eax, dword [0x0400979d] 	      5859	normal.c	FUNCTION_67	ELSE_1	IF_6
0x975d	            0x85c0	                           test eax, eax	      5859	normal.c	FUNCTION_67	ELSE_1	IF_6
0x975f	            0x7434	                            je 0x40097d5	      5859	normal.c	FUNCTION_67	ELSE_1	IF_6
0x9761	    0x488b05000000	            mov rax, qword [0x040097a8] 	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x9768	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x976c	          0x488b0a	                    mov rcx, qword [rdx]	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x976f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x9773	            0x8b12	                    mov edx, dword [rdx]	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x9775	          0x4863d2	                         movsxd rdx, edx	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x9778	        0x4883ea01	                              sub rdx, 1	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x977c	          0x4801ca	                            add rdx, rcx	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x977f	          0x4889d7	                            mov rdi, rdx	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x9782	            0xffd0	                                call rax	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x9784	          0x8d50ff	                      lea edx, [rax - 1]	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x9787	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x978b	            0x8b00	                    mov eax, dword [rax]	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x978d	             0x1c2	                            add edx, eax	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x978f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x9793	            0x8910	                    mov dword [rax], edx	      5861	normal.c	FUNCTION_67	ELSE_1	IF_6
0x9795	      0xe800000000	                          call 0x40097da	      5864	normal.c	FUNCTION_67	CALL_8
0x979a	      0xb801000000	                              mov eax, 1	      5865	normal.c	FUNCTION_67
0x979f	              0xc9	                                   leave	      5866	normal.c	FUNCTION_67
0x97a0	              0xc3	                                     ret	      5866	normal.c	FUNCTION_67
op_colon	CALL,20:ELSE,9:DO,0:FOR,0:functions,0:IF,12:WHILE,0:SWITCH,0	115
0x3291	              0x55	                                push rbp	      2173	normal.c	FUNCTION_7
0x3292	          0x4889e5	                            mov rbp, rsp	      2173	normal.c	FUNCTION_7
0x3295	        0x4883ec10	                           sub rsp, 0x10	      2173	normal.c	FUNCTION_7
0x3299	        0x48897df8	                mov qword [rbp - 8], rdi	      2173	normal.c	FUNCTION_7
0x329d	      0xbf3a000000	                           mov edi, 0x3a	      2174	normal.c	FUNCTION_7	CALL_1
0x32a2	      0xe800000000	                          call 0x40032e7	      2174	normal.c	FUNCTION_7	CALL_1
0x32a7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2175	normal.c	FUNCTION_7	IF_1
0x32ab	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2175	normal.c	FUNCTION_7	IF_1
0x32ae	            0x85c0	                           test eax, eax	      2175	normal.c	FUNCTION_7	IF_1
0x32b0	            0x740f	                            je 0x4003301	      2175	normal.c	FUNCTION_7	IF_1
0x32b2	      0xbf00000000	                              mov edi, 0	      2176	normal.c	FUNCTION_7	CALL_2
0x32b7	      0xe800000000	                          call 0x40032fc	      2176	normal.c	FUNCTION_7	CALL_2
0x32bc	      0xe9e6000000	                           jmp 0x40033e7	      2176	normal.c	FUNCTION_7	CALL_2
0x32c1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2182	normal.c	FUNCTION_7	ELSE_1	IF_2
0x32c5	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2182	normal.c	FUNCTION_7	ELSE_1	IF_2
0x32c9	    0x488b05000000	            mov rax, qword [0x04003310] 	      2182	normal.c	FUNCTION_7	ELSE_1	IF_2
0x32d0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2182	normal.c	FUNCTION_7	ELSE_1	IF_2
0x32d4	          0x4839c2	                            cmp rdx, rax	      2182	normal.c	FUNCTION_7	ELSE_1	IF_2
0x32d7	            0x750c	                           jne 0x4003325	      2182	normal.c	FUNCTION_7	ELSE_1	IF_2
0x32d9	      0xbf2e000000	                           mov edi, 0x2e	      2183	normal.c	FUNCTION_7	ELSE_1	CALL_3
0x32de	      0xe800000000	                          call 0x4003323	      2183	normal.c	FUNCTION_7	ELSE_1	CALL_3
0x32e3	            0xeb10	                           jmp 0x4003335	      2183	normal.c	FUNCTION_7	ELSE_1	CALL_3
0x32e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2185	normal.c	FUNCTION_7	ELSE_1	CALL_4
0x32e9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2185	normal.c	FUNCTION_7	ELSE_1	CALL_4
0x32ed	          0x4889c7	                            mov rdi, rax	      2185	normal.c	FUNCTION_7	ELSE_1	CALL_4
0x32f0	      0xe800000000	                          call 0x4003335	      2185	normal.c	FUNCTION_7	ELSE_1	CALL_4
0x32f5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2186	normal.c	FUNCTION_7	ELSE_1	IF_3
0x32f9	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2186	normal.c	FUNCTION_7	ELSE_1	IF_3
0x32fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      2186	normal.c	FUNCTION_7	ELSE_1	IF_3
0x3301	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2186	normal.c	FUNCTION_7	ELSE_1	IF_3
0x3305	          0x4839c2	                            cmp rdx, rax	      2186	normal.c	FUNCTION_7	ELSE_1	IF_3
0x3308	     0xf8499000000	                            je 0x40033e7	      2186	normal.c	FUNCTION_7	ELSE_1	IF_3
0x330e	      0xbf2c000000	                           mov edi, 0x2c	      2188	normal.c	FUNCTION_7	ELSE_1	IF_3	CALL_5
0x3313	      0xe800000000	                          call 0x4003358	      2188	normal.c	FUNCTION_7	ELSE_1	IF_3	CALL_5
0x3318	        0x488b45f8	                mov rax, qword [rbp - 8]	      2189	normal.c	FUNCTION_7	ELSE_1	IF_3	IF_4
0x331c	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2189	normal.c	FUNCTION_7	ELSE_1	IF_3	IF_4
0x3320	    0x488b05000000	            mov rax, qword [0x04003367] 	      2189	normal.c	FUNCTION_7	ELSE_1	IF_3	IF_4
0x3327	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2189	normal.c	FUNCTION_7	ELSE_1	IF_3	IF_4
0x332b	          0x4839c2	                            cmp rdx, rax	      2189	normal.c	FUNCTION_7	ELSE_1	IF_3	IF_4
0x332e	            0x750c	                           jne 0x400337c	      2189	normal.c	FUNCTION_7	ELSE_1	IF_3	IF_4
0x3330	      0xbf2e000000	                           mov edi, 0x2e	      2190	normal.c	FUNCTION_7	ELSE_1	IF_3	CALL_6
0x3335	      0xe800000000	                          call 0x400337a	      2190	normal.c	FUNCTION_7	ELSE_1	IF_3	CALL_6
0x333a	            0xeb6b	                           jmp 0x40033e7	      2190	normal.c	FUNCTION_7	ELSE_1	IF_3	CALL_6
0x333c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2191	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_5
0x3340	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2191	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_5
0x3344	    0x488b05000000	            mov rax, qword [0x0400338b] 	      2191	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_5
0x334b	          0x488b00	                    mov rax, qword [rax]	      2191	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_5
0x334e	          0x4839c2	                            cmp rdx, rax	      2191	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_5
0x3351	            0x750c	                           jne 0x400339f	      2191	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_5
0x3353	      0xbf24000000	                           mov edi, 0x24	      2192	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_5
0x3358	      0xe800000000	                          call 0x400339d	      2192	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_5
0x335d	            0xeb48	                           jmp 0x40033e7	      2192	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_5
0x335f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2193	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6
0x3363	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2193	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6
0x3367	    0x488b05000000	            mov rax, qword [0x040033ae] 	      2193	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6
0x336e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2193	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6
0x3372	          0x4839c2	                            cmp rdx, rax	      2193	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6
0x3375	            0x7520	                           jne 0x40033d7	      2193	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6
0x3377	      0xbf00000000	                              mov edi, 0	      2195	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6	CALL_8
0x337c	      0xe800000000	                          call 0x40033c1	      2195	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6	CALL_8
0x3381	        0x488b45f8	                mov rax, qword [rbp - 8]	      2196	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6	CALL_9
0x3385	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2196	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6	CALL_9
0x3389	        0x4883e801	                              sub rax, 1	      2196	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6	CALL_9
0x338d	          0x4889c7	                            mov rdi, rax	      2196	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6	CALL_9
0x3390	      0xe800000000	                          call 0x40033d5	      2196	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6	CALL_9
0x3395	            0xeb10	                           jmp 0x40033e7	      2196	normal.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_6	CALL_9
0x3397	        0x488b45f8	                mov rax, qword [rbp - 8]	      2199	normal.c	FUNCTION_7	ELSE_1	IF_3	CALL_10
0x339b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2199	normal.c	FUNCTION_7	ELSE_1	IF_3	CALL_10
0x339f	          0x4889c7	                            mov rdi, rax	      2199	normal.c	FUNCTION_7	ELSE_1	IF_3	CALL_10
0x33a2	      0xe800000000	                          call 0x40033e7	      2199	normal.c	FUNCTION_7	ELSE_1	IF_3	CALL_10
0x33a7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2202	normal.c	FUNCTION_7	IF_7
0x33ab	            0x8b00	                    mov eax, dword [rax]	      2202	normal.c	FUNCTION_7	IF_7
0x33ad	          0x83f80a	                            cmp eax, 0xa	      2202	normal.c	FUNCTION_7	IF_7
0x33b0	            0x740a	                            je 0x40033fc	      2202	normal.c	FUNCTION_7	IF_7
0x33b2	      0xbf00000000	                              mov edi, 0	      2203	normal.c	FUNCTION_7	CALL_11
0x33b7	      0xe800000000	                          call 0x40033fc	      2203	normal.c	FUNCTION_7	CALL_11
0x33bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      2204	normal.c	FUNCTION_7	IF_8
0x33c0	            0x8b00	                    mov eax, dword [rax]	      2204	normal.c	FUNCTION_7	IF_8
0x33c2	          0x83f808	                              cmp eax, 8	      2204	normal.c	FUNCTION_7	IF_8
0x33c5	            0x7519	                           jne 0x4003420	      2204	normal.c	FUNCTION_7	IF_8
0x33c7	      0xe800000000	                          call 0x400340c	      2211	normal.c	FUNCTION_7	IF_8	CALL_15
0x33cc	          0x4889c7	                            mov rdi, rax	      2211	normal.c	FUNCTION_7	IF_8	CALL_15
0x33cf	      0xe800000000	                          call 0x4003414	      2211	normal.c	FUNCTION_7	IF_8	CALL_15
0x33d4	      0xbf00000000	                              mov edi, 0	      2212	normal.c	FUNCTION_7	IF_8	CALL_16
0x33d9	      0xe800000000	                          call 0x400341e	      2212	normal.c	FUNCTION_7	IF_8	CALL_16
0x33de	            0xeb6b	                           jmp 0x400348b	      2228	normal.c	FUNCTION_7
0x33e0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2214	normal.c	FUNCTION_7	ELSE_7	IF_10
0x33e4	            0x8b00	                    mov eax, dword [rax]	      2214	normal.c	FUNCTION_7	ELSE_7	IF_10
0x33e6	          0x83f809	                              cmp eax, 9	      2214	normal.c	FUNCTION_7	ELSE_7	IF_10
0x33e9	            0x7560	                           jne 0x400348b	      2214	normal.c	FUNCTION_7	ELSE_7	IF_10
0x33eb	    0x488b05000000	            mov rax, qword [0x04003432] 	      2216	normal.c	FUNCTION_7	ELSE_7	IF_10	IF_11
0x33f2	    0x488b80e01400	          mov rax, qword [rax + 0x14e0] 	      2216	normal.c	FUNCTION_7	ELSE_7	IF_10	IF_11
0x33f9	           0xfb600	                   movzx eax, byte [rax]	      2216	normal.c	FUNCTION_7	ELSE_7	IF_10	IF_11
0x33fc	            0x84c0	                             test al, al	      2216	normal.c	FUNCTION_7	ELSE_7	IF_10	IF_11
0x33fe	            0x7418	                            je 0x4003458	      2216	normal.c	FUNCTION_7	ELSE_7	IF_10	IF_11
0x3400	    0x488b05000000	            mov rax, qword [0x04003447] 	      2217	normal.c	FUNCTION_7	ELSE_7	IF_10	CALL_17
0x3407	    0x488b80e01400	          mov rax, qword [rax + 0x14e0] 	      2217	normal.c	FUNCTION_7	ELSE_7	IF_10	CALL_17
0x340e	          0x4889c7	                            mov rdi, rax	      2217	normal.c	FUNCTION_7	ELSE_7	IF_10	CALL_17
0x3411	      0xe800000000	                          call 0x4003456	      2217	normal.c	FUNCTION_7	ELSE_7	IF_10	CALL_17
0x3416	            0xeb29	                           jmp 0x4003481	      2217	normal.c	FUNCTION_7	ELSE_7	IF_10	CALL_17
0x3418	    0x488b05000000	            mov rax, qword [0x0400345f] 	      2218	normal.c	FUNCTION_7	ELSE_7	IF_10	ELSE_8	IF_12
0x341f	           0xfb600	                   movzx eax, byte [rax]	      2218	normal.c	FUNCTION_7	ELSE_7	IF_10	ELSE_8	IF_12
0x3422	            0x84c0	                             test al, al	      2218	normal.c	FUNCTION_7	ELSE_7	IF_10	ELSE_8	IF_12
0x3424	            0x7411	                            je 0x4003477	      2218	normal.c	FUNCTION_7	ELSE_7	IF_10	ELSE_8	IF_12
0x3426	    0x488b05000000	            mov rax, qword [0x0400346d] 	      2219	normal.c	FUNCTION_7	ELSE_7	IF_10	ELSE_8	IF_12
0x342d	          0x4889c7	                            mov rdi, rax	      2219	normal.c	FUNCTION_7	ELSE_7	IF_10	ELSE_8	IF_12
0x3430	      0xe800000000	                          call 0x4003475	      2219	normal.c	FUNCTION_7	ELSE_7	IF_10	ELSE_8	IF_12
0x3435	            0xeb0a	                           jmp 0x4003481	      2219	normal.c	FUNCTION_7	ELSE_7	IF_10	ELSE_8	IF_12
0x3437	      0xbf00000000	                              mov edi, 0	      2221	normal.c	FUNCTION_7	ELSE_7	IF_10	CALL_19
0x343c	      0xe800000000	                          call 0x4003481	      2221	normal.c	FUNCTION_7	ELSE_7	IF_10	CALL_19
0x3441	      0xbf00000000	                              mov edi, 0	      2222	normal.c	FUNCTION_7	ELSE_7	IF_10	CALL_20
0x3446	      0xe800000000	                          call 0x400348b	      2222	normal.c	FUNCTION_7	ELSE_7	IF_10	CALL_20
0x344b	              0x90	                                     nop	      2228	normal.c	FUNCTION_7
0x344c	              0xc9	                                   leave	      2228	normal.c	FUNCTION_7
0x344d	              0xc3	                                     ret	      2228	normal.c	FUNCTION_7
normal_search	CALL,4:ELSE,1:DO,0:FOR,0:functions,0:IF,3:WHILE,0:SWITCH,0	66
0xa771	              0x55	                                push rbp	      6385	normal.c	FUNCTION_79
0xa772	          0x4889e5	                            mov rbp, rsp	      6385	normal.c	FUNCTION_79
0xa775	        0x4883ec30	                           sub rsp, 0x30	      6385	normal.c	FUNCTION_79
0xa779	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6385	normal.c	FUNCTION_79
0xa77d	          0x8975e4	             mov dword [rbp - 0x1c], esi	      6385	normal.c	FUNCTION_79
0xa780	        0x488955d8	             mov qword [rbp - 0x28], rdx	      6385	normal.c	FUNCTION_79
0xa784	          0x894de0	             mov dword [rbp - 0x20], ecx	      6385	normal.c	FUNCTION_79
0xa787	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6388	normal.c	FUNCTION_79
0xa78b	          0x488b00	                    mov rax, qword [rax]	      6388	normal.c	FUNCTION_79
0xa78e	    0xc74008000000	                  mov dword [rax + 8], 0	      6388	normal.c	FUNCTION_79
0xa795	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6389	normal.c	FUNCTION_79
0xa799	          0x488b00	                    mov rax, qword [rax]	      6389	normal.c	FUNCTION_79
0xa79c	    0xc74014000000	               mov dword [rax + 0x14], 0	      6389	normal.c	FUNCTION_79
0xa7a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6390	normal.c	FUNCTION_79
0xa7a7	          0x488b00	                    mov rax, qword [rax]	      6390	normal.c	FUNCTION_79
0xa7aa	    0xc74010010000	               mov dword [rax + 0x10], 1	      6390	normal.c	FUNCTION_79
0xa7b1	    0x488b05000000	            mov rax, qword [0x0400a7f8] 	      6391	normal.c	FUNCTION_79
0xa7b8	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6391	normal.c	FUNCTION_79
0xa7bf	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6393	normal.c	FUNCTION_79	CALL_1
0xa7c2	          0x83c81e	                            or eax, 0x1e	      6393	normal.c	FUNCTION_79	CALL_1
0xa7c5	            0x89c7	                            mov edi, eax	      6393	normal.c	FUNCTION_79	CALL_1
0xa7c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6393	normal.c	FUNCTION_79	CALL_1
0xa7cb	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      6393	normal.c	FUNCTION_79	CALL_1
0xa7cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6393	normal.c	FUNCTION_79	CALL_1
0xa7d3	          0x488b00	                    mov rax, qword [rax]	      6393	normal.c	FUNCTION_79	CALL_1
0xa7d6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      6393	normal.c	FUNCTION_79	CALL_1
0xa7da	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      6393	normal.c	FUNCTION_79	CALL_1
0xa7dd	        0x4883ec08	                              sub rsp, 8	      6393	normal.c	FUNCTION_79	CALL_1
0xa7e1	            0x6a00	                                  push 0	      6393	normal.c	FUNCTION_79	CALL_1
0xa7e3	    0x41b900000000	                              mov r9d, 0	      6393	normal.c	FUNCTION_79	CALL_1
0xa7e9	          0x4189f8	                            mov r8d, edi	      6393	normal.c	FUNCTION_79	CALL_1
0xa7ec	          0x4889c7	                            mov rdi, rax	      6393	normal.c	FUNCTION_79	CALL_1
0xa7ef	      0xe800000000	                          call 0x400a834	      6393	normal.c	FUNCTION_79	CALL_1
0xa7f4	        0x4883c410	                           add rsp, 0x10	      6393	normal.c	FUNCTION_79	CALL_1
0xa7f8	          0x8945fc	                mov dword [rbp - 4], eax	      6393	normal.c	FUNCTION_79	CALL_1
0xa7fb	        0x837dfc00	                  cmp dword [rbp - 4], 0	      6395	normal.c	FUNCTION_79	IF_1
0xa7ff	            0x7511	                           jne 0x400a852	      6395	normal.c	FUNCTION_79	IF_1
0xa801	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6396	normal.c	FUNCTION_79	CALL_2
0xa805	          0x488b00	                    mov rax, qword [rax]	      6396	normal.c	FUNCTION_79	CALL_2
0xa808	          0x4889c7	                            mov rdi, rax	      6396	normal.c	FUNCTION_79	CALL_2
0xa80b	      0xe8a2b1ffff	                        call sym.clearop	      6396	normal.c	FUNCTION_79	CALL_2
0xa810	            0xeb4b	                           jmp 0x400a89d	      6396	normal.c	FUNCTION_79	CALL_2
0xa812	        0x837dfc02	                  cmp dword [rbp - 4], 2	      6399	normal.c	FUNCTION_79	ELSE_1	IF_2
0xa816	            0x750e	                           jne 0x400a866	      6399	normal.c	FUNCTION_79	ELSE_1	IF_2
0xa818	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6400	normal.c	FUNCTION_79	ELSE_1	IF_2
0xa81c	          0x488b00	                    mov rax, qword [rax]	      6400	normal.c	FUNCTION_79	ELSE_1	IF_2
0xa81f	    0xc74008010000	                  mov dword [rax + 8], 1	      6400	normal.c	FUNCTION_79	ELSE_1	IF_2
0xa826	    0x488b05000000	            mov rax, qword [0x0400a86d] 	      6402	normal.c	FUNCTION_79	ELSE_1
0xa82d	    0xc74044000000	               mov dword [rax + 0x44], 0	      6402	normal.c	FUNCTION_79	ELSE_1
0xa834	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6405	normal.c	FUNCTION_79	ELSE_1	IF_3
0xa838	          0x488b00	                    mov rax, qword [rax]	      6405	normal.c	FUNCTION_79	ELSE_1	IF_3
0xa83b	            0x8b00	                    mov eax, dword [rax]	      6405	normal.c	FUNCTION_79	ELSE_1	IF_3
0xa83d	            0x85c0	                           test eax, eax	      6405	normal.c	FUNCTION_79	ELSE_1	IF_3
0xa83f	            0x751c	                           jne 0x400a89d	      6405	normal.c	FUNCTION_79	ELSE_1	IF_3
0xa841	    0x8b0500000000	            mov eax, dword [0x0400a887] 	      6405	normal.c	FUNCTION_79	ELSE_1	IF_3
0xa847	          0x83e040	                           and eax, 0x40	      6405	normal.c	FUNCTION_79	ELSE_1	IF_3
0xa84a	            0x85c0	                           test eax, eax	      6405	normal.c	FUNCTION_79	ELSE_1	IF_3
0xa84c	            0x740f	                            je 0x400a89d	      6405	normal.c	FUNCTION_79	ELSE_1	IF_3
0xa84e	    0x8b0500000000	            mov eax, dword [0x0400a894] 	      6405	normal.c	FUNCTION_79	ELSE_1	IF_3
0xa854	            0x85c0	                           test eax, eax	      6405	normal.c	FUNCTION_79	ELSE_1	IF_3
0xa856	            0x7405	                            je 0x400a89d	      6405	normal.c	FUNCTION_79	ELSE_1	IF_3
0xa858	      0xe800000000	                          call 0x400a89d	      6406	normal.c	FUNCTION_79	ELSE_1	CALL_3
0xa85d	      0xe800000000	                          call 0x400a8a2	      6412	normal.c	FUNCTION_79	CALL_4
0xa862	          0x8b45fc	                mov eax, dword [rbp - 4]	      6413	normal.c	FUNCTION_79
0xa865	              0xc9	                                   leave	      6414	normal.c	FUNCTION_79
0xa866	              0xc3	                                     ret	      6414	normal.c	FUNCTION_79
find_decl	CALL,17:ELSE,3:DO,0:FOR,1:functions,0:IF,14:WHILE,1:SWITCH,0	262
0x68ae	              0x55	                                push rbp	      4304	normal.c	FUNCTION_45
0x68af	          0x4889e5	                            mov rbp, rsp	      4304	normal.c	FUNCTION_45
0x68b2	              0x53	                                push rbx	      4304	normal.c	FUNCTION_45
0x68b3	    0x4881ec980000	                           sub rsp, 0x98	      4304	normal.c	FUNCTION_45
0x68ba	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      4304	normal.c	FUNCTION_45
0x68c1	    0x89b574ffffff	             mov dword [rbp - 0x8c], esi	      4304	normal.c	FUNCTION_45
0x68c7	    0x899570ffffff	             mov dword [rbp - 0x90], edx	      4304	normal.c	FUNCTION_45
0x68cd	    0x898d6cffffff	             mov dword [rbp - 0x94], ecx	      4304	normal.c	FUNCTION_45
0x68d3	    0x44898568ffff	             mov dword [rbp - 0x98], r8d	      4304	normal.c	FUNCTION_45
0x68da	    0x64488b042528	                mov rax, qword fs:[0x28]	      4304	normal.c	FUNCTION_45
0x68e3	        0x488945e8	             mov qword [rbp - 0x18], rax	      4304	normal.c	FUNCTION_45
0x68e7	            0x31c0	                            xor eax, eax	      4304	normal.c	FUNCTION_45
0x68e9	    0xc7458c010000	               mov dword [rbp - 0x74], 1	      4312	normal.c	FUNCTION_45
0x68f0	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      4314	normal.c	FUNCTION_45
0x68f6	          0x894590	             mov dword [rbp - 0x70], eax	      4314	normal.c	FUNCTION_45
0x68f9	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      4317	normal.c	FUNCTION_45	IF_1	CALL_1
0x68ff	          0x83c007	                              add eax, 7	      4317	normal.c	FUNCTION_45	IF_1	CALL_1
0x6902	            0x89c7	                            mov edi, eax	      4317	normal.c	FUNCTION_45	IF_1	CALL_1
0x6904	      0xe800000000	                          call 0x4006949	      4317	normal.c	FUNCTION_45	IF_1	CALL_1
0x6909	        0x488945a0	             mov qword [rbp - 0x60], rax	      4317	normal.c	FUNCTION_45	IF_1	CALL_1
0x690d	      0x48837da000	               cmp qword [rbp - 0x60], 0	      4317	normal.c	FUNCTION_45	IF_1	CALL_1
0x6912	            0x750a	                           jne 0x400695e	      4317	normal.c	FUNCTION_45	IF_1	CALL_1
0x6914	      0xb800000000	                              mov eax, 0	      4318	normal.c	FUNCTION_45	IF_1
0x6919	      0xe9e4030000	                           jmp 0x4006d42	      4318	normal.c	FUNCTION_45	IF_1
0x691e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4322	normal.c	FUNCTION_45	CALL_3
0x6925	          0x4889c7	                            mov rdi, rax	      4322	normal.c	FUNCTION_45	CALL_3
0x6928	      0xe800000000	                          call 0x400696d	      4322	normal.c	FUNCTION_45	CALL_3
0x692d	            0x85c0	                           test eax, eax	      4322	normal.c	FUNCTION_45	CALL_3
0x692f	            0x7407	                            je 0x4006978	      4322	normal.c	FUNCTION_45	CALL_3
0x6931	      0xbe00000000	                              mov esi, 0	      4322	normal.c	FUNCTION_45	CALL_3
0x6936	            0xeb05	                           jmp 0x400697d	      4322	normal.c	FUNCTION_45	CALL_3
0x6938	      0xbe00000000	                              mov esi, 0	      4322	normal.c	FUNCTION_45	CALL_3
0x693d	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      4322	normal.c	FUNCTION_45	CALL_3
0x6944	    0x8b9574ffffff	             mov edx, dword [rbp - 0x8c]	      4322	normal.c	FUNCTION_45	CALL_3
0x694a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4322	normal.c	FUNCTION_45	CALL_3
0x694e	          0x4889c7	                            mov rdi, rax	      4322	normal.c	FUNCTION_45	CALL_3
0x6951	      0xb800000000	                              mov eax, 0	      4322	normal.c	FUNCTION_45	CALL_3
0x6956	      0xe800000000	                          call 0x400699b	      4322	normal.c	FUNCTION_45	CALL_3
0x695b	    0x488b05000000	            mov rax, qword [0x040069a2] 	      4324	normal.c	FUNCTION_45
0x6962	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      4324	normal.c	FUNCTION_45
0x6966	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4324	normal.c	FUNCTION_45
0x696a	        0x488945b0	             mov qword [rbp - 0x50], rax	      4324	normal.c	FUNCTION_45
0x696e	        0x488955b8	             mov qword [rbp - 0x48], rdx	      4324	normal.c	FUNCTION_45
0x6972	    0x8b0500000000	            mov eax, dword [0x040069b8] 	      4325	normal.c	FUNCTION_45
0x6978	          0x894594	             mov dword [rbp - 0x6c], eax	      4325	normal.c	FUNCTION_45
0x697b	    0x8b0500000000	            mov eax, dword [0x040069c1] 	      4326	normal.c	FUNCTION_45
0x6981	          0x894598	             mov dword [rbp - 0x68], eax	      4326	normal.c	FUNCTION_45
0x6984	    0xc70500000000	               mov dword [0x040069ce], 0	      4327	normal.c	FUNCTION_45
0x698e	    0xc70500000000	               mov dword [0x040069d8], 0	      4328	normal.c	FUNCTION_45
0x6998	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      4335	normal.c	FUNCTION_45	IF_2	CALL_4
0x699f	            0x7425	                            je 0x4006a06	      4335	normal.c	FUNCTION_45	IF_2	CALL_4
0x69a1	        0x488d4584	                   lea rax, [rbp - 0x7c]	      4335	normal.c	FUNCTION_45	IF_2	CALL_4
0x69a5	    0x41b800000000	                              mov r8d, 0	      4335	normal.c	FUNCTION_45	IF_2	CALL_4
0x69ab	      0xb97b000000	                           mov ecx, 0x7b	      4335	normal.c	FUNCTION_45	IF_2	CALL_4
0x69b0	      0xba01000000	                              mov edx, 1	      4335	normal.c	FUNCTION_45	IF_2	CALL_4
0x69b5	      0xbeffffffff	                     mov esi, 0xffffffff	      4335	normal.c	FUNCTION_45	IF_2	CALL_4
0x69ba	          0x4889c7	                            mov rdi, rax	      4335	normal.c	FUNCTION_45	IF_2	CALL_4
0x69bd	      0xe800000000	                          call 0x4006a02	      4335	normal.c	FUNCTION_45	IF_2	CALL_4
0x69c2	            0x85c0	                           test eax, eax	      4335	normal.c	FUNCTION_45	IF_2	CALL_4
0x69c4	            0x752d	                           jne 0x4006a33	      4335	normal.c	FUNCTION_45	IF_2	CALL_4
0x69c6	      0xe800000000	                          call 0x4006a0b	      4337	normal.c	FUNCTION_45	IF_2	CALL_5
0x69cb	    0x488b05000000	            mov rax, qword [0x04006a12] 	      4338	normal.c	FUNCTION_45	IF_2
0x69d2	    0x48c740380100	               mov qword [rax + 0x38], 1	      4338	normal.c	FUNCTION_45	IF_2
0x69da	    0x488b05000000	            mov rax, qword [0x04006a21] 	      4339	normal.c	FUNCTION_45	IF_2
0x69e1	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      4339	normal.c	FUNCTION_45	IF_2
0x69e5	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4339	normal.c	FUNCTION_45	IF_2
0x69e9	        0x488945c0	             mov qword [rbp - 0x40], rax	      4339	normal.c	FUNCTION_45	IF_2
0x69ed	        0x488955c8	             mov qword [rbp - 0x38], rdx	      4339	normal.c	FUNCTION_45	IF_2
0x69f1	            0xeb51	                           jmp 0x4006a84	      4339	normal.c	FUNCTION_45	IF_2
0x69f3	    0x488b05000000	            mov rax, qword [0x04006a3a] 	      4343	normal.c	FUNCTION_45	ELSE_1
0x69fa	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      4343	normal.c	FUNCTION_45	ELSE_1
0x69fe	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4343	normal.c	FUNCTION_45	ELSE_1
0x6a02	        0x488945c0	             mov qword [rbp - 0x40], rax	      4343	normal.c	FUNCTION_45	ELSE_1
0x6a06	        0x488955c8	             mov qword [rbp - 0x38], rdx	      4343	normal.c	FUNCTION_45	ELSE_1
0x6a0a	            0xeb13	                           jmp 0x4006a5f	      4344	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x6a0c	    0x488b05000000	            mov rax, qword [0x04006a53] 	      4345	normal.c	FUNCTION_45	ELSE_1	WHILE_1
0x6a13	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4345	normal.c	FUNCTION_45	ELSE_1	WHILE_1
0x6a17	        0x4883ea01	                              sub rdx, 1	      4345	normal.c	FUNCTION_45	ELSE_1	WHILE_1
0x6a1b	        0x48895038	             mov qword [rax + 0x38], rdx	      4345	normal.c	FUNCTION_45	ELSE_1	WHILE_1
0x6a1f	    0x488b05000000	            mov rax, qword [0x04006a66] 	      4344	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x6a26	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4344	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x6a2a	        0x4883f801	                              cmp rax, 1	      4344	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x6a2e	            0x7e14	                           jle 0x4006a84	      4344	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x6a30	      0xe800000000	                          call 0x4006a75	      4344	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x6a35	          0x4889c7	                            mov rdi, rax	      4344	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x6a38	      0xe800000000	                          call 0x4006a7d	      4344	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x6a3d	           0xfb600	                   movzx eax, byte [rax]	      4344	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x6a40	            0x84c0	                             test al, al	      4344	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x6a42	            0x75c8	                           jne 0x4006a4c	      4344	normal.c	FUNCTION_45	ELSE_1	WHILE_1	CALL_7
0x6a44	    0x488b05000000	            mov rax, qword [0x04006a8b] 	      4347	normal.c	FUNCTION_45
0x6a4b	    0xc74040000000	               mov dword [rax + 0x40], 0	      4347	normal.c	FUNCTION_45
0x6a52	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      4350	normal.c	FUNCTION_45	CALL_8
0x6a5a	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      4350	normal.c	FUNCTION_45	CALL_8
0x6a61	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      4350	normal.c	FUNCTION_45	CALL_8
0x6a68	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      4353	normal.c	FUNCTION_45	FOR_1
0x6a6f	    0x488b05000000	            mov rax, qword [0x04006ab6] 	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6a76	        0x488d7838	                   lea rdi, [rax + 0x38]	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6a7a	    0x488b35000000	            mov rsi, qword [0x04006ac1] 	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6a81	    0x488b05000000	            mov rax, qword [0x04006ac8] 	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6a88	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6a8c	        0x4883ec08	                              sub rsp, 8	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6a90	            0x6a00	                                  push 0	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6a92	            0x6a00	                                  push 0	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6a94	            0x6a00	                                  push 0	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6a96	            0x6a02	                                  push 2	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6a98	          0x8b5590	             mov edx, dword [rbp - 0x70]	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6a9b	              0x52	                                push rdx	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6a9c	    0x41b901000000	                              mov r9d, 1	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6aa2	          0x4989c8	                             mov r8, rcx	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6aa5	      0xb901000000	                              mov ecx, 1	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6aaa	          0x4889fa	                            mov rdx, rdi	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6aad	          0x4889c7	                            mov rdi, rax	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6ab0	      0xe800000000	                          call 0x4006af5	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6ab5	        0x4883c430	                           add rsp, 0x30	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6ab9	          0x894588	             mov dword [rbp - 0x78], eax	      4354	normal.c	FUNCTION_45	FOR_1	CALL_9
0x6abc	    0x488b05000000	            mov rax, qword [0x04006b03] 	      4356	normal.c	FUNCTION_45	FOR_1	IF_3
0x6ac3	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4356	normal.c	FUNCTION_45	FOR_1	IF_3
0x6ac7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4356	normal.c	FUNCTION_45	FOR_1	IF_3
0x6acb	          0x4839c2	                            cmp rdx, rax	      4356	normal.c	FUNCTION_45	FOR_1	IF_3
0x6ace	            0x7c07	                            jl 0x4006b17	      4356	normal.c	FUNCTION_45	FOR_1	IF_3
0x6ad0	    0xc74588000000	               mov dword [rbp - 0x78], 0	      4357	normal.c	FUNCTION_45	FOR_1	IF_3
0x6ad7	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      4359	normal.c	FUNCTION_45	FOR_1	IF_4
0x6ade	            0x746e	                            je 0x4006b8e	      4359	normal.c	FUNCTION_45	FOR_1	IF_4
0x6ae0	        0x837d8800	               cmp dword [rbp - 0x78], 0	      4359	normal.c	FUNCTION_45	FOR_1	IF_4
0x6ae4	            0x7468	                            je 0x4006b8e	      4359	normal.c	FUNCTION_45	FOR_1	IF_4
0x6ae6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4366	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x6aea	            0x89c2	                            mov edx, eax	      4365	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x6aec	    0x488b05000000	            mov rax, qword [0x04006b33] 	      4366	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x6af3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4366	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x6af7	            0x29c2	                            sub edx, eax	      4365	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x6af9	            0x89d0	                            mov eax, edx	      4365	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x6afb	          0x83c001	                              add eax, 1	      4365	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x6afe	            0x89c1	                            mov ecx, eax	      4365	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x6b00	      0xba02000000	                              mov edx, 2	      4365	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x6b05	      0xbe7d000000	                           mov esi, 0x7d	      4365	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x6b0a	      0xbf00000000	                              mov edi, 0	      4365	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x6b0f	      0xe800000000	                          call 0x4006b54	      4365	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x6b14	        0x488945a8	             mov qword [rbp - 0x58], rax	      4365	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x6b18	      0x48837da800	               cmp qword [rbp - 0x58], 0	      4365	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x6b1d	            0x742f	                            je 0x4006b8e	      4365	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_10
0x6b1f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4367	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x6b23	          0x488b10	                    mov rdx, qword [rax]	      4367	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x6b26	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4367	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x6b2a	          0x4839c2	                            cmp rdx, rax	      4367	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x6b2d	            0x7d1f	                           jge 0x4006b8e	      4367	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x6b2f	    0x488b0d000000	            mov rcx, qword [0x04006b76] 	      4371	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x6b36	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4371	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x6b3a	        0x488b5008	                mov rdx, qword [rax + 8]	      4371	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x6b3e	          0x488b00	                    mov rax, qword [rax]	      4371	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x6b41	        0x48894138	             mov qword [rcx + 0x38], rax	      4371	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x6b45	        0x48895140	             mov qword [rcx + 0x40], rdx	      4371	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x6b49	      0xe94e010000	                           jmp 0x4006cdc	      4372	normal.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x6b4e	        0x837d8800	               cmp dword [rbp - 0x78], 0	      4376	normal.c	FUNCTION_45	FOR_1	IF_6
0x6b52	            0x7530	                           jne 0x4006bc4	      4376	normal.c	FUNCTION_45	FOR_1	IF_6
0x6b54	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4379	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x6b58	          0x4885c0	                           test rax, rax	      4379	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x6b5b	     0xf8440010000	                            je 0x4006ce1	      4379	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x6b61	    0x488b0d000000	            mov rcx, qword [0x04006ba8] 	      4381	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x6b68	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4381	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x6b6c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4381	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x6b70	        0x48894138	             mov qword [rcx + 0x38], rax	      4381	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x6b74	        0x48895140	             mov qword [rcx + 0x40], rdx	      4381	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x6b78	    0xc74588010000	               mov dword [rbp - 0x78], 1	      4382	normal.c	FUNCTION_45	FOR_1	IF_6	IF_7
0x6b7f	      0xe91d010000	                           jmp 0x4006ce1	      4384	normal.c	FUNCTION_45	FOR_1	IF_6
0x6b84	      0xe800000000	                          call 0x4006bc9	      4387	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x6b89	      0xb901000000	                              mov ecx, 1	      4387	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x6b8e	      0xba00000000	                              mov edx, 0	      4387	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x6b93	      0xbe00000000	                              mov esi, 0	      4387	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x6b98	          0x4889c7	                            mov rdi, rax	      4387	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x6b9b	      0xe800000000	                          call 0x4006be0	      4387	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x6ba0	            0x85c0	                           test eax, eax	      4387	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x6ba2	            0x7e26	                           jle 0x4006c0a	      4387	normal.c	FUNCTION_45	FOR_1	IF_8	CALL_12
0x6ba4	    0x488b05000000	            mov rax, qword [0x04006beb] 	      4390	normal.c	FUNCTION_45	FOR_1	IF_8
0x6bab	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4390	normal.c	FUNCTION_45	FOR_1	IF_8
0x6baf	        0x4883c201	                              add rdx, 1	      4390	normal.c	FUNCTION_45	FOR_1	IF_8
0x6bb3	        0x48895038	             mov qword [rax + 0x38], rdx	      4390	normal.c	FUNCTION_45	FOR_1	IF_8
0x6bb7	    0x488b05000000	            mov rax, qword [0x04006bfe] 	      4391	normal.c	FUNCTION_45	FOR_1	IF_8
0x6bbe	    0xc74040000000	               mov dword [rax + 0x40], 0	      4391	normal.c	FUNCTION_45	FOR_1	IF_8
0x6bc5	      0xe9d2000000	                           jmp 0x4006cdc	      4392	normal.c	FUNCTION_45	FOR_1	IF_8
0x6bca	    0x488b05000000	            mov rax, qword [0x04006c11] 	      4395	normal.c	FUNCTION_45	FOR_1	CALL_14
0x6bd1	          0x8b5840	            mov ebx, dword [rax + 0x40] 	      4395	normal.c	FUNCTION_45	FOR_1	CALL_14
0x6bd4	      0xe800000000	                          call 0x4006c19	      4395	normal.c	FUNCTION_45	FOR_1	CALL_14
0x6bd9	            0x89de	                            mov esi, ebx	      4395	normal.c	FUNCTION_45	FOR_1	CALL_14
0x6bdb	          0x4889c7	                            mov rdi, rax	      4395	normal.c	FUNCTION_45	FOR_1	CALL_14
0x6bde	      0xe85ffbffff	                       call sym.is_ident	      4395	normal.c	FUNCTION_45	FOR_1	CALL_14
0x6be3	          0x89459c	             mov dword [rbp - 0x64], eax	      4395	normal.c	FUNCTION_45	FOR_1	CALL_14
0x6be6	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      4399	normal.c	FUNCTION_45	FOR_1	IF_9
0x6bea	            0x7525	                           jne 0x4006c51	      4399	normal.c	FUNCTION_45	FOR_1	IF_9
0x6bec	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4399	normal.c	FUNCTION_45	FOR_1	IF_9
0x6bf0	          0x4885c0	                           test rax, rax	      4399	normal.c	FUNCTION_45	FOR_1	IF_9
0x6bf3	            0x741c	                            je 0x4006c51	      4399	normal.c	FUNCTION_45	FOR_1	IF_9
0x6bf5	    0x488b0d000000	            mov rcx, qword [0x04006c3c] 	      4401	normal.c	FUNCTION_45	FOR_1	IF_9
0x6bfc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4401	normal.c	FUNCTION_45	FOR_1	IF_9
0x6c00	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4401	normal.c	FUNCTION_45	FOR_1	IF_9
0x6c04	        0x48894138	             mov qword [rcx + 0x38], rax	      4401	normal.c	FUNCTION_45	FOR_1	IF_9
0x6c08	        0x48895140	             mov qword [rcx + 0x40], rdx	      4401	normal.c	FUNCTION_45	FOR_1	IF_9
0x6c0c	      0xe997000000	                           jmp 0x4006ce8	      4402	normal.c	FUNCTION_45	FOR_1	IF_9
0x6c11	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      4406	normal.c	FUNCTION_45	FOR_1	IF_10
0x6c15	            0x740d	                            je 0x4006c64	      4406	normal.c	FUNCTION_45	FOR_1	IF_10
0x6c17	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      4406	normal.c	FUNCTION_45	FOR_1	IF_10
0x6c1e	     0xf8480000000	                            je 0x4006ce4	      4406	normal.c	FUNCTION_45	FOR_1	IF_10
0x6c24	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      4408	normal.c	FUNCTION_45	FOR_1	IF_11
0x6c28	            0x7436	                            je 0x4006ca0	      4408	normal.c	FUNCTION_45	FOR_1	IF_11
0x6c2a	    0x488b05000000	            mov rax, qword [0x04006c71] 	      4408	normal.c	FUNCTION_45	FOR_1	IF_11
0x6c31	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4408	normal.c	FUNCTION_45	FOR_1	IF_11
0x6c35	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4408	normal.c	FUNCTION_45	FOR_1	IF_11
0x6c39	          0x4839c2	                            cmp rdx, rax	      4408	normal.c	FUNCTION_45	FOR_1	IF_11
0x6c3c	            0x7c22	                            jl 0x4006ca0	      4408	normal.c	FUNCTION_45	FOR_1	IF_11
0x6c3e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4411	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x6c42	          0x4885c0	                           test rax, rax	      4411	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x6c45	            0x7460	                            je 0x4006ce7	      4411	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x6c47	    0x488b0d000000	            mov rcx, qword [0x04006c8e] 	      4412	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x6c4e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4412	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x6c52	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4412	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x6c56	        0x48894138	             mov qword [rcx + 0x38], rax	      4412	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x6c5a	        0x48895140	             mov qword [rcx + 0x40], rdx	      4412	normal.c	FUNCTION_45	FOR_1	IF_11	IF_12
0x6c5e	            0xeb47	                           jmp 0x4006ce7	      4413	normal.c	FUNCTION_45	FOR_1	IF_11
0x6c60	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      4419	normal.c	FUNCTION_45	FOR_1	IF_13
0x6c64	            0x7518	                           jne 0x4006cbe	      4419	normal.c	FUNCTION_45	FOR_1	IF_13
0x6c66	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      4421	normal.c	FUNCTION_45	FOR_1	IF_13	CALL_15
0x6c6e	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      4421	normal.c	FUNCTION_45	FOR_1	IF_13	CALL_15
0x6c75	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      4421	normal.c	FUNCTION_45	FOR_1	IF_13	CALL_15
0x6c7c	            0xeb17	                           jmp 0x4006cd5	      4421	normal.c	FUNCTION_45	FOR_1	IF_13	CALL_15
0x6c7e	    0x488b05000000	            mov rax, qword [0x04006cc5] 	      4424	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x6c85	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      4424	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x6c89	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4424	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x6c8d	        0x488945d0	             mov qword [rbp - 0x30], rax	      4424	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x6c91	        0x488955d8	             mov qword [rbp - 0x28], rdx	      4424	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x6c95	    0x816590fffeff	      and dword [rbp - 0x70], 0xfffffeff	      4427	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x6c9c	      0xe9c7fdffff	                           jmp 0x4006aa8	      4428	normal.c	FUNCTION_45	FOR_1	ELSE_2
0x6ca1	              0x90	                                     nop	      4384	normal.c	FUNCTION_45	FOR_1	IF_6
0x6ca2	            0xeb04	                           jmp 0x4006ce8	      4384	normal.c	FUNCTION_45	FOR_1	IF_6
0x6ca4	              0x90	                                     nop	      4407	normal.c	FUNCTION_45	FOR_1	IF_10
0x6ca5	            0xeb01	                           jmp 0x4006ce8	      4407	normal.c	FUNCTION_45	FOR_1	IF_10
0x6ca7	              0x90	                                     nop	      4413	normal.c	FUNCTION_45	FOR_1	IF_11
0x6ca8	        0x837d8800	               cmp dword [rbp - 0x78], 0	      4430	normal.c	FUNCTION_45	ELSE_2	IF_14
0x6cac	            0x7520	                           jne 0x4006d0e	      4430	normal.c	FUNCTION_45	ELSE_2	IF_14
0x6cae	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      4432	normal.c	FUNCTION_45	ELSE_2	IF_14
0x6cb5	    0x488b0d000000	            mov rcx, qword [0x04006cfc] 	      4433	normal.c	FUNCTION_45	ELSE_2	IF_14
0x6cbc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4433	normal.c	FUNCTION_45	ELSE_2	IF_14
0x6cc0	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4433	normal.c	FUNCTION_45	ELSE_2	IF_14
0x6cc4	        0x48894138	             mov qword [rcx + 0x38], rax	      4433	normal.c	FUNCTION_45	ELSE_2	IF_14
0x6cc8	        0x48895140	             mov qword [rcx + 0x40], rdx	      4433	normal.c	FUNCTION_45	ELSE_2	IF_14
0x6ccc	            0xeb13	                           jmp 0x4006d21	      4433	normal.c	FUNCTION_45	ELSE_2	IF_14
0x6cce	    0x488b05000000	            mov rax, qword [0x04006d15] 	      4437	normal.c	FUNCTION_45	ELSE_3
0x6cd5	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      4437	normal.c	FUNCTION_45	ELSE_3
0x6cdc	      0xe800000000	                          call 0x4006d21	      4439	normal.c	FUNCTION_45	ELSE_3	CALL_16
0x6ce1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4442	normal.c	FUNCTION_45	CALL_17
0x6ce5	          0x4889c7	                            mov rdi, rax	      4442	normal.c	FUNCTION_45	CALL_17
0x6ce8	      0xe800000000	                          call 0x4006d2d	      4442	normal.c	FUNCTION_45	CALL_17
0x6ced	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4443	normal.c	FUNCTION_45
0x6cf0	    0x890500000000	            mov dword [0x04006d36], eax 	      4443	normal.c	FUNCTION_45
0x6cf6	          0x8b4598	             mov eax, dword [rbp - 0x68]	      4444	normal.c	FUNCTION_45
0x6cf9	    0x890500000000	            mov dword [0x04006d3f], eax 	      4444	normal.c	FUNCTION_45
0x6cff	          0x8b458c	             mov eax, dword [rbp - 0x74]	      4446	normal.c	FUNCTION_45
0x6d02	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4447	normal.c	FUNCTION_45
0x6d06	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4447	normal.c	FUNCTION_45
0x6d0f	            0x7405	                            je 0x4006d56	      4447	normal.c	FUNCTION_45
0x6d11	      0xe800000000	                          call 0x4006d56	      4447	normal.c	FUNCTION_45
0x6d16	        0x488b5df8	                mov rbx, qword [rbp - 8]	      4447	normal.c	FUNCTION_45
0x6d1a	              0xc9	                                   leave	      4447	normal.c	FUNCTION_45
0x6d1b	              0xc3	                                     ret	      4447	normal.c	FUNCTION_45
nv_dot	CALL,3:ELSE,0:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	33
0xe9d1	              0x55	                                push rbp	      8516	normal.c	FUNCTION_109
0xe9d2	          0x4889e5	                            mov rbp, rsp	      8516	normal.c	FUNCTION_109
0xe9d5	        0x4883ec10	                           sub rsp, 0x10	      8516	normal.c	FUNCTION_109
0xe9d9	        0x48897df8	                mov qword [rbp - 8], rdi	      8516	normal.c	FUNCTION_109
0xe9dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      8517	normal.c	FUNCTION_109	IF_1	CALL_1
0xe9e1	          0x488b00	                    mov rax, qword [rax]	      8517	normal.c	FUNCTION_109	IF_1	CALL_1
0xe9e4	          0x4889c7	                            mov rdi, rax	      8517	normal.c	FUNCTION_109	IF_1	CALL_1
0xe9e7	      0xe88c6fffff	                  call sym.checkclearopq	      8517	normal.c	FUNCTION_109	IF_1	CALL_1
0xe9ec	            0x85c0	                           test eax, eax	      8517	normal.c	FUNCTION_109	IF_1	CALL_1
0xe9ee	            0x7545	                           jne 0x400ea75	      8517	normal.c	FUNCTION_109	IF_1	CALL_1
0xe9f0	    0x8b0500000000	            mov eax, dword [0x0400ea36] 	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xe9f6	            0x85c0	                           test eax, eax	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xe9f8	            0x7411	                            je 0x400ea4b	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xe9fa	    0x8b0500000000	            mov eax, dword [0x0400ea40] 	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xea00	            0x85c0	                           test eax, eax	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xea02	            0x7507	                           jne 0x400ea4b	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xea04	      0xba01000000	                              mov edx, 1	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xea09	            0xeb05	                           jmp 0x400ea50	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xea0b	      0xba00000000	                              mov edx, 0	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xea10	        0x488b45f8	                mov rax, qword [rbp - 8]	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xea14	        0x488b4028	            mov rax, qword [rax + 0x28] 	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xea18	            0x89d6	                            mov esi, edx	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xea1a	          0x4889c7	                            mov rdi, rax	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xea1d	      0xe800000000	                          call 0x400ea62	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xea22	            0x85c0	                           test eax, eax	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xea24	            0x750f	                           jne 0x400ea75	      8524	normal.c	FUNCTION_109	IF_1	IF_2	CALL_2
0xea26	        0x488b45f8	                mov rax, qword [rbp - 8]	      8525	normal.c	FUNCTION_109	IF_1	CALL_3
0xea2a	          0x488b00	                    mov rax, qword [rax]	      8525	normal.c	FUNCTION_109	IF_1	CALL_3
0xea2d	          0x4889c7	                            mov rdi, rax	      8525	normal.c	FUNCTION_109	IF_1	CALL_3
0xea30	      0xe8b36fffff	                    call sym.clearopbeep	      8525	normal.c	FUNCTION_109	IF_1	CALL_3
0xea35	              0x90	                                     nop	      8527	normal.c	FUNCTION_109
0xea36	              0xc9	                                   leave	      8527	normal.c	FUNCTION_109
0xea37	              0xc3	                                     ret	      8527	normal.c	FUNCTION_109
nv_nbcmd	CALL,1:ELSE,0:DO,0:FOR,0:functions,0:IF,0:WHILE,0:SWITCH,0	11
0x106a7	              0x55	                                push rbp	      9559	normal.c	FUNCTION_137
0x106a8	          0x4889e5	                            mov rbp, rsp	      9559	normal.c	FUNCTION_137
0x106ab	        0x4883ec10	                           sub rsp, 0x10	      9559	normal.c	FUNCTION_137
0x106af	        0x48897df8	                mov qword [rbp - 8], rdi	      9559	normal.c	FUNCTION_137
0x106b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      9560	normal.c	FUNCTION_137	CALL_1
0x106b7	          0x8b4010	            mov eax, dword [rax + 0x10] 	      9560	normal.c	FUNCTION_137	CALL_1
0x106ba	            0x89c7	                            mov edi, eax	      9560	normal.c	FUNCTION_137	CALL_1
0x106bc	      0xe800000000	                          call 0x4010701	      9560	normal.c	FUNCTION_137	CALL_1
0x106c1	              0x90	                                     nop	      9561	normal.c	FUNCTION_137
0x106c2	              0xc9	                                   leave	      9561	normal.c	FUNCTION_137
0x106c3	              0xc3	                                     ret	      9561	normal.c	FUNCTION_137
nv_Undo	CALL,3:ELSE,1:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	32
0xea77	              0x55	                                push rbp	      8547	normal.c	FUNCTION_111
0xea78	          0x4889e5	                            mov rbp, rsp	      8547	normal.c	FUNCTION_111
0xea7b	        0x4883ec10	                           sub rsp, 0x10	      8547	normal.c	FUNCTION_111
0xea7f	        0x48897df8	                mov qword [rbp - 8], rdi	      8547	normal.c	FUNCTION_111
0xea83	        0x488b45f8	                mov rax, qword [rbp - 8]	      8549	normal.c	FUNCTION_111	IF_1
0xea87	          0x488b00	                    mov rax, qword [rax]	      8549	normal.c	FUNCTION_111	IF_1
0xea8a	            0x8b00	                    mov eax, dword [rax]	      8549	normal.c	FUNCTION_111	IF_1
0xea8c	          0x83f80b	                            cmp eax, 0xb	      8549	normal.c	FUNCTION_111	IF_1
0xea8f	            0x740a	                            je 0x400eadb	      8549	normal.c	FUNCTION_111	IF_1
0xea91	    0x8b0500000000	            mov eax, dword [0x0400ead7] 	      8549	normal.c	FUNCTION_111	IF_1
0xea97	            0x85c0	                           test eax, eax	      8549	normal.c	FUNCTION_111	IF_1
0xea99	            0x7424	                            je 0x400eaff	      8549	normal.c	FUNCTION_111	IF_1
0xea9b	        0x488b45f8	                mov rax, qword [rbp - 8]	      8552	normal.c	FUNCTION_111	IF_1
0xea9f	    0xc7400c670000	            mov dword [rax + 0xc], 0x67 	      8552	normal.c	FUNCTION_111	IF_1
0xeaa6	        0x488b45f8	                mov rax, qword [rbp - 8]	      8553	normal.c	FUNCTION_111	IF_1
0xeaaa	    0xc74010550000	           mov dword [rax + 0x10], 0x55 	      8553	normal.c	FUNCTION_111	IF_1
0xeab1	        0x488b45f8	                mov rax, qword [rbp - 8]	      8554	normal.c	FUNCTION_111	IF_1	CALL_1
0xeab5	          0x4889c7	                            mov rdi, rax	      8554	normal.c	FUNCTION_111	IF_1	CALL_1
0xeab8	      0xe876000000	                    call sym.nv_operator	      8554	normal.c	FUNCTION_111	IF_1	CALL_1
0xeabd	            0xeb26	                           jmp 0x400eb25	      8561	normal.c	FUNCTION_111
0xeabf	        0x488b45f8	                mov rax, qword [rbp - 8]	      8556	normal.c	FUNCTION_111	ELSE_1	IF_2	CALL_2
0xeac3	          0x488b00	                    mov rax, qword [rax]	      8556	normal.c	FUNCTION_111	ELSE_1	IF_2	CALL_2
0xeac6	          0x4889c7	                            mov rdi, rax	      8556	normal.c	FUNCTION_111	ELSE_1	IF_2	CALL_2
0xeac9	      0xe8aa6effff	                  call sym.checkclearopq	      8556	normal.c	FUNCTION_111	ELSE_1	IF_2	CALL_2
0xeace	            0x85c0	                           test eax, eax	      8556	normal.c	FUNCTION_111	ELSE_1	IF_2	CALL_2
0xead0	            0x7513	                           jne 0x400eb25	      8556	normal.c	FUNCTION_111	ELSE_1	IF_2	CALL_2
0xead2	      0xe800000000	                          call 0x400eb17	      8558	normal.c	FUNCTION_111	ELSE_1	IF_2	CALL_3
0xead7	    0x488b05000000	            mov rax, qword [0x0400eb1e] 	      8559	normal.c	FUNCTION_111	ELSE_1	IF_2
0xeade	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8559	normal.c	FUNCTION_111	ELSE_1	IF_2
0xeae5	              0x90	                                     nop	      8561	normal.c	FUNCTION_111
0xeae6	              0xc9	                                   leave	      8561	normal.c	FUNCTION_111
0xeae7	              0xc3	                                     ret	      8561	normal.c	FUNCTION_111
nv_exmode	CALL,3:ELSE,1:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	21
0x87f6	              0x55	                                push rbp	      5354	normal.c	FUNCTION_57
0x87f7	          0x4889e5	                            mov rbp, rsp	      5354	normal.c	FUNCTION_57
0x87fa	        0x4883ec10	                           sub rsp, 0x10	      5354	normal.c	FUNCTION_57
0x87fe	        0x48897df8	                mov qword [rbp - 8], rdi	      5354	normal.c	FUNCTION_57
0x8802	    0x8b0500000000	            mov eax, dword [0x04008848] 	      5358	normal.c	FUNCTION_57	IF_1
0x8808	            0x85c0	                           test eax, eax	      5358	normal.c	FUNCTION_57	IF_1
0x880a	            0x740c	                            je 0x4008858	      5358	normal.c	FUNCTION_57	IF_1
0x880c	      0xbf00010000	                          mov edi, 0x100	      5359	normal.c	FUNCTION_57	CALL_1
0x8811	      0xe800000000	                          call 0x4008856	      5359	normal.c	FUNCTION_57	CALL_1
0x8816	            0xeb1d	                           jmp 0x4008875	      5362	normal.c	FUNCTION_57
0x8818	        0x488b45f8	                mov rax, qword [rbp - 8]	      5360	normal.c	FUNCTION_57	ELSE_1	IF_2	CALL_2
0x881c	          0x488b00	                    mov rax, qword [rax]	      5360	normal.c	FUNCTION_57	ELSE_1	IF_2	CALL_2
0x881f	          0x4889c7	                            mov rdi, rax	      5360	normal.c	FUNCTION_57	ELSE_1	IF_2	CALL_2
0x8822	      0xe821d1ffff	                   call sym.checkclearop	      5360	normal.c	FUNCTION_57	ELSE_1	IF_2	CALL_2
0x8827	            0x85c0	                           test eax, eax	      5360	normal.c	FUNCTION_57	ELSE_1	IF_2	CALL_2
0x8829	            0x750a	                           jne 0x4008875	      5360	normal.c	FUNCTION_57	ELSE_1	IF_2	CALL_2
0x882b	      0xbf00000000	                              mov edi, 0	      5361	normal.c	FUNCTION_57	ELSE_1	IF_2
0x8830	      0xe800000000	                          call 0x4008875	      5361	normal.c	FUNCTION_57	ELSE_1	IF_2
0x8835	              0x90	                                     nop	      5362	normal.c	FUNCTION_57
0x8836	              0xc9	                                   leave	      5362	normal.c	FUNCTION_57
0x8837	              0xc3	                                     ret	      5362	normal.c	FUNCTION_57
checkclearop	CALL,1:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	16
0x5948	              0x55	                                push rbp	      3655	normal.c	FUNCTION_22
0x5949	          0x4889e5	                            mov rbp, rsp	      3655	normal.c	FUNCTION_22
0x594c	        0x4883ec10	                           sub rsp, 0x10	      3655	normal.c	FUNCTION_22
0x5950	        0x48897df8	                mov qword [rbp - 8], rdi	      3655	normal.c	FUNCTION_22
0x5954	        0x488b45f8	                mov rax, qword [rbp - 8]	      3656	normal.c	FUNCTION_22	IF_1
0x5958	            0x8b00	                    mov eax, dword [rax]	      3656	normal.c	FUNCTION_22	IF_1
0x595a	            0x85c0	                           test eax, eax	      3656	normal.c	FUNCTION_22	IF_1
0x595c	            0x7507	                           jne 0x40059a5	      3656	normal.c	FUNCTION_22	IF_1
0x595e	      0xb800000000	                              mov eax, 0	      3657	normal.c	FUNCTION_22	IF_1
0x5963	            0xeb11	                           jmp 0x40059b6	      3657	normal.c	FUNCTION_22	IF_1
0x5965	        0x488b45f8	                mov rax, qword [rbp - 8]	      3658	normal.c	FUNCTION_22	CALL_1
0x5969	          0x4889c7	                            mov rdi, rax	      3658	normal.c	FUNCTION_22	CALL_1
0x596c	      0xe877000000	                    call sym.clearopbeep	      3658	normal.c	FUNCTION_22	CALL_1
0x5971	      0xb801000000	                              mov eax, 1	      3659	normal.c	FUNCTION_22
0x5976	              0xc9	                                   leave	      3660	normal.c	FUNCTION_22
0x5977	              0xc3	                                     ret	      3660	normal.c	FUNCTION_22
nv_page	CALL,4:ELSE,2:DO,0:FOR,0:functions,0:IF,3:WHILE,0:SWITCH,0	39
0x661e	              0x55	                                push rbp	      4206	normal.c	FUNCTION_42
0x661f	          0x4889e5	                            mov rbp, rsp	      4206	normal.c	FUNCTION_42
0x6622	        0x4883ec10	                           sub rsp, 0x10	      4206	normal.c	FUNCTION_42
0x6626	        0x48897df8	                mov qword [rbp - 8], rdi	      4206	normal.c	FUNCTION_42
0x662a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4207	normal.c	FUNCTION_42	IF_1	CALL_1
0x662e	          0x488b00	                    mov rax, qword [rax]	      4207	normal.c	FUNCTION_42	IF_1	CALL_1
0x6631	          0x4889c7	                            mov rdi, rax	      4207	normal.c	FUNCTION_42	IF_1	CALL_1
0x6634	      0xe80ff3ffff	                   call sym.checkclearop	      4207	normal.c	FUNCTION_42	IF_1	CALL_1
0x6639	            0x85c0	                           test eax, eax	      4207	normal.c	FUNCTION_42	IF_1	CALL_1
0x663b	            0x7556	                           jne 0x40066d3	      4207	normal.c	FUNCTION_42	IF_1	CALL_1
0x663d	    0x8b0500000000	            mov eax, dword [0x04006683] 	      4209	normal.c	FUNCTION_42	IF_1	IF_2
0x6643	          0x83e004	                              and eax, 4	      4209	normal.c	FUNCTION_42	IF_1	IF_2
0x6646	            0x85c0	                           test eax, eax	      4209	normal.c	FUNCTION_42	IF_1	IF_2
0x6648	            0x7430	                            je 0x40066ba	      4209	normal.c	FUNCTION_42	IF_1	IF_2
0x664a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4212	normal.c	FUNCTION_42	IF_1	IF_2	IF_3
0x664e	          0x8b4038	            mov eax, dword [rax + 0x38] 	      4212	normal.c	FUNCTION_42	IF_1	IF_2	IF_3
0x6651	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4212	normal.c	FUNCTION_42	IF_1	IF_2	IF_3
0x6654	            0x7513	                           jne 0x40066a9	      4212	normal.c	FUNCTION_42	IF_1	IF_2	IF_3
0x6656	        0x488b45f8	                mov rax, qword [rbp - 8]	      4213	normal.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x665a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4213	normal.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x665e	            0xf7d8	                                 neg eax	      4213	normal.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x6660	            0x89c7	                            mov edi, eax	      4213	normal.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x6662	      0xe800000000	                          call 0x40066a7	      4213	normal.c	FUNCTION_42	IF_1	IF_2	CALL_2
0x6667	            0xeb2a	                           jmp 0x40066d3	      4220	normal.c	FUNCTION_42
0x6669	        0x488b45f8	                mov rax, qword [rbp - 8]	      4215	normal.c	FUNCTION_42	IF_1	IF_2	CALL_3
0x666d	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4215	normal.c	FUNCTION_42	IF_1	IF_2	CALL_3
0x6671	            0x89c7	                            mov edi, eax	      4215	normal.c	FUNCTION_42	IF_1	IF_2	CALL_3
0x6673	      0xe800000000	                          call 0x40066b8	      4215	normal.c	FUNCTION_42	IF_1	IF_2	CALL_3
0x6678	            0xeb19	                           jmp 0x40066d3	      4220	normal.c	FUNCTION_42
0x667a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4218	normal.c	FUNCTION_42	IF_1	CALL_4
0x667e	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4218	normal.c	FUNCTION_42	IF_1	CALL_4
0x6682	        0x488b45f8	                mov rax, qword [rbp - 8]	      4218	normal.c	FUNCTION_42	IF_1	CALL_4
0x6686	          0x8b4038	            mov eax, dword [rax + 0x38] 	      4218	normal.c	FUNCTION_42	IF_1	CALL_4
0x6689	          0x4889d6	                            mov rsi, rdx	      4218	normal.c	FUNCTION_42	IF_1	CALL_4
0x668c	            0x89c7	                            mov edi, eax	      4218	normal.c	FUNCTION_42	IF_1	CALL_4
0x668e	      0xe800000000	                          call 0x40066d3	      4218	normal.c	FUNCTION_42	IF_1	CALL_4
0x6693	              0x90	                                     nop	      4220	normal.c	FUNCTION_42
0x6694	              0xc9	                                   leave	      4220	normal.c	FUNCTION_42
0x6695	              0xc3	                                     ret	      4220	normal.c	FUNCTION_42
set_vcount_ca	CALL,1:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	37
0x19eb	              0x55	                                push rbp	      1354	normal.c	FUNCTION_5
0x19ec	          0x4889e5	                            mov rbp, rsp	      1354	normal.c	FUNCTION_5
0x19ef	        0x4883ec20	                           sub rsp, 0x20	      1354	normal.c	FUNCTION_5
0x19f3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1354	normal.c	FUNCTION_5
0x19f7	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1354	normal.c	FUNCTION_5
0x19fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1355	normal.c	FUNCTION_5
0x19ff	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1355	normal.c	FUNCTION_5
0x1a03	        0x488945f8	                mov qword [rbp - 8], rax	      1355	normal.c	FUNCTION_5
0x1a07	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1358	normal.c	FUNCTION_5	IF_1
0x1a0b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1358	normal.c	FUNCTION_5	IF_1
0x1a0f	          0x4885c0	                           test rax, rax	      1358	normal.c	FUNCTION_5	IF_1
0x1a12	            0x7422	                            je 0x4001a76	      1358	normal.c	FUNCTION_5	IF_1
0x1a14	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1359	normal.c	FUNCTION_5	IF_1
0x1a18	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1359	normal.c	FUNCTION_5	IF_1
0x1a1c	      0x48837df800	                  cmp qword [rbp - 8], 0	      1359	normal.c	FUNCTION_5	IF_1
0x1a21	            0x7406	                            je 0x4001a69	      1359	normal.c	FUNCTION_5	IF_1
0x1a23	        0x488b45f8	                mov rax, qword [rbp - 8]	      1359	normal.c	FUNCTION_5	IF_1
0x1a27	            0xeb05	                           jmp 0x4001a6e	      1359	normal.c	FUNCTION_5	IF_1
0x1a29	      0xb801000000	                              mov eax, 1	      1359	normal.c	FUNCTION_5	IF_1
0x1a2e	        0x480fafc2	                           imul rax, rdx	      1359	normal.c	FUNCTION_5	IF_1
0x1a32	        0x488945f8	                mov qword [rbp - 8], rax	      1359	normal.c	FUNCTION_5	IF_1
0x1a36	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1360	normal.c	FUNCTION_5	CALL_1
0x1a3a	            0x8b10	                    mov edx, dword [rax]	      1360	normal.c	FUNCTION_5	CALL_1
0x1a3c	      0x48837df800	                  cmp qword [rbp - 8], 0	      1360	normal.c	FUNCTION_5	CALL_1
0x1a41	            0x7406	                            je 0x4001a89	      1360	normal.c	FUNCTION_5	CALL_1
0x1a43	        0x488b45f8	                mov rax, qword [rbp - 8]	      1360	normal.c	FUNCTION_5	CALL_1
0x1a47	            0xeb05	                           jmp 0x4001a8e	      1360	normal.c	FUNCTION_5	CALL_1
0x1a49	      0xb801000000	                              mov eax, 1	      1360	normal.c	FUNCTION_5	CALL_1
0x1a4e	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1360	normal.c	FUNCTION_5	CALL_1
0x1a52	          0x4889c6	                            mov rsi, rax	      1360	normal.c	FUNCTION_5	CALL_1
0x1a55	          0x4889cf	                            mov rdi, rcx	      1360	normal.c	FUNCTION_5	CALL_1
0x1a58	      0xe800000000	                          call 0x4001a9d	      1360	normal.c	FUNCTION_5	CALL_1
0x1a5d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1361	normal.c	FUNCTION_5
0x1a61	    0xc70000000000	                      mov dword [rax], 0	      1361	normal.c	FUNCTION_5
0x1a67	              0x90	                                     nop	      1362	normal.c	FUNCTION_5
0x1a68	              0xc9	                                   leave	      1362	normal.c	FUNCTION_5
0x1a69	              0xc3	                                     ret	      1362	normal.c	FUNCTION_5
prep_redo	CALL,9:ELSE,0:DO,0:FOR,0:functions,0:IF,7:WHILE,0:SWITCH,0	49
0x58a8	              0x55	                                push rbp	      3626	normal.c	FUNCTION_21
0x58a9	          0x4889e5	                            mov rbp, rsp	      3626	normal.c	FUNCTION_21
0x58ac	        0x4883ec20	                           sub rsp, 0x20	      3626	normal.c	FUNCTION_21
0x58b0	          0x897dfc	                mov dword [rbp - 4], edi	      3626	normal.c	FUNCTION_21
0x58b3	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3626	normal.c	FUNCTION_21
0x58b7	          0x8955f8	                mov dword [rbp - 8], edx	      3626	normal.c	FUNCTION_21
0x58ba	          0x894dec	             mov dword [rbp - 0x14], ecx	      3626	normal.c	FUNCTION_21
0x58bd	        0x448945e8	             mov dword [rbp - 0x18], r8d	      3626	normal.c	FUNCTION_21
0x58c1	        0x44894de4	             mov dword [rbp - 0x1c], r9d	      3626	normal.c	FUNCTION_21
0x58c5	      0xe800000000	                          call 0x400590a	      3627	normal.c	FUNCTION_21	CALL_1
0x58ca	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3628	normal.c	FUNCTION_21	IF_1
0x58ce	            0x7414	                            je 0x4005924	      3628	normal.c	FUNCTION_21	IF_1
0x58d0	      0xbf22000000	                           mov edi, 0x22	      3630	normal.c	FUNCTION_21	IF_1	CALL_2
0x58d5	      0xe800000000	                          call 0x400591a	      3630	normal.c	FUNCTION_21	IF_1	CALL_2
0x58da	          0x8b45fc	                mov eax, dword [rbp - 4]	      3631	normal.c	FUNCTION_21	IF_1	CALL_3
0x58dd	            0x89c7	                            mov edi, eax	      3631	normal.c	FUNCTION_21	IF_1	CALL_3
0x58df	      0xe800000000	                          call 0x4005924	      3631	normal.c	FUNCTION_21	IF_1	CALL_3
0x58e4	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3633	normal.c	FUNCTION_21	IF_2
0x58e9	            0x740c	                            je 0x4005937	      3633	normal.c	FUNCTION_21	IF_2
0x58eb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3634	normal.c	FUNCTION_21	CALL_4
0x58ef	          0x4889c7	                            mov rdi, rax	      3634	normal.c	FUNCTION_21	CALL_4
0x58f2	      0xe800000000	                          call 0x4005937	      3634	normal.c	FUNCTION_21	CALL_4
0x58f7	        0x837df800	                  cmp dword [rbp - 8], 0	      3636	normal.c	FUNCTION_21	IF_3
0x58fb	            0x740a	                            je 0x4005947	      3636	normal.c	FUNCTION_21	IF_3
0x58fd	          0x8b45f8	                mov eax, dword [rbp - 8]	      3637	normal.c	FUNCTION_21	CALL_5
0x5900	            0x89c7	                            mov edi, eax	      3637	normal.c	FUNCTION_21	CALL_5
0x5902	      0xe800000000	                          call 0x4005947	      3637	normal.c	FUNCTION_21	CALL_5
0x5907	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3638	normal.c	FUNCTION_21	IF_4
0x590b	            0x740a	                            je 0x4005957	      3638	normal.c	FUNCTION_21	IF_4
0x590d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3639	normal.c	FUNCTION_21	CALL_6
0x5910	            0x89c7	                            mov edi, eax	      3639	normal.c	FUNCTION_21	CALL_6
0x5912	      0xe800000000	                          call 0x4005957	      3639	normal.c	FUNCTION_21	CALL_6
0x5917	        0x837de800	               cmp dword [rbp - 0x18], 0	      3640	normal.c	FUNCTION_21	IF_5
0x591b	            0x740a	                            je 0x4005967	      3640	normal.c	FUNCTION_21	IF_5
0x591d	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3641	normal.c	FUNCTION_21	CALL_7
0x5920	            0x89c7	                            mov edi, eax	      3641	normal.c	FUNCTION_21	CALL_7
0x5922	      0xe800000000	                          call 0x4005967	      3641	normal.c	FUNCTION_21	CALL_7
0x5927	        0x837de400	               cmp dword [rbp - 0x1c], 0	      3642	normal.c	FUNCTION_21	IF_6
0x592b	            0x740a	                            je 0x4005977	      3642	normal.c	FUNCTION_21	IF_6
0x592d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3643	normal.c	FUNCTION_21	CALL_8
0x5930	            0x89c7	                            mov edi, eax	      3643	normal.c	FUNCTION_21	CALL_8
0x5932	      0xe800000000	                          call 0x4005977	      3643	normal.c	FUNCTION_21	CALL_8
0x5937	        0x837d1000	               cmp dword [rbp + 0x10], 0	      3644	normal.c	FUNCTION_21	IF_7
0x593b	            0x7408	                            je 0x4005985	      3644	normal.c	FUNCTION_21	IF_7
0x593d	          0x8b7d10	            mov edi, dword [rbp + 0x10] 	      3645	normal.c	FUNCTION_21	CALL_9
0x5940	      0xe800000000	                          call 0x4005985	      3645	normal.c	FUNCTION_21	CALL_9
0x5945	              0x90	                                     nop	      3646	normal.c	FUNCTION_21
0x5946	              0xc9	                                   leave	      3646	normal.c	FUNCTION_21
0x5947	              0xc3	                                     ret	      3646	normal.c	FUNCTION_21
nv_record	CALL,6:ELSE,2:DO,0:FOR,0:functions,0:IF,4:WHILE,0:SWITCH,0	58
0xff1d	              0x55	                                push rbp	      9305	normal.c	FUNCTION_131
0xff1e	          0x4889e5	                            mov rbp, rsp	      9305	normal.c	FUNCTION_131
0xff21	        0x4883ec10	                           sub rsp, 0x10	      9305	normal.c	FUNCTION_131
0xff25	        0x48897df8	                mov qword [rbp - 8], rdi	      9305	normal.c	FUNCTION_131
0xff29	        0x488b45f8	                mov rax, qword [rbp - 8]	      9306	normal.c	FUNCTION_131	IF_1
0xff2d	          0x488b00	                    mov rax, qword [rax]	      9306	normal.c	FUNCTION_131	IF_1
0xff30	            0x8b00	                    mov eax, dword [rax]	      9306	normal.c	FUNCTION_131	IF_1
0xff32	          0x83f809	                              cmp eax, 9	      9306	normal.c	FUNCTION_131	IF_1
0xff35	            0x7524	                           jne 0x400ff9b	      9306	normal.c	FUNCTION_131	IF_1
0xff37	        0x488b45f8	                mov rax, qword [rbp - 8]	      9309	normal.c	FUNCTION_131	IF_1
0xff3b	    0xc7400c670000	            mov dword [rax + 0xc], 0x67 	      9309	normal.c	FUNCTION_131	IF_1
0xff42	        0x488b45f8	                mov rax, qword [rbp - 8]	      9310	normal.c	FUNCTION_131	IF_1
0xff46	    0xc74010710000	           mov dword [rax + 0x10], 0x71 	      9310	normal.c	FUNCTION_131	IF_1
0xff4d	        0x488b45f8	                mov rax, qword [rbp - 8]	      9311	normal.c	FUNCTION_131	IF_1	CALL_1
0xff51	          0x4889c7	                            mov rdi, rax	      9311	normal.c	FUNCTION_131	IF_1	CALL_1
0xff54	      0xe8daebffff	                    call sym.nv_operator	      9311	normal.c	FUNCTION_131	IF_1	CALL_1
0xff59	            0xeb7c	                           jmp 0x4010017	      9328	normal.c	FUNCTION_131
0xff5b	        0x488b45f8	                mov rax, qword [rbp - 8]	      9313	normal.c	FUNCTION_131	ELSE_1	IF_2	CALL_2
0xff5f	          0x488b00	                    mov rax, qword [rax]	      9313	normal.c	FUNCTION_131	ELSE_1	IF_2	CALL_2
0xff62	          0x4889c7	                            mov rdi, rax	      9313	normal.c	FUNCTION_131	ELSE_1	IF_2	CALL_2
0xff65	      0xe8de59ffff	                   call sym.checkclearop	      9313	normal.c	FUNCTION_131	ELSE_1	IF_2	CALL_2
0xff6a	            0x85c0	                           test eax, eax	      9313	normal.c	FUNCTION_131	ELSE_1	IF_2	CALL_2
0xff6c	            0x7569	                           jne 0x4010017	      9313	normal.c	FUNCTION_131	ELSE_1	IF_2	CALL_2
0xff6e	        0x488b45f8	                mov rax, qword [rbp - 8]	      9316	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0xff72	          0x8b4010	            mov eax, dword [rax + 0x10] 	      9316	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0xff75	          0x83f83a	                           cmp eax, 0x3a	      9316	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0xff78	            0x7418	                            je 0x400ffd2	      9316	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0xff7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      9316	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0xff7e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      9316	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0xff81	          0x83f82f	                           cmp eax, 0x2f	      9316	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0xff84	            0x740c	                            je 0x400ffd2	      9316	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0xff86	        0x488b45f8	                mov rax, qword [rbp - 8]	      9316	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0xff8a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      9316	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0xff8d	          0x83f83f	                           cmp eax, 0x3f	      9316	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0xff90	            0x751a	                           jne 0x400ffec	      9316	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3
0xff92	        0x488b45f8	                mov rax, qword [rbp - 8]	      9318	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3	CALL_3
0xff96	          0x8b4010	            mov eax, dword [rax + 0x10] 	      9318	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3	CALL_3
0xff99	            0x89c7	                            mov edi, eax	      9318	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3	CALL_3
0xff9b	      0xe800000000	                          call 0x400ffe0	      9318	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3	CALL_3
0xffa0	      0xbf03abffff	                     mov edi, 0xffffab03	      9319	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3	CALL_4
0xffa5	      0xe800000000	                          call 0x400ffea	      9319	normal.c	FUNCTION_131	ELSE_1	IF_2	IF_3	CALL_4
0xffaa	            0xeb2b	                           jmp 0x4010017	      9328	normal.c	FUNCTION_131
0xffac	    0x8b0500000000	            mov eax, dword [0x0400fff2] 	      9325	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0xffb2	            0x85c0	                           test eax, eax	      9325	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0xffb4	            0x7521	                           jne 0x4010017	      9325	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0xffb6	        0x488b45f8	                mov rax, qword [rbp - 8]	      9325	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0xffba	          0x8b4010	            mov eax, dword [rax + 0x10] 	      9325	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0xffbd	            0x89c7	                            mov edi, eax	      9325	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0xffbf	      0xe800000000	                          call 0x4010004	      9325	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0xffc4	            0x85c0	                           test eax, eax	      9325	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0xffc6	            0x750f	                           jne 0x4010017	      9325	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0xffc8	        0x488b45f8	                mov rax, qword [rbp - 8]	      9326	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4
0xffcc	          0x488b00	                    mov rax, qword [rax]	      9326	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4
0xffcf	          0x4889c7	                            mov rdi, rax	      9326	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4
0xffd2	      0xe8115affff	                    call sym.clearopbeep	      9326	normal.c	FUNCTION_131	ELSE_1	IF_2	ELSE_2	IF_4
0xffd7	              0x90	                                     nop	      9328	normal.c	FUNCTION_131
0xffd8	              0xc9	                                   leave	      9328	normal.c	FUNCTION_131
0xffd9	              0xc3	                                     ret	      9328	normal.c	FUNCTION_131
nv_colon	CALL,10:ELSE,4:DO,0:FOR,0:functions,0:IF,9:WHILE,0:SWITCH,0	113
0x8838	              0x55	                                push rbp	      5369	normal.c	FUNCTION_58
0x8839	          0x4889e5	                            mov rbp, rsp	      5369	normal.c	FUNCTION_58
0x883c	              0x53	                                push rbx	      5369	normal.c	FUNCTION_58
0x883d	        0x4883ec28	                           sub rsp, 0x28	      5369	normal.c	FUNCTION_58
0x8841	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5369	normal.c	FUNCTION_58
0x8845	    0x8b0500000000	            mov eax, dword [0x0400888b] 	      5373	normal.c	FUNCTION_58	IF_1
0x884b	            0x85c0	                           test eax, eax	      5373	normal.c	FUNCTION_58	IF_1
0x884d	            0x7411	                            je 0x40088a0	      5373	normal.c	FUNCTION_58	IF_1
0x884f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5374	normal.c	FUNCTION_58	CALL_1
0x8853	          0x4889c7	                            mov rdi, rax	      5374	normal.c	FUNCTION_58	CALL_1
0x8856	      0xe8d8620000	                    call sym.nv_operator	      5374	normal.c	FUNCTION_58	CALL_1
0x885b	      0xe963010000	                           jmp 0x4008a03	      5426	normal.c	FUNCTION_58
0x8860	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5377	normal.c	FUNCTION_58	ELSE_1	IF_2
0x8864	          0x488b00	                    mov rax, qword [rax]	      5377	normal.c	FUNCTION_58	ELSE_1	IF_2
0x8867	            0x8b00	                    mov eax, dword [rax]	      5377	normal.c	FUNCTION_58	ELSE_1	IF_2
0x8869	            0x85c0	                           test eax, eax	      5377	normal.c	FUNCTION_58	ELSE_1	IF_2
0x886b	            0x741e	                            je 0x40088cb	      5377	normal.c	FUNCTION_58	ELSE_1	IF_2
0x886d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5380	normal.c	FUNCTION_58	ELSE_1	IF_2
0x8871	          0x488b00	                    mov rax, qword [rax]	      5380	normal.c	FUNCTION_58	ELSE_1	IF_2
0x8874	    0xc74008000000	                  mov dword [rax + 8], 0	      5380	normal.c	FUNCTION_58	ELSE_1	IF_2
0x887b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5381	normal.c	FUNCTION_58	ELSE_1	IF_2
0x887f	          0x488b00	                    mov rax, qword [rax]	      5381	normal.c	FUNCTION_58	ELSE_1	IF_2
0x8882	    0xc74014000000	               mov dword [rax + 0x14], 0	      5381	normal.c	FUNCTION_58	ELSE_1	IF_2
0x8889	            0xeb43	                           jmp 0x400890e	      5381	normal.c	FUNCTION_58	ELSE_1	IF_2
0x888b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5383	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3
0x888f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5383	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3
0x8893	          0x4885c0	                           test rax, rax	      5383	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3
0x8896	            0x7436	                            je 0x400890e	      5383	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3
0x8898	      0xbf2e000000	                           mov edi, 0x2e	      5386	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	CALL_2
0x889d	      0xe800000000	                          call 0x40088e2	      5386	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	CALL_2
0x88a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5387	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4
0x88a6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5387	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4
0x88aa	        0x4883f801	                              cmp rax, 1	      5387	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4
0x88ae	            0x7e1e	                           jle 0x400890e	      5387	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4
0x88b0	      0xbf00000000	                              mov edi, 0	      5389	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4	CALL_3
0x88b5	      0xe800000000	                          call 0x40088fa	      5389	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4	CALL_3
0x88ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5390	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4	CALL_4
0x88be	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5390	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4	CALL_4
0x88c2	        0x4883e801	                              sub rax, 1	      5390	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4	CALL_4
0x88c6	          0x4889c7	                            mov rdi, rax	      5390	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4	CALL_4
0x88c9	      0xe800000000	                          call 0x400890e	      5390	normal.c	FUNCTION_58	ELSE_1	ELSE_2	IF_3	IF_4	CALL_4
0x88ce	    0x8b0500000000	            mov eax, dword [0x04008914] 	      5395	normal.c	FUNCTION_58	ELSE_1	IF_5
0x88d4	            0x85c0	                           test eax, eax	      5395	normal.c	FUNCTION_58	ELSE_1	IF_5
0x88d6	            0x7405	                            je 0x400891d	      5395	normal.c	FUNCTION_58	ELSE_1	IF_5
0x88d8	      0xe800000000	                          call 0x400891d	      5396	normal.c	FUNCTION_58	ELSE_1	CALL_5
0x88dd	    0x8b0500000000	            mov eax, dword [0x04008923] 	      5398	normal.c	FUNCTION_58	ELSE_1
0x88e3	          0x8945e8	             mov dword [rbp - 0x18], eax	      5398	normal.c	FUNCTION_58	ELSE_1
0x88e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5402	normal.c	FUNCTION_58	ELSE_1
0x88ea	          0x488b00	                    mov rax, qword [rax]	      5402	normal.c	FUNCTION_58	ELSE_1
0x88ed	            0x8b00	                    mov eax, dword [rax]	      5402	normal.c	FUNCTION_58	ELSE_1
0x88ef	            0x85c0	                           test eax, eax	      5401	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x88f1	            0x7407	                            je 0x400893a	      5401	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x88f3	      0xb820000000	                           mov eax, 0x20	      5401	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x88f8	            0xeb05	                           jmp 0x400893f	      5401	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x88fa	      0xb800000000	                              mov eax, 0	      5401	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x88ff	            0x89c1	                            mov ecx, eax	      5401	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x8901	      0xba00000000	                              mov edx, 0	      5401	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x8906	      0xbe00000000	                              mov esi, 0	      5401	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x890b	      0xbf00000000	                              mov edi, 0	      5401	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x8910	      0xe800000000	                          call 0x4008955	      5401	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x8915	          0x8945ec	             mov dword [rbp - 0x14], eax	      5401	normal.c	FUNCTION_58	ELSE_1	CALL_6
0x8918	    0x8b0500000000	            mov eax, dword [0x0400895e] 	      5405	normal.c	FUNCTION_58	ELSE_1	IF_6
0x891e	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      5405	normal.c	FUNCTION_58	ELSE_1	IF_6
0x8921	            0x7420	                            je 0x4008983	      5405	normal.c	FUNCTION_58	ELSE_1	IF_6
0x8923	    0x8b0500000000	            mov eax, dword [0x04008969] 	      5407	normal.c	FUNCTION_58	ELSE_1	IF_6	IF_7
0x8929	            0x85c0	                           test eax, eax	      5407	normal.c	FUNCTION_58	ELSE_1	IF_6	IF_7
0x892b	            0x740c	                            je 0x4008979	      5407	normal.c	FUNCTION_58	ELSE_1	IF_6	IF_7
0x892d	    0xc70500000000	           mov dword [0x04008977], 0x69 	      5408	normal.c	FUNCTION_58	ELSE_1	IF_6	IF_7
0x8937	            0xeb0a	                           jmp 0x4008983	      5408	normal.c	FUNCTION_58	ELSE_1	IF_6	IF_7
0x8939	    0xc70500000000	               mov dword [0x04008983], 0	      5410	normal.c	FUNCTION_58	ELSE_1	IF_6	ELSE_3
0x8943	        0x837dec00	               cmp dword [rbp - 0x14], 0	      5413	normal.c	FUNCTION_58	ELSE_1	IF_8
0x8947	            0x7511	                           jne 0x400899a	      5413	normal.c	FUNCTION_58	ELSE_1	IF_8
0x8949	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5415	normal.c	FUNCTION_58	ELSE_1	CALL_7
0x894d	          0x488b00	                    mov rax, qword [rax]	      5415	normal.c	FUNCTION_58	ELSE_1	CALL_7
0x8950	          0x4889c7	                            mov rdi, rax	      5415	normal.c	FUNCTION_58	ELSE_1	CALL_7
0x8953	      0xe85ad0ffff	                        call sym.clearop	      5415	normal.c	FUNCTION_58	ELSE_1	CALL_7
0x8958	            0xeb69	                           jmp 0x4008a03	      5426	normal.c	FUNCTION_58
0x895a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5416	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x895e	          0x488b00	                    mov rax, qword [rax]	      5416	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x8961	            0x8b00	                    mov eax, dword [rax]	      5416	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x8963	            0x85c0	                           test eax, eax	      5416	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x8965	            0x745c	                            je 0x4008a03	      5416	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x8967	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5417	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x896b	          0x488b00	                    mov rax, qword [rax]	      5417	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x896e	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      5417	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x8972	    0x488b05000000	            mov rax, qword [0x040089b9] 	      5417	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x8979	          0x488b00	                    mov rax, qword [rax]	      5417	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x897c	          0x4839c2	                            cmp rdx, rax	      5417	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x897f	            0x7f33	                            jg 0x40089f4	      5417	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x8981	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5418	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x8985	          0x488b00	                    mov rax, qword [rax]	      5418	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x8988	          0x8b5828	            mov ebx, dword [rax + 0x28] 	      5418	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x898b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5419	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x898f	          0x488b00	                    mov rax, qword [rax]	      5419	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x8992	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5419	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x8996	          0x4889c7	                            mov rdi, rax	      5419	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x8999	      0xe800000000	                          call 0x40089de	      5419	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x899e	          0x4889c7	                            mov rdi, rax	      5419	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x89a1	      0xe800000000	                          call 0x40089e6	      5419	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9	CALL_9
0x89a6	            0x39c3	                            cmp ebx, eax	      5418	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x89a8	            0x7f0a	                            jg 0x40089f4	      5418	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x89aa	    0x8b0500000000	            mov eax, dword [0x040089f0] 	      5420	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x89b0	            0x85c0	                           test eax, eax	      5420	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x89b2	            0x740f	                            je 0x4008a03	      5420	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x89b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5424	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x89b8	          0x488b00	                    mov rax, qword [rax]	      5424	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x89bb	          0x4889c7	                            mov rdi, rax	      5424	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x89be	      0xe825d0ffff	                    call sym.clearopbeep	      5424	normal.c	FUNCTION_58	ELSE_1	ELSE_4	IF_9
0x89c3	              0x90	                                     nop	      5426	normal.c	FUNCTION_58
0x89c4	        0x4883c428	                           add rsp, 0x28	      5426	normal.c	FUNCTION_58
0x89c8	              0x5b	                                 pop rbx	      5426	normal.c	FUNCTION_58
0x89c9	              0x5d	                                 pop rbp	      5426	normal.c	FUNCTION_58
0x89ca	              0xc3	                                     ret	      5426	normal.c	FUNCTION_58
nv_next	CALL,3:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	60
0xa698	              0x55	                                push rbp	      6359	normal.c	FUNCTION_78
0xa699	          0x4889e5	                            mov rbp, rsp	      6359	normal.c	FUNCTION_78
0xa69c	        0x4883ec30	                           sub rsp, 0x30	      6359	normal.c	FUNCTION_78
0xa6a0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6359	normal.c	FUNCTION_78
0xa6a4	    0x488b05000000	            mov rax, qword [0x0400a6eb] 	      6360	normal.c	FUNCTION_78
0xa6ab	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      6360	normal.c	FUNCTION_78
0xa6af	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6360	normal.c	FUNCTION_78
0xa6b3	        0x488945f0	             mov qword [rbp - 0x10], rax	      6360	normal.c	FUNCTION_78
0xa6b7	        0x488955f8	                mov qword [rbp - 8], rdx	      6360	normal.c	FUNCTION_78
0xa6bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6361	normal.c	FUNCTION_78	CALL_1
0xa6bf	          0x8b4038	            mov eax, dword [rax + 0x38] 	      6361	normal.c	FUNCTION_78	CALL_1
0xa6c2	          0x80cc02	                                or ah, 2	      6361	normal.c	FUNCTION_78	CALL_1
0xa6c5	            0x89c2	                            mov edx, eax	      6361	normal.c	FUNCTION_78	CALL_1
0xa6c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6361	normal.c	FUNCTION_78	CALL_1
0xa6cb	            0x89d1	                            mov ecx, edx	      6361	normal.c	FUNCTION_78	CALL_1
0xa6cd	      0xba00000000	                              mov edx, 0	      6361	normal.c	FUNCTION_78	CALL_1
0xa6d2	      0xbe00000000	                              mov esi, 0	      6361	normal.c	FUNCTION_78	CALL_1
0xa6d7	          0x4889c7	                            mov rdi, rax	      6361	normal.c	FUNCTION_78	CALL_1
0xa6da	      0xe892000000	                  call sym.normal_search	      6361	normal.c	FUNCTION_78	CALL_1
0xa6df	          0x8945ec	             mov dword [rbp - 0x14], eax	      6361	normal.c	FUNCTION_78	CALL_1
0xa6e2	        0x837dec01	               cmp dword [rbp - 0x14], 1	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa6e6	     0xf8582000000	                           jne 0x400a7ae	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa6ec	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa6f0	    0x488b05000000	            mov rax, qword [0x0400a737] 	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa6f7	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa6fb	          0x4839c2	                            cmp rdx, rax	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa6fe	            0x756e	                           jne 0x400a7ae	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa700	          0x8b55f8	                mov edx, dword [rbp - 8]	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa703	    0x488b05000000	            mov rax, qword [0x0400a74a] 	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa70a	          0x8b4040	            mov eax, dword [rax + 0x40] 	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa70d	            0x39c2	                            cmp edx, eax	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa70f	            0x755d	                           jne 0x400a7ae	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa711	          0x8b55fc	                mov edx, dword [rbp - 4]	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa714	    0x488b05000000	            mov rax, qword [0x0400a75b] 	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa71b	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa71e	            0x39c2	                            cmp edx, eax	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa720	            0x754c	                           jne 0x400a7ae	      6363	normal.c	FUNCTION_78	IF_1	CALL_2
0xa722	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6368	normal.c	FUNCTION_78	IF_1
0xa726	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6368	normal.c	FUNCTION_78	IF_1
0xa72a	        0x488d5001	                      lea rdx, [rax + 1]	      6368	normal.c	FUNCTION_78	IF_1
0xa72e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6368	normal.c	FUNCTION_78	IF_1
0xa732	        0x48895030	             mov qword [rax + 0x30], rdx	      6368	normal.c	FUNCTION_78	IF_1
0xa736	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6369	normal.c	FUNCTION_78	IF_1	CALL_3
0xa73a	          0x8b4038	            mov eax, dword [rax + 0x38] 	      6369	normal.c	FUNCTION_78	IF_1	CALL_3
0xa73d	          0x80cc02	                                or ah, 2	      6369	normal.c	FUNCTION_78	IF_1	CALL_3
0xa740	            0x89c2	                            mov edx, eax	      6369	normal.c	FUNCTION_78	IF_1	CALL_3
0xa742	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6369	normal.c	FUNCTION_78	IF_1	CALL_3
0xa746	            0x89d1	                            mov ecx, edx	      6369	normal.c	FUNCTION_78	IF_1	CALL_3
0xa748	      0xba00000000	                              mov edx, 0	      6369	normal.c	FUNCTION_78	IF_1	CALL_3
0xa74d	      0xbe00000000	                              mov esi, 0	      6369	normal.c	FUNCTION_78	IF_1	CALL_3
0xa752	          0x4889c7	                            mov rdi, rax	      6369	normal.c	FUNCTION_78	IF_1	CALL_3
0xa755	      0xe817000000	                  call sym.normal_search	      6369	normal.c	FUNCTION_78	IF_1	CALL_3
0xa75a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6370	normal.c	FUNCTION_78	IF_1
0xa75e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6370	normal.c	FUNCTION_78	IF_1
0xa762	        0x488d50ff	                      lea rdx, [rax - 1]	      6370	normal.c	FUNCTION_78	IF_1
0xa766	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6370	normal.c	FUNCTION_78	IF_1
0xa76a	        0x48895030	             mov qword [rax + 0x30], rdx	      6370	normal.c	FUNCTION_78	IF_1
0xa76e	              0x90	                                     nop	      6372	normal.c	FUNCTION_78
0xa76f	              0xc9	                                   leave	      6372	normal.c	FUNCTION_78
0xa770	              0xc3	                                     ret	      6372	normal.c	FUNCTION_78
nv_subst	CALL,2:ELSE,1:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	26
0xcbe4	              0x55	                                push rbp	      7465	normal.c	FUNCTION_95
0xcbe5	          0x4889e5	                            mov rbp, rsp	      7465	normal.c	FUNCTION_95
0xcbe8	        0x4883ec10	                           sub rsp, 0x10	      7465	normal.c	FUNCTION_95
0xcbec	        0x48897df8	                mov qword [rbp - 8], rdi	      7465	normal.c	FUNCTION_95
0xcbf0	    0x8b0500000000	            mov eax, dword [0x0400cc36] 	      7466	normal.c	FUNCTION_95	IF_1
0xcbf6	            0x85c0	                           test eax, eax	      7466	normal.c	FUNCTION_95	IF_1
0xcbf8	            0x743b	                            je 0x400cc75	      7466	normal.c	FUNCTION_95	IF_1
0xcbfa	        0x488b45f8	                mov rax, qword [rbp - 8]	      7468	normal.c	FUNCTION_95	IF_1	IF_2
0xcbfe	          0x8b400c	              mov eax, dword [rax + 0xc]	      7468	normal.c	FUNCTION_95	IF_1	IF_2
0xcc01	          0x83f853	                           cmp eax, 0x53	      7468	normal.c	FUNCTION_95	IF_1	IF_2
0xcc04	            0x7516	                           jne 0x400cc5c	      7468	normal.c	FUNCTION_95	IF_1	IF_2
0xcc06	    0x8b0500000000	            mov eax, dword [0x0400cc4c] 	      7470	normal.c	FUNCTION_95	IF_1	IF_2
0xcc0c	    0x890500000000	            mov dword [0x0400cc52], eax 	      7470	normal.c	FUNCTION_95	IF_1	IF_2
0xcc12	    0xc70500000000	           mov dword [0x0400cc5c], 0x56 	      7471	normal.c	FUNCTION_95	IF_1	IF_2
0xcc1c	        0x488b45f8	                mov rax, qword [rbp - 8]	      7473	normal.c	FUNCTION_95	IF_1
0xcc20	    0xc7400c630000	            mov dword [rax + 0xc], 0x63 	      7473	normal.c	FUNCTION_95	IF_1
0xcc27	        0x488b45f8	                mov rax, qword [rbp - 8]	      7474	normal.c	FUNCTION_95	IF_1	CALL_1
0xcc2b	          0x4889c7	                            mov rdi, rax	      7474	normal.c	FUNCTION_95	IF_1	CALL_1
0xcc2e	      0xe8001f0000	                    call sym.nv_operator	      7474	normal.c	FUNCTION_95	IF_1	CALL_1
0xcc33	            0xeb0c	                           jmp 0x400cc81	      7478	normal.c	FUNCTION_95
0xcc35	        0x488b45f8	                mov rax, qword [rbp - 8]	      7477	normal.c	FUNCTION_95	CALL_2
0xcc39	          0x4889c7	                            mov rdi, rax	      7477	normal.c	FUNCTION_95	CALL_2
0xcc3c	      0xe85d000000	                     call sym.nv_optrans	      7477	normal.c	FUNCTION_95	CALL_2
0xcc41	              0x90	                                     nop	      7478	normal.c	FUNCTION_95
0xcc42	              0xc9	                                   leave	      7478	normal.c	FUNCTION_95
0xcc43	              0xc3	                                     ret	      7478	normal.c	FUNCTION_95
nv_brace	CALL,4:ELSE,1:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	51
0xbaa1	              0x55	                                push rbp	      6894	normal.c	FUNCTION_83
0xbaa2	          0x4889e5	                            mov rbp, rsp	      6894	normal.c	FUNCTION_83
0xbaa5	        0x4883ec10	                           sub rsp, 0x10	      6894	normal.c	FUNCTION_83
0xbaa9	        0x48897df8	                mov qword [rbp - 8], rdi	      6894	normal.c	FUNCTION_83
0xbaad	        0x488b45f8	                mov rax, qword [rbp - 8]	      6895	normal.c	FUNCTION_83
0xbab1	          0x488b00	                    mov rax, qword [rax]	      6895	normal.c	FUNCTION_83
0xbab4	    0xc74008000000	                  mov dword [rax + 8], 0	      6895	normal.c	FUNCTION_83
0xbabb	        0x488b45f8	                mov rax, qword [rbp - 8]	      6896	normal.c	FUNCTION_83
0xbabf	          0x488b00	                    mov rax, qword [rax]	      6896	normal.c	FUNCTION_83
0xbac2	    0xc74010010000	               mov dword [rax + 0x10], 1	      6896	normal.c	FUNCTION_83
0xbac9	        0x488b45f8	                mov rax, qword [rbp - 8]	      6898	normal.c	FUNCTION_83
0xbacd	          0x488b00	                    mov rax, qword [rax]	      6898	normal.c	FUNCTION_83
0xbad0	    0xc74014000000	               mov dword [rax + 0x14], 0	      6898	normal.c	FUNCTION_83
0xbad7	    0x488b05000000	            mov rax, qword [0x0400bb1e] 	      6899	normal.c	FUNCTION_83
0xbade	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6899	normal.c	FUNCTION_83
0xbae5	        0x488b45f8	                mov rax, qword [rbp - 8]	      6901	normal.c	FUNCTION_83	IF_1	CALL_1
0xbae9	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6901	normal.c	FUNCTION_83	IF_1	CALL_1
0xbaed	        0x488b45f8	                mov rax, qword [rbp - 8]	      6901	normal.c	FUNCTION_83	IF_1	CALL_1
0xbaf1	          0x8b4038	            mov eax, dword [rax + 0x38] 	      6901	normal.c	FUNCTION_83	IF_1	CALL_1
0xbaf4	          0x4889d6	                            mov rsi, rdx	      6901	normal.c	FUNCTION_83	IF_1	CALL_1
0xbaf7	            0x89c7	                            mov edi, eax	      6901	normal.c	FUNCTION_83	IF_1	CALL_1
0xbaf9	      0xe800000000	                          call 0x400bb3e	      6901	normal.c	FUNCTION_83	IF_1	CALL_1
0xbafe	            0x85c0	                           test eax, eax	      6901	normal.c	FUNCTION_83	IF_1	CALL_1
0xbb00	            0x7511	                           jne 0x400bb53	      6901	normal.c	FUNCTION_83	IF_1	CALL_1
0xbb02	        0x488b45f8	                mov rax, qword [rbp - 8]	      6902	normal.c	FUNCTION_83	CALL_2
0xbb06	          0x488b00	                    mov rax, qword [rax]	      6902	normal.c	FUNCTION_83	CALL_2
0xbb09	          0x4889c7	                            mov rdi, rax	      6902	normal.c	FUNCTION_83	CALL_2
0xbb0c	      0xe8d79effff	                    call sym.clearopbeep	      6902	normal.c	FUNCTION_83	CALL_2
0xbb11	            0xeb46	                           jmp 0x400bb99	      6915	normal.c	FUNCTION_83
0xbb13	        0x488b45f8	                mov rax, qword [rbp - 8]	      6906	normal.c	FUNCTION_83	ELSE_1	CALL_3
0xbb17	          0x488b00	                    mov rax, qword [rax]	      6906	normal.c	FUNCTION_83	ELSE_1	CALL_3
0xbb1a	          0x4889c7	                            mov rdi, rax	      6906	normal.c	FUNCTION_83	ELSE_1	CALL_3
0xbb1d	      0xe88a350000	                  call sym.adjust_cursor	      6906	normal.c	FUNCTION_83	ELSE_1	CALL_3
0xbb22	    0x488b05000000	            mov rax, qword [0x0400bb69] 	      6908	normal.c	FUNCTION_83	ELSE_1
0xbb29	    0xc74044000000	               mov dword [rax + 0x44], 0	      6908	normal.c	FUNCTION_83	ELSE_1
0xbb30	    0x8b0500000000	            mov eax, dword [0x0400bb76] 	      6911	normal.c	FUNCTION_83	ELSE_1	IF_2
0xbb36	          0x83e002	                              and eax, 2	      6911	normal.c	FUNCTION_83	ELSE_1	IF_2
0xbb39	            0x85c0	                           test eax, eax	      6911	normal.c	FUNCTION_83	ELSE_1	IF_2
0xbb3b	            0x741c	                            je 0x400bb99	      6911	normal.c	FUNCTION_83	ELSE_1	IF_2
0xbb3d	    0x8b0500000000	            mov eax, dword [0x0400bb83] 	      6911	normal.c	FUNCTION_83	ELSE_1	IF_2
0xbb43	            0x85c0	                           test eax, eax	      6911	normal.c	FUNCTION_83	ELSE_1	IF_2
0xbb45	            0x7412	                            je 0x400bb99	      6911	normal.c	FUNCTION_83	ELSE_1	IF_2
0xbb47	        0x488b45f8	                mov rax, qword [rbp - 8]	      6911	normal.c	FUNCTION_83	ELSE_1	IF_2
0xbb4b	          0x488b00	                    mov rax, qword [rax]	      6911	normal.c	FUNCTION_83	ELSE_1	IF_2
0xbb4e	            0x8b00	                    mov eax, dword [rax]	      6911	normal.c	FUNCTION_83	ELSE_1	IF_2
0xbb50	            0x85c0	                           test eax, eax	      6911	normal.c	FUNCTION_83	ELSE_1	IF_2
0xbb52	            0x7505	                           jne 0x400bb99	      6911	normal.c	FUNCTION_83	ELSE_1	IF_2
0xbb54	      0xe800000000	                          call 0x400bb99	      6912	normal.c	FUNCTION_83	ELSE_1	CALL_4
0xbb59	              0x90	                                     nop	      6915	normal.c	FUNCTION_83
0xbb5a	              0xc9	                                   leave	      6915	normal.c	FUNCTION_83
0xbb5b	              0xc3	                                     ret	      6915	normal.c	FUNCTION_83
clear_showcmd	CALL,14:ELSE,6:DO,0:FOR,0:functions,0:IF,9:WHILE,1:SWITCH,0	206
0x5ade	              0x55	                                push rbp	      3740	normal.c	FUNCTION_28
0x5adf	          0x4889e5	                            mov rbp, rsp	      3740	normal.c	FUNCTION_28
0x5ae2	        0x4883ec50	                           sub rsp, 0x50	      3740	normal.c	FUNCTION_28
0x5ae6	    0x64488b042528	                mov rax, qword fs:[0x28]	      3740	normal.c	FUNCTION_28
0x5aef	        0x488945f8	                mov qword [rbp - 8], rax	      3740	normal.c	FUNCTION_28
0x5af3	            0x31c0	                            xor eax, eax	      3740	normal.c	FUNCTION_28
0x5af5	    0x8b0500000000	            mov eax, dword [0x04005b3b] 	      3741	normal.c	FUNCTION_28	IF_1
0x5afb	            0x85c0	                           test eax, eax	      3741	normal.c	FUNCTION_28	IF_1
0x5afd	     0xf8408030000	                            je 0x4005e4b	      3741	normal.c	FUNCTION_28	IF_1
0x5b03	    0x8b0500000000	            mov eax, dword [0x04005b49] 	      3744	normal.c	FUNCTION_28	IF_2	CALL_1
0x5b09	            0x85c0	                           test eax, eax	      3744	normal.c	FUNCTION_28	IF_2	CALL_1
0x5b0b	     0xf84d8020000	                            je 0x4005e29	      3744	normal.c	FUNCTION_28	IF_2	CALL_1
0x5b11	      0xe800000000	                          call 0x4005b56	      3744	normal.c	FUNCTION_28	IF_2	CALL_1
0x5b16	            0x85c0	                           test eax, eax	      3744	normal.c	FUNCTION_28	IF_2	CALL_1
0x5b18	     0xf85cb020000	                           jne 0x4005e29	      3744	normal.c	FUNCTION_28	IF_2	CALL_1
0x5b1e	    0x488b15000000	            mov rdx, qword [0x04005b65] 	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b25	    0x488b05000000	            mov rax, qword [0x04005b6c] 	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b2c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b30	          0x4839c2	                            cmp rdx, rax	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b33	            0x741d	                            je 0x4005b92	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b35	    0x488b15000000	            mov rdx, qword [0x04005b7c] 	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b3c	    0x488b05000000	            mov rax, qword [0x04005b83] 	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b43	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b47	          0x4839c2	                            cmp rdx, rax	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b4a	           0xf9cc0	                                 setl al	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b4d	           0xfb6c0	                           movzx eax, al	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b50	            0xeb46	                           jmp 0x4005bd8	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b52	    0x8b1500000000	            mov edx, dword [0x04005b98] 	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b58	    0x488b05000000	            mov rax, qword [0x04005b9f] 	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b5f	          0x8b4040	            mov eax, dword [rax + 0x40] 	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b62	            0x39c2	                            cmp edx, eax	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b64	            0x741a	                            je 0x4005bc0	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b66	    0x8b1500000000	            mov edx, dword [0x04005bac] 	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b6c	    0x488b05000000	            mov rax, qword [0x04005bb3] 	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b73	          0x8b4040	            mov eax, dword [rax + 0x40] 	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b76	            0x39c2	                            cmp edx, eax	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b78	           0xf9cc0	                                 setl al	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b7b	           0xfb6c0	                           movzx eax, al	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b7e	            0xeb18	                           jmp 0x4005bd8	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b80	    0x8b1500000000	            mov edx, dword [0x04005bc6] 	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b86	    0x488b05000000	            mov rax, qword [0x04005bcd] 	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b8d	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b90	            0x39c2	                            cmp edx, eax	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b92	           0xf9cc0	                                 setl al	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b95	           0xfb6c0	                           movzx eax, al	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b98	          0x8945c0	             mov dword [rbp - 0x40], eax	      3746	normal.c	FUNCTION_28	IF_2	CALL_2
0x5b9b	        0x837dc000	               cmp dword [rbp - 0x40], 0	      3752	normal.c	FUNCTION_28	IF_2	IF_3
0x5b9f	            0x741c	                            je 0x4005bfd	      3752	normal.c	FUNCTION_28	IF_2	IF_3
0x5ba1	    0x488b05000000	            mov rax, qword [0x04005be8] 	      3754	normal.c	FUNCTION_28	IF_2	IF_3
0x5ba8	        0x488945c8	             mov qword [rbp - 0x38], rax	      3754	normal.c	FUNCTION_28	IF_2	IF_3
0x5bac	    0x488b05000000	            mov rax, qword [0x04005bf3] 	      3755	normal.c	FUNCTION_28	IF_2	IF_3
0x5bb3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3755	normal.c	FUNCTION_28	IF_2	IF_3
0x5bb7	        0x488945d0	             mov qword [rbp - 0x30], rax	      3755	normal.c	FUNCTION_28	IF_2	IF_3
0x5bbb	            0xeb1a	                           jmp 0x4005c17	      3755	normal.c	FUNCTION_28	IF_2	IF_3
0x5bbd	    0x488b05000000	            mov rax, qword [0x04005c04] 	      3759	normal.c	FUNCTION_28	IF_2	ELSE_1
0x5bc4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3759	normal.c	FUNCTION_28	IF_2	ELSE_1
0x5bc8	        0x488945c8	             mov qword [rbp - 0x38], rax	      3759	normal.c	FUNCTION_28	IF_2	ELSE_1
0x5bcc	    0x488b05000000	            mov rax, qword [0x04005c13] 	      3760	normal.c	FUNCTION_28	IF_2	ELSE_1
0x5bd3	        0x488945d0	             mov qword [rbp - 0x30], rax	      3760	normal.c	FUNCTION_28	IF_2	ELSE_1
0x5bd7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3764	normal.c	FUNCTION_28	IF_2	CALL_3
0x5bdb	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	      3764	normal.c	FUNCTION_28	IF_2	CALL_3
0x5bdf	      0xba00000000	                              mov edx, 0	      3764	normal.c	FUNCTION_28	IF_2	CALL_3
0x5be4	          0x4889ce	                            mov rsi, rcx	      3764	normal.c	FUNCTION_28	IF_2	CALL_3
0x5be7	          0x4889c7	                            mov rdi, rax	      3764	normal.c	FUNCTION_28	IF_2	CALL_3
0x5bea	      0xe800000000	                          call 0x4005c2f	      3764	normal.c	FUNCTION_28	IF_2	CALL_3
0x5bef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3765	normal.c	FUNCTION_28	IF_2	CALL_4
0x5bf3	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3765	normal.c	FUNCTION_28	IF_2	CALL_4
0x5bf7	      0xbe00000000	                              mov esi, 0	      3765	normal.c	FUNCTION_28	IF_2	CALL_4
0x5bfc	          0x4889c7	                            mov rdi, rax	      3765	normal.c	FUNCTION_28	IF_2	CALL_4
0x5bff	      0xe800000000	                          call 0x4005c44	      3765	normal.c	FUNCTION_28	IF_2	CALL_4
0x5c04	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3767	normal.c	FUNCTION_28	IF_2
0x5c08	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3767	normal.c	FUNCTION_28	IF_2
0x5c0c	          0x4829c2	                            sub rdx, rax	      3767	normal.c	FUNCTION_28	IF_2
0x5c0f	          0x4889d0	                            mov rax, rdx	      3767	normal.c	FUNCTION_28	IF_2
0x5c12	        0x4883c001	                              add rax, 1	      3767	normal.c	FUNCTION_28	IF_2
0x5c16	        0x488945e8	             mov qword [rbp - 0x18], rax	      3767	normal.c	FUNCTION_28	IF_2
0x5c1a	    0x8b0500000000	            mov eax, dword [0x04005c60] 	      3769	normal.c	FUNCTION_28	IF_2	IF_4
0x5c20	          0x83f816	                           cmp eax, 0x16	      3769	normal.c	FUNCTION_28	IF_2	IF_4
0x5c23	     0xf8584000000	                           jne 0x4005ced	      3769	normal.c	FUNCTION_28	IF_2	IF_4
0x5c29	    0x488b05000000	            mov rax, qword [0x04005c70] 	      3772	normal.c	FUNCTION_28	IF_2	IF_4
0x5c30	        0x488945f0	             mov qword [rbp - 0x10], rax	      3772	normal.c	FUNCTION_28	IF_2	IF_4
0x5c34	    0x488b05000000	            mov rax, qword [0x04005c7b] 	      3775	normal.c	FUNCTION_28	IF_2	IF_4
0x5c3b	    0x488905000000	            mov qword [0x04005c82], rax 	      3775	normal.c	FUNCTION_28	IF_2	IF_4
0x5c42	    0x488b05000000	            mov rax, qword [0x04005c89] 	      3777	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x5c49	        0x488d7038	                   lea rsi, [rax + 0x38]	      3777	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x5c4d	    0x488b05000000	            mov rax, qword [0x04005c94] 	      3777	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x5c54	        0x488d4db4	                   lea rcx, [rbp - 0x4c]	      3777	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x5c58	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      3777	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x5c5c	          0x4989c8	                             mov r8, rcx	      3777	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x5c5f	          0x4889d1	                            mov rcx, rdx	      3777	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x5c62	      0xba00000000	                              mov edx, 0	      3777	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x5c67	          0x4889c7	                            mov rdi, rax	      3777	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x5c6a	      0xe800000000	                          call 0x4005caf	      3777	normal.c	FUNCTION_28	IF_2	IF_4	CALL_5
0x5c6f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3779	normal.c	FUNCTION_28	IF_2	IF_4
0x5c73	    0x488905000000	            mov qword [0x04005cba], rax 	      3779	normal.c	FUNCTION_28	IF_2	IF_4
0x5c7a	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3782	normal.c	FUNCTION_28	IF_2	IF_4
0x5c7d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3782	normal.c	FUNCTION_28	IF_2	IF_4
0x5c80	            0x29c2	                            sub edx, eax	      3782	normal.c	FUNCTION_28	IF_2	IF_4
0x5c82	            0x89d0	                            mov eax, edx	      3782	normal.c	FUNCTION_28	IF_2	IF_4
0x5c84	          0x83c001	                              add eax, 1	      3782	normal.c	FUNCTION_28	IF_2	IF_4
0x5c87	          0x4863d0	                         movsxd rdx, eax	      3781	normal.c	FUNCTION_28	IF_2	IF_4	CALL_6
0x5c8a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3781	normal.c	FUNCTION_28	IF_2	IF_4	CALL_6
0x5c8e	          0x4889d1	                            mov rcx, rdx	      3781	normal.c	FUNCTION_28	IF_2	IF_4	CALL_6
0x5c91	          0x4889c2	                            mov rdx, rax	      3781	normal.c	FUNCTION_28	IF_2	IF_4	CALL_6
0x5c94	      0xbe00000000	                              mov esi, 0	      3781	normal.c	FUNCTION_28	IF_2	IF_4	CALL_6
0x5c99	      0xbf00000000	                              mov edi, 0	      3781	normal.c	FUNCTION_28	IF_2	IF_4	CALL_6
0x5c9e	      0xb800000000	                              mov eax, 0	      3781	normal.c	FUNCTION_28	IF_2	IF_4	CALL_6
0x5ca3	      0xe800000000	                          call 0x4005ce8	      3781	normal.c	FUNCTION_28	IF_2	IF_4	CALL_6
0x5ca8	      0xe929010000	                           jmp 0x4005e16	      3781	normal.c	FUNCTION_28	IF_2	IF_4	CALL_6
0x5cad	    0x8b0500000000	            mov eax, dword [0x04005cf3] 	      3784	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x5cb3	          0x83f856	                           cmp eax, 0x56	      3784	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x5cb6	            0x7417	                            je 0x4005d0f	      3784	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x5cb8	    0x488b15000000	            mov rdx, qword [0x04005cff] 	      3784	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x5cbf	    0x488b05000000	            mov rax, qword [0x04005d06] 	      3784	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x5cc6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3784	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x5cca	          0x4839c2	                            cmp rdx, rax	      3784	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x5ccd	            0x7420	                            je 0x4005d2f	      3784	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x5ccf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3785	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x5cd3	          0x4889c2	                            mov rdx, rax	      3785	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x5cd6	      0xbe00000000	                              mov esi, 0	      3785	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x5cdb	      0xbf00000000	                              mov edi, 0	      3785	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x5ce0	      0xb800000000	                              mov eax, 0	      3785	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x5ce5	      0xe800000000	                          call 0x4005d2a	      3785	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x5cea	      0xe9e7000000	                           jmp 0x4005e16	      3785	normal.c	FUNCTION_28	IF_2	ELSE_2	IF_5
0x5cef	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      3790	normal.c	FUNCTION_28	IF_2	ELSE_3
0x5cf6	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      3791	normal.c	FUNCTION_28	IF_2	ELSE_3
0x5cfd	        0x837dc000	               cmp dword [rbp - 0x40], 0	      3793	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_6
0x5d01	            0x7419	                            je 0x4005d5c	      3793	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_6
0x5d03	      0xbf00000000	                              mov edi, 0	      3795	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_6	CALL_8
0x5d08	      0xe800000000	                          call 0x4005d4d	      3795	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_6	CALL_8
0x5d0d	        0x488945d8	             mov qword [rbp - 0x28], rax	      3795	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_6	CALL_8
0x5d11	      0xe800000000	                          call 0x4005d56	      3796	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_6	CALL_9
0x5d16	        0x488945e0	             mov qword [rbp - 0x20], rax	      3796	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_6	CALL_9
0x5d1a	            0xeb4f	                           jmp 0x4005dab	      3796	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_6	CALL_9
0x5d1c	      0xe800000000	                          call 0x4005d61	      3800	normal.c	FUNCTION_28	IF_2	ELSE_3	ELSE_4	CALL_10
0x5d21	        0x488945d8	             mov qword [rbp - 0x28], rax	      3800	normal.c	FUNCTION_28	IF_2	ELSE_3	ELSE_4	CALL_10
0x5d25	      0xbf00000000	                              mov edi, 0	      3801	normal.c	FUNCTION_28	IF_2	ELSE_3	ELSE_4	CALL_11
0x5d2a	      0xe800000000	                          call 0x4005d6f	      3801	normal.c	FUNCTION_28	IF_2	ELSE_3	ELSE_4	CALL_11
0x5d2f	        0x488945e0	             mov qword [rbp - 0x20], rax	      3801	normal.c	FUNCTION_28	IF_2	ELSE_3	ELSE_4	CALL_11
0x5d33	            0xeb36	                           jmp 0x4005dab	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d35	    0x488b05000000	            mov rax, qword [0x04005d7c] 	      3806	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d3c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3806	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d40	          0x4889d7	                            mov rdi, rdx	      3806	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d43	            0xffd0	                                call rax	      3806	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d45	          0x8945c4	             mov dword [rbp - 0x3c], eax	      3806	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d48	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      3810	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1	IF_7
0x5d4c	            0x750a	                           jne 0x4005d98	      3810	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1	IF_7
0x5d4e	        0x8345b801	               add dword [rbp - 0x48], 1	      3812	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1	IF_7
0x5d52	        0x8345bc01	               add dword [rbp - 0x44], 1	      3813	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1	IF_7
0x5d56	            0xeb3d	                           jmp 0x4005dd5	      3814	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1	IF_7
0x5d58	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3816	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d5b	           0x145b8	             add dword [rbp - 0x48], eax	      3816	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d5e	        0x8345bc01	               add dword [rbp - 0x44], 1	      3817	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d62	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3818	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d65	            0x4898	                                    cdqe	      3818	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d67	        0x480145d8	            add qword [rbp - 0x28], rax 	      3818	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d6b	    0x488b05000000	            mov rax, qword [0x04005db2] 	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d72	           0xfb600	                   movzx eax, byte [rax]	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d75	            0x3c65	                            cmp al, 0x65	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d77	            0x740d	                            je 0x4005dc6	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d79	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d7d	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d81	           0xf96c0	                                setbe al	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d84	            0xeb0b	                           jmp 0x4005dd1	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d86	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d8a	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d8e	           0xf92c0	                                 setb al	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d91	            0x84c0	                             test al, al	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d93	            0x75a0	                           jne 0x4005d75	      3803	normal.c	FUNCTION_28	IF_2	ELSE_3	WHILE_1
0x5d95	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3820	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_8
0x5d98	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      3820	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_8
0x5d9b	            0x751b	                           jne 0x4005df8	      3820	normal.c	FUNCTION_28	IF_2	ELSE_3	IF_8
0x5d9d	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3821	normal.c	FUNCTION_28	IF_2	ELSE_3	CALL_12
0x5da0	            0x89c2	                            mov edx, eax	      3821	normal.c	FUNCTION_28	IF_2	ELSE_3	CALL_12
0x5da2	      0xbe00000000	                              mov esi, 0	      3821	normal.c	FUNCTION_28	IF_2	ELSE_3	CALL_12
0x5da7	      0xbf00000000	                              mov edi, 0	      3821	normal.c	FUNCTION_28	IF_2	ELSE_3	CALL_12
0x5dac	      0xb800000000	                              mov eax, 0	      3821	normal.c	FUNCTION_28	IF_2	ELSE_3	CALL_12
0x5db1	      0xe800000000	                          call 0x4005df6	      3821	normal.c	FUNCTION_28	IF_2	ELSE_3	CALL_12
0x5db6	            0xeb1e	                           jmp 0x4005e16	      3821	normal.c	FUNCTION_28	IF_2	ELSE_3	CALL_12
0x5db8	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      3823	normal.c	FUNCTION_28	IF_2	ELSE_3	CALL_13
0x5dbb	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3823	normal.c	FUNCTION_28	IF_2	ELSE_3	CALL_13
0x5dbe	            0x89d1	                            mov ecx, edx	      3823	normal.c	FUNCTION_28	IF_2	ELSE_3	CALL_13
0x5dc0	            0x89c2	                            mov edx, eax	      3823	normal.c	FUNCTION_28	IF_2	ELSE_3	CALL_13
0x5dc2	      0xbe00000000	                              mov esi, 0	      3823	normal.c	FUNCTION_28	IF_2	ELSE_3	CALL_13
0x5dc7	      0xbf00000000	                              mov edi, 0	      3823	normal.c	FUNCTION_28	IF_2	ELSE_3	CALL_13
0x5dcc	      0xb800000000	                              mov eax, 0	      3823	normal.c	FUNCTION_28	IF_2	ELSE_3	CALL_13
0x5dd1	      0xe800000000	                          call 0x4005e16	      3823	normal.c	FUNCTION_28	IF_2	ELSE_3	CALL_13
0x5dd6	    0xc60500000000	                mov byte [0x04005e1d], 0	      3825	normal.c	FUNCTION_28	IF_2
0x5ddd	    0xc70500000000	               mov dword [0x04005e27], 1	      3826	normal.c	FUNCTION_28	IF_2
0x5de7	            0xeb1b	                           jmp 0x4005e44	      3745	normal.c	FUNCTION_28	IF_2
0x5de9	    0xc60500000000	                mov byte [0x04005e30], 0	      3830	normal.c	FUNCTION_28	ELSE_6
0x5df0	    0xc70500000000	               mov dword [0x04005e3a], 0	      3831	normal.c	FUNCTION_28	ELSE_6
0x5dfa	    0x8b0500000000	            mov eax, dword [0x04005e40] 	      3834	normal.c	FUNCTION_28	ELSE_6	IF_9
0x5e00	            0x85c0	                           test eax, eax	      3834	normal.c	FUNCTION_28	ELSE_6	IF_9
0x5e02	            0x750a	                           jne 0x4005e4e	      3834	normal.c	FUNCTION_28	ELSE_6	IF_9
0x5e04	      0xe804020000	                call sym.display_showcmd	      3838	normal.c	FUNCTION_28	CALL_14
0x5e09	            0xeb04	                           jmp 0x4005e4f	      3838	normal.c	FUNCTION_28	CALL_14
0x5e0b	              0x90	                                     nop	      3742	normal.c	FUNCTION_28	IF_1
0x5e0c	            0xeb01	                           jmp 0x4005e4f	      3742	normal.c	FUNCTION_28	IF_1
0x5e0e	              0x90	                                     nop	      3835	normal.c	FUNCTION_28	ELSE_6	IF_9
0x5e0f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3839	normal.c	FUNCTION_28
0x5e13	    0x644833042528	                xor rax, qword fs:[0x28]	      3839	normal.c	FUNCTION_28
0x5e1c	            0x7405	                            je 0x4005e63	      3839	normal.c	FUNCTION_28
0x5e1e	      0xe800000000	                          call 0x4005e63	      3839	normal.c	FUNCTION_28
0x5e23	              0xc9	                                   leave	      3839	normal.c	FUNCTION_28
0x5e24	              0xc3	                                     ret	      3839	normal.c	FUNCTION_28
nv_addsub	CALL,4:ELSE,2:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	52
0x6574	              0x55	                                push rbp	      4187	normal.c	FUNCTION_41
0x6575	          0x4889e5	                            mov rbp, rsp	      4187	normal.c	FUNCTION_41
0x6578	        0x4883ec10	                           sub rsp, 0x10	      4187	normal.c	FUNCTION_41
0x657c	        0x48897df8	                mov qword [rbp - 8], rdi	      4187	normal.c	FUNCTION_41
0x6580	    0x8b0500000000	            mov eax, dword [0x040065c6] 	      4188	normal.c	FUNCTION_41	IF_1
0x6586	            0x85c0	                           test eax, eax	      4188	normal.c	FUNCTION_41	IF_1
0x6588	            0x756a	                           jne 0x4006634	      4188	normal.c	FUNCTION_41	IF_1
0x658a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4188	normal.c	FUNCTION_41	IF_1
0x658e	          0x488b00	                    mov rax, qword [rax]	      4188	normal.c	FUNCTION_41	IF_1
0x6591	            0x8b00	                    mov eax, dword [rax]	      4188	normal.c	FUNCTION_41	IF_1
0x6593	            0x85c0	                           test eax, eax	      4188	normal.c	FUNCTION_41	IF_1
0x6595	            0x755d	                           jne 0x4006634	      4188	normal.c	FUNCTION_41	IF_1
0x6597	        0x488b45f8	                mov rax, qword [rbp - 8]	      4190	normal.c	FUNCTION_41	IF_1	CALL_1
0x659b	          0x4889c7	                            mov rdi, rax	      4190	normal.c	FUNCTION_41	IF_1	CALL_1
0x659e	      0xe8b3f2ffff	                  call sym.prep_redo_cmd	      4190	normal.c	FUNCTION_41	IF_1	CALL_1
0x65a3	        0x488b45f8	                mov rax, qword [rbp - 8]	      4191	normal.c	FUNCTION_41	IF_1
0x65a7	          0x488b00	                    mov rax, qword [rax]	      4191	normal.c	FUNCTION_41	IF_1
0x65aa	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4191	normal.c	FUNCTION_41	IF_1
0x65ae	          0x8b520c	              mov edx, dword [rdx + 0xc]	      4191	normal.c	FUNCTION_41	IF_1
0x65b1	          0x83fa01	                              cmp edx, 1	      4191	normal.c	FUNCTION_41	IF_1
0x65b4	            0x7507	                           jne 0x40065fd	      4191	normal.c	FUNCTION_41	IF_1
0x65b6	      0xba1c000000	                           mov edx, 0x1c	      4191	normal.c	FUNCTION_41	IF_1
0x65bb	            0xeb05	                           jmp 0x4006602	      4191	normal.c	FUNCTION_41	IF_1
0x65bd	      0xba1d000000	                           mov edx, 0x1d	      4191	normal.c	FUNCTION_41	IF_1
0x65c2	            0x8910	                    mov dword [rax], edx	      4191	normal.c	FUNCTION_41	IF_1
0x65c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      4192	normal.c	FUNCTION_41	IF_1	CALL_2
0x65c8	          0x8b5038	            mov edx, dword [rax + 0x38] 	      4192	normal.c	FUNCTION_41	IF_1	CALL_2
0x65cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      4192	normal.c	FUNCTION_41	IF_1	CALL_2
0x65cf	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      4192	normal.c	FUNCTION_41	IF_1	CALL_2
0x65d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      4192	normal.c	FUNCTION_41	IF_1	CALL_2
0x65d7	          0x488b00	                    mov rax, qword [rax]	      4192	normal.c	FUNCTION_41	IF_1	CALL_2
0x65da	          0x4889ce	                            mov rsi, rcx	      4192	normal.c	FUNCTION_41	IF_1	CALL_2
0x65dd	          0x4889c7	                            mov rdi, rax	      4192	normal.c	FUNCTION_41	IF_1	CALL_2
0x65e0	      0xe800000000	                          call 0x4006625	      4192	normal.c	FUNCTION_41	IF_1	CALL_2
0x65e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      4193	normal.c	FUNCTION_41	IF_1
0x65e9	          0x488b00	                    mov rax, qword [rax]	      4193	normal.c	FUNCTION_41	IF_1
0x65ec	    0xc70000000000	                      mov dword [rax], 0	      4193	normal.c	FUNCTION_41	IF_1
0x65f2	            0xeb27	                           jmp 0x400665b	      4199	normal.c	FUNCTION_41
0x65f4	    0x8b0500000000	            mov eax, dword [0x0400663a] 	      4195	normal.c	FUNCTION_41	ELSE_1	IF_2
0x65fa	            0x85c0	                           test eax, eax	      4195	normal.c	FUNCTION_41	ELSE_1	IF_2
0x65fc	            0x740e	                            je 0x400664c	      4195	normal.c	FUNCTION_41	ELSE_1	IF_2
0x65fe	        0x488b45f8	                mov rax, qword [rbp - 8]	      4196	normal.c	FUNCTION_41	ELSE_1	IF_2
0x6602	          0x4889c7	                            mov rdi, rax	      4196	normal.c	FUNCTION_41	ELSE_1	IF_2
0x6605	      0xe829850000	                    call sym.nv_operator	      4196	normal.c	FUNCTION_41	ELSE_1	IF_2
0x660a	            0xeb0f	                           jmp 0x400665b	      4199	normal.c	FUNCTION_41
0x660c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4198	normal.c	FUNCTION_41	CALL_4
0x6610	          0x488b00	                    mov rax, qword [rax]	      4198	normal.c	FUNCTION_41	CALL_4
0x6613	          0x4889c7	                            mov rdi, rax	      4198	normal.c	FUNCTION_41	CALL_4
0x6616	      0xe897f3ffff	                        call sym.clearop	      4198	normal.c	FUNCTION_41	CALL_4
0x661b	              0x90	                                     nop	      4199	normal.c	FUNCTION_41
0x661c	              0xc9	                                   leave	      4199	normal.c	FUNCTION_41
0x661d	              0xc3	                                     ret	      4199	normal.c	FUNCTION_41
add_to_showcmd_c	CALL,2:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	13
0x5f53	              0x55	                                push rbp	      3909	normal.c	FUNCTION_30
0x5f54	          0x4889e5	                            mov rbp, rsp	      3909	normal.c	FUNCTION_30
0x5f57	        0x4883ec10	                           sub rsp, 0x10	      3909	normal.c	FUNCTION_30
0x5f5b	          0x897dfc	                mov dword [rbp - 4], edi	      3909	normal.c	FUNCTION_30
0x5f5e	          0x8b45fc	                mov eax, dword [rbp - 4]	      3910	normal.c	FUNCTION_30	IF_1	CALL_1
0x5f61	            0x89c7	                            mov edi, eax	      3910	normal.c	FUNCTION_30	IF_1	CALL_1
0x5f63	      0xe800000000	                          call 0x4005fa8	      3910	normal.c	FUNCTION_30	IF_1	CALL_1
0x5f68	            0x85c0	                           test eax, eax	      3910	normal.c	FUNCTION_30	IF_1	CALL_1
0x5f6a	            0x7505	                           jne 0x4005fb1	      3910	normal.c	FUNCTION_30	IF_1	CALL_1
0x5f6c	      0xe800000000	                          call 0x4005fb1	      3911	normal.c	FUNCTION_30	CALL_2
0x5f71	              0x90	                                     nop	      3912	normal.c	FUNCTION_30
0x5f72	              0xc9	                                   leave	      3912	normal.c	FUNCTION_30
0x5f73	              0xc3	                                     ret	      3912	normal.c	FUNCTION_30
nv_Replace	CALL,8:ELSE,2:DO,0:FOR,0:functions,0:IF,4:WHILE,0:SWITCH,0	54
0xc55d	              0x55	                                push rbp	      7256	normal.c	FUNCTION_90
0xc55e	          0x4889e5	                            mov rbp, rsp	      7256	normal.c	FUNCTION_90
0xc561	        0x4883ec10	                           sub rsp, 0x10	      7256	normal.c	FUNCTION_90
0xc565	        0x48897df8	                mov qword [rbp - 8], rdi	      7256	normal.c	FUNCTION_90
0xc569	    0x8b0500000000	            mov eax, dword [0x0400c5af] 	      7257	normal.c	FUNCTION_90	IF_1
0xc56f	            0x85c0	                           test eax, eax	      7257	normal.c	FUNCTION_90	IF_1
0xc571	            0x743a	                            je 0x400c5ed	      7257	normal.c	FUNCTION_90	IF_1
0xc573	        0x488b45f8	                mov rax, qword [rbp - 8]	      7259	normal.c	FUNCTION_90	IF_1
0xc577	    0xc7400c630000	            mov dword [rax + 0xc], 0x63 	      7259	normal.c	FUNCTION_90	IF_1
0xc57e	        0x488b45f8	                mov rax, qword [rbp - 8]	      7260	normal.c	FUNCTION_90	IF_1
0xc582	    0xc74010000000	               mov dword [rax + 0x10], 0	      7260	normal.c	FUNCTION_90	IF_1
0xc589	    0x8b0500000000	            mov eax, dword [0x0400c5cf] 	      7261	normal.c	FUNCTION_90	IF_1
0xc58f	    0x890500000000	            mov dword [0x0400c5d5], eax 	      7261	normal.c	FUNCTION_90	IF_1
0xc595	    0xc70500000000	           mov dword [0x0400c5df], 0x56 	      7262	normal.c	FUNCTION_90	IF_1
0xc59f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7263	normal.c	FUNCTION_90	IF_1	CALL_1
0xc5a3	          0x4889c7	                            mov rdi, rax	      7263	normal.c	FUNCTION_90	IF_1	CALL_1
0xc5a6	      0xe888250000	                    call sym.nv_operator	      7263	normal.c	FUNCTION_90	IF_1	CALL_1
0xc5ab	            0xeb7a	                           jmp 0x400c667	      7278	normal.c	FUNCTION_90
0xc5ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      7265	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_2
0xc5b1	          0x488b00	                    mov rax, qword [rax]	      7265	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_2
0xc5b4	          0x4889c7	                            mov rdi, rax	      7265	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_2
0xc5b7	      0xe8bc93ffff	                  call sym.checkclearopq	      7265	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_2
0xc5bc	            0x85c0	                           test eax, eax	      7265	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_2
0xc5be	            0x7567	                           jne 0x400c667	      7265	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_2
0xc5c0	    0x488b05000000	            mov rax, qword [0x0400c607] 	      7267	normal.c	FUNCTION_90	ELSE_1	IF_2	IF_3
0xc5c7	    0x8b8028150000	          mov eax, dword [rax + 0x1528] 	      7267	normal.c	FUNCTION_90	ELSE_1	IF_2	IF_3
0xc5cd	            0x85c0	                           test eax, eax	      7267	normal.c	FUNCTION_90	ELSE_1	IF_2	IF_3
0xc5cf	            0x7514	                           jne 0x400c625	      7267	normal.c	FUNCTION_90	ELSE_1	IF_2	IF_3
0xc5d1	      0xbf00000000	                              mov edi, 0	      7268	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_4
0xc5d6	      0xe800000000	                          call 0x400c61b	      7268	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_4
0xc5db	          0x4889c7	                            mov rdi, rax	      7268	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_4
0xc5de	      0xe800000000	                          call 0x400c623	      7268	normal.c	FUNCTION_90	ELSE_1	IF_2	CALL_4
0xc5e3	            0xeb42	                           jmp 0x400c667	      7278	normal.c	FUNCTION_90
0xc5e5	      0xe800000000	                          call 0x400c62a	      7272	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0xc5ea	            0x85c0	                           test eax, eax	      7272	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0xc5ec	            0x740c	                            je 0x400c63a	      7272	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0xc5ee	      0xe800000000	                          call 0x400c633	      7273	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_7
0xc5f3	            0x89c7	                            mov edi, eax	      7273	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_7
0xc5f5	      0xe800000000	                          call 0x400c63a	      7273	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_7
0xc5fa	        0x488b45f8	                mov rax, qword [rbp - 8]	      7275	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0xc5fe	          0x8b4038	            mov eax, dword [rax + 0x38] 	      7275	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0xc601	            0x85c0	                           test eax, eax	      7275	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0xc603	            0x7407	                            je 0x400c64c	      7275	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0xc605	      0xba56000000	                           mov edx, 0x56	      7275	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0xc60a	            0xeb05	                           jmp 0x400c651	      7275	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0xc60c	      0xba52000000	                           mov edx, 0x52	      7275	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0xc611	        0x488b45f8	                mov rax, qword [rbp - 8]	      7275	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0xc615	      0xb900000000	                              mov ecx, 0	      7275	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0xc61a	      0xbe00000000	                              mov esi, 0	      7275	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0xc61f	          0x4889c7	                            mov rdi, rax	      7275	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0xc622	      0xe818360000	                    call sym.invoke_edit	      7275	normal.c	FUNCTION_90	ELSE_1	IF_2	ELSE_2	CALL_8
0xc627	              0x90	                                     nop	      7278	normal.c	FUNCTION_90
0xc628	              0xc9	                                   leave	      7278	normal.c	FUNCTION_90
0xc629	              0xc3	                                     ret	      7278	normal.c	FUNCTION_90
do_mouse	CALL,106:ELSE,52:DO,0:FOR,1:functions,0:IF,135:WHILE,1:SWITCH,0	1380
0x357f	              0x55	                                push rbp	      2321	normal.c	FUNCTION_9
0x3580	          0x4889e5	                            mov rbp, rsp	      2321	normal.c	FUNCTION_9
0x3583	              0x53	                                push rbx	      2321	normal.c	FUNCTION_9
0x3584	    0x4881ecd80000	                           sub rsp, 0xd8	      2321	normal.c	FUNCTION_9
0x358b	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      2321	normal.c	FUNCTION_9
0x3592	    0x89b534ffffff	             mov dword [rbp - 0xcc], esi	      2321	normal.c	FUNCTION_9
0x3598	    0x899530ffffff	             mov dword [rbp - 0xd0], edx	      2321	normal.c	FUNCTION_9
0x359e	    0x48898d28ffff	             mov qword [rbp - 0xd8], rcx	      2321	normal.c	FUNCTION_9
0x35a5	    0x44898524ffff	             mov dword [rbp - 0xdc], r8d	      2321	normal.c	FUNCTION_9
0x35ac	    0x64488b042528	                mov rax, qword fs:[0x28]	      2321	normal.c	FUNCTION_9
0x35b5	        0x488945e8	             mov qword [rbp - 0x18], rax	      2321	normal.c	FUNCTION_9
0x35b9	            0x31c0	                            xor eax, eax	      2321	normal.c	FUNCTION_9
0x35bb	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	      2328	normal.c	FUNCTION_9
0x35c5	    0x488b05000000	            mov rax, qword [0x0400360c] 	      2338	normal.c	FUNCTION_9
0x35cc	        0x488945a8	             mov qword [rbp - 0x58], rax	      2338	normal.c	FUNCTION_9
0x35d0	    0x8b0500000000	            mov eax, dword [0x04003616] 	      2343	normal.c	FUNCTION_9
0x35d6	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      2343	normal.c	FUNCTION_9
0x35dc	    0x8b0500000000	            mov eax, dword [0x04003622] 	      2344	normal.c	FUNCTION_9
0x35e2	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      2344	normal.c	FUNCTION_9
0x35e8	    0x488b05000000	            mov rax, qword [0x0400362f] 	      2348	normal.c	FUNCTION_9
0x35ef	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2348	normal.c	FUNCTION_9
0x35f3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2348	normal.c	FUNCTION_9
0x35f7	        0x488945c0	             mov qword [rbp - 0x40], rax	      2348	normal.c	FUNCTION_9
0x35fb	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2348	normal.c	FUNCTION_9
0x35ff	    0x8b0500000000	            mov eax, dword [0x04003645] 	      2358	normal.c	FUNCTION_9	IF_1
0x3605	            0x85c0	                           test eax, eax	      2358	normal.c	FUNCTION_9	IF_1
0x3607	            0x740c	                            je 0x4003655	      2358	normal.c	FUNCTION_9	IF_1
0x3609	    0xc70500000000	               mov dword [0x04003653], 0	      2359	normal.c	FUNCTION_9	IF_1
0x3613	            0xeb45	                           jmp 0x400369a	      2359	normal.c	FUNCTION_9	IF_1
0x3615	    0x8b0500000000	            mov eax, dword [0x0400365b] 	      2365	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x361b	            0x85c0	                           test eax, eax	      2365	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x361d	            0x7418	                            je 0x4003677	      2365	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x361f	      0xbf76000000	                           mov edi, 0x76	      2367	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3	IF_4	CALL_1
0x3624	      0xe800000000	                          call 0x4003669	      2367	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3	IF_4	CALL_1
0x3629	            0x85c0	                           test eax, eax	      2367	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3	IF_4	CALL_1
0x362b	            0x752d	                           jne 0x400369a	      2367	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3	IF_4	CALL_1
0x362d	      0xb800000000	                              mov eax, 0	      2368	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3	IF_4
0x3632	      0xe953160000	                           jmp 0x4004cca	      2368	normal.c	FUNCTION_9	ELSE_1	IF_2	IF_3	IF_4
0x3637	    0x8b0500000000	            mov eax, dword [0x0400367d] 	      2370	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x363d	          0x83f801	                              cmp eax, 1	      2370	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x3640	            0x7518	                           jne 0x400369a	      2370	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x3642	      0xbf6e000000	                           mov edi, 0x6e	      2370	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x3647	      0xe800000000	                          call 0x400368c	      2370	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x364c	            0x85c0	                           test eax, eax	      2370	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x364e	            0x750a	                           jne 0x400369a	      2370	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x3650	      0xb800000000	                              mov eax, 0	      2371	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5
0x3655	      0xe930160000	                           jmp 0x4004cca	      2371	normal.c	FUNCTION_9	ELSE_1	IF_2	ELSE_2	IF_5
0x365a	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      2376	normal.c	FUNCTION_9	FOR_1	CALL_4
0x3660	            0xf7d8	                                 neg eax	      2376	normal.c	FUNCTION_9	FOR_1	CALL_4
0x3662	          0xc1e808	                              shr eax, 8	      2376	normal.c	FUNCTION_9	FOR_1	CALL_4
0x3665	           0xfb6c0	                           movzx eax, al	      2376	normal.c	FUNCTION_9	FOR_1	CALL_4
0x3668	    0x488d954cffff	                   lea rdx, [rbp - 0xb4]	      2376	normal.c	FUNCTION_9	FOR_1	CALL_4
0x366f	    0x488d8d48ffff	                   lea rcx, [rbp - 0xb8]	      2376	normal.c	FUNCTION_9	FOR_1	CALL_4
0x3676	          0x4889ce	                            mov rsi, rcx	      2376	normal.c	FUNCTION_9	FOR_1	CALL_4
0x3679	            0x89c7	                            mov edi, eax	      2376	normal.c	FUNCTION_9	FOR_1	CALL_4
0x367b	      0xe800000000	                          call 0x40036c0	      2376	normal.c	FUNCTION_9	FOR_1	CALL_4
0x3680	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2376	normal.c	FUNCTION_9	FOR_1	CALL_4
0x3686	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      2377	normal.c	FUNCTION_9	FOR_1	IF_6
0x368c	            0x85c0	                           test eax, eax	      2377	normal.c	FUNCTION_9	FOR_1	IF_6
0x368e	            0x7461	                            je 0x4003731	      2377	normal.c	FUNCTION_9	FOR_1	IF_6
0x3690	      0xe800000000	                          call 0x40036d5	      2381	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	CALL_5
0x3695	            0x85c0	                           test eax, eax	      2381	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	CALL_5
0x3697	            0x7458	                            je 0x4003731	      2381	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	CALL_5
0x3699	    0x8b0500000000	            mov eax, dword [0x040036df] 	      2384	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7
0x369f	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      2384	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7
0x36a5	    0x8b0500000000	            mov eax, dword [0x040036eb] 	      2385	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7
0x36ab	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      2385	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7
0x36b1	      0xe800000000	                          call 0x40036f6	      2389	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	CALL_6
0x36b6	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      2389	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	CALL_6
0x36bc	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      2390	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	IF_8
0x36c2	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	      2390	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	IF_8
0x36c8	            0x7502	                           jne 0x400370c	      2390	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	IF_8
0x36ca	            0xeb8e	                           jmp 0x400369a	      2398	normal.c	FUNCTION_9	FOR_1
0x36cc	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      2392	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	CALL_7
0x36d2	            0x89c7	                            mov edi, eax	      2392	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	CALL_7
0x36d4	      0xe800000000	                          call 0x4003719	      2392	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7	CALL_7
0x36d9	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      2393	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7
0x36df	    0x890500000000	            mov dword [0x04003725], eax 	      2393	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7
0x36e5	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2394	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7
0x36eb	    0x890500000000	            mov dword [0x04003731], eax 	      2394	normal.c	FUNCTION_9	FOR_1	IF_6	IF_7
0x36f1	              0x90	                                     nop	      2397	normal.c	FUNCTION_9	FOR_1
0x36f2	    0x81bd34ffffff	     cmp dword [rbp - 0xcc], 0xffff9b03 	      2400	normal.c	FUNCTION_9	IF_9
0x36fc	            0x7541	                           jne 0x400377f	      2400	normal.c	FUNCTION_9	IF_9
0x36fe	      0xe800000000	                          call 0x4003743	      2404	normal.c	FUNCTION_9	IF_9	CALL_8
0x3703	    0x8b0500000000	            mov eax, dword [0x04003749] 	      2405	normal.c	FUNCTION_9	IF_9	IF_10
0x3709	            0x85c0	                           test eax, eax	      2405	normal.c	FUNCTION_9	IF_9	IF_10
0x370b	            0x7428	                            je 0x4003775	      2405	normal.c	FUNCTION_9	IF_9	IF_10
0x370d	    0x8b0500000000	            mov eax, dword [0x04003753] 	      2405	normal.c	FUNCTION_9	IF_9	IF_10
0x3713	            0x85c0	                           test eax, eax	      2405	normal.c	FUNCTION_9	IF_9	IF_10
0x3715	            0x751e	                           jne 0x4003775	      2405	normal.c	FUNCTION_9	IF_9	IF_10
0x3717	    0x488b05000000	            mov rax, qword [0x0400375e] 	      2407	normal.c	FUNCTION_9	IF_9	IF_10	CALL_9
0x371e	      0xbe00000000	                              mov esi, 0	      2407	normal.c	FUNCTION_9	IF_9	IF_10	CALL_9
0x3723	          0x4889c7	                            mov rdi, rax	      2407	normal.c	FUNCTION_9	IF_9	IF_10	CALL_9
0x3726	      0xe800000000	                          call 0x400376b	      2407	normal.c	FUNCTION_9	IF_9	IF_10	CALL_9
0x372b	    0xc70500000000	               mov dword [0x04003775], 1	      2408	normal.c	FUNCTION_9	IF_9	IF_10
0x3735	      0xb800000000	                              mov eax, 0	      2411	normal.c	FUNCTION_9	IF_9
0x373a	      0xe94b150000	                           jmp 0x4004cca	      2411	normal.c	FUNCTION_9	IF_9
0x373f	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      2432	normal.c	FUNCTION_9	IF_13
0x3745	            0x85c0	                           test eax, eax	      2432	normal.c	FUNCTION_9	IF_13
0x3747	            0x740c	                            je 0x4003795	      2432	normal.c	FUNCTION_9	IF_13
0x3749	    0xc70500000000	               mov dword [0x04003793], 1	      2433	normal.c	FUNCTION_9	IF_13
0x3753	            0xeb46	                           jmp 0x40037db	      2433	normal.c	FUNCTION_9	IF_13
0x3755	    0x8b0500000000	            mov eax, dword [0x0400379b] 	      2436	normal.c	FUNCTION_9	ELSE_3	IF_14
0x375b	            0x85c0	                           test eax, eax	      2436	normal.c	FUNCTION_9	ELSE_3	IF_14
0x375d	            0x750a	                           jne 0x40037a9	      2436	normal.c	FUNCTION_9	ELSE_3	IF_14
0x375f	      0xb800000000	                              mov eax, 0	      2437	normal.c	FUNCTION_9	ELSE_3	IF_14
0x3764	      0xe921150000	                           jmp 0x4004cca	      2437	normal.c	FUNCTION_9	ELSE_3	IF_14
0x3769	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      2438	normal.c	FUNCTION_9	ELSE_3	IF_15
0x376f	            0x85c0	                           test eax, eax	      2438	normal.c	FUNCTION_9	ELSE_3	IF_15
0x3771	            0x7528	                           jne 0x40037db	      2438	normal.c	FUNCTION_9	ELSE_3	IF_15
0x3773	    0xc70500000000	               mov dword [0x040037bd], 0	      2440	normal.c	FUNCTION_9	ELSE_3	IF_15
0x377d	    0x8b0500000000	            mov eax, dword [0x040037c3] 	      2441	normal.c	FUNCTION_9	ELSE_3	IF_15	IF_16
0x3783	            0x85c0	                           test eax, eax	      2441	normal.c	FUNCTION_9	ELSE_3	IF_15	IF_16
0x3785	            0x7414	                            je 0x40037db	      2441	normal.c	FUNCTION_9	ELSE_3	IF_15	IF_16
0x3787	    0xc70500000000	               mov dword [0x040037d1], 0	      2443	normal.c	FUNCTION_9	ELSE_3	IF_15	IF_16
0x3791	      0xb800000000	                              mov eax, 0	      2444	normal.c	FUNCTION_9	ELSE_3	IF_15	IF_16
0x3796	      0xe9ef140000	                           jmp 0x4004cca	      2444	normal.c	FUNCTION_9	ELSE_3	IF_15	IF_16
0x379b	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      2452	normal.c	FUNCTION_9	IF_17
0x37a1	            0x85c0	                           test eax, eax	      2452	normal.c	FUNCTION_9	IF_17
0x37a3	            0x7464	                            je 0x4003849	      2452	normal.c	FUNCTION_9	IF_17
0x37a5	    0x8b0500000000	            mov eax, dword [0x040037eb] 	      2452	normal.c	FUNCTION_9	IF_17
0x37ab	          0x83e004	                              and eax, 4	      2452	normal.c	FUNCTION_9	IF_17
0x37ae	            0x85c0	                           test eax, eax	      2452	normal.c	FUNCTION_9	IF_17
0x37b0	            0x7457	                            je 0x4003849	      2452	normal.c	FUNCTION_9	IF_17
0x37b2	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 2	      2452	normal.c	FUNCTION_9	IF_17
0x37b9	            0x754e	                           jne 0x4003849	      2452	normal.c	FUNCTION_9	IF_17
0x37bb	    0x8b0500000000	            mov eax, dword [0x04003801] 	      2454	normal.c	FUNCTION_9	IF_17	IF_18
0x37c1	          0x83e010	                           and eax, 0x10	      2454	normal.c	FUNCTION_9	IF_17	IF_18
0x37c4	            0x85c0	                           test eax, eax	      2454	normal.c	FUNCTION_9	IF_17	IF_18
0x37c6	            0x740a	                            je 0x4003812	      2454	normal.c	FUNCTION_9	IF_17	IF_18
0x37c8	      0xbf0f000000	                            mov edi, 0xf	      2455	normal.c	FUNCTION_9	IF_17	CALL_12
0x37cd	      0xe800000000	                          call 0x4003812	      2455	normal.c	FUNCTION_9	IF_17	CALL_12
0x37d2	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 1	      2456	normal.c	FUNCTION_9	IF_17	IF_19
0x37da	            0x7e0f	                           jle 0x400382b	      2456	normal.c	FUNCTION_9	IF_17	IF_19
0x37dc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2457	normal.c	FUNCTION_9	IF_17	CALL_13
0x37e3	          0x4889c7	                            mov rdi, rax	      2457	normal.c	FUNCTION_9	IF_17	CALL_13
0x37e6	      0xe800000000	                          call 0x400382b	      2457	normal.c	FUNCTION_9	IF_17	CALL_13
0x37eb	      0xbf14000000	                           mov edi, 0x14	      2458	normal.c	FUNCTION_9	IF_17	CALL_14
0x37f0	      0xe800000000	                          call 0x4003835	      2458	normal.c	FUNCTION_9	IF_17	CALL_14
0x37f5	    0xc70500000000	               mov dword [0x0400383f], 0	      2459	normal.c	FUNCTION_9	IF_17
0x37ff	      0xb800000000	                              mov eax, 0	      2460	normal.c	FUNCTION_9	IF_17
0x3804	      0xe981140000	                           jmp 0x4004cca	      2460	normal.c	FUNCTION_9	IF_17
0x3809	    0x8b0500000000	            mov eax, dword [0x0400384f] 	      2466	normal.c	FUNCTION_9	IF_20
0x380f	          0x83e004	                              and eax, 4	      2466	normal.c	FUNCTION_9	IF_20
0x3812	            0x85c0	                           test eax, eax	      2466	normal.c	FUNCTION_9	IF_20
0x3814	            0x7413	                            je 0x4003869	      2466	normal.c	FUNCTION_9	IF_20
0x3816	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      2466	normal.c	FUNCTION_9	IF_20
0x381d	            0x740a	                            je 0x4003869	      2466	normal.c	FUNCTION_9	IF_20
0x381f	      0xb800000000	                              mov eax, 0	      2467	normal.c	FUNCTION_9	IF_20
0x3824	      0xe961140000	                           jmp 0x4004cca	      2467	normal.c	FUNCTION_9	IF_20
0x3829	    0x8b0500000000	            mov eax, dword [0x0400386f] 	      2474	normal.c	FUNCTION_9	IF_21
0x382f	          0x83e01e	                           and eax, 0x1e	      2474	normal.c	FUNCTION_9	IF_21
0x3832	            0x85c0	                           test eax, eax	      2474	normal.c	FUNCTION_9	IF_21
0x3834	            0x7468	                            je 0x40038de	      2474	normal.c	FUNCTION_9	IF_21
0x3836	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      2476	normal.c	FUNCTION_9	IF_21
0x383c	            0x85c0	                           test eax, eax	      2476	normal.c	FUNCTION_9	IF_21
0x383e	            0x7416	                            je 0x4003896	      2476	normal.c	FUNCTION_9	IF_21
0x3840	    0x8b0500000000	            mov eax, dword [0x04003886] 	      2477	normal.c	FUNCTION_9	IF_21
0x3846	          0x83e060	                           and eax, 0x60	      2477	normal.c	FUNCTION_9	IF_21
0x3849	            0x85c0	                           test eax, eax	      2477	normal.c	FUNCTION_9	IF_21
0x384b	            0x7509	                           jne 0x4003896	      2477	normal.c	FUNCTION_9	IF_21
0x384d	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 1	      2478	normal.c	FUNCTION_9	IF_21
0x3854	            0x7548	                           jne 0x40038de	      2478	normal.c	FUNCTION_9	IF_21
0x3856	    0x8b0500000000	            mov eax, dword [0x0400389c] 	      2479	normal.c	FUNCTION_9	IF_21
0x385c	          0x83e00a	                            and eax, 0xa	      2479	normal.c	FUNCTION_9	IF_21
0x385f	            0x85c0	                           test eax, eax	      2479	normal.c	FUNCTION_9	IF_21
0x3861	            0x7412	                            je 0x40038b5	      2479	normal.c	FUNCTION_9	IF_21
0x3863	      0xe800000000	                          call 0x40038a8	      2480	normal.c	FUNCTION_9	IF_21	CALL_15
0x3868	            0x85c0	                           test eax, eax	      2480	normal.c	FUNCTION_9	IF_21	CALL_15
0x386a	            0x7409	                            je 0x40038b5	      2480	normal.c	FUNCTION_9	IF_21	CALL_15
0x386c	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      2479	normal.c	FUNCTION_9	IF_21
0x3873	            0x7429	                            je 0x40038de	      2479	normal.c	FUNCTION_9	IF_21
0x3875	    0x8b0500000000	            mov eax, dword [0x040038bb] 	      2482	normal.c	FUNCTION_9	IF_21
0x387b	          0x83e008	                              and eax, 8	      2482	normal.c	FUNCTION_9	IF_21
0x387e	            0x85c0	                           test eax, eax	      2482	normal.c	FUNCTION_9	IF_21
0x3880	            0x7412	                            je 0x40038d4	      2482	normal.c	FUNCTION_9	IF_21
0x3882	      0xe800000000	                          call 0x40038c7	      2483	normal.c	FUNCTION_9	IF_21	CALL_16
0x3887	            0x85c0	                           test eax, eax	      2483	normal.c	FUNCTION_9	IF_21	CALL_16
0x3889	            0x7509	                           jne 0x40038d4	      2483	normal.c	FUNCTION_9	IF_21	CALL_16
0x388b	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 2	      2482	normal.c	FUNCTION_9	IF_21
0x3892	            0x740a	                            je 0x40038de	      2482	normal.c	FUNCTION_9	IF_21
0x3894	      0xb800000000	                              mov eax, 0	      2486	normal.c	FUNCTION_9	IF_21
0x3899	      0xe9ec130000	                           jmp 0x4004cca	      2486	normal.c	FUNCTION_9	IF_21
0x389e	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      2493	normal.c	FUNCTION_9	IF_22
0x38a4	            0x85c0	                           test eax, eax	      2493	normal.c	FUNCTION_9	IF_22
0x38a6	            0x7513	                           jne 0x40038fb	      2493	normal.c	FUNCTION_9	IF_22
0x38a8	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 1	      2493	normal.c	FUNCTION_9	IF_22
0x38af	            0x750a	                           jne 0x40038fb	      2493	normal.c	FUNCTION_9	IF_22
0x38b1	      0xb800000000	                              mov eax, 0	      2494	normal.c	FUNCTION_9	IF_22
0x38b6	      0xe9cf130000	                           jmp 0x4004cca	      2494	normal.c	FUNCTION_9	IF_22
0x38bb	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      2496	normal.c	FUNCTION_9	IF_23
0x38c3	            0x7412	                            je 0x4003917	      2496	normal.c	FUNCTION_9	IF_23
0x38c5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2497	normal.c	FUNCTION_9	IF_23
0x38cc	          0x8b4004	                mov eax, dword [rax + 4]	      2497	normal.c	FUNCTION_9	IF_23
0x38cf	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      2497	normal.c	FUNCTION_9	IF_23
0x38d5	            0xeb0a	                           jmp 0x4003921	      2497	normal.c	FUNCTION_9	IF_23
0x38d7	    0xc78568ffffff	               mov dword [rbp - 0x98], 0	      2499	normal.c	FUNCTION_9	ELSE_4
0x38e1	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 1	      2504	normal.c	FUNCTION_9	ELSE_4	IF_24
0x38e8	     0xf85a7010000	                           jne 0x4003ad5	      2504	normal.c	FUNCTION_9	ELSE_4	IF_24
0x38ee	    0x8b0500000000	            mov eax, dword [0x04003934] 	      2506	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25
0x38f4	          0x83f801	                              cmp eax, 1	      2506	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25
0x38f7	     0xf8582000000	                           jne 0x40039bf	      2506	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25
0x38fd	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      2512	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26
0x3905	            0x7426	                            je 0x400396d	      2512	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26
0x3907	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2512	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26
0x390e	            0x8b00	                    mov eax, dword [rax]	      2512	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26
0x3910	            0x85c0	                           test eax, eax	      2512	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26
0x3912	            0x7419	                            je 0x400396d	      2512	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26
0x3914	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2514	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26	CALL_17
0x391b	          0x4889c7	                            mov rdi, rax	      2514	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26	CALL_17
0x391e	      0xe8c5200000	                    call sym.clearopbeep	      2514	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26	CALL_17
0x3923	      0xb800000000	                              mov eax, 0	      2515	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26
0x3928	      0xe95d130000	                           jmp 0x4004cca	      2515	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_26
0x392d	    0x8b0500000000	            mov eax, dword [0x04003973] 	      2523	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27
0x3933	            0x85c0	                           test eax, eax	      2523	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27
0x3935	            0x745f	                            je 0x40039d6	      2523	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27
0x3937	    0x8b0500000000	            mov eax, dword [0x0400397d] 	      2525	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	IF_28
0x393d	            0x85c0	                           test eax, eax	      2525	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	IF_28
0x393f	            0x7416	                            je 0x4003997	      2525	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	IF_28
0x3941	      0xbf07000000	                              mov edi, 7	      2527	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	IF_28	CALL_18
0x3946	      0xe800000000	                          call 0x400398b	      2527	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	IF_28	CALL_18
0x394b	      0xbf00000000	                              mov edi, 0	      2528	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	IF_28	CALL_19
0x3950	      0xe800000000	                          call 0x4003995	      2528	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	IF_28	CALL_19
0x3955	            0xeb14	                           jmp 0x40039ab	      2528	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	IF_28	CALL_19
0x3957	      0xbf79000000	                           mov edi, 0x79	      2532	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	ELSE_5	CALL_20
0x395c	      0xe800000000	                          call 0x40039a1	      2532	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	ELSE_5	CALL_20
0x3961	      0xbf03d0ffff	                     mov edi, 0xffffd003	      2533	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	ELSE_5	CALL_21
0x3966	      0xe800000000	                          call 0x40039ab	      2533	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27	ELSE_5	CALL_21
0x396b	    0xc70500000000	               mov dword [0x040039b5], 1	      2535	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27
0x3975	      0xb800000000	                              mov eax, 0	      2536	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27
0x397a	      0xe90b130000	                           jmp 0x4004cca	      2536	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_25	IF_27
0x397f	    0x8b0500000000	            mov eax, dword [0x040039c5] 	      2543	normal.c	FUNCTION_9	ELSE_4	IF_24	ELSE_6	IF_29
0x3985	          0x83e010	                           and eax, 0x10	      2543	normal.c	FUNCTION_9	ELSE_4	IF_24	ELSE_6	IF_29
0x3988	            0x85c0	                           test eax, eax	      2543	normal.c	FUNCTION_9	ELSE_4	IF_24	ELSE_6	IF_29
0x398a	            0x750a	                           jne 0x40039d6	      2543	normal.c	FUNCTION_9	ELSE_4	IF_24	ELSE_6	IF_29
0x398c	      0xb800000000	                              mov eax, 0	      2544	normal.c	FUNCTION_9	ELSE_4	IF_24	ELSE_6	IF_29
0x3991	      0xe9f4120000	                           jmp 0x4004cca	      2544	normal.c	FUNCTION_9	ELSE_4	IF_24	ELSE_6	IF_29
0x3996	    0x8b0500000000	            mov eax, dword [0x040039dc] 	      2553	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_22
0x399c	          0x83e010	                           and eax, 0x10	      2553	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_22
0x399f	            0x85c0	                           test eax, eax	      2553	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_22
0x39a1	            0x7512	                           jne 0x40039f5	      2553	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_22
0x39a3	      0xbf6e000000	                           mov edi, 0x6e	      2553	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_22
0x39a8	      0xe800000000	                          call 0x40039ed	      2553	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_22
0x39ad	            0x85c0	                           test eax, eax	      2553	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_22
0x39af	     0xf85e0000000	                           jne 0x4003ad5	      2553	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_22
0x39b5	    0x83bd68ffffff	           cmp dword [rbp - 0x98], 0x2e 	      2555	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	IF_31
0x39bc	            0x7517	                           jne 0x4003a15	      2555	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	IF_31
0x39be	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2556	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_23
0x39c4	      0xbe01000000	                              mov esi, 1	      2556	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_23
0x39c9	            0x89c7	                            mov edi, eax	      2556	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_23
0x39cb	      0xe800000000	                          call 0x4003a10	      2556	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_23
0x39d0	      0xe9b6000000	                           jmp 0x4003acb	      2556	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	CALL_23
0x39d5	    0x8b0500000000	            mov eax, dword [0x04003a1b] 	      2560	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_32
0x39db	            0x85c0	                           test eax, eax	      2560	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_32
0x39dd	            0x7413	                            je 0x4003a32	      2560	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_32
0x39df	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      2560	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_32
0x39e6	            0x750a	                           jne 0x4003a32	      2560	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_32
0x39e8	    0xc78568ffffff	           mov dword [rbp - 0x98], 0x2a 	      2561	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_32
0x39f2	    0x8b0500000000	            mov eax, dword [0x04003a38] 	      2563	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x39f8	          0x83e040	                           and eax, 0x40	      2563	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x39fb	            0x85c0	                           test eax, eax	      2563	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x39fd	            0x7425	                            je 0x4003a64	      2563	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x39ff	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2563	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x3a05	            0x89c7	                            mov edi, eax	      2563	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x3a07	      0xe800000000	                          call 0x4003a4c	      2563	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x3a0c	            0x85c0	                           test eax, eax	      2563	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x3a0e	            0x7514	                           jne 0x4003a64	      2563	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	IF_33	CALL_24
0x3a10	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2564	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	CALL_25
0x3a16	      0xbe01000000	                              mov esi, 1	      2564	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	CALL_25
0x3a1b	            0x89c7	                            mov edi, eax	      2564	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	CALL_25
0x3a1d	      0xe800000000	                          call 0x4003a62	      2564	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	CALL_25
0x3a22	            0xeb67	                           jmp 0x4003acb	      2564	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	CALL_25
0x3a24	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2567	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x3a2a	          0x83c802	                               or eax, 2	      2567	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x3a2d	            0x89c2	                            mov edx, eax	      2567	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x3a2f	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2567	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x3a35	            0x89d1	                            mov ecx, edx	      2567	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x3a37	      0xba01000000	                              mov edx, 1	      2567	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x3a3c	      0xbeffffffff	                     mov esi, 0xffffffff	      2567	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x3a41	            0x89c7	                            mov edi, eax	      2567	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x3a43	      0xe800000000	                          call 0x4003a88	      2567	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_26
0x3a48	      0xbf12000000	                           mov edi, 0x12	      2570	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_27
0x3a4d	      0xe800000000	                          call 0x4003a92	      2570	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_27
0x3a52	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      2571	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_28
0x3a59	            0x7407	                            je 0x4003aa2	      2571	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_28
0x3a5b	      0xb810000000	                           mov eax, 0x10	      2571	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_28
0x3a60	            0xeb05	                           jmp 0x4003aa7	      2571	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_28
0x3a62	      0xb80f000000	                            mov eax, 0xf	      2571	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_28
0x3a67	            0x89c7	                            mov edi, eax	      2571	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_28
0x3a69	      0xe800000000	                          call 0x4003aae	      2571	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_28
0x3a6e	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      2572	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_29
0x3a75	            0x7408	                            je 0x4003abf	      2572	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_29
0x3a77	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2572	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_29
0x3a7d	            0xeb05	                           jmp 0x4003ac4	      2572	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_29
0x3a7f	      0xb822000000	                           mov eax, 0x22	      2572	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_29
0x3a84	            0x89c7	                            mov edi, eax	      2572	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_29
0x3a86	      0xe800000000	                          call 0x4003acb	      2572	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30	ELSE_7	ELSE_8	CALL_29
0x3a8b	      0xb800000000	                              mov eax, 0	      2575	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30
0x3a90	      0xe9f5110000	                           jmp 0x4004cca	      2575	normal.c	FUNCTION_9	ELSE_4	IF_24	IF_30
0x3a95	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      2580	normal.c	FUNCTION_9	IF_34
0x3a9b	            0x85c0	                           test eax, eax	      2580	normal.c	FUNCTION_9	IF_34
0x3a9d	            0x7507	                           jne 0x4003ae6	      2580	normal.c	FUNCTION_9	IF_34
0x3a9f	    0x838d5cffffff	                or dword [rbp - 0xa4], 5	      2581	normal.c	FUNCTION_9	IF_34
0x3aa6	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      2583	normal.c	FUNCTION_9
0x3aae	    0x8b0500000000	            mov eax, dword [0x04003af4] 	      2586	normal.c	FUNCTION_9	IF_35
0x3ab4	            0x85c0	                           test eax, eax	      2586	normal.c	FUNCTION_9	IF_35
0x3ab6	     0xf85d7010000	                           jne 0x4003cd3	      2586	normal.c	FUNCTION_9	IF_35
0x3abc	    0x488b05000000	            mov rax, qword [0x04003b03] 	      2586	normal.c	FUNCTION_9	IF_35
0x3ac3	    0x8b809c000000	            mov eax, dword [rax + 0x9c] 	      2586	normal.c	FUNCTION_9	IF_35
0x3ac9	            0x85c0	                           test eax, eax	      2586	normal.c	FUNCTION_9	IF_35
0x3acb	     0xf8ec2010000	                           jle 0x4003cd3	      2586	normal.c	FUNCTION_9	IF_35
0x3ad1	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      2588	normal.c	FUNCTION_9	IF_35	IF_36
0x3ad7	            0x85c0	                           test eax, eax	      2588	normal.c	FUNCTION_9	IF_35	IF_36
0x3ad9	            0x7473	                            je 0x4003b8e	      2588	normal.c	FUNCTION_9	IF_35	IF_36
0x3adb	    0x8b0500000000	            mov eax, dword [0x04003b21] 	      2590	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3ae1	            0x85c0	                           test eax, eax	      2590	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3ae3	            0x745f	                            je 0x4003b84	      2590	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3ae5	    0x488b05000000	            mov rax, qword [0x04003b2c] 	      2592	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3aec	    0x8b1500000000	            mov edx, dword [0x04003b32] 	      2592	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3af2	          0x4863d2	                         movsxd rdx, edx	      2592	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3af5	          0x4801d2	                            add rdx, rdx	      2592	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3af8	          0x4801d0	                            add rax, rdx	      2592	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3afb	           0xfb700	                   movzx eax, word [rax]	      2592	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3afe	              0x98	                                    cwde	      2592	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3aff	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      2592	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3b05	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      2593	normal.c	FUNCTION_9	IF_35	IF_36	IF_37	CALL_31
0x3b0c	            0x7e2a	                           jle 0x4003b78	      2593	normal.c	FUNCTION_9	IF_35	IF_36	IF_37	CALL_31
0x3b0e	    0x488b05000000	            mov rax, qword [0x04003b55] 	      2593	normal.c	FUNCTION_9	IF_35	IF_36	IF_37	CALL_31
0x3b15	          0x4889c7	                            mov rdi, rax	      2593	normal.c	FUNCTION_9	IF_35	IF_36	IF_37	CALL_31
0x3b18	      0xe800000000	                          call 0x4003b5d	      2593	normal.c	FUNCTION_9	IF_35	IF_36	IF_37	CALL_31
0x3b1d	    0x3b8560ffffff	             cmp eax, dword [rbp - 0xa0]	      2594	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3b23	            0x7e0b	                           jle 0x4003b70	      2594	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3b25	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2594	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3b2b	          0x83e801	                              sub eax, 1	      2594	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3b2e	            0xeb0d	                           jmp 0x4003b7d	      2594	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3b30	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2594	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3b36	            0xeb05	                           jmp 0x4003b7d	      2594	normal.c	FUNCTION_9	IF_35	IF_36	IF_37
0x3b38	      0xb80f270000	                         mov eax, 0x270f	      2593	normal.c	FUNCTION_9	IF_35	IF_36	IF_37	CALL_31
0x3b3d	            0x89c7	                            mov edi, eax	      2593	normal.c	FUNCTION_9	IF_35	IF_36	IF_37	CALL_31
0x3b3f	      0xe800000000	                          call 0x4003b84	      2593	normal.c	FUNCTION_9	IF_35	IF_36	IF_37	CALL_31
0x3b44	      0xb800000000	                              mov eax, 0	      2596	normal.c	FUNCTION_9	IF_35	IF_36
0x3b49	      0xe93c110000	                           jmp 0x4004cca	      2596	normal.c	FUNCTION_9	IF_35	IF_36
0x3b4e	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      2600	normal.c	FUNCTION_9	IF_35	IF_38
0x3b54	            0x85c0	                           test eax, eax	      2600	normal.c	FUNCTION_9	IF_35	IF_38
0x3b56	     0xf842d010000	                            je 0x4003cc9	      2600	normal.c	FUNCTION_9	IF_35	IF_38
0x3b5c	    0x8b0500000000	            mov eax, dword [0x04003ba2] 	      2602	normal.c	FUNCTION_9	IF_35	IF_38
0x3b62	            0x85c0	                           test eax, eax	      2602	normal.c	FUNCTION_9	IF_35	IF_38
0x3b64	     0xf851f010000	                           jne 0x4003cc9	      2602	normal.c	FUNCTION_9	IF_35	IF_38
0x3b6a	    0x8b0500000000	            mov eax, dword [0x04003bb0] 	      2604	normal.c	FUNCTION_9	IF_35	IF_38
0x3b70	          0x4863d0	                         movsxd rdx, eax	      2604	normal.c	FUNCTION_9	IF_35	IF_38
0x3b73	    0x488b05000000	            mov rax, qword [0x04003bba] 	      2604	normal.c	FUNCTION_9	IF_35	IF_38
0x3b7a	          0x4839c2	                            cmp rdx, rax	      2604	normal.c	FUNCTION_9	IF_35	IF_38
0x3b7d	     0xf8d06010000	                           jge 0x4003cc9	      2604	normal.c	FUNCTION_9	IF_35	IF_38
0x3b83	    0xc70500000000	               mov dword [0x04003bcd], 1	      2606	normal.c	FUNCTION_9	IF_35	IF_38
0x3b8d	    0x488b05000000	            mov rax, qword [0x04003bd4] 	      2607	normal.c	FUNCTION_9	IF_35	IF_38
0x3b94	    0x8b1500000000	            mov edx, dword [0x04003bda] 	      2607	normal.c	FUNCTION_9	IF_35	IF_38
0x3b9a	          0x4863d2	                         movsxd rdx, edx	      2607	normal.c	FUNCTION_9	IF_35	IF_38
0x3b9d	          0x4801d2	                            add rdx, rdx	      2607	normal.c	FUNCTION_9	IF_35	IF_38
0x3ba0	          0x4801d0	                            add rax, rdx	      2607	normal.c	FUNCTION_9	IF_35	IF_38
0x3ba3	           0xfb700	                   movzx eax, word [rax]	      2607	normal.c	FUNCTION_9	IF_35	IF_38
0x3ba6	              0x98	                                    cwde	      2607	normal.c	FUNCTION_9	IF_35	IF_38
0x3ba7	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      2607	normal.c	FUNCTION_9	IF_35	IF_38
0x3bad	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      2608	normal.c	FUNCTION_9	IF_35	IF_38	IF_39
0x3bb4	            0x785e	                            js 0x4003c54	      2608	normal.c	FUNCTION_9	IF_35	IF_38	IF_39
0x3bb6	    0x8b0500000000	            mov eax, dword [0x04003bfc] 	      2610	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40
0x3bbc	          0x83e060	                           and eax, 0x60	      2610	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40
0x3bbf	          0x83f820	                           cmp eax, 0x20	      2610	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40
0x3bc2	            0x752f	                           jne 0x4003c33	      2610	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40
0x3bc4	      0xe800000000	                          call 0x4003c09	      2613	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_32
0x3bc9	      0xe800000000	                          call 0x4003c0e	      2614	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_33
0x3bce	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      2615	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_34
0x3bd5	            0x740b	                            je 0x4003c22	      2615	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_34
0x3bd7	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2615	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_34
0x3bdd	          0x83e801	                              sub eax, 1	      2615	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_34
0x3be0	            0xeb05	                           jmp 0x4003c27	      2615	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_34
0x3be2	      0xb80f270000	                         mov eax, 0x270f	      2615	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_34
0x3be7	            0x89c7	                            mov edi, eax	      2615	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_34
0x3be9	      0xe800000000	                          call 0x4003c2e	      2615	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_34
0x3bee	      0xe996000000	                           jmp 0x4003cc9	      2615	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	IF_40	CALL_34
0x3bf3	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2621	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	ELSE_9	CALL_35
0x3bf9	            0x89c7	                            mov edi, eax	      2621	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	ELSE_9	CALL_35
0x3bfb	      0xe800000000	                          call 0x4003c40	      2621	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	ELSE_9	CALL_35
0x3c00	    0x488b05000000	            mov rax, qword [0x04003c47] 	      2624	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	ELSE_9	IF_41
0x3c07	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      2624	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	ELSE_9	IF_41
0x3c0b	            0x747c	                            je 0x4003cc9	      2624	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	ELSE_9	IF_41
0x3c0d	      0xe800000000	                          call 0x4003c52	      2625	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	ELSE_9	CALL_36
0x3c12	            0xeb75	                           jmp 0x4003cc9	      2625	normal.c	FUNCTION_9	IF_35	IF_38	IF_39	ELSE_9	CALL_36
0x3c14	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      2628	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42
0x3c1b	            0x796c	                           jns 0x4003cc9	      2628	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42
0x3c1d	    0x81bd60ffffff	     cmp dword [rbp - 0xa0], 0xfffffc19 	      2633	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	IF_43
0x3c27	            0x750d	                           jne 0x4003c76	      2633	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	IF_43
0x3c29	    0x488b05000000	            mov rax, qword [0x04003c70] 	      2634	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	IF_43
0x3c30	        0x48894598	             mov qword [rbp - 0x68], rax	      2634	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	IF_43
0x3c34	            0xeb13	                           jmp 0x4003c89	      2634	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	IF_43
0x3c36	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2636	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	CALL_37
0x3c3c	            0xf7d8	                                 neg eax	      2636	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	CALL_37
0x3c3e	            0x89c7	                            mov edi, eax	      2636	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	CALL_37
0x3c40	      0xe800000000	                          call 0x4003c85	      2636	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	CALL_37
0x3c45	        0x48894598	             mov qword [rbp - 0x68], rax	      2636	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	CALL_37
0x3c49	    0x488b05000000	            mov rax, qword [0x04003c90] 	      2637	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	IF_44
0x3c50	        0x48394598	            cmp qword [rbp - 0x68], rax 	      2637	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	IF_44
0x3c54	            0x751b	                           jne 0x4003cb1	      2637	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	IF_44
0x3c56	    0x488b05000000	            mov rax, qword [0x04003c9d] 	      2639	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	IF_44	IF_45
0x3c5d	          0x488b00	                    mov rax, qword [rax]	      2639	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	IF_44	IF_45
0x3c60	          0x4885c0	                           test rax, rax	      2639	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	IF_44	IF_45
0x3c63	            0x7424	                            je 0x4003cc9	      2639	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	IF_44	IF_45
0x3c65	      0xbf00000000	                              mov edi, 0	      2640	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	IF_44	CALL_38
0x3c6a	      0xe800000000	                          call 0x4003caf	      2640	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	IF_44	CALL_38
0x3c6f	            0xeb18	                           jmp 0x4003cc9	      2640	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	IF_44	CALL_38
0x3c71	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2642	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	ELSE_12	IF_46
0x3c76	            0x7411	                            je 0x4003cc9	      2642	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	ELSE_12	IF_46
0x3c78	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2643	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	ELSE_12	IF_46
0x3c7c	      0xbe00000000	                              mov esi, 0	      2643	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	ELSE_12	IF_46
0x3c81	          0x4889c7	                            mov rdi, rax	      2643	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	ELSE_12	IF_46
0x3c84	      0xe800000000	                          call 0x4003cc9	      2643	normal.c	FUNCTION_9	IF_35	IF_38	ELSE_10	IF_42	ELSE_12	IF_46
0x3c89	      0xb801000000	                              mov eax, 1	      2646	normal.c	FUNCTION_9	IF_35
0x3c8e	      0xe9f70f0000	                           jmp 0x4004cca	      2646	normal.c	FUNCTION_9	IF_35
0x3c93	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      2648	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3c99	            0x85c0	                           test eax, eax	      2648	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3c9b	            0x7454	                            je 0x4003d31	      2648	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3c9d	    0x8b0500000000	            mov eax, dword [0x04003ce3] 	      2648	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3ca3	            0x85c0	                           test eax, eax	      2648	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3ca5	            0x744a	                            je 0x4003d31	      2648	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3ca7	    0x488b05000000	            mov rax, qword [0x04003cee] 	      2650	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3cae	    0x8b1500000000	            mov edx, dword [0x04003cf4] 	      2650	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3cb4	          0x4863d2	                         movsxd rdx, edx	      2650	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3cb7	          0x4801d2	                            add rdx, rdx	      2650	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3cba	          0x4801d0	                            add rax, rdx	      2650	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3cbd	           0xfb700	                   movzx eax, word [rax]	      2650	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3cc0	              0x98	                                    cwde	      2650	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3cc1	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      2650	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3cc7	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      2651	normal.c	FUNCTION_9	ELSE_13	IF_47	CALL_40
0x3cce	            0x7e0b	                           jle 0x4003d1b	      2651	normal.c	FUNCTION_9	ELSE_13	IF_47	CALL_40
0x3cd0	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2651	normal.c	FUNCTION_9	ELSE_13	IF_47	CALL_40
0x3cd6	          0x83e801	                              sub eax, 1	      2651	normal.c	FUNCTION_9	ELSE_13	IF_47	CALL_40
0x3cd9	            0xeb05	                           jmp 0x4003d20	      2651	normal.c	FUNCTION_9	ELSE_13	IF_47	CALL_40
0x3cdb	      0xb80f270000	                         mov eax, 0x270f	      2651	normal.c	FUNCTION_9	ELSE_13	IF_47	CALL_40
0x3ce0	            0x89c7	                            mov edi, eax	      2651	normal.c	FUNCTION_9	ELSE_13	IF_47	CALL_40
0x3ce2	      0xe800000000	                          call 0x4003d27	      2651	normal.c	FUNCTION_9	ELSE_13	IF_47	CALL_40
0x3ce7	      0xb800000000	                              mov eax, 0	      2652	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3cec	      0xe9990f0000	                           jmp 0x4004cca	      2652	normal.c	FUNCTION_9	ELSE_13	IF_47
0x3cf1	      0xe800000000	                          call 0x4003d36	      2661	normal.c	FUNCTION_9	IF_48	CALL_41
0x3cf6	            0x85c0	                           test eax, eax	      2661	normal.c	FUNCTION_9	IF_48	CALL_41
0x3cf8	            0x744f	                            je 0x4003d89	      2661	normal.c	FUNCTION_9	IF_48	CALL_41
0x3cfa	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 2	      2663	normal.c	FUNCTION_9	IF_48	IF_49
0x3d01	            0x7517	                           jne 0x4003d5a	      2663	normal.c	FUNCTION_9	IF_48	IF_49
0x3d03	    0x8b0500000000	            mov eax, dword [0x04003d49] 	      2664	normal.c	FUNCTION_9	IF_48	IF_49
0x3d09	          0x83e006	                              and eax, 6	      2664	normal.c	FUNCTION_9	IF_48	IF_49
0x3d0c	            0x85c0	                           test eax, eax	      2664	normal.c	FUNCTION_9	IF_48	IF_49
0x3d0e	            0x750a	                           jne 0x4003d5a	      2664	normal.c	FUNCTION_9	IF_48	IF_49
0x3d10	      0xb800000000	                              mov eax, 0	      2743	normal.c	FUNCTION_9	IF_48	IF_49	ELSE_18
0x3d15	      0xe9700f0000	                           jmp 0x4004cca	      2743	normal.c	FUNCTION_9	IF_48	IF_49	ELSE_18
0x3d1a	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      2746	normal.c	FUNCTION_9	IF_48	ELSE_18	IF_61
0x3d21	            0x7526	                           jne 0x4003d89	      2746	normal.c	FUNCTION_9	IF_48	ELSE_18	IF_61
0x3d23	    0x8b0500000000	            mov eax, dword [0x04003d69] 	      2747	normal.c	FUNCTION_9	IF_48	ELSE_18	IF_61
0x3d29	          0x83e00a	                            and eax, 0xa	      2747	normal.c	FUNCTION_9	IF_48	ELSE_18	IF_61
0x3d2c	            0x85c0	                           test eax, eax	      2747	normal.c	FUNCTION_9	IF_48	ELSE_18	IF_61
0x3d2e	            0x7419	                            je 0x4003d89	      2747	normal.c	FUNCTION_9	IF_48	ELSE_18	IF_61
0x3d30	    0xc78558ffffff	               mov dword [rbp - 0xa8], 2	      2749	normal.c	FUNCTION_9	IF_48	ELSE_18	IF_61
0x3d3a	    0x8b0500000000	            mov eax, dword [0x04003d80] 	      2750	normal.c	FUNCTION_9	IF_48	ELSE_18	IF_61
0x3d40	          0x83e0fd	                     and eax, 0xfffffffd	      2750	normal.c	FUNCTION_9	IF_48	ELSE_18	IF_61
0x3d43	    0x890500000000	            mov dword [0x04003d89], eax 	      2750	normal.c	FUNCTION_9	IF_48	ELSE_18	IF_61
0x3d49	    0x8b0500000000	            mov eax, dword [0x04003d8f] 	      2754	normal.c	FUNCTION_9	IF_62
0x3d4f	          0x83e011	                           and eax, 0x11	      2754	normal.c	FUNCTION_9	IF_62
0x3d52	            0x85c0	                           test eax, eax	      2754	normal.c	FUNCTION_9	IF_62
0x3d54	     0xf8472010000	                            je 0x4003f0c	      2754	normal.c	FUNCTION_9	IF_62
0x3d5a	    0x8b0500000000	            mov eax, dword [0x04003da0] 	      2755	normal.c	FUNCTION_9	IF_62
0x3d60	          0x83e006	                              and eax, 6	      2755	normal.c	FUNCTION_9	IF_62
0x3d63	            0x85c0	                           test eax, eax	      2755	normal.c	FUNCTION_9	IF_62
0x3d65	     0xf8561010000	                           jne 0x4003f0c	      2755	normal.c	FUNCTION_9	IF_62
0x3d6b	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      2757	normal.c	FUNCTION_9	IF_62	IF_63
0x3d72	            0x7542	                           jne 0x4003df6	      2757	normal.c	FUNCTION_9	IF_62	IF_63
0x3d74	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      2759	normal.c	FUNCTION_9	IF_62	IF_63	IF_64
0x3d7a	            0x85c0	                           test eax, eax	      2759	normal.c	FUNCTION_9	IF_62	IF_63	IF_64
0x3d7c	            0x741a	                            je 0x4003dd8	      2759	normal.c	FUNCTION_9	IF_62	IF_63	IF_64
0x3d7e	    0x8b0500000000	            mov eax, dword [0x04003dc4] 	      2763	normal.c	FUNCTION_9	IF_62	IF_63	IF_64	IF_65
0x3d84	            0x85c0	                           test eax, eax	      2763	normal.c	FUNCTION_9	IF_62	IF_63	IF_64	IF_65
0x3d86	     0xf8440010000	                            je 0x4003f0c	      2763	normal.c	FUNCTION_9	IF_62	IF_63	IF_64	IF_65
0x3d8c	    0x838d5cffffff	             or dword [rbp - 0xa4], 0x10	      2764	normal.c	FUNCTION_9	IF_62	IF_63	IF_64	IF_65
0x3d93	      0xe934010000	                           jmp 0x4003f0c	      2764	normal.c	FUNCTION_9	IF_62	IF_63	IF_64	IF_65
0x3d98	      0xbf76000000	                           mov edi, 0x76	      2766	normal.c	FUNCTION_9	IF_62	IF_63	ELSE_19	IF_66	CALL_57
0x3d9d	      0xe800000000	                          call 0x4003de2	      2766	normal.c	FUNCTION_9	IF_62	IF_63	ELSE_19	IF_66	CALL_57
0x3da2	            0x85c0	                           test eax, eax	      2766	normal.c	FUNCTION_9	IF_62	IF_63	ELSE_19	IF_66	CALL_57
0x3da4	     0xf8422010000	                            je 0x4003f0c	      2766	normal.c	FUNCTION_9	IF_62	IF_63	ELSE_19	IF_66	CALL_57
0x3daa	    0x838d5cffffff	                or dword [rbp - 0xa4], 2	      2767	normal.c	FUNCTION_9	IF_62	IF_63	ELSE_19	IF_66
0x3db1	      0xe916010000	                           jmp 0x4003f0c	      2767	normal.c	FUNCTION_9	IF_62	IF_63	ELSE_19	IF_66
0x3db6	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 2	      2769	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67
0x3dbd	     0xf8509010000	                           jne 0x4003f0c	      2769	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67
0x3dc3	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      2771	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68
0x3dc9	            0x85c0	                           test eax, eax	      2771	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68
0x3dcb	     0xf84df000000	                            je 0x4003ef0	      2771	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68
0x3dd1	    0x8b0500000000	            mov eax, dword [0x04003e17] 	      2771	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68
0x3dd7	            0x85c0	                           test eax, eax	      2771	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68
0x3dd9	     0xf84d1000000	                            je 0x4003ef0	      2771	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68
0x3ddf	    0x488b05000000	            mov rax, qword [0x04003e26] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3de6	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3dea	    0x488b05000000	            mov rax, qword [0x04003e31] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3df1	          0x4839c2	                            cmp rdx, rax	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3df4	            0x741a	                            je 0x4003e50	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3df6	    0x488b05000000	            mov rax, qword [0x04003e3d] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3dfd	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e01	    0x488b05000000	            mov rax, qword [0x04003e48] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e08	          0x4839c2	                            cmp rdx, rax	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e0b	           0xf9cc0	                                 setl al	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e0e	            0xeb40	                           jmp 0x4003e90	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e10	    0x488b05000000	            mov rax, qword [0x04003e57] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e17	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e1a	    0x8b0500000000	            mov eax, dword [0x04003e60] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e20	            0x39c2	                            cmp edx, eax	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e22	            0x7417	                            je 0x4003e7b	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e24	    0x488b05000000	            mov rax, qword [0x04003e6b] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e2b	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e2e	    0x8b0500000000	            mov eax, dword [0x04003e74] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e34	            0x39c2	                            cmp edx, eax	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e36	           0xf9cc0	                                 setl al	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e39	            0xeb15	                           jmp 0x4003e90	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e3b	    0x488b05000000	            mov rax, qword [0x04003e82] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e42	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e45	    0x8b0500000000	            mov eax, dword [0x04003e8b] 	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e4b	            0x39c2	                            cmp edx, eax	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e4d	           0xf9cc0	                                 setl al	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e50	            0x84c0	                             test al, al	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e52	            0x742f	                            je 0x4003ec3	      2777	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69	CALL_58
0x3e54	    0x488b05000000	            mov rax, qword [0x04003e9b] 	      2779	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x3e5b	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2779	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x3e5f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2779	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x3e63	        0x488945b0	             mov qword [rbp - 0x50], rax	      2779	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x3e67	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2779	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x3e6b	    0x488b05000000	            mov rax, qword [0x04003eb2] 	      2780	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x3e72	    0x488b15000000	            mov rdx, qword [0x04003eb9] 	      2780	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x3e79	        0x488945d0	             mov qword [rbp - 0x30], rax	      2780	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x3e7d	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2780	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x3e81	            0xeb2d	                           jmp 0x4003ef0	      2780	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	IF_69
0x3e83	    0x488b05000000	            mov rax, qword [0x04003eca] 	      2784	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x3e8a	    0x488b15000000	            mov rdx, qword [0x04003ed1] 	      2784	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x3e91	        0x488945b0	             mov qword [rbp - 0x50], rax	      2784	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x3e95	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2784	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x3e99	    0x488b05000000	            mov rax, qword [0x04003ee0] 	      2785	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x3ea0	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2785	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x3ea4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2785	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x3ea8	        0x488945d0	             mov qword [rbp - 0x30], rax	      2785	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x3eac	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2785	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_68	ELSE_21
0x3eb0	    0x838d5cffffff	                or dword [rbp - 0xa4], 1	      2788	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67
0x3eb7	      0xbf76000000	                           mov edi, 0x76	      2789	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_70	CALL_59
0x3ebc	      0xe800000000	                          call 0x4003f01	      2789	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_70	CALL_59
0x3ec1	            0x85c0	                           test eax, eax	      2789	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_70	CALL_59
0x3ec3	            0x7407	                            je 0x4003f0c	      2789	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_70	CALL_59
0x3ec5	    0x838d5cffffff	                or dword [rbp - 0xa4], 2	      2790	normal.c	FUNCTION_9	IF_62	ELSE_20	IF_67	IF_70
0x3ecc	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      2798	normal.c	FUNCTION_9	IF_71
0x3ed2	            0x85c0	                           test eax, eax	      2798	normal.c	FUNCTION_9	IF_71
0x3ed4	            0x752f	                           jne 0x4003f45	      2798	normal.c	FUNCTION_9	IF_71
0x3ed6	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      2798	normal.c	FUNCTION_9	IF_71
0x3ede	            0x7425	                            je 0x4003f45	      2798	normal.c	FUNCTION_9	IF_71
0x3ee0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2798	normal.c	FUNCTION_9	IF_71
0x3ee7	            0x8b00	                    mov eax, dword [rax]	      2798	normal.c	FUNCTION_9	IF_71
0x3ee9	            0x85c0	                           test eax, eax	      2798	normal.c	FUNCTION_9	IF_71
0x3eeb	            0x7418	                            je 0x4003f45	      2798	normal.c	FUNCTION_9	IF_71
0x3eed	    0xc70500000000	               mov dword [0x04003f37], 0	      2800	normal.c	FUNCTION_9	IF_71
0x3ef7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2801	normal.c	FUNCTION_9	IF_71
0x3efe	    0xc74008000000	                  mov dword [rax + 8], 0	      2801	normal.c	FUNCTION_9	IF_71
0x3f05	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      2805	normal.c	FUNCTION_9	IF_72
0x3f0b	            0x85c0	                           test eax, eax	      2805	normal.c	FUNCTION_9	IF_72
0x3f0d	            0x7511	                           jne 0x4003f60	      2805	normal.c	FUNCTION_9	IF_72
0x3f0f	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      2805	normal.c	FUNCTION_9	IF_72
0x3f15	            0x85c0	                           test eax, eax	      2805	normal.c	FUNCTION_9	IF_72
0x3f17	            0x7507	                           jne 0x4003f60	      2805	normal.c	FUNCTION_9	IF_72
0x3f19	    0x838d5cffffff	             or dword [rbp - 0xa4], 0x20	      2806	normal.c	FUNCTION_9	IF_72
0x3f20	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      2811	normal.c	FUNCTION_9	CALL_60
0x3f28	            0x740d	                            je 0x4003f77	      2811	normal.c	FUNCTION_9	CALL_60
0x3f2a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2811	normal.c	FUNCTION_9	CALL_60
0x3f31	        0x488d4814	                   lea rcx, [rax + 0x14]	      2811	normal.c	FUNCTION_9	CALL_60
0x3f35	            0xeb05	                           jmp 0x4003f7c	      2811	normal.c	FUNCTION_9	CALL_60
0x3f37	      0xb900000000	                              mov ecx, 0	      2811	normal.c	FUNCTION_9	CALL_60
0x3f3c	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      2811	normal.c	FUNCTION_9	CALL_60
0x3f42	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2811	normal.c	FUNCTION_9	CALL_60
0x3f48	          0x4889ce	                            mov rsi, rcx	      2811	normal.c	FUNCTION_9	CALL_60
0x3f4b	            0x89c7	                            mov edi, eax	      2811	normal.c	FUNCTION_9	CALL_60
0x3f4d	      0xe800000000	                          call 0x4003f92	      2811	normal.c	FUNCTION_9	CALL_60
0x3f52	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2811	normal.c	FUNCTION_9	CALL_60
0x3f58	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2816	normal.c	FUNCTION_9	IF_73
0x3f5e	      0x2500080000	                          and eax, 0x800	      2816	normal.c	FUNCTION_9	IF_73
0x3f63	            0x85c0	                           test eax, eax	      2816	normal.c	FUNCTION_9	IF_73
0x3f65	            0x740a	                            je 0x4003fb1	      2816	normal.c	FUNCTION_9	IF_73
0x3f67	      0xb800000000	                              mov eax, 0	      2817	normal.c	FUNCTION_9	IF_73
0x3f6c	      0xe9190d0000	                           jmp 0x4004cca	      2817	normal.c	FUNCTION_9	IF_73
0x3f71	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2819	normal.c	FUNCTION_9
0x3f77	      0x2500010000	                          and eax, 0x100	      2819	normal.c	FUNCTION_9
0x3f7c	          0x894580	             mov dword [rbp - 0x80], eax	      2819	normal.c	FUNCTION_9
0x3f7f	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2820	normal.c	FUNCTION_9
0x3f85	          0x83e002	                              and eax, 2	      2820	normal.c	FUNCTION_9
0x3f88	          0x894584	             mov dword [rbp - 0x7c], eax	      2820	normal.c	FUNCTION_9
0x3f8b	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2821	normal.c	FUNCTION_9
0x3f91	          0x83e004	                              and eax, 4	      2821	normal.c	FUNCTION_9
0x3f94	          0x894588	             mov dword [rbp - 0x78], eax	      2821	normal.c	FUNCTION_9
0x3f97	    0x488b05000000	            mov rax, qword [0x04003fde] 	      2824	normal.c	FUNCTION_9	IF_74	CALL_61
0x3f9e	          0x4889c7	                            mov rdi, rax	      2824	normal.c	FUNCTION_9	IF_74	CALL_61
0x3fa1	      0xe800000000	                          call 0x4003fe6	      2824	normal.c	FUNCTION_9	IF_74	CALL_61
0x3fa6	            0x85c0	                           test eax, eax	      2824	normal.c	FUNCTION_9	IF_74	CALL_61
0x3fa8	            0x743f	                            je 0x4004029	      2824	normal.c	FUNCTION_9	IF_74	CALL_61
0x3faa	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2825	normal.c	FUNCTION_9	IF_74
0x3fb0	          0x83e006	                              and eax, 6	      2825	normal.c	FUNCTION_9	IF_74
0x3fb3	            0x85c0	                           test eax, eax	      2825	normal.c	FUNCTION_9	IF_74
0x3fb5	            0x7532	                           jne 0x4004029	      2825	normal.c	FUNCTION_9	IF_74
0x3fb7	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      2827	normal.c	FUNCTION_9	IF_74	CALL_62
0x3fbd	            0xf7d8	                                 neg eax	      2827	normal.c	FUNCTION_9	IF_74	CALL_62
0x3fbf	          0xc1e808	                              shr eax, 8	      2827	normal.c	FUNCTION_9	IF_74	CALL_62
0x3fc2	      0x25ff000000	                           and eax, 0xff	      2827	normal.c	FUNCTION_9	IF_74	CALL_62
0x3fc7	          0x89458c	             mov dword [rbp - 0x74], eax	      2827	normal.c	FUNCTION_9	IF_74	CALL_62
0x3fca	        0x837d8c2e	           cmp dword [rbp - 0x74], 0x2e 	      2829	normal.c	FUNCTION_9	IF_74	IF_75
0x3fce	            0x740c	                            je 0x400401c	      2829	normal.c	FUNCTION_9	IF_74	IF_75
0x3fd0	        0x837d8c31	           cmp dword [rbp - 0x74], 0x31 	      2829	normal.c	FUNCTION_9	IF_74	IF_75
0x3fd4	            0x7406	                            je 0x400401c	      2829	normal.c	FUNCTION_9	IF_74	IF_75
0x3fd6	        0x837d8c34	           cmp dword [rbp - 0x74], 0x34 	      2830	normal.c	FUNCTION_9	IF_74	IF_75
0x3fda	            0x750d	                           jne 0x4004029	      2830	normal.c	FUNCTION_9	IF_74	IF_75
0x3fdc	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2831	normal.c	FUNCTION_9	IF_74	CALL_63
0x3fe2	            0x89c7	                            mov edi, eax	      2831	normal.c	FUNCTION_9	IF_74	CALL_63
0x3fe4	      0xe800000000	                          call 0x4004029	      2831	normal.c	FUNCTION_9	IF_74	CALL_63
0x3fe9	    0x488b05000000	            mov rax, qword [0x04004030] 	      2837	normal.c	FUNCTION_9	IF_76
0x3ff0	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      2837	normal.c	FUNCTION_9	IF_76
0x3ff4	            0x7426	                            je 0x400405c	      2837	normal.c	FUNCTION_9	IF_76
0x3ff6	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      2837	normal.c	FUNCTION_9	IF_76
0x3ffe	            0x741c	                            je 0x400405c	      2837	normal.c	FUNCTION_9	IF_76
0x4000	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2837	normal.c	FUNCTION_9	IF_76
0x4007	            0x8b00	                    mov eax, dword [rax]	      2837	normal.c	FUNCTION_9	IF_76
0x4009	            0x85c0	                           test eax, eax	      2837	normal.c	FUNCTION_9	IF_76
0x400b	            0x740f	                            je 0x400405c	      2837	normal.c	FUNCTION_9	IF_76
0x400d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2838	normal.c	FUNCTION_9	CALL_64
0x4014	          0x4889c7	                            mov rdi, rax	      2838	normal.c	FUNCTION_9	CALL_64
0x4017	      0xe896190000	                        call sym.clearop	      2838	normal.c	FUNCTION_9	CALL_64
0x401c	    0x8b0500000000	            mov eax, dword [0x04004062] 	      2841	normal.c	FUNCTION_9	IF_77
0x4022	            0x85c0	                           test eax, eax	      2841	normal.c	FUNCTION_9	IF_77
0x4024	     0xf8587000000	                           jne 0x40040f1	      2841	normal.c	FUNCTION_9	IF_77
0x402a	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      2842	normal.c	FUNCTION_9	IF_77
0x4030	            0x85c0	                           test eax, eax	      2842	normal.c	FUNCTION_9	IF_77
0x4032	            0x757d	                           jne 0x40040f1	      2842	normal.c	FUNCTION_9	IF_77
0x4034	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2843	normal.c	FUNCTION_9	IF_77
0x403a	      0x2500060000	                          and eax, 0x600	      2843	normal.c	FUNCTION_9	IF_77
0x403f	            0x85c0	                           test eax, eax	      2843	normal.c	FUNCTION_9	IF_77
0x4041	            0x746e	                            je 0x40040f1	      2843	normal.c	FUNCTION_9	IF_77
0x4043	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      2844	normal.c	FUNCTION_9	IF_77
0x404a	            0x7565	                           jne 0x40040f1	      2844	normal.c	FUNCTION_9	IF_77
0x404c	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2847	normal.c	FUNCTION_9	IF_77	IF_78
0x4052	      0x2500040000	                          and eax, 0x400	      2847	normal.c	FUNCTION_9	IF_77	IF_78
0x4057	            0x85c0	                           test eax, eax	      2847	normal.c	FUNCTION_9	IF_77	IF_78
0x4059	            0x741a	                            je 0x40040b5	      2847	normal.c	FUNCTION_9	IF_77	IF_78
0x405b	    0x488b05000000	            mov rax, qword [0x040040a2] 	      2848	normal.c	FUNCTION_9	IF_77	CALL_65
0x4062	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2848	normal.c	FUNCTION_9	IF_77	CALL_65
0x4066	      0xbe01000000	                              mov esi, 1	      2848	normal.c	FUNCTION_9	IF_77	CALL_65
0x406b	          0x4889c7	                            mov rdi, rax	      2848	normal.c	FUNCTION_9	IF_77	CALL_65
0x406e	      0xe800000000	                          call 0x40040b3	      2848	normal.c	FUNCTION_9	IF_77	CALL_65
0x4073	            0xeb18	                           jmp 0x40040cd	      2848	normal.c	FUNCTION_9	IF_77	CALL_65
0x4075	    0x488b05000000	            mov rax, qword [0x040040bc] 	      2850	normal.c	FUNCTION_9	IF_77	CALL_66
0x407c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2850	normal.c	FUNCTION_9	IF_77	CALL_66
0x4080	      0xbe01000000	                              mov esi, 1	      2850	normal.c	FUNCTION_9	IF_77	CALL_66
0x4085	          0x4889c7	                            mov rdi, rax	      2850	normal.c	FUNCTION_9	IF_77	CALL_66
0x4088	      0xe800000000	                          call 0x40040cd	      2850	normal.c	FUNCTION_9	IF_77	CALL_66
0x408d	    0x488b05000000	            mov rax, qword [0x040040d4] 	      2852	normal.c	FUNCTION_9	IF_77	IF_79
0x4094	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      2852	normal.c	FUNCTION_9	IF_77	IF_79
0x4098	            0x7517	                           jne 0x40040f1	      2852	normal.c	FUNCTION_9	IF_77	IF_79
0x409a	    0x488b0d000000	            mov rcx, qword [0x040040e1] 	      2853	normal.c	FUNCTION_9	IF_77	IF_79
0x40a1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2853	normal.c	FUNCTION_9	IF_77	IF_79
0x40a5	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2853	normal.c	FUNCTION_9	IF_77	IF_79
0x40a9	        0x48894138	             mov qword [rcx + 0x38], rax	      2853	normal.c	FUNCTION_9	IF_77	IF_79
0x40ad	        0x48895140	             mov qword [rcx + 0x40], rdx	      2853	normal.c	FUNCTION_9	IF_77	IF_79
0x40b1	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2858	normal.c	FUNCTION_9	IF_80
0x40b7	          0x83e008	                              and eax, 8	      2858	normal.c	FUNCTION_9	IF_80
0x40ba	            0x85c0	                           test eax, eax	      2858	normal.c	FUNCTION_9	IF_80
0x40bc	            0x7439	                            je 0x4004137	      2858	normal.c	FUNCTION_9	IF_80
0x40be	    0x8b0500000000	            mov eax, dword [0x04004104] 	      2858	normal.c	FUNCTION_9	IF_80
0x40c4	            0x85c0	                           test eax, eax	      2858	normal.c	FUNCTION_9	IF_80
0x40c6	            0x752f	                           jne 0x4004137	      2858	normal.c	FUNCTION_9	IF_80
0x40c8	    0x8b0500000000	            mov eax, dword [0x0400410e] 	      2858	normal.c	FUNCTION_9	IF_80
0x40ce	            0x85c0	                           test eax, eax	      2858	normal.c	FUNCTION_9	IF_80
0x40d0	            0x7425	                            je 0x4004137	      2858	normal.c	FUNCTION_9	IF_80
0x40d2	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	      2860	normal.c	FUNCTION_9	IF_80	CALL_67
0x40d8	    0x8b8d48ffffff	             mov ecx, dword [rbp - 0xb8]	      2860	normal.c	FUNCTION_9	IF_80	CALL_67
0x40de	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2860	normal.c	FUNCTION_9	IF_80	CALL_67
0x40e4	            0x89ce	                            mov esi, ecx	      2860	normal.c	FUNCTION_9	IF_80	CALL_67
0x40e6	            0x89c7	                            mov edi, eax	      2860	normal.c	FUNCTION_9	IF_80	CALL_67
0x40e8	      0xe800000000	                          call 0x400412d	      2860	normal.c	FUNCTION_9	IF_80	CALL_67
0x40ed	      0xb800000000	                              mov eax, 0	      2861	normal.c	FUNCTION_9	IF_80
0x40f2	      0xe9930b0000	                           jmp 0x4004cca	      2861	normal.c	FUNCTION_9	IF_80
0x40f7	    0x8b0500000000	            mov eax, dword [0x0400413d] 	      2867	normal.c	FUNCTION_9	IF_81
0x40fd	            0x85c0	                           test eax, eax	      2867	normal.c	FUNCTION_9	IF_81
0x40ff	            0x7436	                            je 0x4004177	      2867	normal.c	FUNCTION_9	IF_81
0x4101	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      2867	normal.c	FUNCTION_9	IF_81
0x4107	            0x85c0	                           test eax, eax	      2867	normal.c	FUNCTION_9	IF_81
0x4109	            0x742c	                            je 0x4004177	      2867	normal.c	FUNCTION_9	IF_81
0x410b	    0x488b05000000	            mov rax, qword [0x04004152] 	      2867	normal.c	FUNCTION_9	IF_81
0x4112	          0x4885c0	                           test rax, rax	      2867	normal.c	FUNCTION_9	IF_81
0x4115	            0x7420	                            je 0x4004177	      2867	normal.c	FUNCTION_9	IF_81
0x4117	    0x8b0500000000	            mov eax, dword [0x0400415d] 	      2870	normal.c	FUNCTION_9	IF_81	IF_82
0x411d	            0x85c0	                           test eax, eax	      2870	normal.c	FUNCTION_9	IF_81	IF_82
0x411f	            0x750c	                           jne 0x400416d	      2870	normal.c	FUNCTION_9	IF_81	IF_82
0x4121	    0xc70500000000	               mov dword [0x0400416b], 2	      2871	normal.c	FUNCTION_9	IF_81	IF_82
0x412b	            0xeb0a	                           jmp 0x4004177	      2871	normal.c	FUNCTION_9	IF_81	IF_82
0x412d	    0xc70500000000	               mov dword [0x04004177], 1	      2873	normal.c	FUNCTION_9	IF_81	ELSE_23
0x4137	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      2877	normal.c	FUNCTION_9	ELSE_23	IF_83
0x413d	            0x85c0	                           test eax, eax	      2877	normal.c	FUNCTION_9	ELSE_23	IF_83
0x413f	            0x7429	                            je 0x40041aa	      2877	normal.c	FUNCTION_9	ELSE_23	IF_83
0x4141	    0x8b0500000000	            mov eax, dword [0x04004187] 	      2877	normal.c	FUNCTION_9	ELSE_23	IF_83
0x4147	            0x85c0	                           test eax, eax	      2877	normal.c	FUNCTION_9	ELSE_23	IF_83
0x4149	            0x791f	                           jns 0x40041aa	      2877	normal.c	FUNCTION_9	ELSE_23	IF_83
0x414b	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      2877	normal.c	FUNCTION_9	ELSE_23	IF_83
0x414f	            0x7519	                           jne 0x40041aa	      2877	normal.c	FUNCTION_9	ELSE_23	IF_83
0x4151	      0xbe01000000	                              mov esi, 1	      2879	normal.c	FUNCTION_9	ELSE_23	IF_83	CALL_68
0x4156	      0xbf00000000	                              mov edi, 0	      2879	normal.c	FUNCTION_9	ELSE_23	IF_83	CALL_68
0x415b	      0xe800000000	                          call 0x40041a0	      2879	normal.c	FUNCTION_9	ELSE_23	IF_83	CALL_68
0x4160	    0xc70500000000	               mov dword [0x040041aa], 0	      2880	normal.c	FUNCTION_9	ELSE_23	IF_83
0x416a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2883	normal.c	FUNCTION_9	IF_84
0x416e	          0x4885c0	                           test rax, rax	      2883	normal.c	FUNCTION_9	IF_84
0x4171	     0xf844e030000	                            je 0x4004505	      2883	normal.c	FUNCTION_9	IF_84
0x4177	    0x8b0500000000	            mov eax, dword [0x040041bd] 	      2886	normal.c	FUNCTION_9	IF_84	IF_85
0x417d	          0x83e008	                              and eax, 8	      2886	normal.c	FUNCTION_9	IF_84	IF_85
0x4180	            0x85c0	                           test eax, eax	      2886	normal.c	FUNCTION_9	IF_84	IF_85
0x4182	            0x740a	                            je 0x40041ce	      2886	normal.c	FUNCTION_9	IF_84	IF_85
0x4184	    0xc70500000000	           mov dword [0x040041ce], 0x16 	      2887	normal.c	FUNCTION_9	IF_84	IF_85
0x418e	    0x8b0500000000	            mov eax, dword [0x040041d4] 	      2893	normal.c	FUNCTION_9	IF_84	IF_86
0x4194	          0x83f816	                           cmp eax, 0x16	      2893	normal.c	FUNCTION_9	IF_84	IF_86
0x4197	     0xf8502010000	                           jne 0x40042df	      2893	normal.c	FUNCTION_9	IF_84	IF_86
0x419d	    0x488b05000000	            mov rax, qword [0x040041e4] 	      2895	normal.c	FUNCTION_9	IF_84	IF_86	CALL_69
0x41a4	    0x488dbd54ffff	                   lea rdi, [rbp - 0xac]	      2895	normal.c	FUNCTION_9	IF_84	IF_86	CALL_69
0x41ab	    0x488d8d50ffff	                   lea rcx, [rbp - 0xb0]	      2895	normal.c	FUNCTION_9	IF_84	IF_86	CALL_69
0x41b2	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2895	normal.c	FUNCTION_9	IF_84	IF_86	CALL_69
0x41b6	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      2895	normal.c	FUNCTION_9	IF_84	IF_86	CALL_69
0x41ba	          0x4989f8	                             mov r8, rdi	      2895	normal.c	FUNCTION_9	IF_84	IF_86	CALL_69
0x41bd	          0x4889c7	                            mov rdi, rax	      2895	normal.c	FUNCTION_9	IF_84	IF_86	CALL_69
0x41c0	      0xe800000000	                          call 0x4004205	      2895	normal.c	FUNCTION_9	IF_84	IF_86	CALL_69
0x41c5	    0x488b05000000	            mov rax, qword [0x0400420c] 	      2896	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x41cc	          0x8b5048	            mov edx, dword [rax + 0x48] 	      2896	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x41cf	    0x8b8d50ffffff	             mov ecx, dword [rbp - 0xb0]	      2896	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x41d5	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2896	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x41db	             0x1c8	                            add eax, ecx	      2896	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x41dd	            0x89c1	                            mov ecx, eax	      2896	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x41df	          0xc1e91f	                           shr ecx, 0x1f	      2896	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x41e2	             0x1c8	                            add eax, ecx	      2896	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x41e4	            0xd1f8	                              sar eax, 1	      2896	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x41e6	            0x39c2	                            cmp edx, eax	      2896	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x41e8	            0x7e0b	                           jle 0x4004235	      2896	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x41ea	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2897	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x41f0	          0x8945d8	             mov dword [rbp - 0x28], eax	      2897	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x41f3	            0xeb09	                           jmp 0x400423e	      2897	normal.c	FUNCTION_9	IF_84	IF_86	IF_87
0x41f5	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2899	normal.c	FUNCTION_9	IF_84	IF_86	ELSE_24
0x41fb	          0x8945d8	             mov dword [rbp - 0x28], eax	      2899	normal.c	FUNCTION_9	IF_84	IF_86	ELSE_24
0x41fe	    0x488b05000000	            mov rax, qword [0x04004245] 	      2900	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4205	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2900	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4209	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      2901	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x420d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2901	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4211	          0x4801c8	                            add rax, rcx	      2901	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4214	          0x4889c1	                            mov rcx, rax	      2901	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4217	        0x48c1e93f	                           shr rcx, 0x3f	      2901	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x421b	          0x4801c8	                            add rax, rcx	      2901	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x421e	          0x48d1f8	                              sar rax, 1	      2901	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4221	          0x4839c2	                            cmp rdx, rax	      2900	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4224	            0x7c08	                            jl 0x400426e	      2900	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x4226	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2902	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x422a	        0x488945d0	             mov qword [rbp - 0x30], rax	      2902	normal.c	FUNCTION_9	IF_84	IF_86	IF_88
0x422e	    0x488b05000000	            mov rax, qword [0x04004275] 	      2905	normal.c	FUNCTION_9	IF_84	IF_86
0x4235	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2905	normal.c	FUNCTION_9	IF_84	IF_86
0x4239	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2905	normal.c	FUNCTION_9	IF_84	IF_86
0x423d	        0x488945b0	             mov qword [rbp - 0x50], rax	      2905	normal.c	FUNCTION_9	IF_84	IF_86
0x4241	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2905	normal.c	FUNCTION_9	IF_84	IF_86
0x4245	    0x488b0d000000	            mov rcx, qword [0x0400428c] 	      2906	normal.c	FUNCTION_9	IF_84	IF_86
0x424c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2906	normal.c	FUNCTION_9	IF_84	IF_86
0x4250	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2906	normal.c	FUNCTION_9	IF_84	IF_86
0x4254	        0x48894138	             mov qword [rcx + 0x38], rax	      2906	normal.c	FUNCTION_9	IF_84	IF_86
0x4258	        0x48895140	             mov qword [rcx + 0x40], rdx	      2906	normal.c	FUNCTION_9	IF_84	IF_86
0x425c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2907	normal.c	FUNCTION_9	IF_84	IF_86	CALL_70
0x425f	            0x89c7	                            mov edi, eax	      2907	normal.c	FUNCTION_9	IF_84	IF_86	CALL_70
0x4261	      0xe800000000	                          call 0x40042a6	      2907	normal.c	FUNCTION_9	IF_84	IF_86	CALL_70
0x4266	    0x488b05000000	            mov rax, qword [0x040042ad] 	      2908	normal.c	FUNCTION_9	IF_84	IF_86
0x426d	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2908	normal.c	FUNCTION_9	IF_84	IF_86
0x4271	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2908	normal.c	FUNCTION_9	IF_84	IF_86
0x4275	    0x488905000000	            mov qword [0x040042bc], rax 	      2908	normal.c	FUNCTION_9	IF_84	IF_86
0x427c	    0x488915000000	            mov qword [0x040042c3], rdx 	      2908	normal.c	FUNCTION_9	IF_84	IF_86
0x4283	    0x488b0d000000	            mov rcx, qword [0x040042ca] 	      2909	normal.c	FUNCTION_9	IF_84	IF_86
0x428a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2909	normal.c	FUNCTION_9	IF_84	IF_86
0x428e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2909	normal.c	FUNCTION_9	IF_84	IF_86
0x4292	        0x48894138	             mov qword [rcx + 0x38], rax	      2909	normal.c	FUNCTION_9	IF_84	IF_86
0x4296	        0x48895140	             mov qword [rcx + 0x40], rdx	      2909	normal.c	FUNCTION_9	IF_84	IF_86
0x429a	      0xe947020000	                           jmp 0x4004526	      2909	normal.c	FUNCTION_9	IF_84	IF_86
0x429f	    0x488b05000000	            mov rax, qword [0x040042e6] 	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42a6	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42aa	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42ae	          0x4839c2	                            cmp rdx, rax	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42b1	            0x7417	                            je 0x400430a	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42b3	    0x488b05000000	            mov rax, qword [0x040042fa] 	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42ba	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42be	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42c2	          0x4839c2	                            cmp rdx, rax	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42c5	           0xf9cc0	                                 setl al	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42c8	            0xeb37	                           jmp 0x4004341	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42ca	    0x488b05000000	            mov rax, qword [0x04004311] 	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42d1	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42d4	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42d7	            0x39c2	                            cmp edx, eax	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42d9	            0x7414	                            je 0x400432f	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42db	    0x488b05000000	            mov rax, qword [0x04004322] 	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42e2	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42e5	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42e8	            0x39c2	                            cmp edx, eax	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42ea	           0xf9cc0	                                 setl al	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42ed	            0xeb12	                           jmp 0x4004341	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42ef	    0x488b05000000	            mov rax, qword [0x04004336] 	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42f6	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42f9	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42fc	            0x39c2	                            cmp edx, eax	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x42fe	           0xf9cc0	                                 setl al	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4301	            0x84c0	                             test al, al	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4303	            0x741b	                            je 0x4004360	      2918	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89	CALL_71
0x4305	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2919	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89
0x4309	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2919	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89
0x430d	    0x488905000000	            mov qword [0x04004354], rax 	      2919	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89
0x4314	    0x488915000000	            mov qword [0x0400435b], rdx 	      2919	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89
0x431b	      0xe9c6010000	                           jmp 0x4004526	      2919	normal.c	FUNCTION_9	IF_84	ELSE_25	IF_89
0x4320	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4324	    0x488b05000000	            mov rax, qword [0x0400436b] 	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x432b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x432f	          0x4839c2	                            cmp rdx, rax	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4332	            0x7417	                            je 0x400438b	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4334	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4338	    0x488b05000000	            mov rax, qword [0x0400437f] 	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x433f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4343	          0x4839c2	                            cmp rdx, rax	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4346	           0xf9cc0	                                 setl al	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4349	            0xeb37	                           jmp 0x40043c2	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x434b	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x434e	    0x488b05000000	            mov rax, qword [0x04004395] 	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4355	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4358	            0x39c2	                            cmp edx, eax	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x435a	            0x7414	                            je 0x40043b0	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x435c	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x435f	    0x488b05000000	            mov rax, qword [0x040043a6] 	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4366	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4369	            0x39c2	                            cmp edx, eax	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x436b	           0xf9cc0	                                 setl al	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x436e	            0xeb12	                           jmp 0x40043c2	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4370	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4373	    0x488b05000000	            mov rax, qword [0x040043ba] 	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x437a	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x437d	            0x39c2	                            cmp edx, eax	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x437f	           0xf9cc0	                                 setl al	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4382	            0x84c0	                             test al, al	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4384	            0x741b	                            je 0x40043e1	      2920	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90	CALL_72
0x4386	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2921	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90
0x438a	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2921	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90
0x438e	    0x488905000000	            mov qword [0x040043d5], rax 	      2921	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90
0x4395	    0x488915000000	            mov qword [0x040043dc], rdx 	      2921	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90
0x439c	      0xe945010000	                           jmp 0x4004526	      2921	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_26	IF_90
0x43a1	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2925	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91
0x43a5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2925	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91
0x43a9	          0x4839c2	                            cmp rdx, rax	      2925	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91
0x43ac	            0x755c	                           jne 0x400444a	      2925	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91
0x43ae	    0x488b05000000	            mov rax, qword [0x040043f5] 	      2927	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43b5	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2927	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43b8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2927	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43bb	            0x89d1	                            mov ecx, edx	      2927	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43bd	            0x29c1	                            sub ecx, eax	      2927	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43bf	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2928	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43c2	    0x488b05000000	            mov rax, qword [0x04004409] 	      2928	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43c9	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2928	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43cc	            0x29c2	                            sub edx, eax	      2928	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43ce	            0x89d0	                            mov eax, edx	      2928	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43d0	            0x39c1	                            cmp ecx, eax	      2927	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43d2	            0x7e1b	                           jle 0x400442f	      2927	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43d4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2929	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43d8	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2929	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43dc	    0x488905000000	            mov qword [0x04004423], rax 	      2929	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43e3	    0x488915000000	            mov qword [0x0400442a], rdx 	      2929	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43ea	      0xe9f7000000	                           jmp 0x4004526	      2929	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	IF_92
0x43ef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2931	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	ELSE_28
0x43f3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2931	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	ELSE_28
0x43f7	    0x488905000000	            mov qword [0x0400443e], rax 	      2931	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	ELSE_28
0x43fe	    0x488915000000	            mov qword [0x04004445], rdx 	      2931	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	ELSE_28
0x4405	      0xe9dc000000	                           jmp 0x4004526	      2931	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	IF_91	ELSE_28
0x440a	    0x488b05000000	            mov rax, qword [0x04004451] 	      2937	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x4411	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2937	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x4415	            0x89c2	                            mov edx, eax	      2937	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x4417	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2937	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x441b	            0x29c2	                            sub edx, eax	      2937	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x441d	    0x488b05000000	            mov rax, qword [0x04004464] 	      2938	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x4424	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2938	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x4428	            0x89c1	                            mov ecx, eax	      2937	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x442a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2938	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x442e	            0x29c1	                            sub ecx, eax	      2937	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x4430	            0x89c8	                            mov eax, ecx	      2937	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x4432	             0x1d0	                            add eax, edx	      2937	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x4434	          0x894590	             mov dword [rbp - 0x70], eax	      2937	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29
0x4437	        0x837d9000	               cmp dword [rbp - 0x70], 0	      2940	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	IF_93
0x443b	            0x7e1b	                           jle 0x4004498	      2940	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	IF_93
0x443d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2941	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	IF_93
0x4441	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2941	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	IF_93
0x4445	    0x488905000000	            mov qword [0x0400448c], rax 	      2941	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	IF_93
0x444c	    0x488915000000	            mov qword [0x04004493], rdx 	      2941	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	IF_93
0x4453	      0xe98e000000	                           jmp 0x4004526	      2941	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	IF_93
0x4458	        0x837d9000	               cmp dword [rbp - 0x70], 0	      2942	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_30	IF_94
0x445c	            0x7918	                           jns 0x40044b6	      2942	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_30	IF_94
0x445e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2943	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_30	IF_94
0x4462	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2943	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_30	IF_94
0x4466	    0x488905000000	            mov qword [0x040044ad], rax 	      2943	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_30	IF_94
0x446d	    0x488915000000	            mov qword [0x040044b4], rdx 	      2943	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_30	IF_94
0x4474	            0xeb70	                           jmp 0x4004526	      2943	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_30	IF_94
0x4476	    0x488b05000000	            mov rax, qword [0x040044bd] 	      2946	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x447d	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2946	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4480	          0x8b4db8	             mov ecx, dword [rbp - 0x48]	      2947	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4483	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2947	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4486	             0x1c8	                            add eax, ecx	      2947	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4488	            0x89c1	                            mov ecx, eax	      2947	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x448a	          0xc1e91f	                           shr ecx, 0x1f	      2947	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x448d	             0x1c8	                            add eax, ecx	      2947	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x448f	            0xd1f8	                              sar eax, 1	      2947	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4491	            0x39c2	                            cmp edx, eax	      2946	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4493	            0x7d18	                           jge 0x40044ed	      2946	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4495	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2948	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x4499	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2948	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x449d	    0x488905000000	            mov qword [0x040044e4], rax 	      2948	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x44a4	    0x488915000000	            mov qword [0x040044eb], rdx 	      2948	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x44ab	            0xeb39	                           jmp 0x4004526	      2948	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	IF_95
0x44ad	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2950	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	ELSE_32
0x44b1	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2950	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	ELSE_32
0x44b5	    0x488905000000	            mov qword [0x040044fc], rax 	      2950	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	ELSE_32
0x44bc	    0x488915000000	            mov qword [0x04004503], rdx 	      2950	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	ELSE_32
0x44c3	            0xeb21	                           jmp 0x4004526	      2950	normal.c	FUNCTION_9	IF_84	ELSE_25	ELSE_27	ELSE_29	ELSE_31	ELSE_32
0x44c5	    0x8b0500000000	            mov eax, dword [0x0400450b] 	      2959	normal.c	FUNCTION_9	ELSE_33	IF_96
0x44cb	          0x83e010	                           and eax, 0x10	      2959	normal.c	FUNCTION_9	ELSE_33	IF_96
0x44ce	            0x85c0	                           test eax, eax	      2959	normal.c	FUNCTION_9	ELSE_33	IF_96
0x44d0	            0x7414	                            je 0x4004526	      2959	normal.c	FUNCTION_9	ELSE_33	IF_96
0x44d2	    0x8b0500000000	            mov eax, dword [0x04004518] 	      2959	normal.c	FUNCTION_9	ELSE_33	IF_96
0x44d8	            0x85c0	                           test eax, eax	      2959	normal.c	FUNCTION_9	ELSE_33	IF_96
0x44da	            0x740a	                            je 0x4004526	      2959	normal.c	FUNCTION_9	ELSE_33	IF_96
0x44dc	      0xbf0f000000	                            mov edi, 0xf	      2960	normal.c	FUNCTION_9	ELSE_33	IF_96
0x44e1	      0xe800000000	                          call 0x4004526	      2960	normal.c	FUNCTION_9	ELSE_33	IF_96
0x44e6	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 1	      2965	normal.c	FUNCTION_9	IF_97
0x44ed	     0xf8538010000	                           jne 0x400466b	      2965	normal.c	FUNCTION_9	IF_97
0x44f3	    0x8b0500000000	            mov eax, dword [0x04004539] 	      2968	normal.c	FUNCTION_9	IF_97	IF_98
0x44f9	            0x85c0	                           test eax, eax	      2968	normal.c	FUNCTION_9	IF_97	IF_98
0x44fb	            0x7413	                            je 0x4004550	      2968	normal.c	FUNCTION_9	IF_97	IF_98
0x44fd	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      2968	normal.c	FUNCTION_9	IF_97	IF_98
0x4504	            0x750a	                           jne 0x4004550	      2968	normal.c	FUNCTION_9	IF_97	IF_98
0x4506	    0xc78568ffffff	           mov dword [rbp - 0x98], 0x2a 	      2969	normal.c	FUNCTION_9	IF_97	IF_98
0x4510	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2971	normal.c	FUNCTION_9	IF_97	IF_99	CALL_74
0x4516	            0x89c7	                            mov edi, eax	      2971	normal.c	FUNCTION_9	IF_97	IF_99	CALL_74
0x4518	      0xe800000000	                          call 0x400455d	      2971	normal.c	FUNCTION_9	IF_97	IF_99	CALL_74
0x451d	            0x85c0	                           test eax, eax	      2971	normal.c	FUNCTION_9	IF_97	IF_99	CALL_74
0x451f	            0x7416	                            je 0x4004577	      2971	normal.c	FUNCTION_9	IF_97	IF_99	CALL_74
0x4521	    0x8b0500000000	            mov eax, dword [0x04004567] 	      2973	normal.c	FUNCTION_9	IF_97	IF_99	IF_100
0x4527	            0x85c0	                           test eax, eax	      2973	normal.c	FUNCTION_9	IF_97	IF_99	IF_100
0x4529	            0x7420	                            je 0x400458b	      2973	normal.c	FUNCTION_9	IF_97	IF_99	IF_100
0x452b	    0xc78530ffffff	               mov dword [rbp - 0xd0], 1	      2974	normal.c	FUNCTION_9	IF_97	IF_99	IF_100
0x4535	            0xeb14	                           jmp 0x400458b	      2974	normal.c	FUNCTION_9	IF_97	IF_99	IF_100
0x4537	    0x8b0500000000	            mov eax, dword [0x0400457d] 	      2976	normal.c	FUNCTION_9	IF_97	ELSE_34	IF_101
0x453d	            0x85c0	                           test eax, eax	      2976	normal.c	FUNCTION_9	IF_97	ELSE_34	IF_101
0x453f	            0x740a	                            je 0x400458b	      2976	normal.c	FUNCTION_9	IF_97	ELSE_34	IF_101
0x4541	    0xc78530ffffff	               mov dword [rbp - 0xd0], 1	      2977	normal.c	FUNCTION_9	IF_97	ELSE_34	IF_101
0x454b	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      2979	normal.c	FUNCTION_9	IF_97	IF_102
0x4552	            0x7427	                            je 0x40045bb	      2979	normal.c	FUNCTION_9	IF_97	IF_102
0x4554	    0x83bd30ffffff	cmp dword [rbp - 0xd0], 0xffffffffffffffff	      2981	normal.c	FUNCTION_9	IF_97	IF_102
0x455b	            0x7507	                           jne 0x40045a4	      2981	normal.c	FUNCTION_9	IF_97	IF_102
0x455d	      0xb85b000000	                           mov eax, 0x5b	      2981	normal.c	FUNCTION_9	IF_97	IF_102
0x4562	            0xeb05	                           jmp 0x40045a9	      2981	normal.c	FUNCTION_9	IF_97	IF_102
0x4564	      0xb85d000000	                           mov eax, 0x5d	      2981	normal.c	FUNCTION_9	IF_97	IF_102
0x4569	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      2981	normal.c	FUNCTION_9	IF_97	IF_102
0x456f	    0xc78564ffffff	           mov dword [rbp - 0x9c], 0x70 	      2982	normal.c	FUNCTION_9	IF_97	IF_102
0x4579	            0xeb25	                           jmp 0x40045e0	      2982	normal.c	FUNCTION_9	IF_97	IF_102
0x457b	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 1	      2986	normal.c	FUNCTION_9	IF_97	ELSE_35
0x4582	            0x7507	                           jne 0x40045cb	      2986	normal.c	FUNCTION_9	IF_97	ELSE_35
0x4584	      0xb870000000	                           mov eax, 0x70	      2986	normal.c	FUNCTION_9	IF_97	ELSE_35
0x4589	            0xeb05	                           jmp 0x40045d0	      2986	normal.c	FUNCTION_9	IF_97	ELSE_35
0x458b	      0xb850000000	                           mov eax, 0x50	      2986	normal.c	FUNCTION_9	IF_97	ELSE_35
0x4590	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      2986	normal.c	FUNCTION_9	IF_97	ELSE_35
0x4596	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      2987	normal.c	FUNCTION_9	IF_97	ELSE_35
0x45a0	    0x8b8d64ffffff	             mov ecx, dword [rbp - 0x9c]	      2989	normal.c	FUNCTION_9	IF_97	CALL_75
0x45a6	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      2989	normal.c	FUNCTION_9	IF_97	CALL_75
0x45ac	    0x488bb528ffff	             mov rsi, qword [rbp - 0xd8]	      2989	normal.c	FUNCTION_9	IF_97	CALL_75
0x45b3	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2989	normal.c	FUNCTION_9	IF_97	CALL_75
0x45b9	        0x4883ec08	                              sub rsp, 8	      2989	normal.c	FUNCTION_9	IF_97	CALL_75
0x45bd	            0x6a00	                                  push 0	      2989	normal.c	FUNCTION_9	IF_97	CALL_75
0x45bf	          0x4189c9	                            mov r9d, ecx	      2989	normal.c	FUNCTION_9	IF_97	CALL_75
0x45c2	    0x41b800000000	                              mov r8d, 0	      2989	normal.c	FUNCTION_9	IF_97	CALL_75
0x45c8	            0x89d1	                            mov ecx, edx	      2989	normal.c	FUNCTION_9	IF_97	CALL_75
0x45ca	      0xba00000000	                              mov edx, 0	      2989	normal.c	FUNCTION_9	IF_97	CALL_75
0x45cf	            0x89c7	                            mov edi, eax	      2989	normal.c	FUNCTION_9	IF_97	CALL_75
0x45d1	      0xe8d2120000	                      call sym.prep_redo	      2989	normal.c	FUNCTION_9	IF_97	CALL_75
0x45d6	        0x4883c410	                           add rsp, 0x10	      2989	normal.c	FUNCTION_9	IF_97	CALL_75
0x45da	    0x8b0500000000	            mov eax, dword [0x04004620] 	      2995	normal.c	FUNCTION_9	IF_97	IF_103
0x45e0	            0x85c0	                           test eax, eax	      2995	normal.c	FUNCTION_9	IF_97	IF_103
0x45e2	            0x741d	                            je 0x4004641	      2995	normal.c	FUNCTION_9	IF_97	IF_103
0x45e4	    0x488b05000000	            mov rax, qword [0x0400462b] 	      2996	normal.c	FUNCTION_9	IF_97	IF_103
0x45eb	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2996	normal.c	FUNCTION_9	IF_97	IF_103
0x45ef	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2996	normal.c	FUNCTION_9	IF_97	IF_103
0x45f3	    0x488905000000	            mov qword [0x0400463a], rax 	      2996	normal.c	FUNCTION_9	IF_97	IF_103
0x45fa	    0x488915000000	            mov qword [0x04004641], rdx 	      2996	normal.c	FUNCTION_9	IF_97	IF_103
0x4601	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2997	normal.c	FUNCTION_9	IF_97	CALL_76
0x4607	          0x83c802	                               or eax, 2	      2997	normal.c	FUNCTION_9	IF_97	CALL_76
0x460a	            0x89c1	                            mov ecx, eax	      2997	normal.c	FUNCTION_9	IF_97	CALL_76
0x460c	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      2997	normal.c	FUNCTION_9	IF_97	CALL_76
0x4613	    0x8bb530ffffff	             mov esi, dword [rbp - 0xd0]	      2997	normal.c	FUNCTION_9	IF_97	CALL_76
0x4619	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2997	normal.c	FUNCTION_9	IF_97	CALL_76
0x461f	            0x89c7	                            mov edi, eax	      2997	normal.c	FUNCTION_9	IF_97	CALL_76
0x4621	      0xe800000000	                          call 0x4004666	      2997	normal.c	FUNCTION_9	IF_97	CALL_76
0x4626	      0xe900060000	                           jmp 0x4004c6b	      2997	normal.c	FUNCTION_9	IF_97	CALL_76
0x462b	    0x8b0500000000	            mov eax, dword [0x04004671] 	      3005	normal.c	FUNCTION_9	ELSE_36	IF_104
0x4631	          0x83e004	                              and eax, 4	      3005	normal.c	FUNCTION_9	ELSE_36	IF_104
0x4634	            0x85c0	                           test eax, eax	      3005	normal.c	FUNCTION_9	ELSE_36	IF_104
0x4636	            0x750e	                           jne 0x4004686	      3005	normal.c	FUNCTION_9	ELSE_36	IF_104
0x4638	    0x8b0500000000	            mov eax, dword [0x0400467e] 	      3006	normal.c	FUNCTION_9	ELSE_36	IF_104
0x463e	          0x83e060	                           and eax, 0x60	      3006	normal.c	FUNCTION_9	ELSE_36	IF_104
0x4641	          0x83f820	                           cmp eax, 0x20	      3006	normal.c	FUNCTION_9	ELSE_36	IF_104
0x4644	            0x754b	                           jne 0x40046d1	      3006	normal.c	FUNCTION_9	ELSE_36	IF_104
0x4646	    0x488b05000000	            mov rax, qword [0x0400468d] 	      3007	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_77
0x464d	          0x4889c7	                            mov rdi, rax	      3007	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_77
0x4650	      0xe800000000	                          call 0x4004695	      3007	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_77
0x4655	            0x85c0	                           test eax, eax	      3007	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_77
0x4657	            0x7438	                            je 0x40046d1	      3007	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_77
0x4659	    0x488b05000000	            mov rax, qword [0x040046a0] 	      3009	normal.c	FUNCTION_9	ELSE_36	IF_104	IF_105
0x4660	    0x488b80b01800	          mov rax, qword [rax + 0x18b0] 	      3009	normal.c	FUNCTION_9	ELSE_36	IF_104	IF_105
0x4667	          0x4885c0	                           test rax, rax	      3009	normal.c	FUNCTION_9	ELSE_36	IF_104	IF_105
0x466a	            0x750c	                           jne 0x40046b8	      3009	normal.c	FUNCTION_9	ELSE_36	IF_104	IF_105
0x466c	      0xbf00000000	                              mov edi, 0	      3010	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_78
0x4671	      0xe800000000	                          call 0x40046b6	      3010	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_78
0x4676	            0xeb0a	                           jmp 0x40046c2	      3010	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_78
0x4678	      0xbf00000000	                              mov edi, 0	      3012	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_79
0x467d	      0xe800000000	                          call 0x40046c2	      3012	normal.c	FUNCTION_9	ELSE_36	IF_104	CALL_79
0x4682	    0xc70500000000	               mov dword [0x040046cc], 0	      3013	normal.c	FUNCTION_9	ELSE_36	IF_104
0x468c	      0xe99a050000	                           jmp 0x4004c6b	      3013	normal.c	FUNCTION_9	ELSE_36	IF_104
0x4691	    0x8b0500000000	            mov eax, dword [0x040046d7] 	      3021	normal.c	FUNCTION_9	ELSE_38	IF_106
0x4697	          0x83e004	                              and eax, 4	      3021	normal.c	FUNCTION_9	ELSE_38	IF_106
0x469a	            0x85c0	                           test eax, eax	      3021	normal.c	FUNCTION_9	ELSE_38	IF_106
0x469c	            0x751f	                           jne 0x40046fd	      3021	normal.c	FUNCTION_9	ELSE_38	IF_106
0x469e	    0x488b05000000	            mov rax, qword [0x040046e5] 	      3021	normal.c	FUNCTION_9	ELSE_38	IF_106
0x46a5	    0x8b8038170000	          mov eax, dword [rax + 0x1738] 	      3021	normal.c	FUNCTION_9	ELSE_38	IF_106
0x46ab	            0x85c0	                           test eax, eax	      3021	normal.c	FUNCTION_9	ELSE_38	IF_106
0x46ad	            0x743e	                            je 0x400472d	      3021	normal.c	FUNCTION_9	ELSE_38	IF_106
0x46af	    0x8b0500000000	            mov eax, dword [0x040046f5] 	      3022	normal.c	FUNCTION_9	ELSE_38	IF_106
0x46b5	          0x83e060	                           and eax, 0x60	      3022	normal.c	FUNCTION_9	ELSE_38	IF_106
0x46b8	          0x83f820	                           cmp eax, 0x20	      3022	normal.c	FUNCTION_9	ELSE_38	IF_106
0x46bb	            0x7530	                           jne 0x400472d	      3022	normal.c	FUNCTION_9	ELSE_38	IF_106
0x46bd	    0x8b0500000000	            mov eax, dword [0x04004703] 	      3024	normal.c	FUNCTION_9	ELSE_38	IF_106	IF_107
0x46c3	          0x83e010	                           and eax, 0x10	      3024	normal.c	FUNCTION_9	ELSE_38	IF_106	IF_107
0x46c6	            0x85c0	                           test eax, eax	      3024	normal.c	FUNCTION_9	ELSE_38	IF_106	IF_107
0x46c8	            0x740a	                            je 0x4004714	      3024	normal.c	FUNCTION_9	ELSE_38	IF_106	IF_107
0x46ca	      0xbf0f000000	                            mov edi, 0xf	      3025	normal.c	FUNCTION_9	ELSE_38	IF_106	CALL_80
0x46cf	      0xe800000000	                          call 0x4004714	      3025	normal.c	FUNCTION_9	ELSE_38	IF_106	CALL_80
0x46d4	      0xbf1d000000	                           mov edi, 0x1d	      3026	normal.c	FUNCTION_9	ELSE_38	IF_106	CALL_81
0x46d9	      0xe800000000	                          call 0x400471e	      3026	normal.c	FUNCTION_9	ELSE_38	IF_106	CALL_81
0x46de	    0xc70500000000	               mov dword [0x04004728], 0	      3027	normal.c	FUNCTION_9	ELSE_38	IF_106
0x46e8	      0xe93e050000	                           jmp 0x4004c6b	      3027	normal.c	FUNCTION_9	ELSE_38	IF_106
0x46ed	    0x8b0500000000	            mov eax, dword [0x04004733] 	      3034	normal.c	FUNCTION_9	ELSE_39	IF_108
0x46f3	          0x83e002	                              and eax, 2	      3034	normal.c	FUNCTION_9	ELSE_39	IF_108
0x46f6	            0x85c0	                           test eax, eax	      3034	normal.c	FUNCTION_9	ELSE_39	IF_108
0x46f8	            0x7452	                            je 0x400478c	      3034	normal.c	FUNCTION_9	ELSE_39	IF_108
0x46fa	    0x8b0500000000	            mov eax, dword [0x04004740] 	      3036	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x4700	          0x83e010	                           and eax, 0x10	      3036	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x4703	            0x85c0	                           test eax, eax	      3036	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x4705	            0x7514	                           jne 0x400475b	      3036	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x4707	    0x8b0500000000	            mov eax, dword [0x0400474d] 	      3036	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x470d	            0x85c0	                           test eax, eax	      3036	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x470f	            0x7414	                            je 0x4004765	      3036	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x4711	    0x8b0500000000	            mov eax, dword [0x04004757] 	      3036	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x4717	            0x85c0	                           test eax, eax	      3036	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x4719	            0x740a	                            je 0x4004765	      3036	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_109
0x471b	      0xbf0f000000	                            mov edi, 0xf	      3037	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_82
0x4720	      0xe800000000	                          call 0x4004765	      3037	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_82
0x4725	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      3038	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_110
0x472c	            0x750f	                           jne 0x400477d	      3038	normal.c	FUNCTION_9	ELSE_39	IF_108	IF_110
0x472e	      0xbf2a000000	                           mov edi, 0x2a	      3039	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_83
0x4733	      0xe800000000	                          call 0x4004778	      3039	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_83
0x4738	      0xe9ee040000	                           jmp 0x4004c6b	      3039	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_83
0x473d	      0xbf23000000	                           mov edi, 0x23	      3041	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_84
0x4742	      0xe800000000	                          call 0x4004787	      3041	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_84
0x4747	      0xe9df040000	                           jmp 0x4004c6b	      3041	normal.c	FUNCTION_9	ELSE_39	IF_108	CALL_84
0x474c	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      3045	normal.c	FUNCTION_9	ELSE_41	IF_111
0x4750	     0xf85d5040000	                           jne 0x4004c6b	      3045	normal.c	FUNCTION_9	ELSE_41	IF_111
0x4756	        0x837d8800	               cmp dword [rbp - 0x78], 0	      3055	normal.c	FUNCTION_9	ELSE_42	IF_113
0x475a	     0xf85cb040000	                           jne 0x4004c6b	      3055	normal.c	FUNCTION_9	ELSE_42	IF_113
0x4760	    0x8b0500000000	            mov eax, dword [0x040047a6] 	      3065	normal.c	FUNCTION_9	ELSE_43	IF_115
0x4766	          0x83e060	                           and eax, 0x60	      3065	normal.c	FUNCTION_9	ELSE_43	IF_115
0x4769	            0x85c0	                           test eax, eax	      3065	normal.c	FUNCTION_9	ELSE_43	IF_115
0x476b	     0xf8484040000	                            je 0x4004c35	      3065	normal.c	FUNCTION_9	ELSE_43	IF_115
0x4771	    0x8b0500000000	            mov eax, dword [0x040047b7] 	      3065	normal.c	FUNCTION_9	ELSE_43	IF_115
0x4777	          0x83e011	                           and eax, 0x11	      3065	normal.c	FUNCTION_9	ELSE_43	IF_115
0x477a	            0x85c0	                           test eax, eax	      3065	normal.c	FUNCTION_9	ELSE_43	IF_115
0x477c	     0xf8473040000	                            je 0x4004c35	      3065	normal.c	FUNCTION_9	ELSE_43	IF_115
0x4782	      0xbf76000000	                           mov edi, 0x76	      3066	normal.c	FUNCTION_9	ELSE_43	IF_115	CALL_87
0x4787	      0xe800000000	                          call 0x40047cc	      3066	normal.c	FUNCTION_9	ELSE_43	IF_115	CALL_87
0x478c	            0x85c0	                           test eax, eax	      3066	normal.c	FUNCTION_9	ELSE_43	IF_115	CALL_87
0x478e	     0xf8461040000	                            je 0x4004c35	      3066	normal.c	FUNCTION_9	ELSE_43	IF_115	CALL_87
0x4794	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      3068	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116
0x479a	            0x85c0	                           test eax, eax	      3068	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116
0x479c	            0x750e	                           jne 0x40047ec	      3068	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116
0x479e	    0x8b0500000000	            mov eax, dword [0x040047e4] 	      3068	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116
0x47a4	            0x85c0	                           test eax, eax	      3068	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116
0x47a6	     0xf85f8000000	                           jne 0x40048e4	      3068	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116
0x47ac	    0x8b0500000000	            mov eax, dword [0x040047f2] 	      3070	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_117
0x47b2	            0x85c0	                           test eax, eax	      3070	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_117
0x47b4	            0x741e	                            je 0x4004814	      3070	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_117
0x47b6	    0x488b05000000	            mov rax, qword [0x040047fd] 	      3071	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_117
0x47bd	    0x488b15000000	            mov rdx, qword [0x04004804] 	      3071	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_117
0x47c4	    0x488905000000	            mov qword [0x0400480b], rax 	      3071	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_117
0x47cb	    0x488915000000	            mov qword [0x04004812], rdx 	      3071	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_117
0x47d2	            0xeb61	                           jmp 0x4004875	      3071	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_117
0x47d4	      0xe800000000	                          call 0x4004819	      3074	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44	CALL_88
0x47d9	    0x488b05000000	            mov rax, qword [0x04004820] 	      3075	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x47e0	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3075	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x47e4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3075	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x47e8	    0x488905000000	            mov qword [0x0400482f], rax 	      3075	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x47ef	    0x488915000000	            mov qword [0x04004836], rdx 	      3075	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x47f6	    0x488b05000000	            mov rax, qword [0x0400483d] 	      3076	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x47fd	    0x488b15000000	            mov rdx, qword [0x04004844] 	      3076	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x4804	    0x488905000000	            mov qword [0x0400484b], rax 	      3076	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x480b	    0x488915000000	            mov qword [0x04004852], rdx 	      3076	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x4812	    0xc70500000000	               mov dword [0x0400485c], 1	      3077	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x481c	    0xc70500000000	               mov dword [0x04004866], 1	      3078	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44
0x4826	      0xbf6f000000	                           mov edi, 0x6f	      3080	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44	CALL_89
0x482b	      0xe800000000	                          call 0x4004870	      3080	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44	CALL_89
0x4830	      0xe800000000	                          call 0x4004875	      3081	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_44	CALL_90
0x4835	    0x8b0500000000	            mov eax, dword [0x0400487b] 	      3083	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118
0x483b	          0x83e060	                           and eax, 0x60	      3083	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118
0x483e	          0x83f820	                           cmp eax, 0x20	      3083	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118
0x4841	            0x7525	                           jne 0x40048a8	      3083	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118
0x4843	    0x8b0500000000	            mov eax, dword [0x04004889] 	      3086	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118	IF_119
0x4849	          0x83e008	                              and eax, 8	      3086	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118	IF_119
0x484c	            0x85c0	                           test eax, eax	      3086	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118	IF_119
0x484e	            0x740c	                            je 0x400489c	      3086	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118	IF_119
0x4850	    0xc70500000000	           mov dword [0x0400489a], 0x16 	      3087	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118	IF_119
0x485a	            0xeb3e	                           jmp 0x40048da	      3087	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118	IF_119
0x485c	    0xc70500000000	           mov dword [0x040048a6], 0x76 	      3089	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118	ELSE_45
0x4866	            0xeb32	                           jmp 0x40048da	      3089	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	IF_118	ELSE_45
0x4868	    0x8b0500000000	            mov eax, dword [0x040048ae] 	      3091	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_46	IF_120
0x486e	          0x83e060	                           and eax, 0x60	      3091	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_46	IF_120
0x4871	          0x83f840	                           cmp eax, 0x40	      3091	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_46	IF_120
0x4874	            0x750c	                           jne 0x40048c2	      3091	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_46	IF_120
0x4876	    0xc70500000000	           mov dword [0x040048c0], 0x56 	      3092	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_46	IF_120
0x4880	            0xeb18	                           jmp 0x40048da	      3092	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_46	IF_120
0x4882	    0x8b0500000000	            mov eax, dword [0x040048c8] 	      3093	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_47	IF_121
0x4888	          0x83e060	                           and eax, 0x60	      3093	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_47	IF_121
0x488b	          0x83f860	                           cmp eax, 0x60	      3093	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_47	IF_121
0x488e	            0x750a	                           jne 0x40048da	      3093	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_47	IF_121
0x4890	    0xc70500000000	           mov dword [0x040048da], 0x16 	      3094	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116	ELSE_47	IF_121
0x489a	    0xc70500000000	               mov dword [0x040048e4], 0	      3098	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_116
0x48a4	    0x8b0500000000	            mov eax, dword [0x040048ea] 	      3104	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122
0x48aa	          0x83e060	                           and eax, 0x60	      3104	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122
0x48ad	          0x83f820	                           cmp eax, 0x20	      3104	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122
0x48b0	     0xf8529030000	                           jne 0x4004c1f	      3104	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122
0x48b6	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      3106	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122
0x48be	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      3109	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123
0x48c4	            0x85c0	                           test eax, eax	      3109	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123
0x48c6	     0xf84ee010000	                            je 0x4004afa	      3109	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123
0x48cc	    0x488b05000000	            mov rax, qword [0x04004913] 	      3114	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123
0x48d3	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3114	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123
0x48d7	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3114	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123
0x48db	        0x488945d0	             mov qword [rbp - 0x30], rax	      3114	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123
0x48df	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3114	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123
0x48e3	            0xeb0c	                           jmp 0x4004931	      3115	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x48e5	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3116	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	CALL_93
0x48e9	          0x4889c7	                            mov rdi, rax	      3116	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	CALL_93
0x48ec	      0xe800000000	                          call 0x4004931	      3116	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	CALL_93
0x48f1	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3115	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x48f5	          0x4889c7	                            mov rdi, rax	      3115	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x48f8	      0xe800000000	                          call 0x400493d	      3115	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x48fd	          0x894594	             mov dword [rbp - 0x6c], eax	      3115	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x4900	        0x837d9420	           cmp dword [rbp - 0x6c], 0x20 	      3115	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x4904	            0x7406	                            je 0x400494c	      3115	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x4906	        0x837d9409	               cmp dword [rbp - 0x6c], 9	      3115	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x490a	            0x7507	                           jne 0x4004953	      3115	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x490c	      0xb801000000	                              mov eax, 1	      3115	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x4911	            0xeb05	                           jmp 0x4004958	      3115	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x4913	      0xb800000000	                              mov eax, 0	      3115	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x4918	            0x85c0	                           test eax, eax	      3115	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x491a	            0x75c9	                           jne 0x4004925	      3115	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	WHILE_1	CALL_92
0x491c	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      3117	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_124
0x4924	            0x740e	                            je 0x4004974	      3117	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_124
0x4926	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3118	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_124
0x492d	    0xc74008000000	                  mov dword [rax + 8], 0	      3118	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_124
0x4934	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      3119	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x493c	     0xf8478010000	                            je 0x4004afa	      3119	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x4942	    0x8b0500000000	            mov eax, dword [0x04004988] 	      3120	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x4948	          0x83f876	                           cmp eax, 0x76	      3120	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x494b	     0xf8569010000	                           jne 0x4004afa	      3120	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x4951	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3121	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_95
0x4955	          0x4889c7	                            mov rdi, rax	      3121	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_95
0x4958	      0xe800000000	                          call 0x400499d	      3121	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_95
0x495d	            0x89c7	                            mov edi, eax	      3121	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_95
0x495f	      0xe800000000	                          call 0x40049a4	      3121	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_95
0x4964	            0x85c0	                           test eax, eax	      3121	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_95
0x4966	     0xf854e010000	                           jne 0x4004afa	      3121	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_95
0x496c	    0x488b05000000	            mov rax, qword [0x040049b3] 	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x4973	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x4977	    0x488b05000000	            mov rax, qword [0x040049be] 	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x497e	          0x4839c2	                            cmp rdx, rax	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x4981	     0xf8533010000	                           jne 0x4004afa	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x4987	    0x488b05000000	            mov rax, qword [0x040049ce] 	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x498e	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x4991	    0x8b0500000000	            mov eax, dword [0x040049d7] 	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x4997	            0x39c2	                            cmp edx, eax	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x4999	     0xf851b010000	                           jne 0x4004afa	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x499f	    0x488b05000000	            mov rax, qword [0x040049e6] 	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x49a6	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x49a9	    0x8b0500000000	            mov eax, dword [0x040049ef] 	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x49af	            0x39c2	                            cmp edx, eax	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x49b1	     0xf8503010000	                           jne 0x4004afa	      3122	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_96
0x49b7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3123	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_97
0x49be	      0xbe00000000	                              mov esi, 0	      3123	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_97
0x49c3	          0x4889c7	                            mov rdi, rax	      3123	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_97
0x49c6	      0xe800000000	                          call 0x4004a0b	      3123	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_97
0x49cb	        0x488945a0	             mov qword [rbp - 0x60], rax	      3123	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_97
0x49cf	      0x48837da000	               cmp qword [rbp - 0x60], 0	      3123	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_97
0x49d4	     0xf84e0000000	                            je 0x4004afa	      3123	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	CALL_97
0x49da	    0x488b0d000000	            mov rcx, qword [0x04004a21] 	      3125	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x49e1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3125	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x49e5	        0x488b5008	                mov rdx, qword [rax + 8]	      3125	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x49e9	          0x488b00	                    mov rax, qword [rax]	      3125	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x49ec	        0x48894138	             mov qword [rcx + 0x38], rax	      3125	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x49f0	        0x48895140	             mov qword [rcx + 0x40], rdx	      3125	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125
0x49f4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3126	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	IF_126
0x49fb	          0x8b4008	                mov eax, dword [rax + 8]	      3126	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	IF_126
0x49fe	          0x83f801	                              cmp eax, 1	      3126	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	IF_126
0x4a01	            0x750f	                           jne 0x4004a52	      3126	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	IF_126
0x4a03	    0xc70500000000	           mov dword [0x04004a4d], 0x56 	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	IF_126
0x4a0d	      0xe9a8000000	                           jmp 0x4004afa	      3127	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	IF_126
0x4a12	    0x488b05000000	            mov rax, qword [0x04004a59] 	      3128	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127
0x4a19	           0xfb600	                   movzx eax, byte [rax]	      3128	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127
0x4a1c	            0x3c65	                            cmp al, 0x65	      3128	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127
0x4a1e	     0xf8596000000	                           jne 0x4004afa	      3128	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127
0x4a24	    0x488b05000000	            mov rax, qword [0x04004a6b] 	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a2b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a2f	    0x488b05000000	            mov rax, qword [0x04004a76] 	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a36	          0x4839c2	                            cmp rdx, rax	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a39	            0x741a	                            je 0x4004a95	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a3b	    0x488b05000000	            mov rax, qword [0x04004a82] 	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a42	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a46	    0x488b05000000	            mov rax, qword [0x04004a8d] 	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a4d	          0x4839c2	                            cmp rdx, rax	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a50	           0xf9cc0	                                 setl al	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a53	            0xeb40	                           jmp 0x4004ad5	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a55	    0x488b05000000	            mov rax, qword [0x04004a9c] 	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a5c	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a5f	    0x8b0500000000	            mov eax, dword [0x04004aa5] 	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a65	            0x39c2	                            cmp edx, eax	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a67	            0x7417	                            je 0x4004ac0	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a69	    0x488b05000000	            mov rax, qword [0x04004ab0] 	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a70	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a73	    0x8b0500000000	            mov eax, dword [0x04004ab9] 	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a79	            0x39c2	                            cmp edx, eax	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a7b	           0xf9cc0	                                 setl al	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a7e	            0xeb15	                           jmp 0x4004ad5	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a80	    0x488b05000000	            mov rax, qword [0x04004ac7] 	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a87	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a8a	    0x8b0500000000	            mov eax, dword [0x04004ad0] 	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a90	            0x39c2	                            cmp edx, eax	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a92	           0xf9cc0	                                 setl al	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a95	            0x84c0	                             test al, al	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a97	            0x7411	                            je 0x4004aea	      3130	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128	CALL_98
0x4a99	    0x8b0500000000	            mov eax, dword [0x04004adf] 	      3131	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128
0x4a9f	          0x83c001	                              add eax, 1	      3131	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128
0x4aa2	    0x890500000000	            mov dword [0x04004ae8], eax 	      3131	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128
0x4aa8	            0xeb10	                           jmp 0x4004afa	      3131	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	IF_128
0x4aaa	    0x488b05000000	            mov rax, qword [0x04004af1] 	      3133	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	ELSE_49
0x4ab1	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3133	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	ELSE_49
0x4ab4	          0x83c201	                              add edx, 1	      3133	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	ELSE_49
0x4ab7	          0x895040	             mov dword [rax + 0x40], edx	      3133	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	IF_123	IF_125	ELSE_48	IF_127	ELSE_49
0x4aba	      0x48837da000	               cmp qword [rbp - 0x60], 0	      3138	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129
0x4abf	     0xf850c010000	                           jne 0x4004c11	      3138	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129
0x4ac5	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      3138	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129
0x4acb	            0x85c0	                           test eax, eax	      3138	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129
0x4acd	            0x750e	                           jne 0x4004b1d	      3138	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129
0x4acf	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      3138	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129
0x4ad5	            0x85c0	                           test eax, eax	      3138	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129
0x4ad7	     0xf84f4000000	                            je 0x4004c11	      3138	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129
0x4add	    0x488b05000000	            mov rax, qword [0x04004b24] 	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4ae4	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4ae8	    0x488b05000000	            mov rax, qword [0x04004b2f] 	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4aef	          0x4839c2	                            cmp rdx, rax	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4af2	            0x741a	                            je 0x4004b4e	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4af4	    0x488b05000000	            mov rax, qword [0x04004b3b] 	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4afb	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4aff	    0x488b05000000	            mov rax, qword [0x04004b46] 	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b06	          0x4839c2	                            cmp rdx, rax	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b09	           0xf9cc0	                                 setl al	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b0c	            0xeb40	                           jmp 0x4004b8e	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b0e	    0x488b05000000	            mov rax, qword [0x04004b55] 	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b15	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b18	    0x8b0500000000	            mov eax, dword [0x04004b5e] 	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b1e	            0x39c2	                            cmp edx, eax	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b20	            0x7417	                            je 0x4004b79	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b22	    0x488b05000000	            mov rax, qword [0x04004b69] 	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b29	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b2c	    0x8b0500000000	            mov eax, dword [0x04004b72] 	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b32	            0x39c2	                            cmp edx, eax	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b34	           0xf9cc0	                                 setl al	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b37	            0xeb15	                           jmp 0x4004b8e	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b39	    0x488b05000000	            mov rax, qword [0x04004b80] 	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b40	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b43	    0x8b0500000000	            mov eax, dword [0x04004b89] 	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b49	            0x39c2	                            cmp edx, eax	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b4b	           0xf9cc0	                                 setl al	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b4e	            0x84c0	                             test al, al	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b50	            0x741f	                            je 0x4004bb1	      3142	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_99
0x4b52	    0x488b05000000	            mov rax, qword [0x04004b99] 	      3144	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_100
0x4b59	        0x4883c038	                           add rax, 0x38	      3144	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_100
0x4b5d	          0x4889c7	                            mov rdi, rax	      3144	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_100
0x4b60	      0xe83f010000	             call sym.find_start_of_word	      3144	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_100
0x4b65	      0xbf00000000	                              mov edi, 0	      3145	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_101
0x4b6a	      0xe8d7010000	               call sym.find_end_of_word	      3145	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_101
0x4b6f	            0xeb60	                           jmp 0x4004c11	      3145	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	IF_130	CALL_101
0x4b71	      0xbf00000000	                              mov edi, 0	      3149	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_102
0x4b76	      0xe829010000	             call sym.find_start_of_word	      3149	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_102
0x4b7b	    0x488b05000000	            mov rax, qword [0x04004bc2] 	      3150	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131	CALL_103
0x4b82	           0xfb600	                   movzx eax, byte [rax]	      3150	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131	CALL_103
0x4b85	            0x3c65	                            cmp al, 0x65	      3150	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131	CALL_103
0x4b87	            0x7535	                           jne 0x4004bfe	      3150	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131	CALL_103
0x4b89	      0xe800000000	                          call 0x4004bce	      3150	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131	CALL_103
0x4b8e	           0xfb600	                   movzx eax, byte [rax]	      3150	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131	CALL_103
0x4b91	            0x84c0	                             test al, al	      3150	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131	CALL_103
0x4b93	            0x7429	                            je 0x4004bfe	      3150	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131	CALL_103
0x4b95	    0x488b1d000000	            mov rbx, qword [0x04004bdc] 	      3153	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_104
0x4b9c	      0xe800000000	                          call 0x4004be1	      3153	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_104
0x4ba1	          0x4889c7	                            mov rdi, rax	      3153	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_104
0x4ba4	            0xffd3	                                call rbx	      3153	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_104
0x4ba6	            0x89c1	                            mov ecx, eax	      3153	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_104
0x4ba8	    0x488b05000000	            mov rax, qword [0x04004bef] 	      3152	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131
0x4baf	    0x488b15000000	            mov rdx, qword [0x04004bf6] 	      3152	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131
0x4bb6	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      3152	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131
0x4bb9	             0x1ca	                            add edx, ecx	      3152	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131
0x4bbb	          0x895040	             mov dword [rax + 0x40], edx	      3152	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	IF_131
0x4bbe	    0x488b05000000	            mov rax, qword [0x04004c05] 	      3157	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_105
0x4bc5	        0x4883c038	                           add rax, 0x38	      3157	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_105
0x4bc9	          0x4889c7	                            mov rdi, rax	      3157	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_105
0x4bcc	      0xe875010000	               call sym.find_end_of_word	      3157	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122	ELSE_49	IF_129	ELSE_50	CALL_105
0x4bd1	    0x488b05000000	            mov rax, qword [0x04004c18] 	      3160	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122
0x4bd8	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      3160	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_122
0x4bdf	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      3162	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_132
0x4be5	            0x85c0	                           test eax, eax	      3162	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_132
0x4be7	            0x7442	                            je 0x4004c6b	      3162	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_132
0x4be9	      0xbf14000000	                           mov edi, 0x14	      3163	normal.c	FUNCTION_9	ELSE_43	IF_115	CALL_106
0x4bee	      0xe800000000	                          call 0x4004c33	      3163	normal.c	FUNCTION_9	ELSE_43	IF_115	CALL_106
0x4bf3	            0xeb36	                           jmp 0x4004c6b	      3162	normal.c	FUNCTION_9	ELSE_43	IF_115	IF_132
0x4bf5	    0x8b0500000000	            mov eax, dword [0x04004c3b] 	      3165	normal.c	FUNCTION_9	ELSE_51	IF_133
0x4bfb	            0x85c0	                           test eax, eax	      3165	normal.c	FUNCTION_9	ELSE_51	IF_133
0x4bfd	            0x742c	                            je 0x4004c6b	      3165	normal.c	FUNCTION_9	ELSE_51	IF_133
0x4bff	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      3165	normal.c	FUNCTION_9	ELSE_51	IF_133
0x4c06	            0x7523	                           jne 0x4004c6b	      3165	normal.c	FUNCTION_9	ELSE_51	IF_133
0x4c08	    0x8b0500000000	            mov eax, dword [0x04004c4e] 	      3167	normal.c	FUNCTION_9	ELSE_51	IF_133	IF_134
0x4c0e	          0x83e008	                              and eax, 8	      3167	normal.c	FUNCTION_9	ELSE_51	IF_133	IF_134
0x4c11	            0x85c0	                           test eax, eax	      3167	normal.c	FUNCTION_9	ELSE_51	IF_133	IF_134
0x4c13	            0x740c	                            je 0x4004c61	      3167	normal.c	FUNCTION_9	ELSE_51	IF_133	IF_134
0x4c15	    0xc70500000000	           mov dword [0x04004c5f], 0x16 	      3168	normal.c	FUNCTION_9	ELSE_51	IF_133	IF_134
0x4c1f	            0xeb0a	                           jmp 0x4004c6b	      3168	normal.c	FUNCTION_9	ELSE_51	IF_133	IF_134
0x4c21	    0xc70500000000	           mov dword [0x04004c6b], 0x76 	      3170	normal.c	FUNCTION_9	ELSE_51	IF_133	ELSE_52
0x4c2b	    0x8b0500000000	            mov eax, dword [0x04004c71] 	      3174	normal.c	FUNCTION_9	IF_135
0x4c31	            0x85c0	                           test eax, eax	      3174	normal.c	FUNCTION_9	IF_135
0x4c33	            0x7513	                           jne 0x4004c88	      3174	normal.c	FUNCTION_9	IF_135
0x4c35	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      3174	normal.c	FUNCTION_9	IF_135
0x4c3c	            0x740a	                            je 0x4004c88	      3174	normal.c	FUNCTION_9	IF_135
0x4c3e	    0x8b0500000000	            mov eax, dword [0x04004c84] 	      3174	normal.c	FUNCTION_9	IF_135
0x4c44	            0x85c0	                           test eax, eax	      3174	normal.c	FUNCTION_9	IF_135
0x4c46	            0x7535	                           jne 0x4004cbd	      3174	normal.c	FUNCTION_9	IF_135
0x4c48	    0x8b0500000000	            mov eax, dword [0x04004c8e] 	      3175	normal.c	FUNCTION_9	IF_135
0x4c4e	            0x85c0	                           test eax, eax	      3175	normal.c	FUNCTION_9	IF_135
0x4c50	            0x7435	                            je 0x4004cc7	      3175	normal.c	FUNCTION_9	IF_135
0x4c52	    0x8b0500000000	            mov eax, dword [0x04004c98] 	      3175	normal.c	FUNCTION_9	IF_135
0x4c58	            0x85c0	                           test eax, eax	      3175	normal.c	FUNCTION_9	IF_135
0x4c5a	            0x742b	                            je 0x4004cc7	      3175	normal.c	FUNCTION_9	IF_135
0x4c5c	    0x8b0500000000	            mov eax, dword [0x04004ca2] 	      3175	normal.c	FUNCTION_9	IF_135
0x4c62	            0x85c0	                           test eax, eax	      3175	normal.c	FUNCTION_9	IF_135
0x4c64	            0x7521	                           jne 0x4004cc7	      3175	normal.c	FUNCTION_9	IF_135
0x4c66	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      3176	normal.c	FUNCTION_9	IF_135
0x4c6d	            0x740e	                            je 0x4004cbd	      3176	normal.c	FUNCTION_9	IF_135
0x4c6f	    0x8b0500000000	            mov eax, dword [0x04004cb5] 	      3176	normal.c	FUNCTION_9	IF_135
0x4c75	    0x3b8570ffffff	             cmp eax, dword [rbp - 0x90]	      3176	normal.c	FUNCTION_9	IF_135
0x4c7b	            0x740a	                            je 0x4004cc7	      3176	normal.c	FUNCTION_9	IF_135
0x4c7d	    0xc70500000000	               mov dword [0x04004cc7], 1	      3177	normal.c	FUNCTION_9	IF_135
0x4c87	          0x8b4580	             mov eax, dword [rbp - 0x80]	      3179	normal.c	FUNCTION_9
0x4c8a	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3180	normal.c	FUNCTION_9
0x4c8e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3180	normal.c	FUNCTION_9
0x4c97	            0x7405	                            je 0x4004cde	      3180	normal.c	FUNCTION_9
0x4c99	      0xe800000000	                          call 0x4004cde	      3180	normal.c	FUNCTION_9
0x4c9e	        0x488b5df8	                mov rbx, qword [rbp - 8]	      3180	normal.c	FUNCTION_9
0x4ca2	              0xc9	                                   leave	      3180	normal.c	FUNCTION_9
0x4ca3	              0xc3	                                     ret	      3180	normal.c	FUNCTION_9
nv_cursorhold	CALL,1:ELSE,0:DO,0:FOR,0:functions,0:IF,0:WHILE,0:SWITCH,0	21
0x106c4	              0x55	                                push rbp	      9580	normal.c	FUNCTION_139
0x106c5	          0x4889e5	                            mov rbp, rsp	      9580	normal.c	FUNCTION_139
0x106c8	        0x4883ec10	                           sub rsp, 0x10	      9580	normal.c	FUNCTION_139
0x106cc	        0x48897df8	                mov qword [rbp - 8], rdi	      9580	normal.c	FUNCTION_139
0x106d0	    0x488b05000000	            mov rax, qword [0x04010717] 	      9581	normal.c	FUNCTION_139	CALL_1
0x106d7	          0x4989c0	                             mov r8, rax	      9581	normal.c	FUNCTION_139	CALL_1
0x106da	      0xb900000000	                              mov ecx, 0	      9581	normal.c	FUNCTION_139	CALL_1
0x106df	      0xba00000000	                              mov edx, 0	      9581	normal.c	FUNCTION_139	CALL_1
0x106e4	      0xbe00000000	                              mov esi, 0	      9581	normal.c	FUNCTION_139	CALL_1
0x106e9	      0xbf45000000	                           mov edi, 0x45	      9581	normal.c	FUNCTION_139	CALL_1
0x106ee	      0xe800000000	                          call 0x4010733	      9581	normal.c	FUNCTION_139	CALL_1
0x106f3	    0xc70500000000	               mov dword [0x0401073d], 1	      9582	normal.c	FUNCTION_139
0x106fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      9583	normal.c	FUNCTION_139
0x10701	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      9583	normal.c	FUNCTION_139
0x10704	          0x83c801	                               or eax, 1	      9583	normal.c	FUNCTION_139
0x10707	            0x89c2	                            mov edx, eax	      9583	normal.c	FUNCTION_139
0x10709	        0x488b45f8	                mov rax, qword [rbp - 8]	      9583	normal.c	FUNCTION_139
0x1070d	          0x89503c	             mov dword [rax + 0x3c], edx	      9583	normal.c	FUNCTION_139
0x10710	              0x90	                                     nop	      9584	normal.c	FUNCTION_139
0x10711	              0xc9	                                   leave	      9584	normal.c	FUNCTION_139
0x10712	              0xc3	                                     ret	      9584	normal.c	FUNCTION_139
do_check_scrollbind	CALL,3:ELSE,2:DO,0:FOR,0:functions,0:IF,5:WHILE,0:SWITCH,0	94
0x6099	              0x55	                                push rbp	      3990	normal.c	FUNCTION_35
0x609a	          0x4889e5	                            mov rbp, rsp	      3990	normal.c	FUNCTION_35
0x609d	        0x4883ec10	                           sub rsp, 0x10	      3990	normal.c	FUNCTION_35
0x60a1	          0x897dfc	                mov dword [rbp - 4], edi	      3990	normal.c	FUNCTION_35
0x60a4	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3999	normal.c	FUNCTION_35	IF_1
0x60a8	     0xf8456010000	                            je 0x4006244	      3999	normal.c	FUNCTION_35	IF_1
0x60ae	    0x488b05000000	            mov rax, qword [0x040060f5] 	      3999	normal.c	FUNCTION_35	IF_1
0x60b5	    0x8b8088020000	           mov eax, dword [rax + 0x288] 	      3999	normal.c	FUNCTION_35	IF_1
0x60bb	            0x85c0	                           test eax, eax	      3999	normal.c	FUNCTION_35	IF_1
0x60bd	     0xf8441010000	                            je 0x4006244	      3999	normal.c	FUNCTION_35	IF_1
0x60c3	    0x8b0500000000	            mov eax, dword [0x04006109] 	      4003	normal.c	FUNCTION_35	IF_1	IF_2
0x60c9	            0x85c0	                           test eax, eax	      4003	normal.c	FUNCTION_35	IF_1	IF_2
0x60cb	            0x740f	                            je 0x400611c	      4003	normal.c	FUNCTION_35	IF_1	IF_2
0x60cd	    0xc70500000000	               mov dword [0x04006117], 0	      4004	normal.c	FUNCTION_35	IF_1	IF_2
0x60d7	      0xe90f010000	                           jmp 0x400622b	      4004	normal.c	FUNCTION_35	IF_1	IF_2
0x60dc	    0x488b15000000	            mov rdx, qword [0x04006123] 	      4005	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3
0x60e3	    0x488b05000000	            mov rax, qword [0x0400612a] 	      4005	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3
0x60ea	          0x4839c2	                            cmp rdx, rax	      4005	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3
0x60ed	     0xf85b3000000	                           jne 0x40061e6	      4005	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3
0x60f3	    0x488b05000000	            mov rax, qword [0x0400613a] 	      4012	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x60fa	        0x488b5008	                mov rdx, qword [rax + 8]	      4012	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x60fe	    0x488b05000000	            mov rax, qword [0x04006145] 	      4012	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6105	          0x4839c2	                            cmp rdx, rax	      4012	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6108	            0x7415	                            je 0x400615f	      4012	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x610a	    0x488b05000000	            mov rax, qword [0x04006151] 	      4014	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6111	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      4014	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6117	            0x85c0	                           test eax, eax	      4014	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6119	     0xf84cc000000	                            je 0x400622b	      4014	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x611f	    0x488b05000000	            mov rax, qword [0x04006166] 	      4017	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6126	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4017	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x612a	    0x488b05000000	            mov rax, qword [0x04006171] 	      4017	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6131	          0x4839c2	                            cmp rdx, rax	      4017	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6134	            0x7532	                           jne 0x40061a8	      4017	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6136	    0x488b05000000	            mov rax, qword [0x0400617d] 	      4019	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x613d	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      4019	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6143	    0x8b0500000000	            mov eax, dword [0x04006189] 	      4019	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6149	            0x39c2	                            cmp edx, eax	      4019	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x614b	            0x751b	                           jne 0x40061a8	      4019	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x614d	    0x488b05000000	            mov rax, qword [0x04006194] 	      4021	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6154	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	      4021	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x615a	    0x8b0500000000	            mov eax, dword [0x040061a0] 	      4021	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6160	            0x39c2	                            cmp edx, eax	      4021	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6162	     0xf8483000000	                            je 0x400622b	      4021	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6168	    0x488b05000000	            mov rax, qword [0x040061af] 	      4024	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x616f	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	      4024	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x6175	    0x8b0500000000	            mov eax, dword [0x040061bb] 	      4024	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x617b	            0x29c2	                            sub edx, eax	      4024	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x617d	            0x89d0	                            mov eax, edx	      4024	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4
0x617f	            0x4898	                                    cdqe	      4023	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x6181	    0x488b15000000	            mov rdx, qword [0x040061c8] 	      4023	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x6188	        0x488b4a78	            mov rcx, qword [rdx + 0x78] 	      4023	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x618c	    0x488b15000000	            mov rdx, qword [0x040061d3] 	      4023	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x6193	          0x4829d1	                            sub rcx, rdx	      4023	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x6196	          0x4889ca	                            mov rdx, rcx	      4023	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x6199	          0x4889c6	                            mov rsi, rax	      4023	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x619c	          0x4889d7	                            mov rdi, rdx	      4023	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x619f	      0xe800000000	                          call 0x40061e4	      4023	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x61a4	            0xeb45	                           jmp 0x400622b	      4023	normal.c	FUNCTION_35	IF_1	ELSE_1	IF_3	IF_4	CALL_1
0x61a6	    0x488b05000000	            mov rax, qword [0x040061ed] 	      4027	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_2
0x61ad	      0xbe6a000000	                           mov esi, 0x6a	      4027	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_2
0x61b2	          0x4889c7	                            mov rdi, rax	      4027	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_2
0x61b5	      0xe800000000	                          call 0x40061fa	      4027	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_2
0x61ba	          0x4885c0	                           test rax, rax	      4027	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_2
0x61bd	            0x742c	                            je 0x400622b	      4027	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_2
0x61bf	    0x488b05000000	            mov rax, qword [0x04006206] 	      4039	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_3
0x61c6	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4039	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_3
0x61ca	    0x488b05000000	            mov rax, qword [0x04006211] 	      4039	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_3
0x61d1	    0x488b80500500	           mov rax, qword [rax + 0x550] 	      4039	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_3
0x61d8	          0x4829c2	                            sub rdx, rax	      4039	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_3
0x61db	          0x4889d0	                            mov rax, rdx	      4039	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_3
0x61de	      0xbe00000000	                              mov esi, 0	      4039	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_3
0x61e3	          0x4889c7	                            mov rdi, rax	      4039	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_3
0x61e6	      0xe800000000	                          call 0x400622b	      4039	normal.c	FUNCTION_35	IF_1	ELSE_2	IF_5	CALL_3
0x61eb	    0x488b05000000	            mov rax, qword [0x04006232] 	      4041	normal.c	FUNCTION_35	IF_1
0x61f2	    0x488b15000000	            mov rdx, qword [0x04006239] 	      4041	normal.c	FUNCTION_35	IF_1
0x61f9	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      4041	normal.c	FUNCTION_35	IF_1
0x61fd	    0x488990500500	            mov qword [rax + 0x550], rdx	      4041	normal.c	FUNCTION_35	IF_1
0x6204	    0x488b05000000	            mov rax, qword [0x0400624b] 	      4044	normal.c	FUNCTION_35
0x620b	    0x488905000000	            mov qword [0x04006252], rax 	      4044	normal.c	FUNCTION_35
0x6212	    0x488b05000000	            mov rax, qword [0x04006259] 	      4045	normal.c	FUNCTION_35
0x6219	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4045	normal.c	FUNCTION_35
0x621d	    0x488905000000	            mov qword [0x04006264], rax 	      4045	normal.c	FUNCTION_35
0x6224	    0x488b05000000	            mov rax, qword [0x0400626b] 	      4047	normal.c	FUNCTION_35
0x622b	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4047	normal.c	FUNCTION_35
0x6231	    0x890500000000	            mov dword [0x04006277], eax 	      4047	normal.c	FUNCTION_35
0x6237	    0x488b05000000	            mov rax, qword [0x0400627e] 	      4049	normal.c	FUNCTION_35
0x623e	        0x488b4008	                mov rax, qword [rax + 8]	      4049	normal.c	FUNCTION_35
0x6242	    0x488905000000	            mov qword [0x04006289], rax 	      4049	normal.c	FUNCTION_35
0x6249	    0x488b05000000	            mov rax, qword [0x04006290] 	      4050	normal.c	FUNCTION_35
0x6250	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      4050	normal.c	FUNCTION_35
0x6256	    0x890500000000	            mov dword [0x0400629c], eax 	      4050	normal.c	FUNCTION_35
0x625c	              0x90	                                     nop	      4051	normal.c	FUNCTION_35
0x625d	              0xc9	                                   leave	      4051	normal.c	FUNCTION_35
0x625e	              0xc3	                                     ret	      4051	normal.c	FUNCTION_35
nv_put	CALL,18:ELSE,3:DO,0:FOR,0:functions,0:IF,15:WHILE,0:SWITCH,0	249
0x10248	              0x55	                                push rbp	      9406	normal.c	FUNCTION_135
0x10249	          0x4889e5	                            mov rbp, rsp	      9406	normal.c	FUNCTION_135
0x1024c	        0x4883ec40	                           sub rsp, 0x40	      9406	normal.c	FUNCTION_135
0x10250	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      9406	normal.c	FUNCTION_135
0x10254	    0x64488b042528	                mov rax, qword fs:[0x28]	      9406	normal.c	FUNCTION_135
0x1025d	        0x488945f8	                mov qword [rbp - 8], rax	      9406	normal.c	FUNCTION_135
0x10261	            0x31c0	                            xor eax, eax	      9406	normal.c	FUNCTION_135
0x10263	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      9407	normal.c	FUNCTION_135
0x1026a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      9408	normal.c	FUNCTION_135
0x10272	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      9408	normal.c	FUNCTION_135
0x1027a	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      9409	normal.c	FUNCTION_135
0x10281	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      9410	normal.c	FUNCTION_135
0x10288	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      9412	normal.c	FUNCTION_135
0x1028f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9414	normal.c	FUNCTION_135	IF_1
0x10293	          0x488b00	                    mov rax, qword [rax]	      9414	normal.c	FUNCTION_135	IF_1
0x10296	            0x8b00	                    mov eax, dword [rax]	      9414	normal.c	FUNCTION_135	IF_1
0x10298	            0x85c0	                           test eax, eax	      9414	normal.c	FUNCTION_135	IF_1
0x1029a	            0x7457	                            je 0x4010333	      9414	normal.c	FUNCTION_135	IF_1
0x1029c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9418	normal.c	FUNCTION_135	IF_1	IF_2
0x102a0	          0x488b00	                    mov rax, qword [rax]	      9418	normal.c	FUNCTION_135	IF_1	IF_2
0x102a3	            0x8b00	                    mov eax, dword [rax]	      9418	normal.c	FUNCTION_135	IF_1	IF_2
0x102a5	          0x83f801	                              cmp eax, 1	      9418	normal.c	FUNCTION_135	IF_1	IF_2
0x102a8	            0x7535	                           jne 0x401031f	      9418	normal.c	FUNCTION_135	IF_1	IF_2
0x102aa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9418	normal.c	FUNCTION_135	IF_1	IF_2
0x102ae	          0x8b400c	              mov eax, dword [rax + 0xc]	      9418	normal.c	FUNCTION_135	IF_1	IF_2
0x102b1	          0x83f870	                           cmp eax, 0x70	      9418	normal.c	FUNCTION_135	IF_1	IF_2
0x102b4	            0x7529	                           jne 0x401031f	      9418	normal.c	FUNCTION_135	IF_1	IF_2
0x102b6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9420	normal.c	FUNCTION_135	IF_1	IF_2	CALL_1
0x102ba	          0x488b00	                    mov rax, qword [rax]	      9420	normal.c	FUNCTION_135	IF_1	IF_2	CALL_1
0x102bd	          0x4889c7	                            mov rdi, rax	      9420	normal.c	FUNCTION_135	IF_1	IF_2	CALL_1
0x102c0	      0xe8ed56ffff	                        call sym.clearop	      9420	normal.c	FUNCTION_135	IF_1	IF_2	CALL_1
0x102c5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9421	normal.c	FUNCTION_135	IF_1	IF_2	CALL_2
0x102c9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9421	normal.c	FUNCTION_135	IF_1	IF_2	CALL_2
0x102cd	          0x4889c6	                            mov rsi, rax	      9421	normal.c	FUNCTION_135	IF_1	IF_2	CALL_2
0x102d0	      0xbf01000000	                              mov edi, 1	      9421	normal.c	FUNCTION_135	IF_1	IF_2	CALL_2
0x102d5	      0xe800000000	                          call 0x401031a	      9421	normal.c	FUNCTION_135	IF_1	IF_2	CALL_2
0x102da	      0xe93c030000	                           jmp 0x401065b	      9533	normal.c	FUNCTION_135
0x102df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9425	normal.c	FUNCTION_135	IF_1	CALL_3
0x102e3	          0x488b00	                    mov rax, qword [rax]	      9425	normal.c	FUNCTION_135	IF_1	CALL_3
0x102e6	          0x4889c7	                            mov rdi, rax	      9425	normal.c	FUNCTION_135	IF_1	CALL_3
0x102e9	      0xe8fa56ffff	                    call sym.clearopbeep	      9425	normal.c	FUNCTION_135	IF_1	CALL_3
0x102ee	      0xe928030000	                           jmp 0x401065b	      9533	normal.c	FUNCTION_135
0x102f3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9429	normal.c	FUNCTION_135	ELSE_2
0x102f7	          0x8b400c	              mov eax, dword [rax + 0xc]	      9429	normal.c	FUNCTION_135	ELSE_2
0x102fa	          0x83f850	                           cmp eax, 0x50	      9431	normal.c	FUNCTION_135	ELSE_2
0x102fd	            0x7418	                            je 0x4010357	      9431	normal.c	FUNCTION_135	ELSE_2
0x102ff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9430	normal.c	FUNCTION_135	ELSE_2
0x10303	          0x8b400c	              mov eax, dword [rax + 0xc]	      9430	normal.c	FUNCTION_135	ELSE_2
0x10306	          0x83f867	                           cmp eax, 0x67	      9430	normal.c	FUNCTION_135	ELSE_2
0x10309	            0x7513	                           jne 0x401035e	      9430	normal.c	FUNCTION_135	ELSE_2
0x1030b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9430	normal.c	FUNCTION_135	ELSE_2
0x1030f	          0x8b4010	            mov eax, dword [rax + 0x10] 	      9430	normal.c	FUNCTION_135	ELSE_2
0x10312	          0x83f850	                           cmp eax, 0x50	      9430	normal.c	FUNCTION_135	ELSE_2
0x10315	            0x7507	                           jne 0x401035e	      9430	normal.c	FUNCTION_135	ELSE_2
0x10317	      0xb8ffffffff	                     mov eax, 0xffffffff	      9431	normal.c	FUNCTION_135	ELSE_2
0x1031c	            0xeb05	                           jmp 0x4010363	      9431	normal.c	FUNCTION_135	ELSE_2
0x1031e	      0xb801000000	                              mov eax, 1	      9431	normal.c	FUNCTION_135	ELSE_2
0x10323	          0x8945e0	             mov dword [rbp - 0x20], eax	      9429	normal.c	FUNCTION_135	ELSE_2
0x10326	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9432	normal.c	FUNCTION_135	ELSE_2	CALL_4
0x1032a	          0x4889c7	                            mov rdi, rax	      9432	normal.c	FUNCTION_135	ELSE_2	CALL_4
0x1032d	      0xe82455ffff	                  call sym.prep_redo_cmd	      9432	normal.c	FUNCTION_135	ELSE_2	CALL_4
0x10332	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9433	normal.c	FUNCTION_135	ELSE_2	IF_3
0x10336	          0x8b400c	              mov eax, dword [rax + 0xc]	      9433	normal.c	FUNCTION_135	ELSE_2	IF_3
0x10339	          0x83f867	                           cmp eax, 0x67	      9433	normal.c	FUNCTION_135	ELSE_2	IF_3
0x1033c	            0x7504	                           jne 0x4010382	      9433	normal.c	FUNCTION_135	ELSE_2	IF_3
0x1033e	        0x834de402	                or dword [rbp - 0x1c], 2	      9434	normal.c	FUNCTION_135	ELSE_2	IF_3
0x10342	    0x8b0500000000	            mov eax, dword [0x04010388] 	      9436	normal.c	FUNCTION_135	ELSE_2	IF_4
0x10348	            0x85c0	                           test eax, eax	      9436	normal.c	FUNCTION_135	ELSE_2	IF_4
0x1034a	     0xf8499010000	                            je 0x4010529	      9436	normal.c	FUNCTION_135	ELSE_2	IF_4
0x10350	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      9443	normal.c	FUNCTION_135	ELSE_2	IF_4
0x10357	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9444	normal.c	FUNCTION_135	ELSE_2	IF_4
0x1035b	          0x488b00	                    mov rax, qword [rax]	      9444	normal.c	FUNCTION_135	ELSE_2	IF_4
0x1035e	          0x8b4004	                mov eax, dword [rax + 4]	      9444	normal.c	FUNCTION_135	ELSE_2	IF_4
0x10361	          0x8945d4	             mov dword [rbp - 0x2c], eax	      9444	normal.c	FUNCTION_135	ELSE_2	IF_4
0x10364	        0x488d45d4	                   lea rax, [rbp - 0x2c]	      9446	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_5
0x10368	          0x4889c7	                            mov rdi, rax	      9446	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_5
0x1036b	      0xe800000000	                          call 0x40103b0	      9446	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_5
0x10370	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9448	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x10373	            0x85c0	                           test eax, eax	      9448	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x10375	            0x7435	                            je 0x40103ec	      9448	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x10377	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9448	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x1037a	          0x83f822	                           cmp eax, 0x22	      9448	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x1037d	            0x742d	                            je 0x40103ec	      9448	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x1037f	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9449	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_6
0x10382	          0x83e830	                           sub eax, 0x30	      9449	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_6
0x10385	          0x83f809	                              cmp eax, 9	      9449	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_6
0x10388	            0x7622	                           jbe 0x40103ec	      9449	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_6
0x1038a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9449	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_6
0x1038d	          0x83f82d	                           cmp eax, 0x2d	      9449	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_6
0x10390	            0x741a	                            je 0x40103ec	      9449	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_6
0x10392	    0x8b0500000000	            mov eax, dword [0x040103d8] 	      9451	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x10398	            0x85c0	                           test eax, eax	      9451	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x1039a	            0x7423	                            je 0x40103ff	      9451	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x1039c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9451	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x1039f	          0x83f82a	                           cmp eax, 0x2a	      9451	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x103a2	            0x7408	                            je 0x40103ec	      9451	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x103a4	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9451	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x103a7	          0x83f82b	                           cmp eax, 0x2b	      9451	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x103aa	            0x7513	                           jne 0x40103ff	      9451	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5
0x103ac	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9458	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_7
0x103af	      0xbe01000000	                              mov esi, 1	      9458	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_7
0x103b4	            0x89c7	                            mov edi, eax	      9458	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_7
0x103b6	      0xe800000000	                          call 0x40103fb	      9458	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_7
0x103bb	        0x488945e8	             mov qword [rbp - 0x18], rax	      9458	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_5	CALL_7
0x103bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9462	normal.c	FUNCTION_135	ELSE_2	IF_4
0x103c3	    0xc7400c640000	            mov dword [rax + 0xc], 0x64 	      9462	normal.c	FUNCTION_135	ELSE_2	IF_4
0x103ca	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9463	normal.c	FUNCTION_135	ELSE_2	IF_4
0x103ce	    0xc74010000000	               mov dword [rax + 0x10], 0	      9463	normal.c	FUNCTION_135	ELSE_2	IF_4
0x103d5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9464	normal.c	FUNCTION_135	ELSE_2	IF_4
0x103d9	          0x488b00	                    mov rax, qword [rax]	      9464	normal.c	FUNCTION_135	ELSE_2	IF_4
0x103dc	    0xc74004000000	                  mov dword [rax + 4], 0	      9464	normal.c	FUNCTION_135	ELSE_2	IF_4
0x103e3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9465	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_8
0x103e7	          0x4889c7	                            mov rdi, rax	      9465	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_8
0x103ea	      0xe844e7ffff	                    call sym.nv_operator	      9465	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_8
0x103ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9466	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_9
0x103f3	      0xba00000000	                              mov edx, 0	      9466	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_9
0x103f8	      0xbe00000000	                              mov esi, 0	      9466	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_9
0x103fd	          0x4889c7	                            mov rdi, rax	      9466	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_9
0x10400	      0xe800000000	                          call 0x4010445	      9466	normal.c	FUNCTION_135	ELSE_2	IF_4	CALL_9
0x10405	    0x488b05000000	            mov rax, qword [0x0401044c] 	      9467	normal.c	FUNCTION_135	ELSE_2	IF_4
0x1040c	          0x8b4010	            mov eax, dword [rax + 0x10] 	      9467	normal.c	FUNCTION_135	ELSE_2	IF_4
0x1040f	          0x83e001	                              and eax, 1	      9467	normal.c	FUNCTION_135	ELSE_2	IF_4
0x10412	          0x8945d8	             mov dword [rbp - 0x28], eax	      9467	normal.c	FUNCTION_135	ELSE_2	IF_4
0x10415	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9470	normal.c	FUNCTION_135	ELSE_2	IF_4
0x10419	          0x488b00	                    mov rax, qword [rax]	      9470	normal.c	FUNCTION_135	ELSE_2	IF_4
0x1041c	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      9470	normal.c	FUNCTION_135	ELSE_2	IF_4
0x1041f	          0x895004	                mov dword [rax + 4], edx	      9470	normal.c	FUNCTION_135	ELSE_2	IF_4
0x10422	      0x48837de800	               cmp qword [rbp - 0x18], 0	      9472	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6
0x10427	            0x7424	                            je 0x401048d	      9472	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6
0x10429	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9476	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_10
0x1042c	      0xbe00000000	                              mov esi, 0	      9476	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_10
0x10431	            0x89c7	                            mov edi, eax	      9476	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_10
0x10433	      0xe800000000	                          call 0x4010478	      9476	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_10
0x10438	        0x488945f0	             mov qword [rbp - 0x10], rax	      9476	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_10
0x1043c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9477	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_11
0x1043f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      9477	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_11
0x10443	          0x4889d6	                            mov rsi, rdx	      9477	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_11
0x10446	            0x89c7	                            mov edi, eax	      9477	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_11
0x10448	      0xe800000000	                          call 0x401048d	      9477	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_6	CALL_11
0x1044d	    0x8b0500000000	            mov eax, dword [0x04010493] 	      9483	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_7
0x10453	          0x83f856	                           cmp eax, 0x56	      9483	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_7
0x10456	            0x7506	                           jne 0x401049e	      9483	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_7
0x10458	        0x834de408	                or dword [rbp - 0x1c], 8	      9484	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_7
0x1045c	            0xeb0f	                           jmp 0x40104ad	      9484	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_7
0x1045e	    0x8b0500000000	            mov eax, dword [0x040104a4] 	      9485	normal.c	FUNCTION_135	ELSE_2	IF_4	ELSE_3	IF_8
0x10464	          0x83f876	                           cmp eax, 0x76	      9485	normal.c	FUNCTION_135	ELSE_2	IF_4	ELSE_3	IF_8
0x10467	            0x7504	                           jne 0x40104ad	      9485	normal.c	FUNCTION_135	ELSE_2	IF_4	ELSE_3	IF_8
0x10469	        0x834de410	             or dword [rbp - 0x1c], 0x10	      9486	normal.c	FUNCTION_135	ELSE_2	IF_4	ELSE_3	IF_8
0x1046d	    0x8b0500000000	            mov eax, dword [0x040104b3] 	      9487	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_9
0x10473	          0x83f816	                           cmp eax, 0x16	      9487	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_9
0x10476	            0x750a	                           jne 0x40104c2	      9487	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_9
0x10478	        0x837de001	               cmp dword [rbp - 0x20], 1	      9487	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_9
0x1047c	            0x7504	                           jne 0x40104c2	      9487	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_9
0x1047e	        0x834de420	             or dword [rbp - 0x1c], 0x20	      9488	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_9
0x10482	    0xc745e0ffffff	     mov dword [rbp - 0x20], 0xffffffff 	      9489	normal.c	FUNCTION_135	ELSE_2	IF_4
0x10489	    0x8b0500000000	            mov eax, dword [0x040104cf] 	      9490	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x1048f	          0x83f856	                           cmp eax, 0x56	      9490	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x10492	            0x741b	                            je 0x40104ef	      9490	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x10494	    0x488b05000000	            mov rax, qword [0x040104db] 	      9491	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x1049b	          0x8b5040	            mov edx, dword [rax + 0x40] 	      9491	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x1049e	    0x488b05000000	            mov rax, qword [0x040104e5] 	      9491	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x104a5	    0x8b80d8110000	          mov eax, dword [rax + 0x11d8] 	      9491	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x104ab	            0x39c2	                            cmp edx, eax	      9491	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x104ad	            0x7c29	                            jl 0x4010518	      9491	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x104af	    0x8b0500000000	            mov eax, dword [0x040104f5] 	      9492	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x104b5	          0x83f856	                           cmp eax, 0x56	      9492	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x104b8	            0x7525	                           jne 0x401051f	      9492	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x104ba	    0x488b05000000	            mov rax, qword [0x04010501] 	      9493	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x104c1	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      9493	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x104c5	    0x488b05000000	            mov rax, qword [0x0401050c] 	      9493	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x104cc	    0x488b80d01100	          mov rax, qword [rax + 0x11d0] 	      9493	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x104d3	          0x4839c2	                            cmp rdx, rax	      9493	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x104d6	            0x7d07	                           jge 0x401051f	      9493	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x104d8	    0xc745e0010000	               mov dword [rbp - 0x20], 1	      9496	normal.c	FUNCTION_135	ELSE_2	IF_4	IF_10
0x104df	    0xc70500000000	               mov dword [0x04010529], 1	      9498	normal.c	FUNCTION_135	ELSE_2	IF_4
0x104e9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9500	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x104ed	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      9500	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x104f1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9500	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x104f5	          0x488b00	                    mov rax, qword [rax]	      9500	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x104f8	          0x8b4004	                mov eax, dword [rax + 4]	      9500	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x104fb	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      9500	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x104fe	          0x8b75e0	             mov esi, dword [rbp - 0x20]	      9500	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x10501	            0x89c7	                            mov edi, eax	      9500	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x10503	      0xe800000000	                          call 0x4010548	      9500	normal.c	FUNCTION_135	ELSE_2	CALL_12
0x10508	      0x48837df000	               cmp qword [rbp - 0x10], 0	      9503	normal.c	FUNCTION_135	ELSE_2	IF_11
0x1050d	            0x7411	                            je 0x4010560	      9503	normal.c	FUNCTION_135	ELSE_2	IF_11
0x1050f	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9504	normal.c	FUNCTION_135	ELSE_2	CALL_13
0x10512	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9504	normal.c	FUNCTION_135	ELSE_2	CALL_13
0x10516	          0x4889d6	                            mov rsi, rdx	      9504	normal.c	FUNCTION_135	ELSE_2	CALL_13
0x10519	            0x89c7	                            mov edi, eax	      9504	normal.c	FUNCTION_135	ELSE_2	CALL_13
0x1051b	      0xe800000000	                          call 0x4010560	      9504	normal.c	FUNCTION_135	ELSE_2	CALL_13
0x10520	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      9508	normal.c	FUNCTION_135	ELSE_2	IF_12
0x10524	            0x7477	                            je 0x40105dd	      9508	normal.c	FUNCTION_135	ELSE_2	IF_12
0x10526	    0x488b0d000000	            mov rcx, qword [0x0401056d] 	      9510	normal.c	FUNCTION_135	ELSE_2	IF_12
0x1052d	    0x488b05000000	            mov rax, qword [0x04010574] 	      9510	normal.c	FUNCTION_135	ELSE_2	IF_12
0x10534	    0x488b90d81100	          mov rdx, qword [rax + 0x11d8] 	      9510	normal.c	FUNCTION_135	ELSE_2	IF_12
0x1053b	    0x488b80d01100	          mov rax, qword [rax + 0x11d0] 	      9510	normal.c	FUNCTION_135	ELSE_2	IF_12
0x10542	    0x488981e80200	            mov qword [rcx + 0x2e8], rax	      9510	normal.c	FUNCTION_135	ELSE_2	IF_12
0x10549	    0x488991f00200	            mov qword [rcx + 0x2f0], rdx	      9510	normal.c	FUNCTION_135	ELSE_2	IF_12
0x10550	    0x488b0d000000	            mov rcx, qword [0x04010597] 	      9511	normal.c	FUNCTION_135	ELSE_2	IF_12
0x10557	    0x488b05000000	            mov rax, qword [0x0401059e] 	      9511	normal.c	FUNCTION_135	ELSE_2	IF_12
0x1055e	    0x488b90f81100	          mov rdx, qword [rax + 0x11f8] 	      9511	normal.c	FUNCTION_135	ELSE_2	IF_12
0x10565	    0x488b80f01100	          mov rax, qword [rax + 0x11f0] 	      9511	normal.c	FUNCTION_135	ELSE_2	IF_12
0x1056c	    0x488981f80200	            mov qword [rcx + 0x2f8], rax	      9511	normal.c	FUNCTION_135	ELSE_2	IF_12
0x10573	    0x488991000300	            mov qword [rcx + 0x300], rdx	      9511	normal.c	FUNCTION_135	ELSE_2	IF_12
0x1057a	    0x488b05000000	            mov rax, qword [0x040105c1] 	      9513	normal.c	FUNCTION_135	ELSE_2	IF_12	IF_13
0x10581	           0xfb600	                   movzx eax, byte [rax]	      9513	normal.c	FUNCTION_135	ELSE_2	IF_12	IF_13
0x10584	            0x3c65	                            cmp al, 0x65	      9513	normal.c	FUNCTION_135	ELSE_2	IF_12	IF_13
0x10586	            0x7515	                           jne 0x40105dd	      9513	normal.c	FUNCTION_135	ELSE_2	IF_12	IF_13
0x10588	    0x488b05000000	            mov rax, qword [0x040105cf] 	      9514	normal.c	FUNCTION_135	ELSE_2	IF_12	CALL_14
0x1058f	    0x4805f8020000	                          add rax, 0x2f8	      9514	normal.c	FUNCTION_135	ELSE_2	IF_12	CALL_14
0x10595	          0x4889c7	                            mov rdi, rax	      9514	normal.c	FUNCTION_135	ELSE_2	IF_12	CALL_14
0x10598	      0xe800000000	                          call 0x40105dd	      9514	normal.c	FUNCTION_135	ELSE_2	IF_12	CALL_14
0x1059d	        0x837dd800	               cmp dword [rbp - 0x28], 0	      9519	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x105a1	            0x7469	                            je 0x401064c	      9519	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x105a3	    0x488b05000000	            mov rax, qword [0x040105ea] 	      9519	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x105aa	          0x488b00	                    mov rax, qword [rax]	      9519	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x105ad	          0x4889c7	                            mov rdi, rax	      9519	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x105b0	      0xe800000000	                          call 0x40105f5	      9519	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x105b5	           0xfb600	                   movzx eax, byte [rax]	      9519	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x105b8	            0x84c0	                             test al, al	      9519	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x105ba	            0x7550	                           jne 0x401064c	      9519	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_15
0x105bc	    0x488b05000000	            mov rax, qword [0x04010603] 	      9521	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_16
0x105c3	          0x488b00	                    mov rax, qword [rax]	      9521	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_16
0x105c6	      0xbe01000000	                              mov esi, 1	      9521	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_16
0x105cb	          0x4889c7	                            mov rdi, rax	      9521	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_16
0x105ce	      0xe800000000	                          call 0x4010613	      9521	normal.c	FUNCTION_135	ELSE_2	IF_14	CALL_16
0x105d3	    0x488b05000000	            mov rax, qword [0x0401061a] 	      9525	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x105da	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      9525	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x105de	    0x488b05000000	            mov rax, qword [0x04010625] 	      9525	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x105e5	          0x488b00	                    mov rax, qword [rax]	      9525	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x105e8	          0x4839c2	                            cmp rdx, rax	      9525	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x105eb	            0x7e1f	                           jle 0x401064c	      9525	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x105ed	    0x488b05000000	            mov rax, qword [0x04010634] 	      9527	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x105f4	    0x488b15000000	            mov rdx, qword [0x0401063b] 	      9527	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x105fb	          0x488b12	                    mov rdx, qword [rdx]	      9527	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x105fe	        0x48895038	             mov qword [rax + 0x38], rdx	      9527	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15
0x10602	      0xbfffffff7f	                     mov edi, 0x7fffffff	      9528	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15	CALL_17
0x10607	      0xe800000000	                          call 0x401064c	      9528	normal.c	FUNCTION_135	ELSE_2	IF_14	IF_15	CALL_17
0x1060c	      0xbe01000000	                              mov esi, 1	      9531	normal.c	FUNCTION_135	ELSE_2	CALL_18
0x10611	      0xbf00000000	                              mov edi, 0	      9531	normal.c	FUNCTION_135	ELSE_2	CALL_18
0x10616	      0xe800000000	                          call 0x401065b	      9531	normal.c	FUNCTION_135	ELSE_2	CALL_18
0x1061b	              0x90	                                     nop	      9533	normal.c	FUNCTION_135
0x1061c	        0x488b45f8	                mov rax, qword [rbp - 8]	      9533	normal.c	FUNCTION_135
0x10620	    0x644833042528	                xor rax, qword fs:[0x28]	      9533	normal.c	FUNCTION_135
0x10629	            0x7405	                            je 0x4010670	      9533	normal.c	FUNCTION_135
0x1062b	      0xe800000000	                          call 0x4010670	      9533	normal.c	FUNCTION_135
0x10630	              0xc9	                                   leave	      9533	normal.c	FUNCTION_135
0x10631	              0xc3	                                     ret	      9533	normal.c	FUNCTION_135
find_command	CALL,0:ELSE,1:DO,0:FOR,0:functions,0:IF,6:WHILE,1:SWITCH,0	72
0x108	              0x55	                                push rbp	       493	normal.c	FUNCTION_3
0x109	          0x4889e5	                            mov rbp, rsp	       493	normal.c	FUNCTION_3
0x10c	          0x897ddc	             mov dword [rbp - 0x24], edi	       493	normal.c	FUNCTION_3
0x10f	    0x817ddcff0000	           cmp dword [rbp - 0x24], 0xff 	       501	normal.c	FUNCTION_3	IF_1
0x116	            0x7e0a	                           jle 0x4000162	       501	normal.c	FUNCTION_3	IF_1
0x118	      0xb8ffffffff	                     mov eax, 0xffffffff	       502	normal.c	FUNCTION_3	IF_1
0x11d	      0xe9cf000000	                           jmp 0x4000231	       502	normal.c	FUNCTION_3	IF_1
0x122	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       507	normal.c	FUNCTION_3	IF_2
0x126	            0x7903	                           jns 0x400016b	       507	normal.c	FUNCTION_3	IF_2
0x128	          0xf75ddc	                  neg dword [rbp - 0x24]	       508	normal.c	FUNCTION_3	IF_2
0x12b	    0x8b0500000000	            mov eax, dword [0x04000171] 	       512	normal.c	FUNCTION_3	IF_3
0x131	          0x3945dc	            cmp dword [rbp - 0x24], eax 	       512	normal.c	FUNCTION_3	IF_3
0x134	            0x7f13	                            jg 0x4000189	       512	normal.c	FUNCTION_3	IF_3
0x136	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       513	normal.c	FUNCTION_3	IF_3
0x139	            0x4898	                                    cdqe	       513	normal.c	FUNCTION_3	IF_3
0x13b	     0xfb784000000	             movzx eax, word [rax + rax]	       513	normal.c	FUNCTION_3	IF_3
0x143	              0x98	                                    cwde	       513	normal.c	FUNCTION_3	IF_3
0x144	      0xe9a8000000	                           jmp 0x4000231	       513	normal.c	FUNCTION_3	IF_3
0x149	    0x8b0500000000	            mov eax, dword [0x0400018f] 	       516	normal.c	FUNCTION_3
0x14f	          0x83c001	                              add eax, 1	       516	normal.c	FUNCTION_3
0x152	          0x8945f4	              mov dword [rbp - 0xc], eax	       516	normal.c	FUNCTION_3
0x155	    0xc745f0bc0000	           mov dword [rbp - 0x10], 0xbc 	       517	normal.c	FUNCTION_3
0x15c	    0xc745ecffffff	     mov dword [rbp - 0x14], 0xffffffff 	       518	normal.c	FUNCTION_3
0x163	            0xeb7d	                           jmp 0x4000222	       519	normal.c	FUNCTION_3	WHILE_1
0x165	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       521	normal.c	FUNCTION_3	WHILE_1
0x168	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       521	normal.c	FUNCTION_3	WHILE_1
0x16b	             0x1d0	                            add eax, edx	       521	normal.c	FUNCTION_3	WHILE_1
0x16d	            0x89c2	                            mov edx, eax	       521	normal.c	FUNCTION_3	WHILE_1
0x16f	          0xc1ea1f	                           shr edx, 0x1f	       521	normal.c	FUNCTION_3	WHILE_1
0x172	             0x1d0	                            add eax, edx	       521	normal.c	FUNCTION_3	WHILE_1
0x174	            0xd1f8	                              sar eax, 1	       521	normal.c	FUNCTION_3	WHILE_1
0x176	          0x8945fc	                mov dword [rbp - 4], eax	       521	normal.c	FUNCTION_3	WHILE_1
0x179	          0x8b45fc	                mov eax, dword [rbp - 4]	       522	normal.c	FUNCTION_3	WHILE_1
0x17c	            0x4898	                                    cdqe	       522	normal.c	FUNCTION_3	WHILE_1
0x17e	     0xfb784000000	             movzx eax, word [rax + rax]	       522	normal.c	FUNCTION_3	WHILE_1
0x186	              0x98	                                    cwde	       522	normal.c	FUNCTION_3	WHILE_1
0x187	          0x4863d0	                         movsxd rdx, eax	       522	normal.c	FUNCTION_3	WHILE_1
0x18a	          0x4889d0	                            mov rax, rdx	       522	normal.c	FUNCTION_3	WHILE_1
0x18d	          0x4801c0	                            add rax, rax	       522	normal.c	FUNCTION_3	WHILE_1
0x190	          0x4801d0	                            add rax, rdx	       522	normal.c	FUNCTION_3	WHILE_1
0x193	        0x48c1e003	                              shl rax, 3	       522	normal.c	FUNCTION_3	WHILE_1
0x197	    0x480500000000	                              add rax, 0	       522	normal.c	FUNCTION_3	WHILE_1
0x19d	            0x8b00	                    mov eax, dword [rax]	       522	normal.c	FUNCTION_3	WHILE_1
0x19f	          0x8945f8	                mov dword [rbp - 8], eax	       522	normal.c	FUNCTION_3	WHILE_1
0x1a2	        0x837df800	                  cmp dword [rbp - 8], 0	       523	normal.c	FUNCTION_3	WHILE_1	IF_4
0x1a6	            0x7903	                           jns 0x40001eb	       523	normal.c	FUNCTION_3	WHILE_1	IF_4
0x1a8	          0xf75df8	                     neg dword [rbp - 8]	       524	normal.c	FUNCTION_3	WHILE_1	IF_4
0x1ab	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       525	normal.c	FUNCTION_3	WHILE_1	IF_5
0x1ae	          0x3b45f8	                cmp eax, dword [rbp - 8]	       525	normal.c	FUNCTION_3	WHILE_1	IF_5
0x1b1	            0x7513	                           jne 0x4000206	       525	normal.c	FUNCTION_3	WHILE_1	IF_5
0x1b3	          0x8b45fc	                mov eax, dword [rbp - 4]	       527	normal.c	FUNCTION_3	WHILE_1	IF_5
0x1b6	            0x4898	                                    cdqe	       527	normal.c	FUNCTION_3	WHILE_1	IF_5
0x1b8	     0xfb784000000	             movzx eax, word [rax + rax]	       527	normal.c	FUNCTION_3	WHILE_1	IF_5
0x1c0	              0x98	                                    cwde	       527	normal.c	FUNCTION_3	WHILE_1	IF_5
0x1c1	          0x8945ec	             mov dword [rbp - 0x14], eax	       527	normal.c	FUNCTION_3	WHILE_1	IF_5
0x1c4	            0xeb28	                           jmp 0x400022e	       528	normal.c	FUNCTION_3	WHILE_1	IF_5
0x1c6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       530	normal.c	FUNCTION_3	WHILE_1	IF_6
0x1c9	          0x3b45f8	                cmp eax, dword [rbp - 8]	       530	normal.c	FUNCTION_3	WHILE_1	IF_6
0x1cc	            0x7e0b	                           jle 0x4000219	       530	normal.c	FUNCTION_3	WHILE_1	IF_6
0x1ce	          0x8b45fc	                mov eax, dword [rbp - 4]	       531	normal.c	FUNCTION_3	WHILE_1	IF_6
0x1d1	          0x83c001	                              add eax, 1	       531	normal.c	FUNCTION_3	WHILE_1	IF_6
0x1d4	          0x8945f4	              mov dword [rbp - 0xc], eax	       531	normal.c	FUNCTION_3	WHILE_1	IF_6
0x1d7	            0xeb09	                           jmp 0x4000222	       531	normal.c	FUNCTION_3	WHILE_1	IF_6
0x1d9	          0x8b45fc	                mov eax, dword [rbp - 4]	       533	normal.c	FUNCTION_3	WHILE_1	ELSE_1
0x1dc	          0x83e801	                              sub eax, 1	       533	normal.c	FUNCTION_3	WHILE_1	ELSE_1
0x1df	          0x8945f0	             mov dword [rbp - 0x10], eax	       533	normal.c	FUNCTION_3	WHILE_1	ELSE_1
0x1e2	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       519	normal.c	FUNCTION_3	WHILE_1
0x1e5	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       519	normal.c	FUNCTION_3	WHILE_1
0x1e8	     0xf8e77ffffff	                           jle 0x40001a5	       519	normal.c	FUNCTION_3	WHILE_1
0x1ee	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       535	normal.c	FUNCTION_3	ELSE_1
0x1f1	              0x5d	                                 pop rbp	       536	normal.c	FUNCTION_3	ELSE_1
0x1f2	              0xc3	                                     ret	       536	normal.c	FUNCTION_3	ELSE_1
clearopbeep	CALL,2:ELSE,0:DO,0:FOR,0:functions,0:IF,0:WHILE,0:SWITCH,0	11
0x59e8	              0x55	                                push rbp	      3687	normal.c	FUNCTION_25
0x59e9	          0x4889e5	                            mov rbp, rsp	      3687	normal.c	FUNCTION_25
0x59ec	        0x4883ec10	                           sub rsp, 0x10	      3687	normal.c	FUNCTION_25
0x59f0	        0x48897df8	                mov qword [rbp - 8], rdi	      3687	normal.c	FUNCTION_25
0x59f4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3688	normal.c	FUNCTION_25	CALL_1
0x59f8	          0x4889c7	                            mov rdi, rax	      3688	normal.c	FUNCTION_25	CALL_1
0x59fb	      0xe8b2ffffff	                        call sym.clearop	      3688	normal.c	FUNCTION_25	CALL_1
0x5a00	      0xe800000000	                          call 0x4005a45	      3689	normal.c	FUNCTION_25	CALL_2
0x5a05	              0x90	                                     nop	      3690	normal.c	FUNCTION_25
0x5a06	              0xc9	                                   leave	      3690	normal.c	FUNCTION_25
0x5a07	              0xc3	                                     ret	      3690	normal.c	FUNCTION_25
nv_ignore	CALL,0:ELSE,0:DO,0:FOR,0:functions,0:IF,0:WHILE,0:SWITCH,0	12
0x6501	              0x55	                                push rbp	      4150	normal.c	FUNCTION_37
0x6502	          0x4889e5	                            mov rbp, rsp	      4150	normal.c	FUNCTION_37
0x6505	        0x48897df8	                mov qword [rbp - 8], rdi	      4150	normal.c	FUNCTION_37
0x6509	        0x488b45f8	                mov rax, qword [rbp - 8]	      4151	normal.c	FUNCTION_37
0x650d	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      4151	normal.c	FUNCTION_37
0x6510	          0x83c801	                               or eax, 1	      4151	normal.c	FUNCTION_37
0x6513	            0x89c2	                            mov edx, eax	      4151	normal.c	FUNCTION_37
0x6515	        0x488b45f8	                mov rax, qword [rbp - 8]	      4151	normal.c	FUNCTION_37
0x6519	          0x89503c	             mov dword [rax + 0x3c], edx	      4151	normal.c	FUNCTION_37
0x651c	              0x90	                                     nop	      4152	normal.c	FUNCTION_37
0x651d	              0x5d	                                 pop rbp	      4152	normal.c	FUNCTION_37
0x651e	              0xc3	                                     ret	      4152	normal.c	FUNCTION_37
nv_object	CALL,12:ELSE,1:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,1	152
0xfcca	              0x55	                                push rbp	      9218	normal.c	FUNCTION_130
0xfccb	          0x4889e5	                            mov rbp, rsp	      9218	normal.c	FUNCTION_130
0xfcce	        0x4883ec20	                           sub rsp, 0x20	      9218	normal.c	FUNCTION_130
0xfcd2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9218	normal.c	FUNCTION_130
0xfcd6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9223	normal.c	FUNCTION_130	IF_1
0xfcda	          0x8b400c	              mov eax, dword [rax + 0xc]	      9223	normal.c	FUNCTION_130	IF_1
0xfcdd	          0x83f869	                           cmp eax, 0x69	      9223	normal.c	FUNCTION_130	IF_1
0xfce0	            0x7509	                           jne 0x400fd2b	      9223	normal.c	FUNCTION_130	IF_1
0xfce2	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      9224	normal.c	FUNCTION_130	IF_1
0xfce9	            0xeb07	                           jmp 0x400fd32	      9224	normal.c	FUNCTION_130	IF_1
0xfceb	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      9226	normal.c	FUNCTION_130	ELSE_1
0xfcf2	    0x488b05000000	            mov rax, qword [0x0400fd39] 	      9229	normal.c	FUNCTION_130
0xfcf9	    0x488b80181500	          mov rax, qword [rax + 0x1518] 	      9229	normal.c	FUNCTION_130
0xfd00	        0x488945f8	                mov qword [rbp - 8], rax	      9229	normal.c	FUNCTION_130
0xfd04	    0x488b05000000	            mov rax, qword [0x0400fd4b] 	      9230	normal.c	FUNCTION_130
0xfd0b	    0x48c780181500	            mov qword [rax + 0x1518], 0 	      9230	normal.c	FUNCTION_130
0xfd16	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9232	normal.c	FUNCTION_130	SWITCH_1
0xfd1a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      9232	normal.c	FUNCTION_130	SWITCH_1
0xfd1d	          0x83e822	                           sub eax, 0x22	      9232	normal.c	FUNCTION_130	SWITCH_1
0xfd20	          0x83f85b	                           cmp eax, 0x5b	      9232	normal.c	FUNCTION_130	SWITCH_1
0xfd23	     0xf87af010000	                            ja 0x400ff18	      9232	normal.c	FUNCTION_130	SWITCH_1
0xfd29	            0x89c0	                            mov eax, eax	      9232	normal.c	FUNCTION_130	SWITCH_1
0xfd2b	    0x488b04c50000	                  mov rax, qword [rax*8]	      9232	normal.c	FUNCTION_130	SWITCH_1
0xfd33	            0xffe0	                                 jmp rax	      9232	normal.c	FUNCTION_130	SWITCH_1
0xfd35	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9235	normal.c	FUNCTION_130	SWITCH_1	CALL_1
0xfd39	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      9235	normal.c	FUNCTION_130	SWITCH_1	CALL_1
0xfd3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9235	normal.c	FUNCTION_130	SWITCH_1	CALL_1
0xfd41	          0x488b00	                    mov rax, qword [rax]	      9235	normal.c	FUNCTION_130	SWITCH_1	CALL_1
0xfd44	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      9235	normal.c	FUNCTION_130	SWITCH_1	CALL_1
0xfd47	      0xb900000000	                              mov ecx, 0	      9235	normal.c	FUNCTION_130	SWITCH_1	CALL_1
0xfd4c	          0x4889c7	                            mov rdi, rax	      9235	normal.c	FUNCTION_130	SWITCH_1	CALL_1
0xfd4f	      0xe800000000	                          call 0x400fd94	      9235	normal.c	FUNCTION_130	SWITCH_1	CALL_1
0xfd54	          0x8945f0	             mov dword [rbp - 0x10], eax	      9235	normal.c	FUNCTION_130	SWITCH_1	CALL_1
0xfd57	      0xe984010000	                           jmp 0x400ff20	      9236	normal.c	FUNCTION_130	SWITCH_1
0xfd5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9238	normal.c	FUNCTION_130	SWITCH_1	CALL_2
0xfd60	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      9238	normal.c	FUNCTION_130	SWITCH_1	CALL_2
0xfd64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9238	normal.c	FUNCTION_130	SWITCH_1	CALL_2
0xfd68	          0x488b00	                    mov rax, qword [rax]	      9238	normal.c	FUNCTION_130	SWITCH_1	CALL_2
0xfd6b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      9238	normal.c	FUNCTION_130	SWITCH_1	CALL_2
0xfd6e	      0xb901000000	                              mov ecx, 1	      9238	normal.c	FUNCTION_130	SWITCH_1	CALL_2
0xfd73	          0x4889c7	                            mov rdi, rax	      9238	normal.c	FUNCTION_130	SWITCH_1	CALL_2
0xfd76	      0xe800000000	                          call 0x400fdbb	      9238	normal.c	FUNCTION_130	SWITCH_1	CALL_2
0xfd7b	          0x8945f0	             mov dword [rbp - 0x10], eax	      9238	normal.c	FUNCTION_130	SWITCH_1	CALL_2
0xfd7e	      0xe95d010000	                           jmp 0x400ff20	      9239	normal.c	FUNCTION_130	SWITCH_1
0xfd83	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9243	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0xfd87	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      9243	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0xfd8b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9243	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0xfd8f	          0x488b00	                    mov rax, qword [rax]	      9243	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0xfd92	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      9243	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0xfd95	    0x41b829000000	                           mov r8d, 0x29	      9243	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0xfd9b	      0xb928000000	                           mov ecx, 0x28	      9243	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0xfda0	          0x4889c7	                            mov rdi, rax	      9243	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0xfda3	      0xe800000000	                          call 0x400fde8	      9243	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0xfda8	          0x8945f0	             mov dword [rbp - 0x10], eax	      9243	normal.c	FUNCTION_130	SWITCH_1	CALL_3
0xfdab	      0xe930010000	                           jmp 0x400ff20	      9244	normal.c	FUNCTION_130	SWITCH_1
0xfdb0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9248	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0xfdb4	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      9248	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0xfdb8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9248	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0xfdbc	          0x488b00	                    mov rax, qword [rax]	      9248	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0xfdbf	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      9248	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0xfdc2	    0x41b87d000000	                           mov r8d, 0x7d	      9248	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0xfdc8	      0xb97b000000	                           mov ecx, 0x7b	      9248	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0xfdcd	          0x4889c7	                            mov rdi, rax	      9248	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0xfdd0	      0xe800000000	                          call 0x400fe15	      9248	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0xfdd5	          0x8945f0	             mov dword [rbp - 0x10], eax	      9248	normal.c	FUNCTION_130	SWITCH_1	CALL_4
0xfdd8	      0xe903010000	                           jmp 0x400ff20	      9249	normal.c	FUNCTION_130	SWITCH_1
0xfddd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9252	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0xfde1	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      9252	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0xfde5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9252	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0xfde9	          0x488b00	                    mov rax, qword [rax]	      9252	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0xfdec	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      9252	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0xfdef	    0x41b85d000000	                           mov r8d, 0x5d	      9252	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0xfdf5	      0xb95b000000	                           mov ecx, 0x5b	      9252	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0xfdfa	          0x4889c7	                            mov rdi, rax	      9252	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0xfdfd	      0xe800000000	                          call 0x400fe42	      9252	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0xfe02	          0x8945f0	             mov dword [rbp - 0x10], eax	      9252	normal.c	FUNCTION_130	SWITCH_1	CALL_5
0xfe05	      0xe9d6000000	                           jmp 0x400ff20	      9253	normal.c	FUNCTION_130	SWITCH_1
0xfe0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9256	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0xfe0e	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      9256	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0xfe12	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9256	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0xfe16	          0x488b00	                    mov rax, qword [rax]	      9256	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0xfe19	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      9256	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0xfe1c	    0x41b83e000000	                           mov r8d, 0x3e	      9256	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0xfe22	      0xb93c000000	                           mov ecx, 0x3c	      9256	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0xfe27	          0x4889c7	                            mov rdi, rax	      9256	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0xfe2a	      0xe800000000	                          call 0x400fe6f	      9256	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0xfe2f	          0x8945f0	             mov dword [rbp - 0x10], eax	      9256	normal.c	FUNCTION_130	SWITCH_1	CALL_6
0xfe32	      0xe9a9000000	                           jmp 0x400ff20	      9257	normal.c	FUNCTION_130	SWITCH_1
0xfe37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9266	normal.c	FUNCTION_130	SWITCH_1
0xfe3b	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      9266	normal.c	FUNCTION_130	SWITCH_1
0xfe3e	          0x83c802	                               or eax, 2	      9266	normal.c	FUNCTION_130	SWITCH_1
0xfe41	            0x89c2	                            mov edx, eax	      9266	normal.c	FUNCTION_130	SWITCH_1
0xfe43	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9266	normal.c	FUNCTION_130	SWITCH_1
0xfe47	          0x89503c	             mov dword [rax + 0x3c], edx	      9266	normal.c	FUNCTION_130	SWITCH_1
0xfe4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9267	normal.c	FUNCTION_130	SWITCH_1	CALL_7
0xfe4e	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      9267	normal.c	FUNCTION_130	SWITCH_1	CALL_7
0xfe52	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9267	normal.c	FUNCTION_130	SWITCH_1	CALL_7
0xfe56	          0x488b00	                    mov rax, qword [rax]	      9267	normal.c	FUNCTION_130	SWITCH_1	CALL_7
0xfe59	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      9267	normal.c	FUNCTION_130	SWITCH_1	CALL_7
0xfe5c	          0x4889ce	                            mov rsi, rcx	      9267	normal.c	FUNCTION_130	SWITCH_1	CALL_7
0xfe5f	          0x4889c7	                            mov rdi, rax	      9267	normal.c	FUNCTION_130	SWITCH_1	CALL_7
0xfe62	      0xe800000000	                          call 0x400fea7	      9267	normal.c	FUNCTION_130	SWITCH_1	CALL_7
0xfe67	          0x8945f0	             mov dword [rbp - 0x10], eax	      9267	normal.c	FUNCTION_130	SWITCH_1	CALL_7
0xfe6a	            0xeb74	                           jmp 0x400ff20	      9268	normal.c	FUNCTION_130	SWITCH_1
0xfe6c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9270	normal.c	FUNCTION_130	SWITCH_1	CALL_8
0xfe70	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      9270	normal.c	FUNCTION_130	SWITCH_1	CALL_8
0xfe74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9270	normal.c	FUNCTION_130	SWITCH_1	CALL_8
0xfe78	          0x488b00	                    mov rax, qword [rax]	      9270	normal.c	FUNCTION_130	SWITCH_1	CALL_8
0xfe7b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      9270	normal.c	FUNCTION_130	SWITCH_1	CALL_8
0xfe7e	      0xb970000000	                           mov ecx, 0x70	      9270	normal.c	FUNCTION_130	SWITCH_1	CALL_8
0xfe83	          0x4889c7	                            mov rdi, rax	      9270	normal.c	FUNCTION_130	SWITCH_1	CALL_8
0xfe86	      0xe800000000	                          call 0x400fecb	      9270	normal.c	FUNCTION_130	SWITCH_1	CALL_8
0xfe8b	          0x8945f0	             mov dword [rbp - 0x10], eax	      9270	normal.c	FUNCTION_130	SWITCH_1	CALL_8
0xfe8e	            0xeb50	                           jmp 0x400ff20	      9271	normal.c	FUNCTION_130	SWITCH_1
0xfe90	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9273	normal.c	FUNCTION_130	SWITCH_1	CALL_9
0xfe94	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      9273	normal.c	FUNCTION_130	SWITCH_1	CALL_9
0xfe98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9273	normal.c	FUNCTION_130	SWITCH_1	CALL_9
0xfe9c	          0x488b00	                    mov rax, qword [rax]	      9273	normal.c	FUNCTION_130	SWITCH_1	CALL_9
0xfe9f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      9273	normal.c	FUNCTION_130	SWITCH_1	CALL_9
0xfea2	          0x4889ce	                            mov rsi, rcx	      9273	normal.c	FUNCTION_130	SWITCH_1	CALL_9
0xfea5	          0x4889c7	                            mov rdi, rax	      9273	normal.c	FUNCTION_130	SWITCH_1	CALL_9
0xfea8	      0xe800000000	                          call 0x400feed	      9273	normal.c	FUNCTION_130	SWITCH_1	CALL_9
0xfead	          0x8945f0	             mov dword [rbp - 0x10], eax	      9273	normal.c	FUNCTION_130	SWITCH_1	CALL_9
0xfeb0	            0xeb2e	                           jmp 0x400ff20	      9274	normal.c	FUNCTION_130	SWITCH_1
0xfeb2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9278	normal.c	FUNCTION_130	SWITCH_1	CALL_10
0xfeb6	          0x8b4810	            mov ecx, dword [rax + 0x10] 	      9278	normal.c	FUNCTION_130	SWITCH_1	CALL_10
0xfeb9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9278	normal.c	FUNCTION_130	SWITCH_1	CALL_10
0xfebd	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      9278	normal.c	FUNCTION_130	SWITCH_1	CALL_10
0xfec1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9278	normal.c	FUNCTION_130	SWITCH_1	CALL_10
0xfec5	          0x488b00	                    mov rax, qword [rax]	      9278	normal.c	FUNCTION_130	SWITCH_1	CALL_10
0xfec8	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      9278	normal.c	FUNCTION_130	SWITCH_1	CALL_10
0xfecb	          0x4889c7	                            mov rdi, rax	      9278	normal.c	FUNCTION_130	SWITCH_1	CALL_10
0xfece	      0xe800000000	                          call 0x400ff13	      9278	normal.c	FUNCTION_130	SWITCH_1	CALL_10
0xfed3	          0x8945f0	             mov dword [rbp - 0x10], eax	      9278	normal.c	FUNCTION_130	SWITCH_1	CALL_10
0xfed6	            0xeb08	                           jmp 0x400ff20	      9280	normal.c	FUNCTION_130	SWITCH_1
0xfed8	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      9287	normal.c	FUNCTION_130	SWITCH_1
0xfedf	              0x90	                                     nop	      9288	normal.c	FUNCTION_130	SWITCH_1
0xfee0	    0x488b05000000	            mov rax, qword [0x0400ff27] 	      9291	normal.c	FUNCTION_130
0xfee7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      9291	normal.c	FUNCTION_130
0xfeeb	    0x488990181500	          mov qword [rax + 0x1518], rdx 	      9291	normal.c	FUNCTION_130
0xfef2	        0x837df000	               cmp dword [rbp - 0x10], 0	      9292	normal.c	FUNCTION_130	IF_2
0xfef6	            0x750f	                           jne 0x400ff47	      9292	normal.c	FUNCTION_130	IF_2
0xfef8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9293	normal.c	FUNCTION_130	CALL_11
0xfefc	          0x488b00	                    mov rax, qword [rax]	      9293	normal.c	FUNCTION_130	CALL_11
0xfeff	          0x4889c7	                            mov rdi, rax	      9293	normal.c	FUNCTION_130	CALL_11
0xff02	      0xe8e15affff	                    call sym.clearopbeep	      9293	normal.c	FUNCTION_130	CALL_11
0xff07	      0xe800000000	                          call 0x400ff4c	      9294	normal.c	FUNCTION_130	CALL_12
0xff0c	    0x488b05000000	            mov rax, qword [0x0400ff53] 	      9295	normal.c	FUNCTION_130
0xff13	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      9295	normal.c	FUNCTION_130
0xff1a	              0x90	                                     nop	      9296	normal.c	FUNCTION_130
0xff1b	              0xc9	                                   leave	      9296	normal.c	FUNCTION_130
0xff1c	              0xc3	                                     ret	      9296	normal.c	FUNCTION_130
nv_abbrev	CALL,2:ELSE,1:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	27
0xcc44	              0x55	                                push rbp	      7485	normal.c	FUNCTION_96
0xcc45	          0x4889e5	                            mov rbp, rsp	      7485	normal.c	FUNCTION_96
0xcc48	        0x4883ec10	                           sub rsp, 0x10	      7485	normal.c	FUNCTION_96
0xcc4c	        0x48897df8	                mov qword [rbp - 8], rdi	      7485	normal.c	FUNCTION_96
0xcc50	        0x488b45f8	                mov rax, qword [rbp - 8]	      7486	normal.c	FUNCTION_96	IF_1
0xcc54	          0x8b400c	              mov eax, dword [rax + 0xc]	      7486	normal.c	FUNCTION_96	IF_1
0xcc57	      0x3d95bbffff	                     cmp eax, 0xffffbb95	      7486	normal.c	FUNCTION_96	IF_1
0xcc5c	            0x740e	                            je 0x400ccac	      7486	normal.c	FUNCTION_96	IF_1
0xcc5e	        0x488b45f8	                mov rax, qword [rbp - 8]	      7486	normal.c	FUNCTION_96	IF_1
0xcc62	          0x8b400c	              mov eax, dword [rax + 0xc]	      7486	normal.c	FUNCTION_96	IF_1
0xcc65	      0x3d03afffff	                     cmp eax, 0xffffaf03	      7486	normal.c	FUNCTION_96	IF_1
0xcc6a	            0x750b	                           jne 0x400ccb7	      7486	normal.c	FUNCTION_96	IF_1
0xcc6c	        0x488b45f8	                mov rax, qword [rbp - 8]	      7487	normal.c	FUNCTION_96	IF_1
0xcc70	    0xc7400c780000	            mov dword [rax + 0xc], 0x78 	      7487	normal.c	FUNCTION_96	IF_1
0xcc77	    0x8b0500000000	            mov eax, dword [0x0400ccbd] 	      7490	normal.c	FUNCTION_96	IF_2
0xcc7d	            0x85c0	                           test eax, eax	      7490	normal.c	FUNCTION_96	IF_2
0xcc7f	            0x740e	                            je 0x400cccf	      7490	normal.c	FUNCTION_96	IF_2
0xcc81	        0x488b45f8	                mov rax, qword [rbp - 8]	      7491	normal.c	FUNCTION_96	CALL_1
0xcc85	          0x4889c7	                            mov rdi, rax	      7491	normal.c	FUNCTION_96	CALL_1
0xcc88	      0xe8a9feffff	                        call sym.v_visop	      7491	normal.c	FUNCTION_96	CALL_1
0xcc8d	            0xeb0c	                           jmp 0x400ccdb	      7494	normal.c	FUNCTION_96
0xcc8f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7493	normal.c	FUNCTION_96	CALL_2
0xcc93	          0x4889c7	                            mov rdi, rax	      7493	normal.c	FUNCTION_96	CALL_2
0xcc96	      0xe803000000	                     call sym.nv_optrans	      7493	normal.c	FUNCTION_96	CALL_2
0xcc9b	              0x90	                                     nop	      7494	normal.c	FUNCTION_96
0xcc9c	              0xc9	                                   leave	      7494	normal.c	FUNCTION_96
0xcc9d	              0xc3	                                     ret	      7494	normal.c	FUNCTION_96
may_clear_cmdline	CALL,1:ELSE,1:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	11
0x5abc	              0x55	                                push rbp	      3716	normal.c	FUNCTION_27
0x5abd	          0x4889e5	                            mov rbp, rsp	      3716	normal.c	FUNCTION_27
0x5ac0	    0x8b0500000000	            mov eax, dword [0x04005b06] 	      3717	normal.c	FUNCTION_27	IF_1
0x5ac6	            0x85c0	                           test eax, eax	      3717	normal.c	FUNCTION_27	IF_1
0x5ac8	            0x740c	                            je 0x4005b16	      3717	normal.c	FUNCTION_27	IF_1
0x5aca	    0xc70500000000	               mov dword [0x04005b14], 1	      3718	normal.c	FUNCTION_27	IF_1
0x5ad4	            0xeb05	                           jmp 0x4005b1b	      3723	normal.c	FUNCTION_27
0x5ad6	      0xe800000000	                          call 0x4005b1b	      3721	normal.c	FUNCTION_27	CALL_1
0x5adb	              0x90	                                     nop	      3723	normal.c	FUNCTION_27
0x5adc	              0x5d	                                 pop rbp	      3723	normal.c	FUNCTION_27
0x5add	              0xc3	                                     ret	      3723	normal.c	FUNCTION_27
nv_operator	CALL,4:ELSE,1:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	44
0xeb33	              0x55	                                push rbp	      8582	normal.c	FUNCTION_113
0xeb34	          0x4889e5	                            mov rbp, rsp	      8582	normal.c	FUNCTION_113
0xeb37	        0x4883ec20	                           sub rsp, 0x20	      8582	normal.c	FUNCTION_113
0xeb3b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8582	normal.c	FUNCTION_113
0xeb3f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8585	normal.c	FUNCTION_113	CALL_1
0xeb43	          0x8b5010	            mov edx, dword [rax + 0x10] 	      8585	normal.c	FUNCTION_113	CALL_1
0xeb46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8585	normal.c	FUNCTION_113	CALL_1
0xeb4a	          0x8b400c	              mov eax, dword [rax + 0xc]	      8585	normal.c	FUNCTION_113	CALL_1
0xeb4d	            0x89d6	                            mov esi, edx	      8585	normal.c	FUNCTION_113	CALL_1
0xeb4f	            0x89c7	                            mov edi, eax	      8585	normal.c	FUNCTION_113	CALL_1
0xeb51	      0xe800000000	                          call 0x400eb96	      8585	normal.c	FUNCTION_113	CALL_1
0xeb56	          0x8945fc	                mov dword [rbp - 4], eax	      8585	normal.c	FUNCTION_113	CALL_1
0xeb59	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8587	normal.c	FUNCTION_113	IF_1
0xeb5d	          0x488b00	                    mov rax, qword [rax]	      8587	normal.c	FUNCTION_113	IF_1
0xeb60	            0x8b00	                    mov eax, dword [rax]	      8587	normal.c	FUNCTION_113	IF_1
0xeb62	          0x3b45fc	                cmp eax, dword [rbp - 4]	      8587	normal.c	FUNCTION_113	IF_1
0xeb65	            0x750e	                           jne 0x400ebb5	      8587	normal.c	FUNCTION_113	IF_1
0xeb67	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8588	normal.c	FUNCTION_113	CALL_2
0xeb6b	          0x4889c7	                            mov rdi, rax	      8588	normal.c	FUNCTION_113	CALL_2
0xeb6e	      0xe8cd000000	                      call sym.nv_lineop	      8588	normal.c	FUNCTION_113	CALL_2
0xeb73	            0xeb47	                           jmp 0x400ebfc	      8597	normal.c	FUNCTION_113
0xeb75	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8589	normal.c	FUNCTION_113	ELSE_1	IF_2	CALL_3
0xeb79	          0x488b00	                    mov rax, qword [rax]	      8589	normal.c	FUNCTION_113	ELSE_1	IF_2	CALL_3
0xeb7c	          0x4889c7	                            mov rdi, rax	      8589	normal.c	FUNCTION_113	ELSE_1	IF_2	CALL_3
0xeb7f	      0xe8c46dffff	                   call sym.checkclearop	      8589	normal.c	FUNCTION_113	ELSE_1	IF_2	CALL_3
0xeb84	            0x85c0	                           test eax, eax	      8589	normal.c	FUNCTION_113	ELSE_1	IF_2	CALL_3
0xeb86	            0x7534	                           jne 0x400ebfc	      8589	normal.c	FUNCTION_113	ELSE_1	IF_2	CALL_3
0xeb88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8591	normal.c	FUNCTION_113	ELSE_1	IF_2
0xeb8c	          0x488b08	                    mov rcx, qword [rax]	      8591	normal.c	FUNCTION_113	ELSE_1	IF_2
0xeb8f	    0x488b05000000	            mov rax, qword [0x0400ebd6] 	      8591	normal.c	FUNCTION_113	ELSE_1	IF_2
0xeb96	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      8591	normal.c	FUNCTION_113	ELSE_1	IF_2
0xeb9a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8591	normal.c	FUNCTION_113	ELSE_1	IF_2
0xeb9e	        0x48894120	             mov qword [rcx + 0x20], rax	      8591	normal.c	FUNCTION_113	ELSE_1	IF_2
0xeba2	        0x48895128	             mov qword [rcx + 0x28], rdx	      8591	normal.c	FUNCTION_113	ELSE_1	IF_2
0xeba6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8592	normal.c	FUNCTION_113	ELSE_1	IF_2
0xebaa	          0x488b00	                    mov rax, qword [rax]	      8592	normal.c	FUNCTION_113	ELSE_1	IF_2
0xebad	          0x8b55fc	                mov edx, dword [rbp - 4]	      8592	normal.c	FUNCTION_113	ELSE_1	IF_2
0xebb0	            0x8910	                    mov dword [rax], edx	      8592	normal.c	FUNCTION_113	ELSE_1	IF_2
0xebb2	          0x8b45fc	                mov eax, dword [rbp - 4]	      8594	normal.c	FUNCTION_113	ELSE_1	IF_2	CALL_4
0xebb5	            0x89c7	                            mov edi, eax	      8594	normal.c	FUNCTION_113	ELSE_1	IF_2	CALL_4
0xebb7	      0xe803000000	                     call sym.set_op_var	      8594	normal.c	FUNCTION_113	ELSE_1	IF_2	CALL_4
0xebbc	              0x90	                                     nop	      8597	normal.c	FUNCTION_113
0xebbd	              0xc9	                                   leave	      8597	normal.c	FUNCTION_113
0xebbe	              0xc3	                                     ret	      8597	normal.c	FUNCTION_113
nv_bck_word	CALL,3:ELSE,1:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	43
0xedd8	              0x55	                                push rbp	      8690	normal.c	ELSE_1	FUNCTION_118
0xedd9	          0x4889e5	                            mov rbp, rsp	      8690	normal.c	ELSE_1	FUNCTION_118
0xeddc	        0x4883ec10	                           sub rsp, 0x10	      8690	normal.c	ELSE_1	FUNCTION_118
0xede0	        0x48897df8	                mov qword [rbp - 8], rdi	      8690	normal.c	ELSE_1	FUNCTION_118
0xede4	        0x488b45f8	                mov rax, qword [rbp - 8]	      8691	normal.c	ELSE_1	FUNCTION_118
0xede8	          0x488b00	                    mov rax, qword [rax]	      8691	normal.c	ELSE_1	FUNCTION_118
0xedeb	    0xc74008000000	                  mov dword [rax + 8], 0	      8691	normal.c	ELSE_1	FUNCTION_118
0xedf2	        0x488b45f8	                mov rax, qword [rbp - 8]	      8692	normal.c	ELSE_1	FUNCTION_118
0xedf6	          0x488b00	                    mov rax, qword [rax]	      8692	normal.c	ELSE_1	FUNCTION_118
0xedf9	    0xc74014000000	               mov dword [rax + 0x14], 0	      8692	normal.c	ELSE_1	FUNCTION_118
0xee00	    0x488b05000000	            mov rax, qword [0x0400ee47] 	      8693	normal.c	ELSE_1	FUNCTION_118
0xee07	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8693	normal.c	ELSE_1	FUNCTION_118
0xee0e	        0x488b45f8	                mov rax, qword [rbp - 8]	      8694	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0xee12	          0x8b4838	            mov ecx, dword [rax + 0x38] 	      8694	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0xee15	        0x488b45f8	                mov rax, qword [rbp - 8]	      8694	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0xee19	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8694	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0xee1d	      0xba00000000	                              mov edx, 0	      8694	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0xee22	            0x89ce	                            mov esi, ecx	      8694	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0xee24	          0x4889c7	                            mov rdi, rax	      8694	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0xee27	      0xe800000000	                          call 0x400ee6c	      8694	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0xee2c	            0x85c0	                           test eax, eax	      8694	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0xee2e	            0x7511	                           jne 0x400ee81	      8694	normal.c	ELSE_1	FUNCTION_118	IF_1	CALL_1
0xee30	        0x488b45f8	                mov rax, qword [rbp - 8]	      8695	normal.c	ELSE_1	FUNCTION_118	CALL_2
0xee34	          0x488b00	                    mov rax, qword [rax]	      8695	normal.c	ELSE_1	FUNCTION_118	CALL_2
0xee37	          0x4889c7	                            mov rdi, rax	      8695	normal.c	ELSE_1	FUNCTION_118	CALL_2
0xee3a	      0xe8a96bffff	                    call sym.clearopbeep	      8695	normal.c	ELSE_1	FUNCTION_118	CALL_2
0xee3f	            0xeb29	                           jmp 0x400eeaa	      8700	normal.c	FUNCTION_118	ELSE_1
0xee41	    0x8b0500000000	            mov eax, dword [0x0400ee87] 	      8697	normal.c	FUNCTION_118	IF_2
0xee47	          0x83e004	                              and eax, 4	      8697	normal.c	FUNCTION_118	IF_2
0xee4a	            0x85c0	                           test eax, eax	      8697	normal.c	FUNCTION_118	IF_2
0xee4c	            0x741c	                            je 0x400eeaa	      8697	normal.c	FUNCTION_118	IF_2
0xee4e	    0x8b0500000000	            mov eax, dword [0x0400ee94] 	      8697	normal.c	FUNCTION_118	IF_2
0xee54	            0x85c0	                           test eax, eax	      8697	normal.c	FUNCTION_118	IF_2
0xee56	            0x7412	                            je 0x400eeaa	      8697	normal.c	FUNCTION_118	IF_2
0xee58	        0x488b45f8	                mov rax, qword [rbp - 8]	      8697	normal.c	FUNCTION_118	IF_2
0xee5c	          0x488b00	                    mov rax, qword [rax]	      8697	normal.c	FUNCTION_118	IF_2
0xee5f	            0x8b00	                    mov eax, dword [rax]	      8697	normal.c	FUNCTION_118	IF_2
0xee61	            0x85c0	                           test eax, eax	      8697	normal.c	FUNCTION_118	IF_2
0xee63	            0x7505	                           jne 0x400eeaa	      8697	normal.c	FUNCTION_118	IF_2
0xee65	      0xe800000000	                          call 0x400eeaa	      8698	normal.c	FUNCTION_118	ELSE_1	CALL_3
0xee6a	              0x90	                                     nop	      8700	normal.c	FUNCTION_118	ELSE_1
0xee6b	              0xc9	                                   leave	      8700	normal.c	FUNCTION_118	ELSE_1
0xee6c	              0xc3	                                     ret	      8700	normal.c	FUNCTION_118	ELSE_1
prep_redo_cmd	CALL,1:ELSE,0:DO,0:FOR,0:functions,0:IF,0:WHILE,0:SWITCH,0	25
0x5856	              0x55	                                push rbp	      3608	normal.c	FUNCTION_20
0x5857	          0x4889e5	                            mov rbp, rsp	      3608	normal.c	FUNCTION_20
0x585a	        0x4883ec10	                           sub rsp, 0x10	      3608	normal.c	FUNCTION_20
0x585e	        0x48897df8	                mov qword [rbp - 8], rdi	      3608	normal.c	FUNCTION_20
0x5862	        0x488b45f8	                mov rax, qword [rbp - 8]	      3609	normal.c	FUNCTION_20	CALL_1
0x5866	          0x8b4810	            mov ecx, dword [rax + 0x10] 	      3609	normal.c	FUNCTION_20	CALL_1
0x5869	        0x488b45f8	                mov rax, qword [rbp - 8]	      3609	normal.c	FUNCTION_20	CALL_1
0x586d	          0x8b500c	              mov edx, dword [rax + 0xc]	      3609	normal.c	FUNCTION_20	CALL_1
0x5870	        0x488b45f8	                mov rax, qword [rbp - 8]	      3609	normal.c	FUNCTION_20	CALL_1
0x5874	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      3609	normal.c	FUNCTION_20	CALL_1
0x5878	        0x488b45f8	                mov rax, qword [rbp - 8]	      3609	normal.c	FUNCTION_20	CALL_1
0x587c	          0x488b00	                    mov rax, qword [rax]	      3609	normal.c	FUNCTION_20	CALL_1
0x587f	          0x8b4004	                mov eax, dword [rax + 4]	      3609	normal.c	FUNCTION_20	CALL_1
0x5882	        0x4883ec08	                              sub rsp, 8	      3609	normal.c	FUNCTION_20	CALL_1
0x5886	              0x51	                                push rcx	      3609	normal.c	FUNCTION_20	CALL_1
0x5887	    0x41b900000000	                              mov r9d, 0	      3609	normal.c	FUNCTION_20	CALL_1
0x588d	    0x41b800000000	                              mov r8d, 0	      3609	normal.c	FUNCTION_20	CALL_1
0x5893	            0x89d1	                            mov ecx, edx	      3609	normal.c	FUNCTION_20	CALL_1
0x5895	      0xba00000000	                              mov edx, 0	      3609	normal.c	FUNCTION_20	CALL_1
0x589a	            0x89c7	                            mov edi, eax	      3609	normal.c	FUNCTION_20	CALL_1
0x589c	      0xe807000000	                      call sym.prep_redo	      3609	normal.c	FUNCTION_20	CALL_1
0x58a1	        0x4883c410	                           add rsp, 0x10	      3609	normal.c	FUNCTION_20	CALL_1
0x58a5	              0x90	                                     nop	      3611	normal.c	FUNCTION_20
0x58a6	              0xc9	                                   leave	      3611	normal.c	FUNCTION_20
0x58a7	              0xc3	                                     ret	      3611	normal.c	FUNCTION_20
nv_up	CALL,4:ELSE,2:DO,0:FOR,0:functions,0:IF,3:WHILE,0:SWITCH,0	44
0xa14c	              0x55	                                push rbp	      6173	normal.c	FUNCTION_72
0xa14d	          0x4889e5	                            mov rbp, rsp	      6173	normal.c	FUNCTION_72
0xa150	        0x4883ec10	                           sub rsp, 0x10	      6173	normal.c	FUNCTION_72
0xa154	        0x48897df8	                mov qword [rbp - 8], rdi	      6173	normal.c	FUNCTION_72
0xa158	    0x8b0500000000	            mov eax, dword [0x0400a19e] 	      6174	normal.c	FUNCTION_72	IF_1
0xa15e	          0x83e002	                              and eax, 2	      6174	normal.c	FUNCTION_72	IF_1
0xa161	            0x85c0	                           test eax, eax	      6174	normal.c	FUNCTION_72	IF_1
0xa163	            0x7419	                            je 0x400a1be	      6174	normal.c	FUNCTION_72	IF_1
0xa165	        0x488b45f8	                mov rax, qword [rbp - 8]	      6177	normal.c	FUNCTION_72	IF_1
0xa169	    0xc74038ffffff	     mov dword [rax + 0x38], 0xffffffff 	      6177	normal.c	FUNCTION_72	IF_1
0xa170	        0x488b45f8	                mov rax, qword [rbp - 8]	      6178	normal.c	FUNCTION_72	IF_1	CALL_1
0xa174	          0x4889c7	                            mov rdi, rax	      6178	normal.c	FUNCTION_72	IF_1	CALL_1
0xa177	      0xe8a2c4ffff	                        call sym.nv_page	      6178	normal.c	FUNCTION_72	IF_1	CALL_1
0xa17c	            0xeb5b	                           jmp 0x400a219	      6188	normal.c	FUNCTION_72
0xa17e	        0x488b45f8	                mov rax, qword [rbp - 8]	      6182	normal.c	FUNCTION_72	ELSE_1
0xa182	          0x488b00	                    mov rax, qword [rax]	      6182	normal.c	FUNCTION_72	ELSE_1
0xa185	    0xc74008010000	                  mov dword [rax + 8], 1	      6182	normal.c	FUNCTION_72	ELSE_1
0xa18c	        0x488b45f8	                mov rax, qword [rbp - 8]	      6183	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0xa190	          0x488b00	                    mov rax, qword [rax]	      6183	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0xa193	            0x8b00	                    mov eax, dword [rax]	      6183	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0xa195	            0x85c0	                           test eax, eax	      6183	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0xa197	           0xf94c0	                                 sete al	      6183	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0xa19a	           0xfb6d0	                           movzx edx, al	      6183	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0xa19d	        0x488b45f8	                mov rax, qword [rbp - 8]	      6183	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0xa1a1	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6183	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0xa1a5	            0x89d6	                            mov esi, edx	      6183	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0xa1a7	          0x4889c7	                            mov rdi, rax	      6183	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0xa1aa	      0xe800000000	                          call 0x400a1ef	      6183	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0xa1af	            0x85c0	                           test eax, eax	      6183	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0xa1b1	            0x7511	                           jne 0x400a204	      6183	normal.c	FUNCTION_72	ELSE_1	IF_2	CALL_2
0xa1b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      6184	normal.c	FUNCTION_72	ELSE_1	CALL_3
0xa1b7	          0x488b00	                    mov rax, qword [rax]	      6184	normal.c	FUNCTION_72	ELSE_1	CALL_3
0xa1ba	          0x4889c7	                            mov rdi, rax	      6184	normal.c	FUNCTION_72	ELSE_1	CALL_3
0xa1bd	      0xe826b8ffff	                    call sym.clearopbeep	      6184	normal.c	FUNCTION_72	ELSE_1	CALL_3
0xa1c2	            0xeb15	                           jmp 0x400a219	      6188	normal.c	FUNCTION_72
0xa1c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      6185	normal.c	FUNCTION_72	ELSE_1	ELSE_2	IF_3
0xa1c8	          0x8b4038	            mov eax, dword [rax + 0x38] 	      6185	normal.c	FUNCTION_72	ELSE_1	ELSE_2	IF_3
0xa1cb	            0x85c0	                           test eax, eax	      6185	normal.c	FUNCTION_72	ELSE_1	ELSE_2	IF_3
0xa1cd	            0x740a	                            je 0x400a219	      6185	normal.c	FUNCTION_72	ELSE_1	ELSE_2	IF_3
0xa1cf	      0xbf05000000	                              mov edi, 5	      6186	normal.c	FUNCTION_72	ELSE_1	ELSE_2	IF_3
0xa1d4	      0xe800000000	                          call 0x400a219	      6186	normal.c	FUNCTION_72	ELSE_1	ELSE_2	IF_3
0xa1d9	              0x90	                                     nop	      6188	normal.c	FUNCTION_72
0xa1da	              0xc9	                                   leave	      6188	normal.c	FUNCTION_72
0xa1db	              0xc3	                                     ret	      6188	normal.c	FUNCTION_72
nv_replace	CALL,45:ELSE,8:DO,0:FOR,2:functions,0:IF,29:WHILE,0:SWITCH,0	424
0xbcf4	              0x55	                                push rbp	      6990	normal.c	FUNCTION_88
0xbcf5	          0x4889e5	                            mov rbp, rsp	      6990	normal.c	FUNCTION_88
0xbcf8	        0x4883ec40	                           sub rsp, 0x40	      6990	normal.c	FUNCTION_88
0xbcfc	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      6990	normal.c	FUNCTION_88
0xbd00	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6995	normal.c	FUNCTION_88	IF_1	CALL_1
0xbd04	          0x488b00	                    mov rax, qword [rax]	      6995	normal.c	FUNCTION_88	IF_1	CALL_1
0xbd07	          0x4889c7	                            mov rdi, rax	      6995	normal.c	FUNCTION_88	IF_1	CALL_1
0xbd0a	      0xe8399cffff	                   call sym.checkclearop	      6995	normal.c	FUNCTION_88	IF_1	CALL_1
0xbd0f	            0x85c0	                           test eax, eax	      6995	normal.c	FUNCTION_88	IF_1	CALL_1
0xbd11	     0xf850c060000	                           jne 0x400c363	      6995	normal.c	FUNCTION_88	IF_1	CALL_1
0xbd17	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6999	normal.c	FUNCTION_88	IF_2
0xbd1b	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6999	normal.c	FUNCTION_88	IF_2
0xbd1e	          0x83f816	                           cmp eax, 0x16	      6999	normal.c	FUNCTION_88	IF_2
0xbd21	            0x752a	                           jne 0x400bd8d	      6999	normal.c	FUNCTION_88	IF_2
0xbd23	    0xc745dc160000	           mov dword [rbp - 0x24], 0x16 	      7001	normal.c	FUNCTION_88	IF_2
0xbd2a	      0xe800000000	                          call 0x400bd6f	      7002	normal.c	FUNCTION_88	IF_2	CALL_2
0xbd2f	            0x89c2	                            mov edx, eax	      7002	normal.c	FUNCTION_88	IF_2	CALL_2
0xbd31	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7002	normal.c	FUNCTION_88	IF_2	CALL_2
0xbd35	          0x895010	             mov dword [rax + 0x10], edx	      7002	normal.c	FUNCTION_88	IF_2	CALL_2
0xbd38	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7004	normal.c	FUNCTION_88	IF_2	IF_3
0xbd3c	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7004	normal.c	FUNCTION_88	IF_2	IF_3
0xbd3f	          0x83f87f	                           cmp eax, 0x7f	      7004	normal.c	FUNCTION_88	IF_2	IF_3
0xbd42	            0x7e10	                           jle 0x400bd94	      7004	normal.c	FUNCTION_88	IF_2	IF_3
0xbd44	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      7005	normal.c	FUNCTION_88	IF_2	IF_3
0xbd4b	            0xeb07	                           jmp 0x400bd94	      7005	normal.c	FUNCTION_88	IF_2	IF_3
0xbd4d	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      7008	normal.c	FUNCTION_88	ELSE_1
0xbd54	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7011	normal.c	FUNCTION_88	ELSE_1	IF_4	CALL_3
0xbd58	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7011	normal.c	FUNCTION_88	ELSE_1	IF_4	CALL_3
0xbd5b	            0x85c0	                           test eax, eax	      7011	normal.c	FUNCTION_88	ELSE_1	IF_4	CALL_3
0xbd5d	            0x7914	                           jns 0x400bdb3	      7011	normal.c	FUNCTION_88	ELSE_1	IF_4	CALL_3
0xbd5f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7013	normal.c	FUNCTION_88	ELSE_1	IF_4	CALL_4
0xbd63	          0x488b00	                    mov rax, qword [rax]	      7013	normal.c	FUNCTION_88	ELSE_1	IF_4	CALL_4
0xbd66	          0x4889c7	                            mov rdi, rax	      7013	normal.c	FUNCTION_88	ELSE_1	IF_4	CALL_4
0xbd69	      0xe87a9cffff	                    call sym.clearopbeep	      7013	normal.c	FUNCTION_88	ELSE_1	IF_4	CALL_4
0xbd6e	      0xe9b7050000	                           jmp 0x400c36a	      7014	normal.c	FUNCTION_88	ELSE_1	IF_4
0xbd73	    0x8b0500000000	            mov eax, dword [0x0400bdb9] 	      7018	normal.c	FUNCTION_88	IF_5
0xbd79	            0x85c0	                           test eax, eax	      7018	normal.c	FUNCTION_88	IF_5
0xbd7b	            0x7456	                            je 0x400be13	      7018	normal.c	FUNCTION_88	IF_5
0xbd7d	    0x8b0500000000	            mov eax, dword [0x0400bdc3] 	      7020	normal.c	FUNCTION_88	IF_5	IF_6
0xbd83	            0x85c0	                           test eax, eax	      7020	normal.c	FUNCTION_88	IF_5	IF_6
0xbd85	            0x7405	                            je 0x400bdcc	      7020	normal.c	FUNCTION_88	IF_5	IF_6
0xbd87	      0xe800000000	                          call 0x400bdcc	      7021	normal.c	FUNCTION_88	IF_5	CALL_5
0xbd8c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      7022	normal.c	FUNCTION_88	IF_5	IF_7
0xbd90	            0x7430	                            je 0x400be02	      7022	normal.c	FUNCTION_88	IF_5	IF_7
0xbd92	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7024	normal.c	FUNCTION_88	IF_5	IF_7	IF_8
0xbd96	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7024	normal.c	FUNCTION_88	IF_5	IF_7	IF_8
0xbd99	          0x83f80d	                            cmp eax, 0xd	      7024	normal.c	FUNCTION_88	IF_5	IF_7	IF_8
0xbd9c	            0x750d	                           jne 0x400bdeb	      7024	normal.c	FUNCTION_88	IF_5	IF_7	IF_8
0xbd9e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7025	normal.c	FUNCTION_88	IF_5	IF_7	IF_8
0xbda2	    0xc74010ffffff	     mov dword [rax + 0x10], 0xffffffff 	      7025	normal.c	FUNCTION_88	IF_5	IF_7	IF_8
0xbda9	            0xeb17	                           jmp 0x400be02	      7025	normal.c	FUNCTION_88	IF_5	IF_7	IF_8
0xbdab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7026	normal.c	FUNCTION_88	IF_5	IF_7	ELSE_2	IF_9
0xbdaf	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7026	normal.c	FUNCTION_88	IF_5	IF_7	ELSE_2	IF_9
0xbdb2	          0x83f80a	                            cmp eax, 0xa	      7026	normal.c	FUNCTION_88	IF_5	IF_7	ELSE_2	IF_9
0xbdb5	            0x750b	                           jne 0x400be02	      7026	normal.c	FUNCTION_88	IF_5	IF_7	ELSE_2	IF_9
0xbdb7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7027	normal.c	FUNCTION_88	IF_5	IF_7	ELSE_2	IF_9
0xbdbb	    0xc74010feffff	     mov dword [rax + 0x10], 0xfffffffe 	      7027	normal.c	FUNCTION_88	IF_5	IF_7	ELSE_2	IF_9
0xbdc2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7029	normal.c	FUNCTION_88	IF_5	CALL_6
0xbdc6	          0x4889c7	                            mov rdi, rax	      7029	normal.c	FUNCTION_88	IF_5	CALL_6
0xbdc9	      0xe8652d0000	                    call sym.nv_operator	      7029	normal.c	FUNCTION_88	IF_5	CALL_6
0xbdce	      0xe957050000	                           jmp 0x400c36a	      7030	normal.c	FUNCTION_88	IF_5
0xbdd3	      0xe800000000	                          call 0x400be18	      7035	normal.c	FUNCTION_88	IF_10	CALL_7
0xbdd8	            0x85c0	                           test eax, eax	      7035	normal.c	FUNCTION_88	IF_10	CALL_7
0xbdda	            0x7468	                            je 0x400be84	      7035	normal.c	FUNCTION_88	IF_10	CALL_7
0xbddc	      0xe800000000	                          call 0x400be21	      7037	normal.c	FUNCTION_88	IF_10	IF_11	CALL_8
0xbde1	            0x85c0	                           test eax, eax	      7037	normal.c	FUNCTION_88	IF_10	IF_11	CALL_8
0xbde3	     0xf843d050000	                            je 0x400c366	      7037	normal.c	FUNCTION_88	IF_10	IF_11	CALL_8
0xbde9	      0xe800000000	                          call 0x400be2e	      7039	normal.c	FUNCTION_88	IF_10	IF_12	CALL_9
0xbdee	            0x85c0	                           test eax, eax	      7039	normal.c	FUNCTION_88	IF_10	IF_12	CALL_9
0xbdf0	            0x753c	                           jne 0x400be6e	      7039	normal.c	FUNCTION_88	IF_10	IF_12	CALL_9
0xbdf2	      0xe800000000	                          call 0x400be37	      7042	normal.c	FUNCTION_88	IF_10	IF_12	CALL_11
0xbdf7	            0x89c2	                            mov edx, eax	      7042	normal.c	FUNCTION_88	IF_10	IF_12	CALL_11
0xbdf9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7042	normal.c	FUNCTION_88	IF_10	IF_12	CALL_11
0xbdfd	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7042	normal.c	FUNCTION_88	IF_10	IF_12	CALL_11
0xbe01	             0x1d0	                            add eax, edx	      7042	normal.c	FUNCTION_88	IF_10	IF_12	CALL_11
0xbe03	            0x89c7	                            mov edi, eax	      7042	normal.c	FUNCTION_88	IF_10	IF_12	CALL_11
0xbe05	      0xe800000000	                          call 0x400be4a	      7042	normal.c	FUNCTION_88	IF_10	IF_12	CALL_11
0xbe0a	    0x488b05000000	            mov rax, qword [0x0400be51] 	      7043	normal.c	FUNCTION_88	IF_10	IF_12
0xbe11	    0x488b15000000	            mov rdx, qword [0x0400be58] 	      7043	normal.c	FUNCTION_88	IF_10	IF_12
0xbe18	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      7043	normal.c	FUNCTION_88	IF_10	IF_12
0xbe1b	            0x89d1	                            mov ecx, edx	      7043	normal.c	FUNCTION_88	IF_10	IF_12
0xbe1d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      7043	normal.c	FUNCTION_88	IF_10	IF_12
0xbe21	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      7043	normal.c	FUNCTION_88	IF_10	IF_12
0xbe25	            0x29d1	                            sub ecx, edx	      7043	normal.c	FUNCTION_88	IF_10	IF_12
0xbe27	            0x89ca	                            mov edx, ecx	      7043	normal.c	FUNCTION_88	IF_10	IF_12
0xbe29	          0x895040	             mov dword [rax + 0x40], edx	      7043	normal.c	FUNCTION_88	IF_10	IF_12
0xbe2c	            0xeb16	                           jmp 0x400be84	      7043	normal.c	FUNCTION_88	IF_10	IF_12
0xbe2e	      0xe800000000	                          call 0x400be73	      7045	normal.c	FUNCTION_88	IF_10	ELSE_3	IF_13	CALL_12
0xbe33	          0x83f809	                              cmp eax, 9	      7045	normal.c	FUNCTION_88	IF_10	ELSE_3	IF_13	CALL_12
0xbe36	            0x750c	                           jne 0x400be84	      7045	normal.c	FUNCTION_88	IF_10	ELSE_3	IF_13	CALL_12
0xbe38	      0xe800000000	                          call 0x400be7d	      7046	normal.c	FUNCTION_88	IF_10	ELSE_3	IF_13
0xbe3d	            0x89c7	                            mov edi, eax	      7046	normal.c	FUNCTION_88	IF_10	ELSE_3	IF_13
0xbe3f	      0xe800000000	                          call 0x400be84	      7046	normal.c	FUNCTION_88	IF_10	ELSE_3	IF_13
0xbe44	      0xe800000000	                          call 0x400be89	      7051	normal.c	FUNCTION_88	CALL_15
0xbe49	        0x488945f0	             mov qword [rbp - 0x10], rax	      7051	normal.c	FUNCTION_88	CALL_15
0xbe4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7052	normal.c	FUNCTION_88	IF_14	CALL_16
0xbe51	          0x4889c7	                            mov rdi, rax	      7052	normal.c	FUNCTION_88	IF_14	CALL_16
0xbe54	      0xe800000000	                          call 0x400be99	      7052	normal.c	FUNCTION_88	IF_14	CALL_16
0xbe59	          0x4889c2	                            mov rdx, rax	      7052	normal.c	FUNCTION_88	IF_14	CALL_16
0xbe5c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7052	normal.c	FUNCTION_88	IF_14	CALL_16
0xbe60	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7052	normal.c	FUNCTION_88	IF_14	CALL_16
0xbe64	            0x89c0	                            mov eax, eax	      7052	normal.c	FUNCTION_88	IF_14	CALL_16
0xbe66	          0x4839c2	                            cmp rdx, rax	      7052	normal.c	FUNCTION_88	IF_14	CALL_16
0xbe69	            0x7226	                            jb 0x400bed1	      7052	normal.c	FUNCTION_88	IF_14	CALL_16
0xbe6b	    0x8b0500000000	            mov eax, dword [0x0400beb1] 	      7054	normal.c	FUNCTION_88	IF_14	CALL_17
0xbe71	            0x85c0	                           test eax, eax	      7054	normal.c	FUNCTION_88	IF_14	CALL_17
0xbe73	            0x7430	                            je 0x400bee5	      7054	normal.c	FUNCTION_88	IF_14	CALL_17
0xbe75	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7054	normal.c	FUNCTION_88	IF_14	CALL_17
0xbe79	          0x4889c7	                            mov rdi, rax	      7054	normal.c	FUNCTION_88	IF_14	CALL_17
0xbe7c	      0xe800000000	                          call 0x400bec1	      7054	normal.c	FUNCTION_88	IF_14	CALL_17
0xbe81	          0x4863d0	                         movsxd rdx, eax	      7054	normal.c	FUNCTION_88	IF_14	CALL_17
0xbe84	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7054	normal.c	FUNCTION_88	IF_14	CALL_17
0xbe88	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7054	normal.c	FUNCTION_88	IF_14	CALL_17
0xbe8c	          0x4839c2	                            cmp rdx, rax	      7054	normal.c	FUNCTION_88	IF_14	CALL_17
0xbe8f	            0x7d14	                           jge 0x400bee5	      7054	normal.c	FUNCTION_88	IF_14	CALL_17
0xbe91	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7058	normal.c	FUNCTION_88	IF_14	CALL_18
0xbe95	          0x488b00	                    mov rax, qword [rax]	      7058	normal.c	FUNCTION_88	IF_14	CALL_18
0xbe98	          0x4889c7	                            mov rdi, rax	      7058	normal.c	FUNCTION_88	IF_14	CALL_18
0xbe9b	      0xe8489bffff	                    call sym.clearopbeep	      7058	normal.c	FUNCTION_88	IF_14	CALL_18
0xbea0	      0xe985040000	                           jmp 0x400c36a	      7059	normal.c	FUNCTION_88	IF_14
0xbea5	        0x837ddc16	           cmp dword [rbp - 0x24], 0x16 	      7068	normal.c	FUNCTION_88	IF_15
0xbea9	            0x745a	                            je 0x400bf45	      7068	normal.c	FUNCTION_88	IF_15
0xbeab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7068	normal.c	FUNCTION_88	IF_15
0xbeaf	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7068	normal.c	FUNCTION_88	IF_15
0xbeb2	          0x83f809	                              cmp eax, 9	      7068	normal.c	FUNCTION_88	IF_15
0xbeb5	            0x754e	                           jne 0x400bf45	      7068	normal.c	FUNCTION_88	IF_15
0xbeb7	    0x488b05000000	            mov rax, qword [0x0400befe] 	      7068	normal.c	FUNCTION_88	IF_15
0xbebe	    0x8b8060140000	          mov eax, dword [rax + 0x1460] 	      7068	normal.c	FUNCTION_88	IF_15
0xbec4	            0x85c0	                           test eax, eax	      7068	normal.c	FUNCTION_88	IF_15
0xbec6	            0x750a	                           jne 0x400bf12	      7068	normal.c	FUNCTION_88	IF_15
0xbec8	    0x8b0500000000	            mov eax, dword [0x0400bf0e] 	      7068	normal.c	FUNCTION_88	IF_15
0xbece	            0x85c0	                           test eax, eax	      7068	normal.c	FUNCTION_88	IF_15
0xbed0	            0x7433	                            je 0x400bf45	      7068	normal.c	FUNCTION_88	IF_15
0xbed2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7070	normal.c	FUNCTION_88	IF_15	CALL_19
0xbed6	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7070	normal.c	FUNCTION_88	IF_15	CALL_19
0xbeda	          0x4889c7	                            mov rdi, rax	      7070	normal.c	FUNCTION_88	IF_15	CALL_19
0xbedd	      0xe800000000	                          call 0x400bf22	      7070	normal.c	FUNCTION_88	IF_15	CALL_19
0xbee2	      0xbf52000000	                           mov edi, 0x52	      7071	normal.c	FUNCTION_88	IF_15	CALL_20
0xbee7	      0xe800000000	                          call 0x400bf2c	      7071	normal.c	FUNCTION_88	IF_15	CALL_20
0xbeec	      0xbf09000000	                              mov edi, 9	      7072	normal.c	FUNCTION_88	IF_15	CALL_21
0xbef1	      0xe800000000	                          call 0x400bf36	      7072	normal.c	FUNCTION_88	IF_15	CALL_21
0xbef6	      0xbf1b000000	                           mov edi, 0x1b	      7073	normal.c	FUNCTION_88	IF_15	CALL_22
0xbefb	      0xe800000000	                          call 0x400bf40	      7073	normal.c	FUNCTION_88	IF_15	CALL_22
0xbf00	      0xe925040000	                           jmp 0x400c36a	      7074	normal.c	FUNCTION_88	IF_15
0xbf05	      0xe800000000	                          call 0x400bf4a	      7078	normal.c	FUNCTION_88	IF_16	CALL_23
0xbf0a	            0x85c0	                           test eax, eax	      7078	normal.c	FUNCTION_88	IF_16	CALL_23
0xbf0c	     0xf8417040000	                            je 0x400c369	      7078	normal.c	FUNCTION_88	IF_16	CALL_23
0xbf12	        0x837ddc16	           cmp dword [rbp - 0x24], 0x16 	      7081	normal.c	FUNCTION_88	IF_17
0xbf16	            0x7461	                            je 0x400bfb9	      7081	normal.c	FUNCTION_88	IF_17
0xbf18	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7081	normal.c	FUNCTION_88	IF_17
0xbf1c	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7081	normal.c	FUNCTION_88	IF_17
0xbf1f	          0x83f80d	                            cmp eax, 0xd	      7081	normal.c	FUNCTION_88	IF_17
0xbf22	            0x740c	                            je 0x400bf70	      7081	normal.c	FUNCTION_88	IF_17
0xbf24	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7081	normal.c	FUNCTION_88	IF_17
0xbf28	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7081	normal.c	FUNCTION_88	IF_17
0xbf2b	          0x83f80a	                            cmp eax, 0xa	      7081	normal.c	FUNCTION_88	IF_17
0xbf2e	            0x7549	                           jne 0x400bfb9	      7081	normal.c	FUNCTION_88	IF_17
0xbf30	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7092	normal.c	FUNCTION_88	IF_17	CALL_24
0xbf34	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7092	normal.c	FUNCTION_88	IF_17	CALL_24
0xbf38	      0xbe00000000	                              mov esi, 0	      7092	normal.c	FUNCTION_88	IF_17	CALL_24
0xbf3d	          0x4889c7	                            mov rdi, rax	      7092	normal.c	FUNCTION_88	IF_17	CALL_24
0xbf40	      0xe800000000	                          call 0x400bf85	      7092	normal.c	FUNCTION_88	IF_17	CALL_24
0xbf45	      0xbf0d000000	                            mov edi, 0xd	      7096	normal.c	FUNCTION_88	IF_17	CALL_26
0xbf4a	      0xe800000000	                          call 0x400bf8f	      7096	normal.c	FUNCTION_88	IF_17	CALL_26
0xbf4f	      0xbf1b000000	                           mov edi, 0x1b	      7097	normal.c	FUNCTION_88	IF_17	CALL_27
0xbf54	      0xe800000000	                          call 0x400bf99	      7097	normal.c	FUNCTION_88	IF_17	CALL_27
0xbf59	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7100	normal.c	FUNCTION_88	IF_17	CALL_28
0xbf5d	      0xb900000000	                              mov ecx, 0	      7100	normal.c	FUNCTION_88	IF_17	CALL_28
0xbf62	      0xba72000000	                           mov edx, 0x72	      7100	normal.c	FUNCTION_88	IF_17	CALL_28
0xbf67	      0xbe01000000	                              mov esi, 1	      7100	normal.c	FUNCTION_88	IF_17	CALL_28
0xbf6c	          0x4889c7	                            mov rdi, rax	      7100	normal.c	FUNCTION_88	IF_17	CALL_28
0xbf6f	      0xe8cb3c0000	                    call sym.invoke_edit	      7100	normal.c	FUNCTION_88	IF_17	CALL_28
0xbf74	      0xe9b1030000	                           jmp 0x400c36a	      7100	normal.c	FUNCTION_88	IF_17	CALL_28
0xbf79	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbf7d	          0x8b5010	            mov edx, dword [rax + 0x10] 	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbf80	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbf84	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbf88	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbf8c	          0x488b00	                    mov rax, qword [rax]	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbf8f	          0x8b4004	                mov eax, dword [rax + 4]	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbf92	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbf95	        0x4883ec08	                              sub rsp, 8	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbf99	              0x52	                                push rdx	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbf9a	          0x4189c9	                            mov r9d, ecx	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbf9d	    0x41b800000000	                              mov r8d, 0	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbfa3	      0xb972000000	                           mov ecx, 0x72	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbfa8	      0xba00000000	                              mov edx, 0	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbfad	            0x89c7	                            mov edi, eax	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbfaf	      0xe8f498ffff	                      call sym.prep_redo	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbfb4	        0x4883c410	                           add rsp, 0x10	      7104	normal.c	FUNCTION_88	ELSE_4	CALL_29
0xbfb8	    0x488b0d000000	            mov rcx, qword [0x0400bfff] 	      7107	normal.c	FUNCTION_88	ELSE_4
0xbfbf	    0x488b05000000	            mov rax, qword [0x0400c006] 	      7107	normal.c	FUNCTION_88	ELSE_4
0xbfc6	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7107	normal.c	FUNCTION_88	ELSE_4
0xbfca	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7107	normal.c	FUNCTION_88	ELSE_4
0xbfce	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      7107	normal.c	FUNCTION_88	ELSE_4
0xbfd5	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      7107	normal.c	FUNCTION_88	ELSE_4
0xbfdc	    0x8b0500000000	            mov eax, dword [0x0400c022] 	      7109	normal.c	FUNCTION_88	ELSE_4	IF_18
0xbfe2	            0x85c0	                           test eax, eax	      7109	normal.c	FUNCTION_88	ELSE_4	IF_18
0xbfe4	     0xf8423010000	                            je 0x400c14d	      7109	normal.c	FUNCTION_88	ELSE_4	IF_18
0xbfea	    0x8b0500000000	            mov eax, dword [0x0400c030] 	      7111	normal.c	FUNCTION_88	ELSE_4	IF_18
0xbff0	          0x8945e0	             mov dword [rbp - 0x20], eax	      7111	normal.c	FUNCTION_88	ELSE_4	IF_18
0xbff3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7113	normal.c	FUNCTION_88	ELSE_4	IF_18	IF_19
0xbff7	          0x8b4014	            mov eax, dword [rax + 0x14] 	      7113	normal.c	FUNCTION_88	ELSE_4	IF_18	IF_19
0xbffa	            0x85c0	                           test eax, eax	      7113	normal.c	FUNCTION_88	ELSE_4	IF_18	IF_19
0xbffc	            0x740e	                            je 0x400c04c	      7113	normal.c	FUNCTION_88	ELSE_4	IF_18	IF_19
0xbffe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7114	normal.c	FUNCTION_88	ELSE_4	IF_18	CALL_30
0xc002	          0x8b4014	            mov eax, dword [rax + 0x14] 	      7114	normal.c	FUNCTION_88	ELSE_4	IF_18	CALL_30
0xc005	            0x89c7	                            mov edi, eax	      7114	normal.c	FUNCTION_88	ELSE_4	IF_18	CALL_30
0xc007	      0xe800000000	                          call 0x400c04c	      7114	normal.c	FUNCTION_88	ELSE_4	IF_18	CALL_30
0xc00c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7115	normal.c	FUNCTION_88	ELSE_4	IF_18	IF_20
0xc010	          0x8b4018	            mov eax, dword [rax + 0x18] 	      7115	normal.c	FUNCTION_88	ELSE_4	IF_18	IF_20
0xc013	            0x85c0	                           test eax, eax	      7115	normal.c	FUNCTION_88	ELSE_4	IF_18	IF_20
0xc015	            0x740e	                            je 0x400c065	      7115	normal.c	FUNCTION_88	ELSE_4	IF_18	IF_20
0xc017	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7116	normal.c	FUNCTION_88	ELSE_4	IF_18	CALL_31
0xc01b	          0x8b4018	            mov eax, dword [rax + 0x18] 	      7116	normal.c	FUNCTION_88	ELSE_4	IF_18	CALL_31
0xc01e	            0x89c7	                            mov edi, eax	      7116	normal.c	FUNCTION_88	ELSE_4	IF_18	CALL_31
0xc020	      0xe800000000	                          call 0x400c065	      7116	normal.c	FUNCTION_88	ELSE_4	IF_18	CALL_31
0xc025	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7121	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0xc029	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7121	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0xc02d	        0x488945f8	                mov qword [rbp - 8], rax	      7121	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0xc031	      0xe9c7000000	                           jmp 0x400c13d	      7121	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0xc036	    0xc70500000000	           mov dword [0x0400c080], 0x50 	      7123	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0xc040	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7124	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0xc044	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7124	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0xc047	          0x83f805	                              cmp eax, 5	      7124	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0xc04a	            0x740c	                            je 0x400c098	      7124	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0xc04c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7124	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0xc050	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7124	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0xc053	          0x83f819	                           cmp eax, 0x19	      7124	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0xc056	            0x7557	                           jne 0x400c0ef	      7124	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0xc058	    0x488b05000000	            mov rax, qword [0x0400c09f] 	      7126	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0xc05f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7126	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0xc063	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7127	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0xc067	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7127	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0xc06a	          0x83f819	                           cmp eax, 0x19	      7126	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0xc06d	            0x7509	                           jne 0x400c0b8	      7126	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0xc06f	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      7126	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0xc076	            0xeb05	                           jmp 0x400c0bd	      7126	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0xc078	      0xb801000000	                              mov eax, 1	      7126	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0xc07d	          0x4801d0	                            add rax, rdx	      7126	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0xc080	          0x4889c7	                            mov rdi, rax	      7126	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0xc083	      0xe800000000	                          call 0x400c0c8	      7126	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0xc088	          0x8945e4	             mov dword [rbp - 0x1c], eax	      7126	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_32
0xc08b	        0x837de400	               cmp dword [rbp - 0x1c], 0	      7128	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	IF_22
0xc08f	            0x740c	                            je 0x400c0dd	      7128	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	IF_22
0xc091	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      7129	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_33
0xc094	            0x89c7	                            mov edi, eax	      7129	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_33
0xc096	      0xe800000000	                          call 0x400c0db	      7129	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	CALL_33
0xc09b	            0xeb20	                           jmp 0x400c0fd	      7125	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0xc09d	    0x488b05000000	            mov rax, qword [0x0400c0e4] 	      7132	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	ELSE_5
0xc0a4	          0x8b5040	            mov edx, dword [rax + 0x40] 	      7132	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	ELSE_5
0xc0a7	          0x83c201	                              add edx, 1	      7132	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	ELSE_5
0xc0aa	          0x895040	             mov dword [rax + 0x40], edx	      7132	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21	ELSE_5
0xc0ad	            0xeb0e	                           jmp 0x400c0fd	      7125	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_21
0xc0af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7135	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	CALL_34
0xc0b3	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7135	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	CALL_34
0xc0b6	            0x89c7	                            mov edi, eax	      7135	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	CALL_34
0xc0b8	      0xe800000000	                          call 0x400c0fd	      7135	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	CALL_34
0xc0bd	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7136	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0xc0c0	    0x890500000000	            mov dword [0x0400c106], eax 	      7136	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0xc0c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7137	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_23
0xc0ca	          0x8b4014	            mov eax, dword [rax + 0x14] 	      7137	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_23
0xc0cd	            0x85c0	                           test eax, eax	      7137	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_23
0xc0cf	            0x740e	                            je 0x400c11f	      7137	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_23
0xc0d1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7138	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	CALL_35
0xc0d5	          0x8b4014	            mov eax, dword [rax + 0x14] 	      7138	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	CALL_35
0xc0d8	            0x89c7	                            mov edi, eax	      7138	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	CALL_35
0xc0da	      0xe800000000	                          call 0x400c11f	      7138	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	CALL_35
0xc0df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7139	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_24
0xc0e3	          0x8b4018	            mov eax, dword [rax + 0x18] 	      7139	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_24
0xc0e6	            0x85c0	                           test eax, eax	      7139	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_24
0xc0e8	            0x740e	                            je 0x400c138	      7139	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	IF_24
0xc0ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7140	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	CALL_36
0xc0ee	          0x8b4018	            mov eax, dword [rax + 0x18] 	      7140	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	CALL_36
0xc0f1	            0x89c7	                            mov edi, eax	      7140	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	CALL_36
0xc0f3	      0xe800000000	                          call 0x400c138	      7140	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1	CALL_36
0xc0f8	      0x48836df801	                  sub qword [rbp - 8], 1	      7121	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0xc0fd	      0x48837df800	                  cmp qword [rbp - 8], 0	      7121	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0xc102	     0xf8f2effffff	                            jg 0x400c076	      7121	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0xc108	      0xe9b5010000	                           jmp 0x400c302	      7121	normal.c	FUNCTION_88	ELSE_4	IF_18	FOR_1
0xc10d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7149	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0xc111	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7149	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0xc115	        0x488945f8	                mov qword [rbp - 8], rax	      7149	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0xc119	      0xe9e9000000	                           jmp 0x400c247	      7149	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0xc11e	    0x488b05000000	            mov rax, qword [0x0400c165] 	      7156	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_37
0xc125	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      7156	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_37
0xc129	    0x488b05000000	            mov rax, qword [0x0400c170] 	      7156	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_37
0xc130	      0xba01000000	                              mov edx, 1	      7156	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_37
0xc135	          0x4889ce	                            mov rsi, rcx	      7156	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_37
0xc138	          0x4889c7	                            mov rdi, rax	      7156	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_37
0xc13b	      0xe800000000	                          call 0x400c180	      7156	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_37
0xc140	        0x488945f0	             mov qword [rbp - 0x10], rax	      7156	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_37
0xc144	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7157	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0xc148	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7157	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0xc14b	          0x83f805	                              cmp eax, 5	      7157	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0xc14e	            0x740c	                            je 0x400c19c	      7157	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0xc150	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7157	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0xc154	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7157	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0xc157	          0x83f819	                           cmp eax, 0x19	      7157	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0xc15a	            0x7554	                           jne 0x400c1f0	      7157	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0xc15c	    0x488b05000000	            mov rax, qword [0x0400c1a3] 	      7159	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0xc163	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7159	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0xc167	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7160	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0xc16b	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7160	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0xc16e	          0x83f819	                           cmp eax, 0x19	      7159	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0xc171	            0x7509	                           jne 0x400c1bc	      7159	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0xc173	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      7159	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0xc17a	            0xeb05	                           jmp 0x400c1c1	      7159	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0xc17c	      0xb801000000	                              mov eax, 1	      7159	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0xc181	          0x4801d0	                            add rax, rdx	      7159	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0xc184	          0x4889c7	                            mov rdi, rax	      7159	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0xc187	      0xe800000000	                          call 0x400c1cc	      7159	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0xc18c	          0x8945e8	             mov dword [rbp - 0x18], eax	      7159	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	CALL_38
0xc18f	        0x837de800	               cmp dword [rbp - 0x18], 0	      7161	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	IF_26
0xc193	            0x743a	                            je 0x400c20f	      7161	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	IF_26
0xc195	    0x488b05000000	            mov rax, qword [0x0400c1dc] 	      7162	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	IF_26
0xc19c	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7162	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	IF_26
0xc19f	          0x4863d0	                         movsxd rdx, eax	      7162	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	IF_26
0xc1a2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7162	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	IF_26
0xc1a6	          0x4801d0	                            add rax, rdx	      7162	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	IF_26
0xc1a9	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      7162	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	IF_26
0xc1ac	            0x8810	                      mov byte [rax], dl	      7162	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25	IF_26
0xc1ae	            0xeb1f	                           jmp 0x400c20f	      7158	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0xc1b0	    0x488b05000000	            mov rax, qword [0x0400c1f7] 	      7165	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	ELSE_8
0xc1b7	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7165	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	ELSE_8
0xc1ba	          0x4863d0	                         movsxd rdx, eax	      7165	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	ELSE_8
0xc1bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7165	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	ELSE_8
0xc1c1	          0x4801c2	                            add rdx, rax	      7165	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	ELSE_8
0xc1c4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7165	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	ELSE_8
0xc1c8	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7165	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	ELSE_8
0xc1cb	            0x8802	                      mov byte [rdx], al	      7165	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	ELSE_8
0xc1cd	            0xeb01	                           jmp 0x400c210	      7165	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	ELSE_8
0xc1cf	              0x90	                                     nop	      7158	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_25
0xc1d0	    0x8b0500000000	            mov eax, dword [0x0400c216] 	      7166	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_27
0xc1d6	            0x85c0	                           test eax, eax	      7166	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_27
0xc1d8	            0x7418	                            je 0x400c232	      7166	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_27
0xc1da	    0x8b0500000000	            mov eax, dword [0x0400c220] 	      7166	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_27
0xc1e0	            0x85c0	                           test eax, eax	      7166	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_27
0xc1e2	            0x750e	                           jne 0x400c232	      7166	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	IF_27
0xc1e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7167	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_39
0xc1e8	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7167	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_39
0xc1eb	            0x89c7	                            mov edi, eax	      7167	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_39
0xc1ed	      0xe800000000	                          call 0x400c232	      7167	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2	CALL_39
0xc1f2	    0x488b05000000	            mov rax, qword [0x0400c239] 	      7168	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0xc1f9	          0x8b5040	            mov edx, dword [rax + 0x40] 	      7168	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0xc1fc	          0x83c201	                              add edx, 1	      7168	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0xc1ff	          0x895040	             mov dword [rax + 0x40], edx	      7168	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0xc202	      0x48836df801	                  sub qword [rbp - 8], 1	      7149	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0xc207	      0x48837df800	                  cmp qword [rbp - 8], 0	      7149	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0xc20c	     0xf8f0cffffff	                            jg 0x400c15e	      7149	normal.c	FUNCTION_88	ELSE_4	ELSE_7	FOR_2
0xc212	      0xe800000000	                          call 0x400c257	      7171	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_40
0xc217	            0x85c0	                           test eax, eax	      7171	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_40
0xc219	            0x7478	                            je 0x400c2d3	      7171	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_40
0xc21b	    0x488b05000000	            mov rax, qword [0x0400c262] 	      7173	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28
0xc222	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7173	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28
0xc225	            0x89c2	                            mov edx, eax	      7173	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28
0xc227	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7173	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28
0xc22b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7173	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28
0xc22f	            0x29c2	                            sub edx, eax	      7173	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28
0xc231	            0x89d0	                            mov eax, edx	      7173	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28
0xc233	          0x8945ec	             mov dword [rbp - 0x14], eax	      7173	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28
0xc236	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7175	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_41
0xc23a	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      7175	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_41
0xc23e	    0x488b05000000	            mov rax, qword [0x0400c285] 	      7175	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_41
0xc245	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      7175	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_41
0xc249	    0x488b05000000	            mov rax, qword [0x0400c290] 	      7175	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_41
0xc250	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      7175	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_41
0xc253	          0x4889c7	                            mov rdi, rax	      7175	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_41
0xc256	      0xe800000000	                          call 0x400c29b	      7175	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_41
0xc25b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7178	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28
0xc25f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7178	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28
0xc263	            0x89c7	                            mov edi, eax	      7177	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0xc265	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7177	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0xc268	          0x4863d0	                         movsxd rdx, eax	      7177	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0xc26b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7177	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0xc26f	        0x488d0c02	                    lea rcx, [rdx + rax]	      7177	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0xc273	    0x488b05000000	            mov rax, qword [0x0400c2ba] 	      7177	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0xc27a	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      7177	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0xc27e	    0x488b05000000	            mov rax, qword [0x0400c2c5] 	      7177	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0xc285	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      7177	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0xc288	          0x4189f8	                            mov r8d, edi	      7177	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0xc28b	          0x4889c7	                            mov rdi, rax	      7177	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0xc28e	      0xe800000000	                          call 0x400c2d3	      7177	normal.c	FUNCTION_88	ELSE_4	ELSE_7	IF_28	CALL_42
0xc293	    0x488b05000000	            mov rax, qword [0x0400c2da] 	      7184	normal.c	FUNCTION_88	ELSE_4	ELSE_7
0xc29a	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7184	normal.c	FUNCTION_88	ELSE_4	ELSE_7
0xc29d	            0x89c2	                            mov edx, eax	      7183	normal.c	FUNCTION_88	ELSE_4	ELSE_7	CALL_43
0xc29f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7184	normal.c	FUNCTION_88	ELSE_4	ELSE_7
0xc2a3	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7184	normal.c	FUNCTION_88	ELSE_4	ELSE_7
0xc2a7	            0x29c2	                            sub edx, eax	      7183	normal.c	FUNCTION_88	ELSE_4	ELSE_7	CALL_43
0xc2a9	            0x89d0	                            mov eax, edx	      7183	normal.c	FUNCTION_88	ELSE_4	ELSE_7	CALL_43
0xc2ab	            0x89c2	                            mov edx, eax	      7183	normal.c	FUNCTION_88	ELSE_4	ELSE_7	CALL_43
0xc2ad	    0x488b05000000	            mov rax, qword [0x0400c2f4] 	      7183	normal.c	FUNCTION_88	ELSE_4	ELSE_7	CALL_43
0xc2b4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7183	normal.c	FUNCTION_88	ELSE_4	ELSE_7	CALL_43
0xc2b8	            0x89d6	                            mov esi, edx	      7183	normal.c	FUNCTION_88	ELSE_4	ELSE_7	CALL_43
0xc2ba	          0x4889c7	                            mov rdi, rax	      7183	normal.c	FUNCTION_88	ELSE_4	ELSE_7	CALL_43
0xc2bd	      0xe800000000	                          call 0x400c302	      7183	normal.c	FUNCTION_88	ELSE_4	ELSE_7	CALL_43
0xc2c2	    0x488b05000000	            mov rax, qword [0x0400c309] 	      7186	normal.c	FUNCTION_88	ELSE_4
0xc2c9	          0x8b5040	            mov edx, dword [rax + 0x40] 	      7186	normal.c	FUNCTION_88	ELSE_4
0xc2cc	          0x83ea01	                              sub edx, 1	      7186	normal.c	FUNCTION_88	ELSE_4
0xc2cf	          0x895040	             mov dword [rax + 0x40], edx	      7186	normal.c	FUNCTION_88	ELSE_4
0xc2d2	    0x8b0500000000	            mov eax, dword [0x0400c318] 	      7190	normal.c	FUNCTION_88	ELSE_4	IF_29
0xc2d8	            0x85c0	                           test eax, eax	      7190	normal.c	FUNCTION_88	ELSE_4	IF_29
0xc2da	            0x7405	                            je 0x400c321	      7190	normal.c	FUNCTION_88	ELSE_4	IF_29
0xc2dc	      0xe800000000	                          call 0x400c321	      7191	normal.c	FUNCTION_88	ELSE_4	CALL_44
0xc2e1	    0x488b0d000000	            mov rcx, qword [0x0400c328] 	      7193	normal.c	FUNCTION_88	ELSE_4
0xc2e8	    0x488b05000000	            mov rax, qword [0x0400c32f] 	      7193	normal.c	FUNCTION_88	ELSE_4
0xc2ef	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7193	normal.c	FUNCTION_88	ELSE_4
0xc2f3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7193	normal.c	FUNCTION_88	ELSE_4
0xc2f7	    0x488981f01100	          mov qword [rcx + 0x11f0], rax 	      7193	normal.c	FUNCTION_88	ELSE_4
0xc2fe	    0x488991f81100	          mov qword [rcx + 0x11f8], rdx 	      7193	normal.c	FUNCTION_88	ELSE_4
0xc305	    0x488b05000000	            mov rax, qword [0x0400c34c] 	      7194	normal.c	FUNCTION_88	ELSE_4
0xc30c	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7194	normal.c	FUNCTION_88	ELSE_4
0xc313	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7195	normal.c	FUNCTION_88	ELSE_4	CALL_45
0xc317	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7195	normal.c	FUNCTION_88	ELSE_4	CALL_45
0xc31a	            0x89c7	                            mov edi, eax	      7195	normal.c	FUNCTION_88	ELSE_4	CALL_45
0xc31c	      0xe800000000	                          call 0x400c361	      7195	normal.c	FUNCTION_88	ELSE_4	CALL_45
0xc321	            0xeb07	                           jmp 0x400c36a	      7195	normal.c	FUNCTION_88	ELSE_4	CALL_45
0xc323	              0x90	                                     nop	      6996	normal.c	FUNCTION_88	IF_1
0xc324	            0xeb04	                           jmp 0x400c36a	      6996	normal.c	FUNCTION_88	IF_1
0xc326	              0x90	                                     nop	      7038	normal.c	FUNCTION_88	IF_10	IF_11
0xc327	            0xeb01	                           jmp 0x400c36a	      7038	normal.c	FUNCTION_88	IF_10	IF_11
0xc329	              0x90	                                     nop	      7079	normal.c	FUNCTION_88	IF_16
0xc32a	              0xc9	                                   leave	      7197	normal.c	FUNCTION_88
0xc32b	              0xc3	                                     ret	      7197	normal.c	FUNCTION_88
nv_down	CALL,7:ELSE,5:DO,0:FOR,0:functions,0:IF,6:WHILE,0:SWITCH,0	73
0xa1dc	              0x55	                                push rbp	      6196	normal.c	FUNCTION_73
0xa1dd	          0x4889e5	                            mov rbp, rsp	      6196	normal.c	FUNCTION_73
0xa1e0	        0x4883ec10	                           sub rsp, 0x10	      6196	normal.c	FUNCTION_73
0xa1e4	        0x48897df8	                mov qword [rbp - 8], rdi	      6196	normal.c	FUNCTION_73
0xa1e8	    0x8b0500000000	            mov eax, dword [0x0400a22e] 	      6197	normal.c	FUNCTION_73	IF_1
0xa1ee	          0x83e002	                              and eax, 2	      6197	normal.c	FUNCTION_73	IF_1
0xa1f1	            0x85c0	                           test eax, eax	      6197	normal.c	FUNCTION_73	IF_1
0xa1f3	            0x741c	                            je 0x400a251	      6197	normal.c	FUNCTION_73	IF_1
0xa1f5	        0x488b45f8	                mov rax, qword [rbp - 8]	      6200	normal.c	FUNCTION_73	IF_1
0xa1f9	    0xc74038010000	               mov dword [rax + 0x38], 1	      6200	normal.c	FUNCTION_73	IF_1
0xa200	        0x488b45f8	                mov rax, qword [rbp - 8]	      6201	normal.c	FUNCTION_73	IF_1	CALL_1
0xa204	          0x4889c7	                            mov rdi, rax	      6201	normal.c	FUNCTION_73	IF_1	CALL_1
0xa207	      0xe812c4ffff	                        call sym.nv_page	      6201	normal.c	FUNCTION_73	IF_1	CALL_1
0xa20c	      0xe9cc000000	                           jmp 0x400a31d	      6230	normal.c	FUNCTION_73
0xa211	    0x488b05000000	            mov rax, qword [0x0400a258] 	      6206	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_2
0xa218	          0x4889c7	                            mov rdi, rax	      6206	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_2
0xa21b	      0xe800000000	                          call 0x400a260	      6206	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_2
0xa220	            0x85c0	                           test eax, eax	      6206	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_2
0xa222	            0x743a	                            je 0x400a29e	      6206	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_2
0xa224	        0x488b45f8	                mov rax, qword [rbp - 8]	      6206	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_2
0xa228	          0x8b400c	              mov eax, dword [rax + 0xc]	      6206	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_2
0xa22b	          0x83f80d	                            cmp eax, 0xd	      6206	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_2
0xa22e	            0x752e	                           jne 0x400a29e	      6206	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_2
0xa230	    0x488b05000000	            mov rax, qword [0x0400a277] 	      6208	normal.c	FUNCTION_73	ELSE_1	IF_2	IF_3
0xa237	    0x488b80b01800	          mov rax, qword [rax + 0x18b0] 	      6208	normal.c	FUNCTION_73	ELSE_1	IF_2	IF_3
0xa23e	          0x4885c0	                           test rax, rax	      6208	normal.c	FUNCTION_73	ELSE_1	IF_2	IF_3
0xa241	            0x750f	                           jne 0x400a292	      6208	normal.c	FUNCTION_73	ELSE_1	IF_2	IF_3
0xa243	      0xbf00000000	                              mov edi, 0	      6209	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_3
0xa248	      0xe800000000	                          call 0x400a28d	      6209	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_3
0xa24d	      0xe98b000000	                           jmp 0x400a31d	      6208	normal.c	FUNCTION_73	ELSE_1	IF_2	IF_3
0xa252	      0xbf00000000	                              mov edi, 0	      6211	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_4
0xa257	      0xe800000000	                          call 0x400a29c	      6211	normal.c	FUNCTION_73	ELSE_1	IF_2	CALL_4
0xa25c	            0xeb7f	                           jmp 0x400a31d	      6208	normal.c	FUNCTION_73	ELSE_1	IF_2	IF_3
0xa25e	    0x8b0500000000	            mov eax, dword [0x0400a2a4] 	      6218	normal.c	FUNCTION_73	ELSE_3	IF_4
0xa264	            0x85c0	                           test eax, eax	      6218	normal.c	FUNCTION_73	ELSE_3	IF_4
0xa266	            0x7418	                            je 0x400a2c0	      6218	normal.c	FUNCTION_73	ELSE_3	IF_4
0xa268	        0x488b45f8	                mov rax, qword [rbp - 8]	      6218	normal.c	FUNCTION_73	ELSE_3	IF_4
0xa26c	          0x8b400c	              mov eax, dword [rax + 0xc]	      6218	normal.c	FUNCTION_73	ELSE_3	IF_4
0xa26f	          0x83f80d	                            cmp eax, 0xd	      6218	normal.c	FUNCTION_73	ELSE_3	IF_4
0xa272	            0x750c	                           jne 0x400a2c0	      6218	normal.c	FUNCTION_73	ELSE_3	IF_4
0xa274	    0xc70500000000	            mov dword [0x0400a2be], 0xd 	      6219	normal.c	FUNCTION_73	ELSE_3	IF_4
0xa27e	            0xeb5d	                           jmp 0x400a31d	      6219	normal.c	FUNCTION_73	ELSE_3	IF_4
0xa280	        0x488b45f8	                mov rax, qword [rbp - 8]	      6223	normal.c	FUNCTION_73	ELSE_3	ELSE_4
0xa284	          0x488b00	                    mov rax, qword [rax]	      6223	normal.c	FUNCTION_73	ELSE_3	ELSE_4
0xa287	    0xc74008010000	                  mov dword [rax + 8], 1	      6223	normal.c	FUNCTION_73	ELSE_3	ELSE_4
0xa28e	        0x488b45f8	                mov rax, qword [rbp - 8]	      6224	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0xa292	          0x488b00	                    mov rax, qword [rax]	      6224	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0xa295	            0x8b00	                    mov eax, dword [rax]	      6224	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0xa297	            0x85c0	                           test eax, eax	      6224	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0xa299	           0xf94c0	                                 sete al	      6224	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0xa29c	           0xfb6d0	                           movzx edx, al	      6224	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0xa29f	        0x488b45f8	                mov rax, qword [rbp - 8]	      6224	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0xa2a3	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6224	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0xa2a7	            0x89d6	                            mov esi, edx	      6224	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0xa2a9	          0x4889c7	                            mov rdi, rax	      6224	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0xa2ac	      0xe800000000	                          call 0x400a2f1	      6224	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0xa2b1	            0x85c0	                           test eax, eax	      6224	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0xa2b3	            0x7511	                           jne 0x400a306	      6224	normal.c	FUNCTION_73	ELSE_3	ELSE_4	IF_5	CALL_5
0xa2b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      6225	normal.c	FUNCTION_73	ELSE_3	ELSE_4	CALL_6
0xa2b9	          0x488b00	                    mov rax, qword [rax]	      6225	normal.c	FUNCTION_73	ELSE_3	ELSE_4	CALL_6
0xa2bc	          0x4889c7	                            mov rdi, rax	      6225	normal.c	FUNCTION_73	ELSE_3	ELSE_4	CALL_6
0xa2bf	      0xe824b7ffff	                    call sym.clearopbeep	      6225	normal.c	FUNCTION_73	ELSE_3	ELSE_4	CALL_6
0xa2c4	            0xeb17	                           jmp 0x400a31d	      6230	normal.c	FUNCTION_73
0xa2c6	        0x488b45f8	                mov rax, qword [rbp - 8]	      6226	normal.c	FUNCTION_73	ELSE_3	ELSE_4	ELSE_5	IF_6
0xa2ca	          0x8b4038	            mov eax, dword [rax + 0x38] 	      6226	normal.c	FUNCTION_73	ELSE_3	ELSE_4	ELSE_5	IF_6
0xa2cd	            0x85c0	                           test eax, eax	      6226	normal.c	FUNCTION_73	ELSE_3	ELSE_4	ELSE_5	IF_6
0xa2cf	            0x740c	                            je 0x400a31d	      6226	normal.c	FUNCTION_73	ELSE_3	ELSE_4	ELSE_5	IF_6
0xa2d1	      0xbf05000000	                              mov edi, 5	      6227	normal.c	FUNCTION_73	ELSE_3	ELSE_4	ELSE_5	IF_6
0xa2d6	      0xe800000000	                          call 0x400a31b	      6227	normal.c	FUNCTION_73	ELSE_3	ELSE_4	ELSE_5	IF_6
0xa2db	            0xeb00	                           jmp 0x400a31d	      6230	normal.c	FUNCTION_73
0xa2dd	              0x90	                                     nop	      6230	normal.c	FUNCTION_73
0xa2de	              0xc9	                                   leave	      6230	normal.c	FUNCTION_73
0xa2df	              0xc3	                                     ret	      6230	normal.c	FUNCTION_73
nv_hat	CALL,2:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	20
0x8b44	              0x55	                                push rbp	      5516	normal.c	FUNCTION_63
0x8b45	          0x4889e5	                            mov rbp, rsp	      5516	normal.c	FUNCTION_63
0x8b48	        0x4883ec10	                           sub rsp, 0x10	      5516	normal.c	FUNCTION_63
0x8b4c	        0x48897df8	                mov qword [rbp - 8], rdi	      5516	normal.c	FUNCTION_63
0x8b50	        0x488b45f8	                mov rax, qword [rbp - 8]	      5517	normal.c	FUNCTION_63	IF_1	CALL_1
0x8b54	          0x488b00	                    mov rax, qword [rax]	      5517	normal.c	FUNCTION_63	IF_1	CALL_1
0x8b57	          0x4889c7	                            mov rdi, rax	      5517	normal.c	FUNCTION_63	IF_1	CALL_1
0x8b5a	      0xe819ceffff	                  call sym.checkclearopq	      5517	normal.c	FUNCTION_63	IF_1	CALL_1
0x8b5f	            0x85c0	                           test eax, eax	      5517	normal.c	FUNCTION_63	IF_1	CALL_1
0x8b61	            0x751e	                           jne 0x4008bc1	      5517	normal.c	FUNCTION_63	IF_1	CALL_1
0x8b63	        0x488b45f8	                mov rax, qword [rbp - 8]	      5518	normal.c	FUNCTION_63	IF_1	CALL_2
0x8b67	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5518	normal.c	FUNCTION_63	IF_1	CALL_2
0x8b6b	      0xb900000000	                              mov ecx, 0	      5518	normal.c	FUNCTION_63	IF_1	CALL_2
0x8b70	      0xba03000000	                              mov edx, 3	      5518	normal.c	FUNCTION_63	IF_1	CALL_2
0x8b75	      0xbe00000000	                              mov esi, 0	      5518	normal.c	FUNCTION_63	IF_1	CALL_2
0x8b7a	            0x89c7	                            mov edi, eax	      5518	normal.c	FUNCTION_63	IF_1	CALL_2
0x8b7c	      0xe800000000	                          call 0x4008bc1	      5518	normal.c	FUNCTION_63	IF_1	CALL_2
0x8b81	              0x90	                                     nop	      5520	normal.c	FUNCTION_63
0x8b82	              0xc9	                                   leave	      5520	normal.c	FUNCTION_63
0x8b83	              0xc3	                                     ret	      5520	normal.c	FUNCTION_63
check_scrollbind	CALL,2:ELSE,0:DO,0:FOR,0:functions,1:IF,0:WHILE,0:SWITCH,0	146
0x625f	              0x55	                                push rbp	      4060	normal.c	FUNCTION_36
0x6260	          0x4889e5	                            mov rbp, rsp	      4060	normal.c	FUNCTION_36
0x6263	        0x4883ec50	                           sub rsp, 0x50	      4060	normal.c	FUNCTION_36
0x6267	        0x48897db8	             mov qword [rbp - 0x48], rdi	      4060	normal.c	FUNCTION_36
0x626b	        0x488975b0	             mov qword [rbp - 0x50], rsi	      4060	normal.c	FUNCTION_36
0x626f	    0x488b05000000	            mov rax, qword [0x040062b6] 	      4063	normal.c	FUNCTION_36
0x6276	        0x488945e8	             mov qword [rbp - 0x18], rax	      4063	normal.c	FUNCTION_36
0x627a	    0x488b05000000	            mov rax, qword [0x040062c1] 	      4064	normal.c	FUNCTION_36
0x6281	        0x488945f0	             mov qword [rbp - 0x10], rax	      4064	normal.c	FUNCTION_36
0x6285	    0x8b0500000000	            mov eax, dword [0x040062cb] 	      4065	normal.c	FUNCTION_36
0x628b	          0x8945cc	             mov dword [rbp - 0x34], eax	      4065	normal.c	FUNCTION_36
0x628e	    0x8b0500000000	            mov eax, dword [0x040062d4] 	      4066	normal.c	FUNCTION_36
0x6294	          0x8945d0	             mov dword [rbp - 0x30], eax	      4066	normal.c	FUNCTION_36
0x6297	    0x488b05000000	            mov rax, qword [0x040062de] 	      4067	normal.c	FUNCTION_36
0x629e	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      4067	normal.c	FUNCTION_36
0x62a4	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4067	normal.c	FUNCTION_36
0x62a7	    0x488b05000000	            mov rax, qword [0x040062ee] 	      4074	normal.c	FUNCTION_36	CALL_1
0x62ae	      0xbe76000000	                           mov esi, 0x76	      4074	normal.c	FUNCTION_36	CALL_1
0x62b3	          0x4889c7	                            mov rdi, rax	      4074	normal.c	FUNCTION_36	CALL_1
0x62b6	      0xe800000000	                          call 0x40062fb	      4074	normal.c	FUNCTION_36	CALL_1
0x62bb	          0x4885c0	                           test rax, rax	      4074	normal.c	FUNCTION_36	CALL_1
0x62be	            0x740e	                            je 0x400630e	      4074	normal.c	FUNCTION_36	CALL_1
0x62c0	      0x48837db800	               cmp qword [rbp - 0x48], 0	      4074	normal.c	FUNCTION_36	CALL_1
0x62c5	            0x7407	                            je 0x400630e	      4074	normal.c	FUNCTION_36	CALL_1
0x62c7	      0xb801000000	                              mov eax, 1	      4074	normal.c	FUNCTION_36	CALL_1
0x62cc	            0xeb05	                           jmp 0x4006313	      4074	normal.c	FUNCTION_36	CALL_1
0x62ce	      0xb800000000	                              mov eax, 0	      4074	normal.c	FUNCTION_36	CALL_1
0x62d3	          0x8945d8	             mov dword [rbp - 0x28], eax	      4074	normal.c	FUNCTION_36	CALL_1
0x62d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4076	normal.c	FUNCTION_36
0x62da	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      4076	normal.c	FUNCTION_36
0x62e0	           0x945d8	              or dword [rbp - 0x28], eax	      4076	normal.c	FUNCTION_36
0x62e3	    0x488b05000000	            mov rax, qword [0x0400632a] 	      4078	normal.c	FUNCTION_36	CALL_2
0x62ea	      0xbe68000000	                           mov esi, 0x68	      4078	normal.c	FUNCTION_36	CALL_2
0x62ef	          0x4889c7	                            mov rdi, rax	      4078	normal.c	FUNCTION_36	CALL_2
0x62f2	      0xe800000000	                          call 0x4006337	      4078	normal.c	FUNCTION_36	CALL_2
0x62f7	          0x4885c0	                           test rax, rax	      4078	normal.c	FUNCTION_36	CALL_2
0x62fa	            0x7415	                            je 0x4006351	      4078	normal.c	FUNCTION_36	CALL_2
0x62fc	      0x48837db000	               cmp qword [rbp - 0x50], 0	      4078	normal.c	FUNCTION_36	CALL_2
0x6301	            0x7507	                           jne 0x400634a	      4078	normal.c	FUNCTION_36	CALL_2
0x6303	      0x48837db800	               cmp qword [rbp - 0x48], 0	      4078	normal.c	FUNCTION_36	CALL_2
0x6308	            0x7407	                            je 0x4006351	      4078	normal.c	FUNCTION_36	CALL_2
0x630a	      0xb801000000	                              mov eax, 1	      4078	normal.c	FUNCTION_36	CALL_2
0x630f	            0xeb05	                           jmp 0x4006356	      4078	normal.c	FUNCTION_36	CALL_2
0x6311	      0xb800000000	                              mov eax, 0	      4078	normal.c	FUNCTION_36	CALL_2
0x6316	          0x8945dc	             mov dword [rbp - 0x24], eax	      4078	normal.c	FUNCTION_36	CALL_2
0x6319	    0xc70500000000	               mov dword [0x04006363], 0	      4083	normal.c	FUNCTION_36
0x6323	    0x8b0500000000	            mov eax, dword [0x04006369] 	      4083	normal.c	FUNCTION_36
0x6329	    0x890500000000	            mov dword [0x0400636f], eax 	      4083	normal.c	FUNCTION_36
0x632f	    0x488b05000000	            mov rax, qword [0x04006376] 	      4084	normal.c	FUNCTION_36
0x6336	    0x488905000000	            mov qword [0x0400637d], rax 	      4084	normal.c	FUNCTION_36
0x633d	      0xe984010000	                           jmp 0x4006506	      4084	normal.c	FUNCTION_36
0x6342	    0x488b05000000	            mov rax, qword [0x04006389] 	      4086	normal.c	FUNCTION_36	FUNCTION_1
0x6349	        0x488b4008	                mov rax, qword [rax + 8]	      4086	normal.c	FUNCTION_36	FUNCTION_1
0x634d	    0x488905000000	            mov qword [0x04006394], rax 	      4086	normal.c	FUNCTION_36	FUNCTION_1
0x6354	    0x488b05000000	            mov rax, qword [0x0400639b] 	      4088	normal.c	FUNCTION_36	FUNCTION_1	IF_1
0x635b	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4088	normal.c	FUNCTION_36	FUNCTION_1	IF_1
0x635f	     0xf844f010000	                            je 0x40064f4	      4088	normal.c	FUNCTION_36	FUNCTION_1	IF_1
0x6365	    0x488b05000000	            mov rax, qword [0x040063ac] 	      4088	normal.c	FUNCTION_36	FUNCTION_1	IF_1
0x636c	    0x8b8088020000	           mov eax, dword [rax + 0x288] 	      4088	normal.c	FUNCTION_36	FUNCTION_1	IF_1
0x6372	            0x85c0	                           test eax, eax	      4088	normal.c	FUNCTION_36	FUNCTION_1	IF_1
0x6374	     0xf843a010000	                            je 0x40064f4	      4088	normal.c	FUNCTION_36	FUNCTION_1	IF_1
0x637a	        0x837dd800	               cmp dword [rbp - 0x28], 0	      4093	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2
0x637e	     0xf8403010000	                            je 0x40064c7	      4093	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2
0x6384	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4096	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3
0x6388	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      4096	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3
0x638e	            0x85c0	                           test eax, eax	      4096	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3
0x6390	            0x742c	                            je 0x40063fe	      4096	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3
0x6392	    0x488b05000000	            mov rax, qword [0x040063d9] 	      4096	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3
0x6399	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      4096	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3
0x639f	            0x85c0	                           test eax, eax	      4096	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3
0x63a1	            0x741b	                            je 0x40063fe	      4096	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3
0x63a3	    0x488b15000000	            mov rdx, qword [0x040063ea] 	      4098	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3	CALL_1
0x63aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4098	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3	CALL_1
0x63ae	          0x4889d6	                            mov rsi, rdx	      4098	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3	CALL_1
0x63b1	          0x4889c7	                            mov rdi, rax	      4098	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3	CALL_1
0x63b4	      0xe800000000	                          call 0x40063f9	      4098	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3	CALL_1
0x63b9	      0xe9a9000000	                           jmp 0x40064a7	      4098	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	IF_3	CALL_1
0x63be	    0x488b05000000	            mov rax, qword [0x04006405] 	      4103	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x63c5	    0x488b15000000	            mov rdx, qword [0x0400640c] 	      4103	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x63cc	    0x488b8a500500	           mov rcx, qword [rdx + 0x550] 	      4103	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x63d3	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4103	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x63d7	          0x4801ca	                            add rdx, rcx	      4103	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x63da	    0x488990500500	            mov qword [rax + 0x550], rdx	      4103	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x63e1	    0x488b05000000	            mov rax, qword [0x04006428] 	      4104	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x63e8	    0x488b80500500	           mov rax, qword [rax + 0x550] 	      4104	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x63ef	        0x488945e0	             mov qword [rbp - 0x20], rax	      4104	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x63f3	    0x488b05000000	            mov rax, qword [0x0400643a] 	      4105	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4
0x63fa	          0x488b00	                    mov rax, qword [rax]	      4105	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4
0x63fd	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      4105	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4
0x6401	            0x7d0e	                           jge 0x4006451	      4105	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4
0x6403	    0x488b05000000	            mov rax, qword [0x0400644a] 	      4106	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4
0x640a	          0x488b00	                    mov rax, qword [rax]	      4106	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4
0x640d	        0x488945e0	             mov qword [rbp - 0x20], rax	      4106	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4
0x6411	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4107	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_5
0x6416	            0x7f08	                            jg 0x4006460	      4107	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_5
0x6418	    0x48c745e00100	               mov qword [rbp - 0x20], 1	      4108	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_5
0x6420	    0x488b05000000	            mov rax, qword [0x04006467] 	      4110	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x6427	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4110	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x642b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4110	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x642f	          0x4829c2	                            sub rdx, rax	      4110	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x6432	          0x4889d0	                            mov rax, rdx	      4110	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x6435	        0x488945f8	                mov qword [rbp - 8], rax	      4110	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1
0x6439	      0x48837df800	                  cmp qword [rbp - 8], 0	      4111	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_6
0x643e	            0x7e13	                           jle 0x4006493	      4111	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_6
0x6440	        0x488b45f8	                mov rax, qword [rbp - 8]	      4112	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_2
0x6444	      0xbe00000000	                              mov esi, 0	      4112	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_2
0x6449	          0x4889c7	                            mov rdi, rax	      4112	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_2
0x644c	      0xe800000000	                          call 0x4006491	      4112	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_2
0x6451	            0xeb14	                           jmp 0x40064a7	      4112	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_2
0x6453	        0x488b45f8	                mov rax, qword [rbp - 8]	      4114	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_3
0x6457	          0x48f7d8	                                 neg rax	      4114	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_3
0x645a	      0xbe00000000	                              mov esi, 0	      4114	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_3
0x645f	          0x4889c7	                            mov rdi, rax	      4114	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_3
0x6462	      0xe800000000	                          call 0x40064a7	      4114	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	ELSE_1	CALL_3
0x6467	      0xbf0a000000	                            mov edi, 0xa	      4117	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	CALL_4
0x646c	      0xe800000000	                          call 0x40064b1	      4117	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	CALL_4
0x6471	      0xe800000000	                          call 0x40064b6	      4118	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2	CALL_5
0x6476	    0x488b05000000	            mov rax, qword [0x040064bd] 	      4119	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2
0x647d	    0xc78040010000	              mov dword [rax + 0x140], 1	      4119	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_2
0x6487	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4125	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7
0x648b	            0x7427	                            je 0x40064f4	      4125	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7
0x648d	    0x488b05000000	            mov rax, qword [0x040064d4] 	      4125	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7
0x6494	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      4125	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7
0x649a	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      4125	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7
0x649d	            0x7415	                            je 0x40064f4	      4125	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7
0x649f	    0x488b05000000	            mov rax, qword [0x040064e6] 	      4127	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7
0x64a6	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      4127	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7
0x64a9	    0x899094000000	             mov dword [rax + 0x94], edx	      4127	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7
0x64af	      0xe800000000	                          call 0x40064f4	      4128	normal.c	FUNCTION_36	FUNCTION_1	IF_1	IF_7	CALL_6
0x64b4	    0x488b05000000	            mov rax, qword [0x040064fb] 	      4084	normal.c	FUNCTION_36
0x64bb	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4084	normal.c	FUNCTION_36
0x64bf	    0x488905000000	            mov qword [0x04006506], rax 	      4084	normal.c	FUNCTION_36
0x64c6	    0x488b05000000	            mov rax, qword [0x0400650d] 	      4084	normal.c	FUNCTION_36
0x64cd	          0x4885c0	                           test rax, rax	      4084	normal.c	FUNCTION_36
0x64d0	     0xf856cfeffff	                           jne 0x4006382	      4084	normal.c	FUNCTION_36
0x64d6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4136	normal.c	FUNCTION_36
0x64d9	    0x890500000000	            mov dword [0x0400651f], eax 	      4136	normal.c	FUNCTION_36
0x64df	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      4137	normal.c	FUNCTION_36
0x64e2	    0x890500000000	            mov dword [0x04006528], eax 	      4137	normal.c	FUNCTION_36
0x64e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4138	normal.c	FUNCTION_36
0x64ec	    0x488905000000	            mov qword [0x04006533], rax 	      4138	normal.c	FUNCTION_36
0x64f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4139	normal.c	FUNCTION_36
0x64f7	    0x488905000000	            mov qword [0x0400653e], rax 	      4139	normal.c	FUNCTION_36
0x64fe	              0x90	                                     nop	      4140	normal.c	FUNCTION_36
0x64ff	              0xc9	                                   leave	      4140	normal.c	FUNCTION_36
0x6500	              0xc3	                                     ret	      4140	normal.c	FUNCTION_36
reset_VIsual	CALL,2:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	12
0x504f	              0x55	                                push rbp	      3358	normal.c	FUNCTION_16
0x5050	          0x4889e5	                            mov rbp, rsp	      3358	normal.c	FUNCTION_16
0x5053	    0x8b0500000000	            mov eax, dword [0x04005099] 	      3359	normal.c	FUNCTION_16	IF_1
0x5059	            0x85c0	                           test eax, eax	      3359	normal.c	FUNCTION_16	IF_1
0x505b	            0x7419	                            je 0x40050b6	      3359	normal.c	FUNCTION_16	IF_1
0x505d	      0xe800000000	                          call 0x40050a2	      3361	normal.c	FUNCTION_16	IF_1	CALL_1
0x5062	      0xbf14000000	                           mov edi, 0x14	      3362	normal.c	FUNCTION_16	IF_1	CALL_2
0x5067	      0xe800000000	                          call 0x40050ac	      3362	normal.c	FUNCTION_16	IF_1	CALL_2
0x506c	    0xc70500000000	               mov dword [0x040050b6], 0	      3363	normal.c	FUNCTION_16	IF_1
0x5076	              0x90	                                     nop	      3365	normal.c	FUNCTION_16
0x5077	              0x5d	                                 pop rbp	      3365	normal.c	FUNCTION_16
0x5078	              0xc3	                                     ret	      3365	normal.c	FUNCTION_16
nv_mouse	CALL,1:ELSE,0:DO,0:FOR,0:functions,0:IF,0:WHILE,0:SWITCH,0	18
0x7364	              0x55	                                push rbp	      4682	normal.c	FUNCTION_48
0x7365	          0x4889e5	                            mov rbp, rsp	      4682	normal.c	FUNCTION_48
0x7368	        0x4883ec10	                           sub rsp, 0x10	      4682	normal.c	FUNCTION_48
0x736c	        0x48897df8	                mov qword [rbp - 8], rdi	      4682	normal.c	FUNCTION_48
0x7370	        0x488b45f8	                mov rax, qword [rbp - 8]	      4683	normal.c	FUNCTION_48	CALL_1
0x7374	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4683	normal.c	FUNCTION_48	CALL_1
0x7378	        0x488b45f8	                mov rax, qword [rbp - 8]	      4683	normal.c	FUNCTION_48	CALL_1
0x737c	          0x8b700c	              mov esi, dword [rax + 0xc]	      4683	normal.c	FUNCTION_48	CALL_1
0x737f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4683	normal.c	FUNCTION_48	CALL_1
0x7383	          0x488b00	                    mov rax, qword [rax]	      4683	normal.c	FUNCTION_48	CALL_1
0x7386	    0x41b800000000	                              mov r8d, 0	      4683	normal.c	FUNCTION_48	CALL_1
0x738c	          0x4889d1	                            mov rcx, rdx	      4683	normal.c	FUNCTION_48	CALL_1
0x738f	      0xbaffffffff	                     mov edx, 0xffffffff	      4683	normal.c	FUNCTION_48	CALL_1
0x7394	          0x4889c7	                            mov rdi, rax	      4683	normal.c	FUNCTION_48	CALL_1
0x7397	      0xe800000000	                          call 0x40073dc	      4683	normal.c	FUNCTION_48	CALL_1
0x739c	              0x90	                                     nop	      4684	normal.c	FUNCTION_48
0x739d	              0xc9	                                   leave	      4684	normal.c	FUNCTION_48
0x739e	              0xc3	                                     ret	      4684	normal.c	FUNCTION_48
nv_left	CALL,10:ELSE,2:DO,0:FOR,1:functions,0:IF,9:WHILE,0:SWITCH,0	161
0x9eef	              0x55	                                push rbp	      6096	normal.c	FUNCTION_71
0x9ef0	          0x4889e5	                            mov rbp, rsp	      6096	normal.c	FUNCTION_71
0x9ef3	        0x4883ec20	                           sub rsp, 0x20	      6096	normal.c	FUNCTION_71
0x9ef7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6096	normal.c	FUNCTION_71
0x9efb	    0x8b0500000000	            mov eax, dword [0x04009f41] 	      6099	normal.c	FUNCTION_71	IF_1
0x9f01	          0x83e006	                              and eax, 6	      6099	normal.c	FUNCTION_71	IF_1
0x9f04	            0x85c0	                           test eax, eax	      6099	normal.c	FUNCTION_71	IF_1
0x9f06	            0x7429	                            je 0x4009f71	      6099	normal.c	FUNCTION_71	IF_1
0x9f08	    0x8b0500000000	            mov eax, dword [0x04009f4e] 	      6102	normal.c	FUNCTION_71	IF_1	IF_2
0x9f0e	          0x83e004	                              and eax, 4	      6102	normal.c	FUNCTION_71	IF_1	IF_2
0x9f11	            0x85c0	                           test eax, eax	      6102	normal.c	FUNCTION_71	IF_1	IF_2
0x9f13	            0x740b	                            je 0x4009f60	      6102	normal.c	FUNCTION_71	IF_1	IF_2
0x9f15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6103	normal.c	FUNCTION_71	IF_1	IF_2
0x9f19	    0xc74038010000	               mov dword [rax + 0x38], 1	      6103	normal.c	FUNCTION_71	IF_1	IF_2
0x9f20	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6104	normal.c	FUNCTION_71	IF_1	CALL_1
0x9f24	          0x4889c7	                            mov rdi, rax	      6104	normal.c	FUNCTION_71	IF_1	CALL_1
0x9f27	      0xe8ac4e0000	                    call sym.nv_bck_word	      6104	normal.c	FUNCTION_71	IF_1	CALL_1
0x9f2c	      0xe919020000	                           jmp 0x400a18a	      6105	normal.c	FUNCTION_71	IF_1
0x9f31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6108	normal.c	FUNCTION_71
0x9f35	          0x488b00	                    mov rax, qword [rax]	      6108	normal.c	FUNCTION_71
0x9f38	    0xc74008000000	                  mov dword [rax + 8], 0	      6108	normal.c	FUNCTION_71
0x9f3f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6109	normal.c	FUNCTION_71
0x9f43	          0x488b00	                    mov rax, qword [rax]	      6109	normal.c	FUNCTION_71
0x9f46	    0xc74014000000	               mov dword [rax + 0x14], 0	      6109	normal.c	FUNCTION_71
0x9f4d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6110	normal.c	FUNCTION_71	FOR_1
0x9f51	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6110	normal.c	FUNCTION_71	FOR_1
0x9f55	        0x488945f0	             mov qword [rbp - 0x10], rax	      6110	normal.c	FUNCTION_71	FOR_1
0x9f59	      0xe9a7010000	                           jmp 0x400a145	      6110	normal.c	FUNCTION_71	FOR_1
0x9f5e	      0xe800000000	                          call 0x4009fa3	      6112	normal.c	FUNCTION_71	FOR_1	IF_3	CALL_2
0x9f63	            0x85c0	                           test eax, eax	      6112	normal.c	FUNCTION_71	FOR_1	IF_3	CALL_2
0x9f65	     0xf8595010000	                           jne 0x400a140	      6112	normal.c	FUNCTION_71	FOR_1	IF_3	CALL_2
0x9f6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6118	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9f6f	          0x8b400c	              mov eax, dword [rax + 0xc]	      6118	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9f72	      0x3d959dffff	                     cmp eax, 0xffff9d95	      6118	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9f77	            0x740c	                            je 0x4009fc5	      6118	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9f79	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6119	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9f7d	          0x8b400c	              mov eax, dword [rax + 0xc]	      6119	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9f80	          0x83f808	                              cmp eax, 8	      6119	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9f83	            0x7519	                           jne 0x4009fde	      6119	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9f85	    0x488b05000000	            mov rax, qword [0x04009fcc] 	      6120	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_3
0x9f8c	      0xbe62000000	                           mov esi, 0x62	      6120	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_3
0x9f91	          0x4889c7	                            mov rdi, rax	      6120	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_3
0x9f94	      0xe800000000	                          call 0x4009fd9	      6120	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_3
0x9f99	          0x4885c0	                           test rax, rax	      6120	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_3
0x9f9c	            0x7554	                           jne 0x400a032	      6120	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_3
0x9f9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6121	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9fa2	          0x8b400c	              mov eax, dword [rax + 0xc]	      6121	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9fa5	          0x83f868	                           cmp eax, 0x68	      6121	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9fa8	            0x7519	                           jne 0x400a003	      6121	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9faa	    0x488b05000000	            mov rax, qword [0x04009ff1] 	      6122	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_4
0x9fb1	      0xbe68000000	                           mov esi, 0x68	      6122	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_4
0x9fb6	          0x4889c7	                            mov rdi, rax	      6122	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_4
0x9fb9	      0xe800000000	                          call 0x4009ffe	      6122	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_4
0x9fbe	          0x4885c0	                           test rax, rax	      6122	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_4
0x9fc1	            0x752f	                           jne 0x400a032	      6122	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_4
0x9fc3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6123	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9fc7	          0x8b400c	              mov eax, dword [rax + 0xc]	      6123	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9fca	      0x3d9593ffff	                     cmp eax, 0xffff9395	      6123	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9fcf	     0xf8508010000	                           jne 0x400a11d	      6123	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9fd5	    0x488b05000000	            mov rax, qword [0x0400a01c] 	      6124	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_5
0x9fdc	      0xbe3c000000	                           mov esi, 0x3c	      6124	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_5
0x9fe1	          0x4889c7	                            mov rdi, rax	      6124	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_5
0x9fe4	      0xe800000000	                          call 0x400a029	      6124	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_5
0x9fe9	          0x4885c0	                           test rax, rax	      6124	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_5
0x9fec	     0xf84eb000000	                            je 0x400a11d	      6124	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_5
0x9ff2	    0x488b05000000	            mov rax, qword [0x0400a039] 	      6125	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9ff9	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6125	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0x9ffd	        0x4883f801	                              cmp rax, 1	      6125	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0xa001	     0xf8ed6000000	                           jle 0x400a11d	      6125	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0xa007	    0x488b05000000	            mov rax, qword [0x0400a04e] 	      6127	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0xa00e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      6127	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0xa012	        0x4883ea01	                              sub rdx, 1	      6127	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0xa016	        0x48895038	             mov qword [rax + 0x38], rdx	      6127	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0xa01a	      0xbfffffff7f	                     mov edi, 0x7fffffff	      6128	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_6
0xa01f	      0xe800000000	                          call 0x400a064	      6128	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	CALL_6
0xa024	    0x488b05000000	            mov rax, qword [0x0400a06b] 	      6129	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0xa02b	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6129	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0xa032	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6135	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa036	          0x488b00	                    mov rax, qword [rax]	      6135	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa039	            0x8b00	                    mov eax, dword [rax]	      6135	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa03b	          0x83f801	                              cmp eax, 1	      6135	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa03e	            0x7412	                            je 0x400a092	      6135	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa040	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6136	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa044	          0x488b00	                    mov rax, qword [rax]	      6136	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa047	            0x8b00	                    mov eax, dword [rax]	      6136	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa049	          0x83f803	                              cmp eax, 3	      6136	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa04c	     0xf85ad000000	                           jne 0x400a13f	      6136	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa052	    0x488b05000000	            mov rax, qword [0x0400a099] 	      6137	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	CALL_7
0xa059	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6137	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	CALL_7
0xa05d	          0x4889c7	                            mov rdi, rax	      6137	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	CALL_7
0xa060	      0xe800000000	                          call 0x400a0a5	      6137	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	CALL_7
0xa065	           0xfb600	                   movzx eax, byte [rax]	      6137	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	CALL_7
0xa068	            0x84c0	                             test al, al	      6137	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	CALL_7
0xa06a	     0xf848f000000	                            je 0x400a13f	      6137	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	CALL_7
0xa070	      0xe800000000	                          call 0x400a0b5	      6139	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	CALL_8
0xa075	        0x488945f8	                mov qword [rbp - 8], rax	      6139	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	CALL_8
0xa079	        0x488b45f8	                mov rax, qword [rbp - 8]	      6141	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6
0xa07d	           0xfb600	                   movzx eax, byte [rax]	      6141	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6
0xa080	            0x84c0	                             test al, al	      6141	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6
0xa082	            0x7444	                            je 0x400a108	      6141	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6
0xa084	    0x8b0500000000	            mov eax, dword [0x0400a0ca] 	      6144	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0xa08a	            0x85c0	                           test eax, eax	      6144	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0xa08c	            0x742a	                            je 0x400a0f8	      6144	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0xa08e	    0x488b05000000	            mov rax, qword [0x0400a0d5] 	      6145	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0xa095	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6145	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0xa099	          0x4889d7	                            mov rdi, rdx	      6145	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0xa09c	            0xffd0	                                call rax	      6145	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0xa09e	            0x89c1	                            mov ecx, eax	      6145	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0xa0a0	    0x488b05000000	            mov rax, qword [0x0400a0e7] 	      6145	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0xa0a7	    0x488b15000000	            mov rdx, qword [0x0400a0ee] 	      6145	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0xa0ae	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      6145	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0xa0b1	             0x1ca	                            add edx, ecx	      6145	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0xa0b3	          0x895040	             mov dword [rax + 0x40], edx	      6145	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0xa0b6	            0xeb10	                           jmp 0x400a108	      6145	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	IF_7
0xa0b8	    0x488b05000000	            mov rax, qword [0x0400a0ff] 	      6148	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	ELSE_1
0xa0bf	          0x8b5040	            mov edx, dword [rax + 0x40] 	      6148	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	ELSE_1
0xa0c2	          0x83c201	                              add edx, 1	      6148	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	ELSE_1
0xa0c5	          0x895040	             mov dword [rax + 0x40], edx	      6148	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5	IF_6	ELSE_1
0xa0c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6150	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa0cc	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      6150	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa0cf	          0x83c802	                               or eax, 2	      6150	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa0d2	            0x89c2	                            mov edx, eax	      6150	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa0d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6150	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa0d8	          0x89503c	             mov dword [rax + 0x3c], edx	      6150	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4	IF_5
0xa0db	            0xeb22	                           jmp 0x400a13f	      6152	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0xa0dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6155	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0xa0e1	          0x488b00	                    mov rax, qword [rax]	      6155	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0xa0e4	            0x8b00	                    mov eax, dword [rax]	      6155	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0xa0e6	            0x85c0	                           test eax, eax	      6155	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0xa0e8	            0x7528	                           jne 0x400a152	      6155	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0xa0ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6155	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0xa0ee	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6155	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0xa0f2	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      6155	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0xa0f6	            0x751a	                           jne 0x400a152	      6155	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0xa0f8	      0xe800000000	                          call 0x400a13d	      6156	normal.c	FUNCTION_71	FOR_1	IF_3	ELSE_2	IF_8
0xa0fd	            0xeb13	                           jmp 0x400a152	      6157	normal.c	FUNCTION_71	FOR_1	IF_3
0xa0ff	              0x90	                                     nop	      6152	normal.c	FUNCTION_71	FOR_1	IF_3	IF_4
0xa100	      0x48836df001	               sub qword [rbp - 0x10], 1	      6110	normal.c	FUNCTION_71	FOR_1
0xa105	      0x48837df000	               cmp qword [rbp - 0x10], 0	      6110	normal.c	FUNCTION_71	FOR_1
0xa10a	     0xf8f4efeffff	                            jg 0x4009f9e	      6110	normal.c	FUNCTION_71	FOR_1
0xa110	            0xeb01	                           jmp 0x400a153	      6110	normal.c	FUNCTION_71	FOR_1
0xa112	              0x90	                                     nop	      6157	normal.c	FUNCTION_71	FOR_1	IF_3
0xa113	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6161	normal.c	FUNCTION_71	IF_9
0xa117	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6161	normal.c	FUNCTION_71	IF_9
0xa11b	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      6161	normal.c	FUNCTION_71	IF_9
0xa11f	            0x7429	                            je 0x400a18a	      6161	normal.c	FUNCTION_71	IF_9
0xa121	    0x8b0500000000	            mov eax, dword [0x0400a167] 	      6161	normal.c	FUNCTION_71	IF_9
0xa127	          0x83e004	                              and eax, 4	      6161	normal.c	FUNCTION_71	IF_9
0xa12a	            0x85c0	                           test eax, eax	      6161	normal.c	FUNCTION_71	IF_9
0xa12c	            0x741c	                            je 0x400a18a	      6161	normal.c	FUNCTION_71	IF_9
0xa12e	    0x8b0500000000	            mov eax, dword [0x0400a174] 	      6161	normal.c	FUNCTION_71	IF_9
0xa134	            0x85c0	                           test eax, eax	      6161	normal.c	FUNCTION_71	IF_9
0xa136	            0x7412	                            je 0x400a18a	      6161	normal.c	FUNCTION_71	IF_9
0xa138	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6162	normal.c	FUNCTION_71	IF_9
0xa13c	          0x488b00	                    mov rax, qword [rax]	      6162	normal.c	FUNCTION_71	IF_9
0xa13f	            0x8b00	                    mov eax, dword [rax]	      6162	normal.c	FUNCTION_71	IF_9
0xa141	            0x85c0	                           test eax, eax	      6162	normal.c	FUNCTION_71	IF_9
0xa143	            0x7505	                           jne 0x400a18a	      6162	normal.c	FUNCTION_71	IF_9
0xa145	      0xe800000000	                          call 0x400a18a	      6163	normal.c	FUNCTION_71	CALL_10
0xa14a	              0xc9	                                   leave	      6165	normal.c	FUNCTION_71
0xa14b	              0xc3	                                     ret	      6165	normal.c	FUNCTION_71
nv_g_cmd	CALL,89:ELSE,13:DO,1:FOR,0:functions,0:IF,35:WHILE,1:SWITCH,1	1045
0xd669	              0x55	                                push rbp	      7880	normal.c	FUNCTION_107
0xd66a	          0x4889e5	                            mov rbp, rsp	      7880	normal.c	FUNCTION_107
0xd66d	              0x53	                                push rbx	      7880	normal.c	FUNCTION_107
0xd66e	        0x4883ec58	                           sub rsp, 0x58	      7880	normal.c	FUNCTION_107
0xd672	        0x48897da8	             mov qword [rbp - 0x58], rdi	      7880	normal.c	FUNCTION_107
0xd676	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7881	normal.c	FUNCTION_107
0xd67a	          0x488b00	                    mov rax, qword [rax]	      7881	normal.c	FUNCTION_107
0xd67d	        0x488945d0	             mov qword [rbp - 0x30], rax	      7881	normal.c	FUNCTION_107
0xd681	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      7884	normal.c	FUNCTION_107
0xd688	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd68c	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd68f	          0x83f83c	                           cmp eax, 0x3c	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd692	     0xf84390f0000	                            je 0x400e611	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd698	          0x83f83c	                           cmp eax, 0x3c	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd69b	     0xf8f4d020000	                            jg 0x400d92e	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6a1	      0x3d03cfffff	                     cmp eax, 0xffffcf03	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6a6	     0xf849b0f0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6ac	      0x3d03cfffff	                     cmp eax, 0xffffcf03	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6b1	     0xf8f2e010000	                            jg 0x400d825	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6b7	      0x3d03a5ffff	                     cmp eax, 0xffffa503	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6bc	     0xf84850f0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6c2	      0x3d03a5ffff	                     cmp eax, 0xffffa503	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6c7	     0xf8f8c000000	                            jg 0x400d799	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6cd	      0x3d959dffff	                     cmp eax, 0xffff9d95	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6d2	     0xf84fa060000	                            je 0x400de12	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6d8	      0x3d959dffff	                     cmp eax, 0xffff9d95	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6dd	            0x7f3d	                            jg 0x400d75c	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6df	      0x3d9597ffff	                     cmp eax, 0xffff9795	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6e4	     0xf84a5080000	                            je 0x400dfcf	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6ea	      0x3d9597ffff	                     cmp eax, 0xffff9795	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6ef	            0x7f10	                            jg 0x400d741	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6f1	      0x3d958affff	                     cmp eax, 0xffff8a95	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6f6	     0xf84e2070000	                            je 0x400df1e	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd6fc	      0xe9ba100000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd701	      0x3d039bffff	                     cmp eax, 0xffff9b03	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd706	     0xf843b0f0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd70c	      0x3d959bffff	                     cmp eax, 0xffff9b95	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd711	     0xf842e070000	                            je 0x400de85	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd717	      0xe99f100000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd71c	      0x3d03a2ffff	                     cmp eax, 0xffffa203	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd721	     0xf84200f0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd727	      0x3d03a2ffff	                     cmp eax, 0xffffa203	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd72c	            0x7f10	                            jg 0x400d77e	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd72e	      0x3d03a1ffff	                     cmp eax, 0xffffa103	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd733	     0xf840e0f0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd739	      0xe97d100000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd73e	      0x3d03a3ffff	                     cmp eax, 0xffffa303	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd743	     0xf84fe0e0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd749	      0x3d03a4ffff	                     cmp eax, 0xffffa403	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd74e	     0xf84f30e0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd754	      0xe962100000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd759	      0x3db5cbffff	                     cmp eax, 0xffffcbb5	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd75e	     0xf849c0a0000	                            je 0x400e240	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd764	      0x3db5cbffff	                     cmp eax, 0xffffcbb5	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd769	            0x7f3d	                            jg 0x400d7e8	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd76b	      0x3dc0c8ffff	                     cmp eax, 0xffffc8c0	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd770	     0xf848a0a0000	                            je 0x400e240	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd776	      0x3dc0c8ffff	                     cmp eax, 0xffffc8c0	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd77b	            0x7f10	                            jg 0x400d7cd	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd77d	      0x3d03a6ffff	                     cmp eax, 0xffffa603	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd782	     0xf84bf0e0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd788	      0xe92e100000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd78d	      0x3d03caffff	                     cmp eax, 0xffffca03	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd792	     0xf8431100000	                            je 0x400e809	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd798	      0x3d03cbffff	                     cmp eax, 0xffffcb03	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd79d	     0xf84a40e0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7a3	      0xe913100000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7a8	      0x3d03cdffff	                     cmp eax, 0xffffcd03	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7ad	     0xf84940e0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7b3	      0x3d03cdffff	                     cmp eax, 0xffffcd03	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7b8	            0x7f10	                            jg 0x400d80a	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7ba	      0x3d03ccffff	                     cmp eax, 0xffffcc03	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7bf	     0xf84820e0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7c5	      0xe9f10f0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7ca	      0x3d03ceffff	                     cmp eax, 0xffffce03	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7cf	     0xf84720e0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7d5	      0x3db5ceffff	                     cmp eax, 0xffffceb5	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7da	     0xf84af070000	                            je 0x400dfcf	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7e0	      0xe9d60f0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7e5	          0x83f823	                           cmp eax, 0x23	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7e8	     0xf84f30b0000	                            je 0x400e421	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7ee	          0x83f823	                           cmp eax, 0x23	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7f1	            0x7f7e	                            jg 0x400d8b1	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7f3	          0x83f801	                              cmp eax, 1	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7f6	     0xf84cc020000	                            je 0x400db08	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7fc	          0x83f801	                              cmp eax, 1	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd7ff	            0x7f3d	                            jg 0x400d87e	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd801	      0x3d03d1ffff	                     cmp eax, 0xffffd103	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd806	     0xf843b0e0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd80c	      0x3d03d1ffff	                     cmp eax, 0xffffd103	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd811	            0x7f10	                            jg 0x400d863	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd813	      0x3d03d0ffff	                     cmp eax, 0xffffd003	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd818	     0xf84290e0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd81e	      0xe9980f0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd823	      0x3d03d2ffff	                     cmp eax, 0xffffd203	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd828	     0xf84190e0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd82e	      0x3d03d3ffff	                     cmp eax, 0xffffd303	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd833	     0xf840e0e0000	                            je 0x400e687	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd839	      0xe97d0f0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd83e	          0x83f808	                              cmp eax, 8	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd841	     0xf8496050000	                            je 0x400de1d	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd847	          0x83f808	                              cmp eax, 8	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd84a	            0x7f0e	                            jg 0x400d89a	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd84c	          0x83f807	                              cmp eax, 7	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd84f	     0xf84010c0000	                            je 0x400e496	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd855	      0xe9610f0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd85a	          0x83f818	                           cmp eax, 0x18	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd85d	     0xf8465020000	                            je 0x400db08	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd863	          0x83f81d	                           cmp eax, 0x1d	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd866	     0xf84750b0000	                            je 0x400e421	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd86c	      0xe94a0f0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd871	          0x83f82b	                           cmp eax, 0x2b	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd874	     0xf84f70e0000	                            je 0x400e7b1	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd87a	          0x83f82b	                           cmp eax, 0x2b	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd87d	            0x7f33	                            jg 0x400d8f2	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd87f	          0x83f826	                           cmp eax, 0x26	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd882	     0xf84bd020000	                            je 0x400db85	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd888	          0x83f826	                           cmp eax, 0x26	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd88b	            0x7f0e	                            jg 0x400d8db	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd88d	          0x83f824	                           cmp eax, 0x24	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd890	     0xf846a090000	                            je 0x400e240	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd896	      0xe9200f0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd89b	          0x83f827	                           cmp eax, 0x27	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd89e	     0xf84c40c0000	                            je 0x400e5a8	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8a4	          0x83f82a	                           cmp eax, 0x2a	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8a7	     0xf84340b0000	                            je 0x400e421	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8ad	      0xe9090f0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8b2	          0x83f830	                           cmp eax, 0x30	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8b5	     0xf84d4060000	                            je 0x400dfcf	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8bb	          0x83f830	                           cmp eax, 0x30	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8be	            0x7f17	                            jg 0x400d917	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8c0	          0x83f82c	                           cmp eax, 0x2c	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8c3	     0xf84210e0000	                            je 0x400e72a	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8c9	          0x83f82d	                           cmp eax, 0x2d	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8cc	     0xf849f0e0000	                            je 0x400e7b1	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8d2	      0xe9e40e0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8d7	          0x83f838	                           cmp eax, 0x38	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8da	     0xf84cf0c0000	                            je 0x400e5ef	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8e0	          0x83f83b	                           cmp eax, 0x3b	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8e3	     0xf84120e0000	                            je 0x400e73b	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8e9	      0xe9cd0e0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8ee	          0x83f864	                           cmp eax, 0x64	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8f1	     0xf842c0d0000	                            je 0x400e663	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8f7	          0x83f864	                           cmp eax, 0x64	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd8fa	     0xf8fe5000000	                            jg 0x400da25	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd900	          0x83f850	                           cmp eax, 0x50	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd903	     0xf84760d0000	                            je 0x400e6bf	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd909	          0x83f850	                           cmp eax, 0x50	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd90c	            0x7f64	                            jg 0x400d9b2	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd90e	          0x83f846	                           cmp eax, 0x46	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd911	     0xf84400c0000	                            je 0x400e597	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd917	          0x83f846	                           cmp eax, 0x46	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd91a	            0x7f23	                            jg 0x400d97f	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd91c	          0x83f844	                           cmp eax, 0x44	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd91f	     0xf84fe0c0000	                            je 0x400e663	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd925	          0x83f844	                           cmp eax, 0x44	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd928	     0xf8fc40a0000	                            jg 0x400e432	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd92e	          0x83e83f	                           sub eax, 0x3f	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd931	          0x83f801	                              cmp eax, 1	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd934	     0xf87810e0000	                            ja 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd93a	      0xe9d30c0000	                           jmp 0x400e652	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd93f	          0x83f849	                           cmp eax, 0x49	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd942	     0xf84d10b0000	                            je 0x400e559	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd948	          0x83f849	                           cmp eax, 0x49	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd94b	            0x7f0e	                            jg 0x400d99b	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd94d	          0x83f848	                           cmp eax, 0x48	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd950	     0xf8487040000	                            je 0x400de1d	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd956	      0xe9600e0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd95b	          0x83f84a	                           cmp eax, 0x4a	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd95e	     0xf8413060000	                            je 0x400dfb7	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd964	          0x83f84e	                           cmp eax, 0x4e	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd967	     0xf849d040000	                            je 0x400de4a	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd96d	      0xe9490e0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd972	          0x83f856	                           cmp eax, 0x56	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd975	     0xf8448040000	                            je 0x400de03	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd97b	          0x83f856	                           cmp eax, 0x56	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd97e	            0x7f29	                            jg 0x400d9e9	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd980	          0x83f852	                           cmp eax, 0x52	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd983	     0xf848f010000	                            je 0x400db58	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd989	          0x83f852	                           cmp eax, 0x52	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd98c	     0xf8c130d0000	                            jl 0x400e6e5	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd992	          0x83f854	                           cmp eax, 0x54	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd995	     0xf84af0d0000	                            je 0x400e78a	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd99b	          0x83f855	                           cmp eax, 0x55	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd99e	     0xf846e0c0000	                            je 0x400e652	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9a4	      0xe9120e0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9a9	          0x83f85f	                           cmp eax, 0x5f	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9ac	     0xf842e070000	                            je 0x400e120	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9b2	          0x83f85f	                           cmp eax, 0x5f	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9b5	            0x7f17	                            jg 0x400da0e	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9b7	          0x83f85d	                           cmp eax, 0x5d	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9ba	     0xf84210a0000	                            je 0x400e421	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9c0	          0x83f85e	                           cmp eax, 0x5e	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9c3	     0xf84bf050000	                            je 0x400dfc8	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9c9	      0xe9ed0d0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9ce	          0x83f860	                           cmp eax, 0x60	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9d1	     0xf849c0b0000	                            je 0x400e5b3	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9d7	          0x83f861	                           cmp eax, 0x61	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9da	     0xf84c00b0000	                            je 0x400e5e0	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9e0	      0xe9d60d0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9e5	          0x83f86f	                           cmp eax, 0x6f	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9e8	     0xf84a20c0000	                            je 0x400e6d0	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9ee	          0x83f86f	                           cmp eax, 0x6f	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9f1	            0x7f60	                            jg 0x400da93	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9f3	          0x83f869	                           cmp eax, 0x69	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9f6	     0xf84690a0000	                            je 0x400e4a5	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9fc	          0x83f869	                           cmp eax, 0x69	      7886	normal.c	FUNCTION_107	SWITCH_1
0xd9ff	            0x7f29	                            jg 0x400da6a	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda01	          0x83f866	                           cmp eax, 0x66	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda04	     0xf844d0b0000	                            je 0x400e597	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda0a	          0x83f866	                           cmp eax, 0x66	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda0d	     0xf8cdf090000	                            jl 0x400e432	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda13	          0x83f867	                           cmp eax, 0x67	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda16	     0xf84bf0b0000	                            je 0x400e61b	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda1c	          0x83f868	                           cmp eax, 0x68	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda1f	     0xf84b8030000	                            je 0x400de1d	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda25	      0xe9910d0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda2a	          0x83f86b	                           cmp eax, 0x6b	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda2d	     0xf84ab040000	                            je 0x400df1e	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda33	          0x83f86b	                           cmp eax, 0x6b	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda36	     0xf8c09040000	                            jl 0x400de85	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda3c	          0x83f86d	                           cmp eax, 0x6d	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda3f	     0xf844a050000	                            je 0x400dfcf	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda45	          0x83f86e	                           cmp eax, 0x6e	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda48	     0xf84bc030000	                            je 0x400de4a	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda4e	      0xe9680d0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda53	          0x83f874	                           cmp eax, 0x74	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda56	     0xf84c60c0000	                            je 0x400e762	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda5c	          0x83f874	                           cmp eax, 0x74	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda5f	            0x7f29	                            jg 0x400daca	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda61	          0x83f871	                           cmp eax, 0x71	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda64	     0xf848d0b0000	                            je 0x400e637	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda6a	          0x83f871	                           cmp eax, 0x71	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda6d	     0xf8c0c0c0000	                            jl 0x400e6bf	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda73	          0x83f872	                           cmp eax, 0x72	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda76	     0xf84b8000000	                            je 0x400db74	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda7c	          0x83f873	                           cmp eax, 0x73	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda7f	     0xf84ff0a0000	                            je 0x400e5c4	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda85	      0xe9310d0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda8a	          0x83f877	                           cmp eax, 0x77	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda8d	     0xf84640b0000	                            je 0x400e637	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda93	          0x83f877	                           cmp eax, 0x77	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda96	            0x7f17	                            jg 0x400daef	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda98	          0x83f875	                           cmp eax, 0x75	      7886	normal.c	FUNCTION_107	SWITCH_1
0xda9b	     0xf84710b0000	                            je 0x400e652	      7886	normal.c	FUNCTION_107	SWITCH_1
0xdaa1	          0x83f876	                           cmp eax, 0x76	      7886	normal.c	FUNCTION_107	SWITCH_1
0xdaa4	     0xf84aa000000	                            je 0x400db94	      7886	normal.c	FUNCTION_107	SWITCH_1
0xdaaa	      0xe90c0d0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xdaaf	          0x83f87e	                           cmp eax, 0x7e	      7886	normal.c	FUNCTION_107	SWITCH_1
0xdab2	     0xf845a0b0000	                            je 0x400e652	      7886	normal.c	FUNCTION_107	SWITCH_1
0xdab8	      0x3da3000000	                           cmp eax, 0xa3	      7886	normal.c	FUNCTION_107	SWITCH_1
0xdabd	     0xf841e090000	                            je 0x400e421	      7886	normal.c	FUNCTION_107	SWITCH_1
0xdac3	      0xe9f30c0000	                           jmp 0x400e7fb	      7886	normal.c	FUNCTION_107	SWITCH_1
0xdac8	    0x8b0500000000	            mov eax, dword [0x0400db0e] 	      7901	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0xdace	            0x85c0	                           test eax, eax	      7901	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0xdad0	            0x7435	                            je 0x400db47	      7901	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0xdad2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7903	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0xdad6	    0xc74038010000	               mov dword [rax + 0x38], 1	      7903	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0xdadd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7904	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0xdae1	          0x8b5010	            mov edx, dword [rax + 0x10] 	      7904	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0xdae4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7904	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0xdae8	          0x89500c	              mov dword [rax + 0xc], edx	      7904	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0xdaeb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7905	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0xdaef	    0xc74010000000	               mov dword [rax + 0x10], 0	      7905	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2
0xdaf6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7906	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2	CALL_2
0xdafa	          0x4889c7	                            mov rdi, rax	      7906	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2	CALL_2
0xdafd	      0xe8728affff	                      call sym.nv_addsub	      7906	normal.c	FUNCTION_107	SWITCH_1	ELSE_1	IF_2	CALL_2
0xdb02	      0xe9e10c0000	                           jmp 0x400e828	      7910	normal.c	FUNCTION_107	SWITCH_1
0xdb07	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7909	normal.c	FUNCTION_107	SWITCH_1	CALL_3
0xdb0b	          0x4889c7	                            mov rdi, rax	      7909	normal.c	FUNCTION_107	SWITCH_1	CALL_3
0xdb0e	      0xe8d57effff	                    call sym.clearopbeep	      7909	normal.c	FUNCTION_107	SWITCH_1	CALL_3
0xdb13	      0xe9d00c0000	                           jmp 0x400e828	      7910	normal.c	FUNCTION_107	SWITCH_1
0xdb18	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7917	normal.c	FUNCTION_107	SWITCH_1
0xdb1c	    0xc74038010000	               mov dword [rax + 0x38], 1	      7917	normal.c	FUNCTION_107	SWITCH_1
0xdb23	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7918	normal.c	FUNCTION_107	SWITCH_1	CALL_4
0xdb27	          0x4889c7	                            mov rdi, rax	      7918	normal.c	FUNCTION_107	SWITCH_1	CALL_4
0xdb2a	      0xe82eeaffff	                     call sym.nv_Replace	      7918	normal.c	FUNCTION_107	SWITCH_1	CALL_4
0xdb2f	      0xe9b40c0000	                           jmp 0x400e828	      7919	normal.c	FUNCTION_107	SWITCH_1
0xdb34	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7922	normal.c	FUNCTION_107	SWITCH_1	CALL_5
0xdb38	          0x4889c7	                            mov rdi, rax	      7922	normal.c	FUNCTION_107	SWITCH_1	CALL_5
0xdb3b	      0xe8eaeaffff	                    call sym.nv_vreplace	      7922	normal.c	FUNCTION_107	SWITCH_1	CALL_5
0xdb40	      0xe9a30c0000	                           jmp 0x400e828	      7923	normal.c	FUNCTION_107	SWITCH_1
0xdb45	      0xbf00000000	                              mov edi, 0	      7927	normal.c	FUNCTION_107	SWITCH_1	CALL_6
0xdb4a	      0xe800000000	                          call 0x400db8f	      7927	normal.c	FUNCTION_107	SWITCH_1	CALL_6
0xdb4f	      0xe9940c0000	                           jmp 0x400e828	      7928	normal.c	FUNCTION_107	SWITCH_1
0xdb54	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7935	normal.c	FUNCTION_107	SWITCH_1	IF_3	CALL_7
0xdb58	          0x4889c7	                            mov rdi, rax	      7935	normal.c	FUNCTION_107	SWITCH_1	IF_3	CALL_7
0xdb5b	      0xe8e87dffff	                   call sym.checkclearop	      7935	normal.c	FUNCTION_107	SWITCH_1	IF_3	CALL_7
0xdb60	            0x85c0	                           test eax, eax	      7935	normal.c	FUNCTION_107	SWITCH_1	IF_3	CALL_7
0xdb62	     0xf85640c0000	                           jne 0x400e80c	      7935	normal.c	FUNCTION_107	SWITCH_1	IF_3	CALL_7
0xdb68	    0x488b05000000	            mov rax, qword [0x0400dbaf] 	      7938	normal.c	FUNCTION_107	SWITCH_1	IF_4
0xdb6f	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      7938	normal.c	FUNCTION_107	SWITCH_1	IF_4
0xdb76	          0x4885c0	                           test rax, rax	      7938	normal.c	FUNCTION_107	SWITCH_1	IF_4
0xdb79	            0x7430	                            je 0x400dbeb	      7938	normal.c	FUNCTION_107	SWITCH_1	IF_4
0xdb7b	    0x488b05000000	            mov rax, qword [0x0400dbc2] 	      7939	normal.c	FUNCTION_107	SWITCH_1	IF_4
0xdb82	    0x488b90e80200	           mov rdx, qword [rax + 0x2e8] 	      7939	normal.c	FUNCTION_107	SWITCH_1	IF_4
0xdb89	    0x488b05000000	            mov rax, qword [0x0400dbd0] 	      7939	normal.c	FUNCTION_107	SWITCH_1	IF_4
0xdb90	          0x488b00	                    mov rax, qword [rax]	      7939	normal.c	FUNCTION_107	SWITCH_1	IF_4
0xdb93	          0x4839c2	                            cmp rdx, rax	      7939	normal.c	FUNCTION_107	SWITCH_1	IF_4
0xdb96	            0x7f13	                            jg 0x400dbeb	      7939	normal.c	FUNCTION_107	SWITCH_1	IF_4
0xdb98	    0x488b05000000	            mov rax, qword [0x0400dbdf] 	      7940	normal.c	FUNCTION_107	SWITCH_1	IF_4
0xdb9f	    0x488b80f80200	           mov rax, qword [rax + 0x2f8] 	      7940	normal.c	FUNCTION_107	SWITCH_1	IF_4
0xdba6	          0x4885c0	                           test rax, rax	      7940	normal.c	FUNCTION_107	SWITCH_1	IF_4
0xdba9	            0x750a	                           jne 0x400dbf5	      7940	normal.c	FUNCTION_107	SWITCH_1	IF_4
0xdbab	      0xe800000000	                          call 0x400dbf0	      7941	normal.c	FUNCTION_107	SWITCH_1	CALL_8
0xdbb0	      0xe9330c0000	                           jmp 0x400e828	      8000	normal.c	FUNCTION_107	SWITCH_1
0xdbb5	    0x8b0500000000	            mov eax, dword [0x0400dbfb] 	      7945	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdbbb	            0x85c0	                           test eax, eax	      7945	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdbbd	     0xf84fa000000	                            je 0x400dcfd	      7945	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdbc3	    0x8b0500000000	            mov eax, dword [0x0400dc09] 	      7947	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdbc9	          0x8945b4	             mov dword [rbp - 0x4c], eax	      7947	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdbcc	    0x488b05000000	            mov rax, qword [0x0400dc13] 	      7948	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdbd3	    0x8b8008030000	           mov eax, dword [rax + 0x308] 	      7948	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdbd9	    0x890500000000	            mov dword [0x0400dc1f], eax 	      7948	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdbdf	    0x488b05000000	            mov rax, qword [0x0400dc26] 	      7949	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdbe6	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      7949	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdbe9	    0x899008030000	            mov dword [rax + 0x308], edx	      7949	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdbef	    0x488b05000000	            mov rax, qword [0x0400dc36] 	      7951	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdbf6	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      7951	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdbf9	    0x899010030000	            mov dword [rax + 0x310], edx	      7951	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdbff	    0x488b05000000	            mov rax, qword [0x0400dc46] 	      7953	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc06	          0x8b4048	            mov eax, dword [rax + 0x48] 	      7953	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc09	          0x8945b4	             mov dword [rbp - 0x4c], eax	      7953	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc0c	    0x488b05000000	            mov rax, qword [0x0400dc53] 	      7954	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc13	    0x488b15000000	            mov rdx, qword [0x0400dc5a] 	      7954	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc1a	    0x8b920c030000	           mov edx, dword [rdx + 0x30c] 	      7954	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc20	          0x895048	             mov dword [rax + 0x48], edx	      7954	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc23	    0x488b05000000	            mov rax, qword [0x0400dc6a] 	      7955	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc2a	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      7955	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc2d	    0x89900c030000	            mov dword [rax + 0x30c], edx	      7955	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc33	    0x488b05000000	            mov rax, qword [0x0400dc7a] 	      7957	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc3a	    0x488b90000300	           mov rdx, qword [rax + 0x300] 	      7957	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc41	    0x488b80f80200	           mov rax, qword [rax + 0x2f8] 	      7957	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc48	        0x488945e0	             mov qword [rbp - 0x20], rax	      7957	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc4c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      7957	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc50	    0x488b0d000000	            mov rcx, qword [0x0400dc97] 	      7958	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc57	    0x488b05000000	            mov rax, qword [0x0400dc9e] 	      7958	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc5e	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7958	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc62	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7958	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc66	    0x488981f80200	            mov qword [rcx + 0x2f8], rax	      7958	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc6d	    0x488991000300	            mov qword [rcx + 0x300], rdx	      7958	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc74	    0x488b0d000000	            mov rcx, qword [0x0400dcbb] 	      7959	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc7b	    0x488b05000000	            mov rax, qword [0x0400dcc2] 	      7959	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc82	    0x488b90f00200	           mov rdx, qword [rax + 0x2f0] 	      7959	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc89	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      7959	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc90	        0x48894138	             mov qword [rcx + 0x38], rax	      7959	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc94	        0x48895140	             mov qword [rcx + 0x40], rdx	      7959	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc98	    0x488b0d000000	            mov rcx, qword [0x0400dcdf] 	      7960	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdc9f	    0x488b05000000	            mov rax, qword [0x0400dce6] 	      7960	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdca6	    0x488b15000000	            mov rdx, qword [0x0400dced] 	      7960	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdcad	    0x488981e80200	            mov qword [rcx + 0x2e8], rax	      7960	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdcb4	    0x488991f00200	            mov qword [rcx + 0x2f0], rdx	      7960	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdcbb	            0xeb6b	                           jmp 0x400dd68	      7960	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_5
0xdcbd	    0x488b05000000	            mov rax, qword [0x0400dd04] 	      7964	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdcc4	    0x8b8008030000	           mov eax, dword [rax + 0x308] 	      7964	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdcca	    0x890500000000	            mov dword [0x0400dd10], eax 	      7964	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdcd0	    0x488b05000000	            mov rax, qword [0x0400dd17] 	      7965	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdcd7	    0x488b15000000	            mov rdx, qword [0x0400dd1e] 	      7965	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdcde	    0x8b920c030000	           mov edx, dword [rdx + 0x30c] 	      7965	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdce4	          0x895048	             mov dword [rax + 0x48], edx	      7965	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdce7	    0x488b05000000	            mov rax, qword [0x0400dd2e] 	      7966	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdcee	    0x488b90000300	           mov rdx, qword [rax + 0x300] 	      7966	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdcf5	    0x488b80f80200	           mov rax, qword [rax + 0x2f8] 	      7966	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdcfc	        0x488945e0	             mov qword [rbp - 0x20], rax	      7966	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdd00	        0x488955e8	             mov qword [rbp - 0x18], rdx	      7966	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdd04	    0x488b0d000000	            mov rcx, qword [0x0400dd4b] 	      7967	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdd0b	    0x488b05000000	            mov rax, qword [0x0400dd52] 	      7967	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdd12	    0x488b90f00200	           mov rdx, qword [rax + 0x2f0] 	      7967	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdd19	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      7967	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdd20	        0x48894138	             mov qword [rcx + 0x38], rax	      7967	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdd24	        0x48895140	             mov qword [rcx + 0x40], rdx	      7967	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	ELSE_4
0xdd28	    0xc70500000000	               mov dword [0x0400dd72], 1	      7970	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0xdd32	    0xc70500000000	               mov dword [0x0400dd7c], 1	      7971	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0xdd3c	      0xe800000000	                          call 0x400dd81	      7975	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_9
0xdd41	    0x488b05000000	            mov rax, qword [0x0400dd88] 	      7976	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0xdd48	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7976	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0xdd4c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7976	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0xdd50	    0x488905000000	            mov qword [0x0400dd97], rax 	      7976	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0xdd57	    0x488915000000	            mov qword [0x0400dd9e], rdx 	      7976	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0xdd5e	    0x488b0d000000	            mov rcx, qword [0x0400dda5] 	      7977	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0xdd65	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7977	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0xdd69	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7977	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0xdd6d	        0x48894138	             mov qword [rcx + 0x38], rax	      7977	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0xdd71	        0x48895140	             mov qword [rcx + 0x40], rdx	      7977	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0xdd75	      0xe800000000	                          call 0x400ddba	      7978	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_10
0xdd7a	      0xe800000000	                          call 0x400ddbf	      7979	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_11
0xdd7f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7985	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_6
0xdd83	          0x8b4038	            mov eax, dword [rax + 0x38] 	      7985	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_6
0xdd86	            0x85c0	                           test eax, eax	      7985	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_6
0xdd88	            0x740c	                            je 0x400ddd6	      7985	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_6
0xdd8a	    0xc70500000000	               mov dword [0x0400ddd4], 1	      7986	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_6
0xdd94	            0xeb0a	                           jmp 0x400dde0	      7986	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	IF_6
0xdd96	      0xbf63000000	                           mov edi, 0x63	      7988	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_12
0xdd9b	      0xe800000000	                          call 0x400dde0	      7988	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_12
0xdda0	      0xe800000000	                          call 0x400dde5	      7990	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_13
0xdda5	    0xc70500000000	               mov dword [0x0400ddef], 0	      7995	normal.c	FUNCTION_107	SWITCH_1	ELSE_3
0xddaf	      0xbf14000000	                           mov edi, 0x14	      7997	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_14
0xddb4	      0xe800000000	                          call 0x400ddf9	      7997	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_14
0xddb9	      0xe800000000	                          call 0x400ddfe	      7998	normal.c	FUNCTION_107	SWITCH_1	ELSE_3	CALL_15
0xddbe	      0xe9250a0000	                           jmp 0x400e828	      8000	normal.c	FUNCTION_107	SWITCH_1
0xddc3	    0xc70500000000	               mov dword [0x0400de0d], 0	      8006	normal.c	FUNCTION_107	SWITCH_1
0xddcd	      0xe9160a0000	                           jmp 0x400e828	      8007	normal.c	FUNCTION_107	SWITCH_1
0xddd2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8015	normal.c	FUNCTION_107	SWITCH_1
0xddd6	    0xc74010080000	               mov dword [rax + 0x10], 8	      8015	normal.c	FUNCTION_107	SWITCH_1
0xdddd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8026	normal.c	FUNCTION_107	SWITCH_1	ELSE_6
0xdde1	          0x8b4010	            mov eax, dword [rax + 0x10] 	      8026	normal.c	FUNCTION_107	SWITCH_1	ELSE_6
0xdde4	          0x8d500e	                    lea edx, [rax + 0xe]	      8026	normal.c	FUNCTION_107	SWITCH_1	ELSE_6
0xdde7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8026	normal.c	FUNCTION_107	SWITCH_1	ELSE_6
0xddeb	          0x89500c	              mov dword [rax + 0xc], edx	      8026	normal.c	FUNCTION_107	SWITCH_1	ELSE_6
0xddee	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8027	normal.c	FUNCTION_107	SWITCH_1
0xddf2	    0xc74038010000	               mov dword [rax + 0x38], 1	      8027	normal.c	FUNCTION_107	SWITCH_1
0xddf9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8028	normal.c	FUNCTION_107	SWITCH_1	CALL_16
0xddfd	          0x4889c7	                            mov rdi, rax	      8028	normal.c	FUNCTION_107	SWITCH_1	CALL_16
0xde00	      0xe8ebf2ffff	                      call sym.nv_visual	      8028	normal.c	FUNCTION_107	SWITCH_1	CALL_16
0xde05	      0xe9de090000	                           jmp 0x400e828	      8029	normal.c	FUNCTION_107	SWITCH_1
0xde0a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8037	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0xde0e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      8037	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0xde11	          0x83f86e	                           cmp eax, 0x6e	      8037	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0xde14	           0xf94c0	                                 sete al	      8037	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0xde17	           0xfb6d0	                           movzx edx, al	      8037	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0xde1a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8037	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0xde1e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8037	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0xde22	            0x89d6	                            mov esi, edx	      8037	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0xde24	          0x4889c7	                            mov rdi, rax	      8037	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0xde27	      0xe800000000	                          call 0x400de6c	      8037	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0xde2c	            0x85c0	                           test eax, eax	      8037	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0xde2e	     0xf859b090000	                           jne 0x400e80f	      8037	normal.c	FUNCTION_107	SWITCH_1	IF_8	CALL_17
0xde34	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8038	normal.c	FUNCTION_107	SWITCH_1	CALL_18
0xde38	          0x4889c7	                            mov rdi, rax	      8038	normal.c	FUNCTION_107	SWITCH_1	CALL_18
0xde3b	      0xe8a87bffff	                    call sym.clearopbeep	      8038	normal.c	FUNCTION_107	SWITCH_1	CALL_18
0xde40	      0xe98a090000	                           jmp 0x400e80f	      8039	normal.c	FUNCTION_107	SWITCH_1
0xde45	    0x488b05000000	            mov rax, qword [0x0400de8c] 	      8049	normal.c	FUNCTION_107	SWITCH_1	IF_9
0xde4c	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      8049	normal.c	FUNCTION_107	SWITCH_1	IF_9
0xde52	            0x85c0	                           test eax, eax	      8049	normal.c	FUNCTION_107	SWITCH_1	IF_9
0xde54	            0x7421	                            je 0x400deb7	      8049	normal.c	FUNCTION_107	SWITCH_1	IF_9
0xde56	    0x488b05000000	            mov rax, qword [0x0400de9d] 	      8051	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_19
0xde5d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8051	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_19
0xde61	      0xba00000000	                              mov edx, 0	      8051	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_19
0xde66	      0xbe00000000	                              mov esi, 0	      8051	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_19
0xde6b	          0x4889c7	                            mov rdi, rax	      8051	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_19
0xde6e	      0xe800000000	                          call 0x400deb3	      8051	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_19
0xde73	            0x85c0	                           test eax, eax	      8051	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_19
0xde75	            0x7430	                            je 0x400dee7	      8051	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_19
0xde77	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8055	normal.c	FUNCTION_107	SWITCH_1	IF_9
0xde7b	    0xc74008010000	                  mov dword [rax + 8], 1	      8055	normal.c	FUNCTION_107	SWITCH_1	IF_9
0xde82	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8056	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0xde86	            0x8b00	                    mov eax, dword [rax]	      8056	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0xde88	            0x85c0	                           test eax, eax	      8056	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0xde8a	           0xf94c0	                                 sete al	      8056	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0xde8d	           0xfb6d0	                           movzx edx, al	      8056	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0xde90	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8056	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0xde94	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8056	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0xde98	            0x89d6	                            mov esi, edx	      8056	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0xde9a	          0x4889c7	                            mov rdi, rax	      8056	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0xde9d	      0xe800000000	                          call 0x400dee2	      8056	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0xdea2	          0x8945b4	             mov dword [rbp - 0x4c], eax	      8056	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0xdea5	            0xeb1c	                           jmp 0x400df03	      8056	normal.c	FUNCTION_107	SWITCH_1	IF_9	CALL_20
0xdea7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8059	normal.c	FUNCTION_107	SWITCH_1	CALL_21
0xdeab	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      8059	normal.c	FUNCTION_107	SWITCH_1	CALL_21
0xdeaf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8059	normal.c	FUNCTION_107	SWITCH_1	CALL_21
0xdeb3	      0xbe01000000	                              mov esi, 1	      8059	normal.c	FUNCTION_107	SWITCH_1	CALL_21
0xdeb8	          0x4889c7	                            mov rdi, rax	      8059	normal.c	FUNCTION_107	SWITCH_1	CALL_21
0xdebb	      0xe85c8effff	                    call sym.nv_screengo	      8059	normal.c	FUNCTION_107	SWITCH_1	CALL_21
0xdec0	          0x8945b4	             mov dword [rbp - 0x4c], eax	      8059	normal.c	FUNCTION_107	SWITCH_1	CALL_21
0xdec3	        0x837db400	               cmp dword [rbp - 0x4c], 0	      8060	normal.c	FUNCTION_107	SWITCH_1	IF_10
0xdec7	     0xf8505090000	                           jne 0x400e812	      8060	normal.c	FUNCTION_107	SWITCH_1	IF_10
0xdecd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8061	normal.c	FUNCTION_107	SWITCH_1	CALL_22
0xded1	          0x4889c7	                            mov rdi, rax	      8061	normal.c	FUNCTION_107	SWITCH_1	CALL_22
0xded4	      0xe80f7bffff	                    call sym.clearopbeep	      8061	normal.c	FUNCTION_107	SWITCH_1	CALL_22
0xded9	      0xe9f4080000	                           jmp 0x400e812	      8062	normal.c	FUNCTION_107	SWITCH_1
0xdede	    0x488b05000000	            mov rax, qword [0x0400df25] 	      8068	normal.c	FUNCTION_107	SWITCH_1	IF_11
0xdee5	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      8068	normal.c	FUNCTION_107	SWITCH_1	IF_11
0xdeeb	            0x85c0	                           test eax, eax	      8068	normal.c	FUNCTION_107	SWITCH_1	IF_11
0xdeed	            0x7421	                            je 0x400df50	      8068	normal.c	FUNCTION_107	SWITCH_1	IF_11
0xdeef	    0x488b05000000	            mov rax, qword [0x0400df36] 	      8070	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_23
0xdef6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8070	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_23
0xdefa	      0xba00000000	                              mov edx, 0	      8070	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_23
0xdeff	      0xbe00000000	                              mov esi, 0	      8070	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_23
0xdf04	          0x4889c7	                            mov rdi, rax	      8070	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_23
0xdf07	      0xe800000000	                          call 0x400df4c	      8070	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_23
0xdf0c	            0x85c0	                           test eax, eax	      8070	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_23
0xdf0e	            0x7430	                            je 0x400df80	      8070	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_23
0xdf10	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8074	normal.c	FUNCTION_107	SWITCH_1	IF_11
0xdf14	    0xc74008010000	                  mov dword [rax + 8], 1	      8074	normal.c	FUNCTION_107	SWITCH_1	IF_11
0xdf1b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8075	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0xdf1f	            0x8b00	                    mov eax, dword [rax]	      8075	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0xdf21	            0x85c0	                           test eax, eax	      8075	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0xdf23	           0xf94c0	                                 sete al	      8075	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0xdf26	           0xfb6d0	                           movzx edx, al	      8075	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0xdf29	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8075	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0xdf2d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8075	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0xdf31	            0x89d6	                            mov esi, edx	      8075	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0xdf33	          0x4889c7	                            mov rdi, rax	      8075	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0xdf36	      0xe800000000	                          call 0x400df7b	      8075	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0xdf3b	          0x8945b4	             mov dword [rbp - 0x4c], eax	      8075	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0xdf3e	            0xeb1c	                           jmp 0x400df9c	      8075	normal.c	FUNCTION_107	SWITCH_1	IF_11	CALL_24
0xdf40	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8078	normal.c	FUNCTION_107	SWITCH_1	CALL_25
0xdf44	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      8078	normal.c	FUNCTION_107	SWITCH_1	CALL_25
0xdf48	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8078	normal.c	FUNCTION_107	SWITCH_1	CALL_25
0xdf4c	      0xbeffffffff	                     mov esi, 0xffffffff	      8078	normal.c	FUNCTION_107	SWITCH_1	CALL_25
0xdf51	          0x4889c7	                            mov rdi, rax	      8078	normal.c	FUNCTION_107	SWITCH_1	CALL_25
0xdf54	      0xe8c38dffff	                    call sym.nv_screengo	      8078	normal.c	FUNCTION_107	SWITCH_1	CALL_25
0xdf59	          0x8945b4	             mov dword [rbp - 0x4c], eax	      8078	normal.c	FUNCTION_107	SWITCH_1	CALL_25
0xdf5c	        0x837db400	               cmp dword [rbp - 0x4c], 0	      8079	normal.c	FUNCTION_107	SWITCH_1	IF_12
0xdf60	     0xf856f080000	                           jne 0x400e815	      8079	normal.c	FUNCTION_107	SWITCH_1	IF_12
0xdf66	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8080	normal.c	FUNCTION_107	SWITCH_1	CALL_26
0xdf6a	          0x4889c7	                            mov rdi, rax	      8080	normal.c	FUNCTION_107	SWITCH_1	CALL_26
0xdf6d	      0xe8767affff	                    call sym.clearopbeep	      8080	normal.c	FUNCTION_107	SWITCH_1	CALL_26
0xdf72	      0xe95e080000	                           jmp 0x400e815	      8081	normal.c	FUNCTION_107	SWITCH_1
0xdf77	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8087	normal.c	FUNCTION_107	SWITCH_1	CALL_27
0xdf7b	          0x4889c7	                            mov rdi, rax	      8087	normal.c	FUNCTION_107	SWITCH_1	CALL_27
0xdf7e	      0xe887210000	                        call sym.nv_join	      8087	normal.c	FUNCTION_107	SWITCH_1	CALL_27
0xdf83	      0xe960080000	                           jmp 0x400e828	      8088	normal.c	FUNCTION_107	SWITCH_1
0xdf88	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      8095	normal.c	FUNCTION_107	SWITCH_1
0xdf8f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8102	normal.c	FUNCTION_107	SWITCH_1
0xdf93	    0xc74008000000	                  mov dword [rax + 8], 0	      8102	normal.c	FUNCTION_107	SWITCH_1
0xdf9a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8103	normal.c	FUNCTION_107	SWITCH_1
0xdf9e	    0xc74014000000	               mov dword [rax + 0x14], 0	      8103	normal.c	FUNCTION_107	SWITCH_1
0xdfa5	    0x488b05000000	            mov rax, qword [0x0400dfec] 	      8104	normal.c	FUNCTION_107	SWITCH_1	IF_13
0xdfac	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      8104	normal.c	FUNCTION_107	SWITCH_1	IF_13
0xdfb2	            0x85c0	                           test eax, eax	      8104	normal.c	FUNCTION_107	SWITCH_1	IF_13
0xdfb4	     0xf8481000000	                            je 0x400e07b	      8104	normal.c	FUNCTION_107	SWITCH_1	IF_13
0xdfba	    0x488b05000000	            mov rax, qword [0x0400e001] 	      8104	normal.c	FUNCTION_107	SWITCH_1	IF_13
0xdfc1	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      8104	normal.c	FUNCTION_107	SWITCH_1	IF_13
0xdfc7	            0x85c0	                           test eax, eax	      8104	normal.c	FUNCTION_107	SWITCH_1	IF_13
0xdfc9	            0x7470	                            je 0x400e07b	      8104	normal.c	FUNCTION_107	SWITCH_1	IF_13
0xdfcb	    0x488b05000000	            mov rax, qword [0x0400e012] 	      8106	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_28
0xdfd2	    0x8b98ac000000	            mov ebx, dword [rax + 0xac] 	      8106	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_28
0xdfd8	      0xe800000000	                          call 0x400e01d	      8106	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_28
0xdfdd	            0x29c3	                            sub ebx, eax	      8106	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_28
0xdfdf	            0x89d8	                            mov eax, ebx	      8106	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_28
0xdfe1	          0x8945bc	             mov dword [rbp - 0x44], eax	      8106	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_28
0xdfe4	      0xe800000000	                          call 0x400e029	      8107	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_29
0xdfe9	            0x89c2	                            mov edx, eax	      8107	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_29
0xdfeb	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      8107	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_29
0xdfee	             0x1d0	                            add eax, edx	      8107	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_29
0xdff0	          0x8945c0	             mov dword [rbp - 0x40], eax	      8107	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_29
0xdff3	      0xe800000000	                          call 0x400e038	      8109	normal.c	FUNCTION_107	SWITCH_1	IF_13	CALL_30
0xdff8	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      8110	normal.c	FUNCTION_107	SWITCH_1	IF_13
0xdfff	    0x488b05000000	            mov rax, qword [0x0400e046] 	      8111	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe006	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      8111	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe00c	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      8111	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe00f	            0x7c3c	                            jl 0x400e08d	      8111	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe011	        0x837dc000	               cmp dword [rbp - 0x40], 0	      8111	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe015	            0x7e36	                           jle 0x400e08d	      8111	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe017	    0x488b05000000	            mov rax, qword [0x0400e05e] 	      8112	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe01e	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      8112	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe024	          0x2b45bc	             sub eax, dword [rbp - 0x44]	      8112	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe027	              0x99	                                     cdq	      8112	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe028	          0xf77dc0	                 idiv dword [rbp - 0x40]	      8112	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe02b	         0xfaf45c0	            imul eax, dword [rbp - 0x40]	      8112	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe02f	            0x89c2	                            mov edx, eax	      8112	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe031	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      8112	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe034	             0x1d0	                            add eax, edx	      8112	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe036	          0x8945b4	             mov dword [rbp - 0x4c], eax	      8112	normal.c	FUNCTION_107	SWITCH_1	IF_13	IF_14
0xe039	            0xeb12	                           jmp 0x400e08d	      8105	normal.c	FUNCTION_107	SWITCH_1	IF_13
0xe03b	    0x488b05000000	            mov rax, qword [0x0400e082] 	      8115	normal.c	FUNCTION_107	SWITCH_1	ELSE_9
0xe042	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      8115	normal.c	FUNCTION_107	SWITCH_1	ELSE_9
0xe048	          0x8945b4	             mov dword [rbp - 0x4c], eax	      8115	normal.c	FUNCTION_107	SWITCH_1	ELSE_9
0xe04b	            0xeb01	                           jmp 0x400e08e	      8115	normal.c	FUNCTION_107	SWITCH_1	ELSE_9
0xe04d	              0x90	                                     nop	      8105	normal.c	FUNCTION_107	SWITCH_1	IF_13
0xe04e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8119	normal.c	FUNCTION_107	SWITCH_1	IF_15
0xe052	          0x8b4010	            mov eax, dword [rax + 0x10] 	      8119	normal.c	FUNCTION_107	SWITCH_1	IF_15
0xe055	          0x83f86d	                           cmp eax, 0x6d	      8119	normal.c	FUNCTION_107	SWITCH_1	IF_15
0xe058	            0x7545	                           jne 0x400e0df	      8119	normal.c	FUNCTION_107	SWITCH_1	IF_15
0xe05a	    0x488b05000000	            mov rax, qword [0x0400e0a1] 	      8120	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0xe061	    0x8b98ac000000	            mov ebx, dword [rax + 0xac] 	      8120	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0xe067	      0xe800000000	                          call 0x400e0ac	      8120	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0xe06c	            0x29c3	                            sub ebx, eax	      8120	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0xe06e	    0x488b05000000	            mov rax, qword [0x0400e0b5] 	      8121	normal.c	FUNCTION_107	SWITCH_1	IF_15
0xe075	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      8121	normal.c	FUNCTION_107	SWITCH_1	IF_15
0xe07b	            0x85c0	                           test eax, eax	      8122	normal.c	FUNCTION_107	SWITCH_1	CALL_32
0xe07d	            0x740d	                            je 0x400e0cc	      8122	normal.c	FUNCTION_107	SWITCH_1	CALL_32
0xe07f	        0x837db400	               cmp dword [rbp - 0x4c], 0	      8121	normal.c	FUNCTION_107	SWITCH_1	IF_15
0xe083	            0x7e07	                           jle 0x400e0cc	      8121	normal.c	FUNCTION_107	SWITCH_1	IF_15
0xe085	      0xe800000000	                          call 0x400e0ca	      8122	normal.c	FUNCTION_107	SWITCH_1	CALL_32
0xe08a	            0xeb05	                           jmp 0x400e0d1	      8122	normal.c	FUNCTION_107	SWITCH_1	CALL_32
0xe08c	      0xb800000000	                              mov eax, 0	      8122	normal.c	FUNCTION_107	SWITCH_1	CALL_32
0xe091	             0x1d8	                            add eax, ebx	      8121	normal.c	FUNCTION_107	SWITCH_1	IF_15
0xe093	            0x89c2	                            mov edx, eax	      8122	normal.c	FUNCTION_107	SWITCH_1	CALL_32
0xe095	          0xc1ea1f	                           shr edx, 0x1f	      8122	normal.c	FUNCTION_107	SWITCH_1	CALL_32
0xe098	             0x1d0	                            add eax, edx	      8122	normal.c	FUNCTION_107	SWITCH_1	CALL_32
0xe09a	            0xd1f8	                              sar eax, 1	      8122	normal.c	FUNCTION_107	SWITCH_1	CALL_32
0xe09c	           0x145b4	             add dword [rbp - 0x4c], eax	      8120	normal.c	FUNCTION_107	SWITCH_1	IF_15	CALL_31
0xe09f	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      8123	normal.c	FUNCTION_107	SWITCH_1	CALL_33
0xe0a2	            0x89c7	                            mov edi, eax	      8123	normal.c	FUNCTION_107	SWITCH_1	CALL_33
0xe0a4	      0xe800000000	                          call 0x400e0e9	      8123	normal.c	FUNCTION_107	SWITCH_1	CALL_33
0xe0a9	        0x837db800	               cmp dword [rbp - 0x48], 0	      8124	normal.c	FUNCTION_107	SWITCH_1	IF_16
0xe0ad	            0x741e	                            je 0x400e10d	      8124	normal.c	FUNCTION_107	SWITCH_1	IF_16
0xe0af	      0xe800000000	                          call 0x400e0f4	      8127	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_34
0xe0b4	          0x8945b4	             mov dword [rbp - 0x4c], eax	      8127	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_34
0xe0b7	        0x837db420	           cmp dword [rbp - 0x4c], 0x20 	      8128	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_36
0xe0bb	            0x7406	                            je 0x400e103	      8128	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_36
0xe0bd	        0x837db409	               cmp dword [rbp - 0x4c], 9	      8128	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_36
0xe0c1	            0x750a	                           jne 0x400e10d	      8128	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_36
0xe0c3	      0xe800000000	                          call 0x400e108	      8128	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_36
0xe0c8	          0x83f801	                              cmp eax, 1	      8128	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_36
0xe0cb	            0x74e2	                            je 0x400e0ef	      8128	normal.c	FUNCTION_107	SWITCH_1	IF_16	CALL_36
0xe0cd	    0x488b05000000	            mov rax, qword [0x0400e114] 	      8130	normal.c	FUNCTION_107	SWITCH_1
0xe0d4	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8130	normal.c	FUNCTION_107	SWITCH_1
0xe0db	      0xe908070000	                           jmp 0x400e828	      8131	normal.c	FUNCTION_107	SWITCH_1
0xe0e0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8136	normal.c	FUNCTION_107	SWITCH_1
0xe0e4	          0x488b00	                    mov rax, qword [rax]	      8136	normal.c	FUNCTION_107	SWITCH_1
0xe0e7	    0xc74008000000	                  mov dword [rax + 8], 0	      8136	normal.c	FUNCTION_107	SWITCH_1
0xe0ee	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8137	normal.c	FUNCTION_107	SWITCH_1
0xe0f2	          0x488b00	                    mov rax, qword [rax]	      8137	normal.c	FUNCTION_107	SWITCH_1
0xe0f5	    0xc74014010000	               mov dword [rax + 0x14], 1	      8137	normal.c	FUNCTION_107	SWITCH_1
0xe0fc	    0x488b05000000	            mov rax, qword [0x0400e143] 	      8138	normal.c	FUNCTION_107	SWITCH_1
0xe103	    0xc74048ffffff	     mov dword [rax + 0x48], 0x7fffffff 	      8138	normal.c	FUNCTION_107	SWITCH_1
0xe10a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8140	normal.c	FUNCTION_107	SWITCH_1	IF_17
0xe10e	          0x488b00	                    mov rax, qword [rax]	      8140	normal.c	FUNCTION_107	SWITCH_1	IF_17
0xe111	            0x8b00	                    mov eax, dword [rax]	      8140	normal.c	FUNCTION_107	SWITCH_1	IF_17
0xe113	            0x85c0	                           test eax, eax	      8139	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0xe115	           0xf94c0	                                 sete al	      8139	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0xe118	           0xfb6c0	                           movzx eax, al	      8139	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0xe11b	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      8139	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0xe11f	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      8139	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0xe123	        0x4883ea01	                              sub rdx, 1	      8139	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0xe127	            0x89c6	                            mov esi, eax	      8139	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0xe129	          0x4889d7	                            mov rdi, rdx	      8139	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0xe12c	      0xe800000000	                          call 0x400e171	      8139	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0xe131	            0x85c0	                           test eax, eax	      8139	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0xe133	            0x7514	                           jne 0x400e189	      8139	normal.c	FUNCTION_107	SWITCH_1	IF_17	CALL_37
0xe135	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8141	normal.c	FUNCTION_107	SWITCH_1	CALL_38
0xe139	          0x488b00	                    mov rax, qword [rax]	      8141	normal.c	FUNCTION_107	SWITCH_1	CALL_38
0xe13c	          0x4889c7	                            mov rdi, rax	      8141	normal.c	FUNCTION_107	SWITCH_1	CALL_38
0xe13f	      0xe8a478ffff	                    call sym.clearopbeep	      8141	normal.c	FUNCTION_107	SWITCH_1	CALL_38
0xe144	      0xe99f060000	                           jmp 0x400e828	      8157	normal.c	FUNCTION_107	SWITCH_1
0xe149	      0xe800000000	                          call 0x400e18e	      8144	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	CALL_39
0xe14e	        0x488945d8	             mov qword [rbp - 0x28], rax	      8144	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	CALL_39
0xe152	    0x488b05000000	            mov rax, qword [0x0400e199] 	      8147	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe159	          0x8b4040	            mov eax, dword [rax + 0x40] 	      8147	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe15c	            0x85c0	                           test eax, eax	      8147	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe15e	            0x7e3d	                           jle 0x400e1dd	      8147	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe160	    0x488b05000000	            mov rax, qword [0x0400e1a7] 	      8147	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe167	          0x8b4040	            mov eax, dword [rax + 0x40] 	      8147	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe16a	          0x4863d0	                         movsxd rdx, eax	      8147	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe16d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8147	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe171	          0x4801d0	                            add rax, rdx	      8147	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe174	           0xfb600	                   movzx eax, byte [rax]	      8147	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe177	            0x84c0	                             test al, al	      8147	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe179	            0x7522	                           jne 0x400e1dd	      8147	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe17b	    0x488b05000000	            mov rax, qword [0x0400e1c2] 	      8148	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe182	          0x8b5040	            mov edx, dword [rax + 0x40] 	      8148	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe185	          0x83ea01	                              sub edx, 1	      8148	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe188	          0x895040	             mov dword [rax + 0x40], edx	      8148	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	IF_18
0xe18b	            0xeb10	                           jmp 0x400e1dd	      8151	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1
0xe18d	    0x488b05000000	            mov rax, qword [0x0400e1d4] 	      8153	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1
0xe194	          0x8b5040	            mov edx, dword [rax + 0x40] 	      8153	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1
0xe197	          0x83ea01	                              sub edx, 1	      8153	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1
0xe19a	          0x895040	             mov dword [rax + 0x40], edx	      8153	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1
0xe19d	    0x488b05000000	            mov rax, qword [0x0400e1e4] 	      8151	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1
0xe1a4	          0x8b4040	            mov eax, dword [rax + 0x40] 	      8151	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1
0xe1a7	            0x85c0	                           test eax, eax	      8151	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1
0xe1a9	            0x7e36	                           jle 0x400e221	      8151	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1
0xe1ab	    0x488b05000000	            mov rax, qword [0x0400e1f2] 	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1b2	          0x8b4040	            mov eax, dword [rax + 0x40] 	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1b5	          0x4863d0	                         movsxd rdx, eax	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1bc	          0x4801d0	                            add rax, rdx	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1bf	           0xfb600	                   movzx eax, byte [rax]	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1c2	            0x3c20	                            cmp al, 0x20	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1c4	            0x74c7	                            je 0x400e1cd	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1c6	    0x488b05000000	            mov rax, qword [0x0400e20d] 	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1cd	          0x8b4040	            mov eax, dword [rax + 0x40] 	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1d0	          0x4863d0	                         movsxd rdx, eax	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1d7	          0x4801d0	                            add rax, rdx	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1da	           0xfb600	                   movzx eax, byte [rax]	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1dd	            0x3c09	                               cmp al, 9	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1df	            0x74ac	                            je 0x400e1cd	      8152	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	WHILE_1	CALL_40
0xe1e1	    0x488b05000000	            mov rax, qword [0x0400e228] 	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10
0xe1e8	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8154	normal.c	FUNCTION_107	SWITCH_1	ELSE_10
0xe1ef	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8155	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	CALL_41
0xe1f3	          0x4889c7	                            mov rdi, rax	      8155	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	CALL_41
0xe1f6	      0xe89b0f0000	                 call sym.adjust_for_sel	      8155	normal.c	FUNCTION_107	SWITCH_1	ELSE_10	CALL_41
0xe1fb	      0xe9e8050000	                           jmp 0x400e828	      8157	normal.c	FUNCTION_107	SWITCH_1
0xe200	      0xe800000000	                          call 0x400e245	      8163	normal.c	FUNCTION_107	SWITCH_1	CALL_42
0xe205	          0x8945c4	             mov dword [rbp - 0x3c], eax	      8163	normal.c	FUNCTION_107	SWITCH_1	CALL_42
0xe208	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8165	normal.c	FUNCTION_107	SWITCH_1
0xe20c	    0xc74008000000	                  mov dword [rax + 8], 0	      8165	normal.c	FUNCTION_107	SWITCH_1
0xe213	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8166	normal.c	FUNCTION_107	SWITCH_1
0xe217	    0xc74014010000	               mov dword [rax + 0x14], 1	      8166	normal.c	FUNCTION_107	SWITCH_1
0xe21e	    0x488b05000000	            mov rax, qword [0x0400e265] 	      8167	normal.c	FUNCTION_107	SWITCH_1	IF_19
0xe225	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      8167	normal.c	FUNCTION_107	SWITCH_1	IF_19
0xe22b	            0x85c0	                           test eax, eax	      8167	normal.c	FUNCTION_107	SWITCH_1	IF_19
0xe22d	     0xf844a010000	                            je 0x400e3bd	      8167	normal.c	FUNCTION_107	SWITCH_1	IF_19
0xe233	    0x488b05000000	            mov rax, qword [0x0400e27a] 	      8167	normal.c	FUNCTION_107	SWITCH_1	IF_19
0xe23a	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      8167	normal.c	FUNCTION_107	SWITCH_1	IF_19
0xe240	            0x85c0	                           test eax, eax	      8167	normal.c	FUNCTION_107	SWITCH_1	IF_19
0xe242	     0xf8435010000	                            je 0x400e3bd	      8167	normal.c	FUNCTION_107	SWITCH_1	IF_19
0xe248	    0x488b05000000	            mov rax, qword [0x0400e28f] 	      8169	normal.c	FUNCTION_107	SWITCH_1	IF_19
0xe24f	    0xc74048ffffff	     mov dword [rax + 0x48], 0x7fffffff 	      8169	normal.c	FUNCTION_107	SWITCH_1	IF_19
0xe256	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8170	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe25a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8170	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe25e	        0x4883f801	                              cmp rax, 1	      8170	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe262	     0xf85e6000000	                           jne 0x400e38e	      8170	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe268	    0x488b05000000	            mov rax, qword [0x0400e2af] 	      8172	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe26f	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      8172	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe275	          0x2b45c4	             sub eax, dword [rbp - 0x3c]	      8172	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe278	          0x8945c8	             mov dword [rbp - 0x38], eax	      8172	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe27b	      0xe800000000	                          call 0x400e2c0	      8173	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_43
0xe280	            0x89c2	                            mov edx, eax	      8173	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_43
0xe282	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      8173	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_43
0xe285	             0x1d0	                            add eax, edx	      8173	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_43
0xe287	          0x8945cc	             mov dword [rbp - 0x34], eax	      8173	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_43
0xe28a	      0xe800000000	                          call 0x400e2cf	      8175	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_44
0xe28f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      8176	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe292	          0x83e801	                              sub eax, 1	      8176	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe295	          0x8945b4	             mov dword [rbp - 0x4c], eax	      8176	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe298	    0x488b05000000	            mov rax, qword [0x0400e2df] 	      8177	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0xe29f	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      8177	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0xe2a5	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      8177	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0xe2a8	            0x7c1e	                            jl 0x400e308	      8177	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0xe2aa	    0x488b05000000	            mov rax, qword [0x0400e2f1] 	      8178	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0xe2b1	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      8178	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0xe2b7	          0x2b45c8	             sub eax, dword [rbp - 0x38]	      8178	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0xe2ba	              0x99	                                     cdq	      8178	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0xe2bb	          0xf77dcc	                 idiv dword [rbp - 0x34]	      8178	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0xe2be	          0x83c001	                              add eax, 1	      8178	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0xe2c1	         0xfaf45cc	            imul eax, dword [rbp - 0x34]	      8179	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0xe2c5	           0x145b4	             add dword [rbp - 0x4c], eax	      8178	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_21
0xe2c8	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      8180	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_45
0xe2cb	            0x89c7	                            mov edi, eax	      8180	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_45
0xe2cd	      0xe800000000	                          call 0x400e312	      8180	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_45
0xe2d2	      0xe800000000	                          call 0x400e317	      8183	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	CALL_46
0xe2d7	    0x488b05000000	            mov rax, qword [0x0400e31e] 	      8184	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe2de	    0x488b15000000	            mov rdx, qword [0x0400e325] 	      8184	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe2e5	    0x8b92d8000000	            mov edx, dword [rdx + 0xd8] 	      8184	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe2eb	          0x895048	             mov dword [rax + 0x48], edx	      8184	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe2ee	    0x488b05000000	            mov rax, qword [0x0400e335] 	      8185	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe2f5	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      8185	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe2fc	    0x488b05000000	            mov rax, qword [0x0400e343] 	      8187	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22
0xe303	          0x8b4040	            mov eax, dword [rax + 0x40] 	      8187	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22
0xe306	            0x85c0	                           test eax, eax	      8187	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22
0xe308	     0xf8ecd000000	                           jle 0x400e41b	      8187	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22
0xe30e	    0x488b05000000	            mov rax, qword [0x0400e355] 	      8187	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22
0xe315	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      8187	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22
0xe31b	            0x85c0	                           test eax, eax	      8187	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22
0xe31d	     0xf84b8000000	                            je 0x400e41b	      8187	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22
0xe323	    0x488b05000000	            mov rax, qword [0x0400e36a] 	      8194	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22	IF_23
0xe32a	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      8194	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22	IF_23
0xe330	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      8194	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22	IF_23
0xe333	     0xf8ea2000000	                           jle 0x400e41b	      8194	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22	IF_23
0xe339	    0x488b05000000	            mov rax, qword [0x0400e380] 	      8195	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22	IF_23
0xe340	          0x8b5040	            mov edx, dword [rax + 0x40] 	      8195	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22	IF_23
0xe343	          0x83ea01	                              sub edx, 1	      8195	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22	IF_23
0xe346	          0x895040	             mov dword [rax + 0x40], edx	      8195	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20	IF_22	IF_23
0xe349	      0xe98d000000	                           jmp 0x400e41b	      8170	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe34e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8199	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24	CALL_47
0xe352	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8199	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24	CALL_47
0xe356	        0x488d50ff	                      lea rdx, [rax - 1]	      8199	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24	CALL_47
0xe35a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8199	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24	CALL_47
0xe35e	      0xbe01000000	                              mov esi, 1	      8199	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24	CALL_47
0xe363	          0x4889c7	                            mov rdi, rax	      8199	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24	CALL_47
0xe366	      0xe8b189ffff	                    call sym.nv_screengo	      8199	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24	CALL_47
0xe36b	            0x85c0	                           test eax, eax	      8199	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24	CALL_47
0xe36d	            0x756c	                           jne 0x400e41b	      8199	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24	CALL_47
0xe36f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8200	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24
0xe373	          0x4889c7	                            mov rdi, rax	      8200	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24
0xe376	      0xe86d76ffff	                    call sym.clearopbeep	      8200	normal.c	FUNCTION_107	SWITCH_1	IF_19	ELSE_11	IF_24
0xe37b	            0xeb5e	                           jmp 0x400e41b	      8170	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe37d	    0x488b05000000	            mov rax, qword [0x0400e3c4] 	      8204	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0xe384	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	      8204	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0xe38a	    0x488b05000000	            mov rax, qword [0x0400e3d1] 	      8204	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0xe391	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      8204	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0xe397	             0x1d0	                            add eax, edx	      8204	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0xe399	          0x2b45c4	             sub eax, dword [rbp - 0x3c]	      8204	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0xe39c	          0x83e801	                              sub eax, 1	      8204	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0xe39f	          0x8945b4	             mov dword [rbp - 0x4c], eax	      8204	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0xe3a2	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      8205	normal.c	FUNCTION_107	SWITCH_1	ELSE_12	CALL_49
0xe3a5	            0x89c7	                            mov edi, eax	      8205	normal.c	FUNCTION_107	SWITCH_1	ELSE_12	CALL_49
0xe3a7	      0xe800000000	                          call 0x400e3ec	      8205	normal.c	FUNCTION_107	SWITCH_1	ELSE_12	CALL_49
0xe3ac	      0xe800000000	                          call 0x400e3f1	      8208	normal.c	FUNCTION_107	SWITCH_1	ELSE_12	CALL_50
0xe3b1	    0x488b05000000	            mov rax, qword [0x0400e3f8] 	      8209	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0xe3b8	    0x488b15000000	            mov rdx, qword [0x0400e3ff] 	      8209	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0xe3bf	    0x8b92d8000000	            mov edx, dword [rdx + 0xd8] 	      8209	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0xe3c5	          0x895048	             mov dword [rax + 0x48], edx	      8209	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0xe3c8	    0x488b05000000	            mov rax, qword [0x0400e40f] 	      8210	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0xe3cf	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      8210	normal.c	FUNCTION_107	SWITCH_1	ELSE_12
0xe3d6	      0xe90d040000	                           jmp 0x400e828	      8213	normal.c	FUNCTION_107	SWITCH_1
0xe3db	              0x90	                                     nop	      8170	normal.c	FUNCTION_107	SWITCH_1	IF_19	IF_20
0xe3dc	      0xe907040000	                           jmp 0x400e828	      8213	normal.c	FUNCTION_107	SWITCH_1
0xe3e1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8225	normal.c	FUNCTION_107	SWITCH_1	CALL_51
0xe3e5	          0x4889c7	                            mov rdi, rax	      8225	normal.c	FUNCTION_107	SWITCH_1	CALL_51
0xe3e8	      0xe88da8ffff	                       call sym.nv_ident	      8225	normal.c	FUNCTION_107	SWITCH_1	CALL_51
0xe3ed	      0xe9f6030000	                           jmp 0x400e828	      8226	normal.c	FUNCTION_107	SWITCH_1
0xe3f2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8233	normal.c	FUNCTION_107	SWITCH_1
0xe3f6	    0xc74008000000	                  mov dword [rax + 8], 0	      8233	normal.c	FUNCTION_107	SWITCH_1
0xe3fd	    0x488b05000000	            mov rax, qword [0x0400e444] 	      8234	normal.c	FUNCTION_107	SWITCH_1
0xe404	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8234	normal.c	FUNCTION_107	SWITCH_1
0xe40b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8235	normal.c	FUNCTION_107	SWITCH_1
0xe40f	    0xc74014010000	               mov dword [rax + 0x14], 1	      8235	normal.c	FUNCTION_107	SWITCH_1
0xe416	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8236	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0xe41a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      8236	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0xe41d	          0x83f845	                           cmp eax, 0x45	      8236	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0xe420	           0xf94c0	                                 sete al	      8236	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0xe423	           0xfb6c8	                           movzx ecx, al	      8236	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0xe426	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8236	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0xe42a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8236	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0xe42e	      0xba00000000	                              mov edx, 0	      8236	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0xe433	            0x89ce	                            mov esi, ecx	      8236	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0xe435	          0x4889c7	                            mov rdi, rax	      8236	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0xe438	      0xe800000000	                          call 0x400e47d	      8236	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0xe43d	            0x85c0	                           test eax, eax	      8236	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0xe43f	     0xf8593030000	                           jne 0x400e818	      8236	normal.c	FUNCTION_107	SWITCH_1	IF_25	CALL_52
0xe445	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8237	normal.c	FUNCTION_107	SWITCH_1	CALL_53
0xe449	          0x4889c7	                            mov rdi, rax	      8237	normal.c	FUNCTION_107	SWITCH_1	CALL_53
0xe44c	      0xe89775ffff	                    call sym.clearopbeep	      8237	normal.c	FUNCTION_107	SWITCH_1	CALL_53
0xe451	      0xe982030000	                           jmp 0x400e818	      8238	normal.c	FUNCTION_107	SWITCH_1
0xe456	      0xbf00000000	                              mov edi, 0	      8244	normal.c	FUNCTION_107	SWITCH_1	CALL_54
0xe45b	      0xe800000000	                          call 0x400e4a0	      8244	normal.c	FUNCTION_107	SWITCH_1	CALL_54
0xe460	      0xe983030000	                           jmp 0x400e828	      8245	normal.c	FUNCTION_107	SWITCH_1
0xe465	    0x488b05000000	            mov rax, qword [0x0400e4ac] 	      8251	normal.c	FUNCTION_107	SWITCH_1	IF_26
0xe46c	    0x488b80280300	           mov rax, qword [rax + 0x328] 	      8251	normal.c	FUNCTION_107	SWITCH_1	IF_26
0xe473	          0x4885c0	                           test rax, rax	      8251	normal.c	FUNCTION_107	SWITCH_1	IF_26
0xe476	     0xf8481000000	                            je 0x400e53d	      8251	normal.c	FUNCTION_107	SWITCH_1	IF_26
0xe47c	    0x488b0d000000	            mov rcx, qword [0x0400e4c3] 	      8253	normal.c	FUNCTION_107	SWITCH_1	IF_26
0xe483	    0x488b05000000	            mov rax, qword [0x0400e4ca] 	      8253	normal.c	FUNCTION_107	SWITCH_1	IF_26
0xe48a	    0x488b90300300	           mov rdx, qword [rax + 0x330] 	      8253	normal.c	FUNCTION_107	SWITCH_1	IF_26
0xe491	    0x488b80280300	           mov rax, qword [rax + 0x328] 	      8253	normal.c	FUNCTION_107	SWITCH_1	IF_26
0xe498	        0x48894138	             mov qword [rcx + 0x38], rax	      8253	normal.c	FUNCTION_107	SWITCH_1	IF_26
0xe49c	        0x48895140	             mov qword [rcx + 0x40], rdx	      8253	normal.c	FUNCTION_107	SWITCH_1	IF_26
0xe4a0	      0xe800000000	                          call 0x400e4e5	      8254	normal.c	FUNCTION_107	SWITCH_1	IF_26	CALL_55
0xe4a5	      0xe800000000	                          call 0x400e4ea	      8255	normal.c	FUNCTION_107	SWITCH_1	IF_26	CALL_57
0xe4aa	          0x4889c7	                            mov rdi, rax	      8255	normal.c	FUNCTION_107	SWITCH_1	IF_26	CALL_57
0xe4ad	      0xe800000000	                          call 0x400e4f2	      8255	normal.c	FUNCTION_107	SWITCH_1	IF_26	CALL_57
0xe4b2	          0x8945b4	             mov dword [rbp - 0x4c], eax	      8255	normal.c	FUNCTION_107	SWITCH_1	IF_26	CALL_57
0xe4b5	    0x488b05000000	            mov rax, qword [0x0400e4fc] 	      8256	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27
0xe4bc	          0x8b4040	            mov eax, dword [rax + 0x40] 	      8256	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27
0xe4bf	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      8256	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27
0xe4c2	            0x7e39	                           jle 0x400e53d	      8256	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27
0xe4c4	      0xe800000000	                          call 0x400e509	      8259	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28	CALL_58
0xe4c9	            0x85c0	                           test eax, eax	      8259	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28	CALL_58
0xe4cb	            0x7423	                            je 0x400e530	      8259	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28	CALL_58
0xe4cd	    0x488b05000000	            mov rax, qword [0x0400e514] 	      8260	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28
0xe4d4	    0x488b15000000	            mov rdx, qword [0x0400e51b] 	      8260	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28
0xe4db	          0x8b4a44	            mov ecx, dword [rdx + 0x44] 	      8260	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28
0xe4de	    0x488b15000000	            mov rdx, qword [0x0400e525] 	      8260	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28
0xe4e5	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      8260	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28
0xe4e8	          0x2b55b4	             sub edx, dword [rbp - 0x4c]	      8260	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28
0xe4eb	             0x1ca	                            add edx, ecx	      8260	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28
0xe4ed	          0x895044	             mov dword [rax + 0x44], edx	      8260	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27	IF_28
0xe4f0	    0x488b05000000	            mov rax, qword [0x0400e537] 	      8262	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27
0xe4f7	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      8262	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27
0xe4fa	          0x895040	             mov dword [rax + 0x40], edx	      8262	normal.c	FUNCTION_107	SWITCH_1	IF_26	IF_27
0xe4fd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8265	normal.c	FUNCTION_107	SWITCH_1
0xe501	    0xc7400c690000	            mov dword [rax + 0xc], 0x69 	      8265	normal.c	FUNCTION_107	SWITCH_1
0xe508	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8266	normal.c	FUNCTION_107	SWITCH_1	CALL_59
0xe50c	          0x4889c7	                            mov rdi, rax	      8266	normal.c	FUNCTION_107	SWITCH_1	CALL_59
0xe50f	      0xe828120000	                        call sym.nv_edit	      8266	normal.c	FUNCTION_107	SWITCH_1	CALL_59
0xe514	      0xe9cf020000	                           jmp 0x400e828	      8267	normal.c	FUNCTION_107	SWITCH_1
0xe519	      0xbf00000000	                              mov edi, 0	      8273	normal.c	FUNCTION_107	SWITCH_1	CALL_60
0xe51e	      0xe800000000	                          call 0x400e563	      8273	normal.c	FUNCTION_107	SWITCH_1	CALL_60
0xe523	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8274	normal.c	FUNCTION_107	SWITCH_1	IF_29	CALL_61
0xe527	          0x4889c7	                            mov rdi, rax	      8274	normal.c	FUNCTION_107	SWITCH_1	IF_29	CALL_61
0xe52a	      0xe84974ffff	                  call sym.checkclearopq	      8274	normal.c	FUNCTION_107	SWITCH_1	IF_29	CALL_61
0xe52f	            0x85c0	                           test eax, eax	      8274	normal.c	FUNCTION_107	SWITCH_1	IF_29	CALL_61
0xe531	     0xf85a4020000	                           jne 0x400e81b	      8274	normal.c	FUNCTION_107	SWITCH_1	IF_29	CALL_61
0xe537	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8275	normal.c	FUNCTION_107	SWITCH_1	CALL_62
0xe53b	      0xb900000000	                              mov ecx, 0	      8275	normal.c	FUNCTION_107	SWITCH_1	CALL_62
0xe540	      0xba67000000	                           mov edx, 0x67	      8275	normal.c	FUNCTION_107	SWITCH_1	CALL_62
0xe545	      0xbe00000000	                              mov esi, 0	      8275	normal.c	FUNCTION_107	SWITCH_1	CALL_62
0xe54a	          0x4889c7	                            mov rdi, rax	      8275	normal.c	FUNCTION_107	SWITCH_1	CALL_62
0xe54d	      0xe8ed160000	                    call sym.invoke_edit	      8275	normal.c	FUNCTION_107	SWITCH_1	CALL_62
0xe552	      0xe984020000	                           jmp 0x400e81b	      8276	normal.c	FUNCTION_107	SWITCH_1
0xe557	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8285	normal.c	FUNCTION_107	SWITCH_1	CALL_63
0xe55b	          0x4889c7	                            mov rdi, rax	      8285	normal.c	FUNCTION_107	SWITCH_1	CALL_63
0xe55e	      0xe87dbdffff	                    call sym.nv_gotofile	      8285	normal.c	FUNCTION_107	SWITCH_1	CALL_63
0xe563	      0xe980020000	                           jmp 0x400e828	      8286	normal.c	FUNCTION_107	SWITCH_1
0xe568	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8291	normal.c	FUNCTION_107	SWITCH_1
0xe56c	    0xc74038010000	               mov dword [rax + 0x38], 1	      8291	normal.c	FUNCTION_107	SWITCH_1
0xe573	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8294	normal.c	FUNCTION_107	SWITCH_1	CALL_64
0xe577	          0x4889c7	                            mov rdi, rax	      8294	normal.c	FUNCTION_107	SWITCH_1	CALL_64
0xe57a	      0xe839e8ffff	                      call sym.nv_gomark	      8294	normal.c	FUNCTION_107	SWITCH_1	CALL_64
0xe57f	      0xe964020000	                           jmp 0x400e828	      8295	normal.c	FUNCTION_107	SWITCH_1
0xe584	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8301	normal.c	FUNCTION_107	SWITCH_1	CALL_65
0xe588	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8301	normal.c	FUNCTION_107	SWITCH_1	CALL_65
0xe58c	    0x4869c0e80300	                    imul rax, rax, 0x3e8	      8301	normal.c	FUNCTION_107	SWITCH_1	CALL_65
0xe593	          0x4889c7	                            mov rdi, rax	      8301	normal.c	FUNCTION_107	SWITCH_1	CALL_65
0xe596	      0xe800000000	                          call 0x400e5db	      8301	normal.c	FUNCTION_107	SWITCH_1	CALL_65
0xe59b	      0xe948020000	                           jmp 0x400e828	      8302	normal.c	FUNCTION_107	SWITCH_1
0xe5a0	      0xbf00000000	                              mov edi, 0	      8309	normal.c	FUNCTION_107	SWITCH_1	CALL_66
0xe5a5	      0xe800000000	                          call 0x400e5ea	      8309	normal.c	FUNCTION_107	SWITCH_1	CALL_66
0xe5aa	      0xe939020000	                           jmp 0x400e828	      8310	normal.c	FUNCTION_107	SWITCH_1
0xe5af	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8319	normal.c	FUNCTION_107	SWITCH_1	IF_30
0xe5b3	        0x488b4028	            mov rax, qword [rax + 0x28] 	      8319	normal.c	FUNCTION_107	SWITCH_1	IF_30
0xe5b7	        0x4883f808	                              cmp rax, 8	      8319	normal.c	FUNCTION_107	SWITCH_1	IF_30
0xe5bb	            0x750a	                           jne 0x400e607	      8319	normal.c	FUNCTION_107	SWITCH_1	IF_30
0xe5bd	      0xe800000000	                          call 0x400e602	      8320	normal.c	FUNCTION_107	SWITCH_1	CALL_67
0xe5c2	      0xe921020000	                           jmp 0x400e828	      8323	normal.c	FUNCTION_107	SWITCH_1
0xe5c7	      0xe800000000	                          call 0x400e60c	      8322	normal.c	FUNCTION_107	SWITCH_1	CALL_68
0xe5cc	      0xe917020000	                           jmp 0x400e828	      8323	normal.c	FUNCTION_107	SWITCH_1
0xe5d1	      0xe800000000	                          call 0x400e616	      8328	normal.c	FUNCTION_107	SWITCH_1	CALL_69
0xe5d6	      0xe90d020000	                           jmp 0x400e828	      8329	normal.c	FUNCTION_107	SWITCH_1
0xe5db	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8336	normal.c	FUNCTION_107	SWITCH_1
0xe5df	    0xc74038000000	               mov dword [rax + 0x38], 0	      8336	normal.c	FUNCTION_107	SWITCH_1
0xe5e6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8337	normal.c	FUNCTION_107	SWITCH_1	CALL_70
0xe5ea	          0x4889c7	                            mov rdi, rax	      8337	normal.c	FUNCTION_107	SWITCH_1	CALL_70
0xe5ed	      0xe8710e0000	                        call sym.nv_goto	      8337	normal.c	FUNCTION_107	SWITCH_1	CALL_70
0xe5f2	      0xe9f1010000	                           jmp 0x400e828	      8338	normal.c	FUNCTION_107	SWITCH_1
0xe5f7	    0x488b05000000	            mov rax, qword [0x0400e63e] 	      8352	normal.c	FUNCTION_107	SWITCH_1
0xe5fe	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      8352	normal.c	FUNCTION_107	SWITCH_1
0xe602	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      8352	normal.c	FUNCTION_107	SWITCH_1
0xe606	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8352	normal.c	FUNCTION_107	SWITCH_1
0xe60a	        0x48894140	             mov qword [rcx + 0x40], rax	      8352	normal.c	FUNCTION_107	SWITCH_1
0xe60e	        0x48895148	             mov qword [rcx + 0x48], rdx	      8352	normal.c	FUNCTION_107	SWITCH_1
0xe612	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8359	normal.c	FUNCTION_107	SWITCH_1	CALL_71
0xe616	          0x4889c7	                            mov rdi, rax	      8359	normal.c	FUNCTION_107	SWITCH_1	CALL_71
0xe619	      0xe815050000	                    call sym.nv_operator	      8359	normal.c	FUNCTION_107	SWITCH_1	CALL_71
0xe61e	      0xe9c5010000	                           jmp 0x400e828	      8360	normal.c	FUNCTION_107	SWITCH_1
0xe623	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8369	normal.c	FUNCTION_107	SWITCH_1	CALL_72
0xe627	        0x488b4028	            mov rax, qword [rax + 0x28] 	      8369	normal.c	FUNCTION_107	SWITCH_1	CALL_72
0xe62b	            0x89c2	                            mov edx, eax	      8369	normal.c	FUNCTION_107	SWITCH_1	CALL_72
0xe62d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8369	normal.c	FUNCTION_107	SWITCH_1	CALL_72
0xe631	          0x8b4810	            mov ecx, dword [rax + 0x10] 	      8369	normal.c	FUNCTION_107	SWITCH_1	CALL_72
0xe634	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8369	normal.c	FUNCTION_107	SWITCH_1	CALL_72
0xe638	            0x89ce	                            mov esi, ecx	      8369	normal.c	FUNCTION_107	SWITCH_1	CALL_72
0xe63a	          0x4889c7	                            mov rdi, rax	      8369	normal.c	FUNCTION_107	SWITCH_1	CALL_72
0xe63d	      0xe85480ffff	                          call sym.nv_gd	      8369	normal.c	FUNCTION_107	SWITCH_1	CALL_72
0xe642	      0xe9a1010000	                           jmp 0x400e828	      8370	normal.c	FUNCTION_107	SWITCH_1
0xe647	    0xc70500000000	               mov dword [0x0400e691], 4	      8392	normal.c	FUNCTION_107	SWITCH_1
0xe651	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8393	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0xe655	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      8393	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0xe659	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8393	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0xe65d	          0x8b7010	            mov esi, dword [rax + 0x10] 	      8393	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0xe660	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8393	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0xe664	    0x41b800000000	                              mov r8d, 0	      8393	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0xe66a	          0x4889d1	                            mov rcx, rdx	      8393	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0xe66d	      0xbaffffffff	                     mov edx, 0xffffffff	      8393	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0xe672	          0x4889c7	                            mov rdi, rax	      8393	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0xe675	      0xe800000000	                          call 0x400e6ba	      8393	normal.c	FUNCTION_107	SWITCH_1	CALL_73
0xe67a	      0xe969010000	                           jmp 0x400e828	      8394	normal.c	FUNCTION_107	SWITCH_1
0xe67f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8405	normal.c	FUNCTION_107	SWITCH_1	CALL_74
0xe683	          0x4889c7	                            mov rdi, rax	      8405	normal.c	FUNCTION_107	SWITCH_1	CALL_74
0xe686	      0xe8bd1b0000	                         call sym.nv_put	      8405	normal.c	FUNCTION_107	SWITCH_1	CALL_74
0xe68b	      0xe958010000	                           jmp 0x400e828	      8406	normal.c	FUNCTION_107	SWITCH_1
0xe690	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8411	normal.c	FUNCTION_107	SWITCH_1	CALL_75
0xe694	        0x488b4028	            mov rax, qword [rax + 0x28] 	      8411	normal.c	FUNCTION_107	SWITCH_1	CALL_75
0xe698	          0x4889c7	                            mov rdi, rax	      8411	normal.c	FUNCTION_107	SWITCH_1	CALL_75
0xe69b	      0xe800000000	                          call 0x400e6e0	      8411	normal.c	FUNCTION_107	SWITCH_1	CALL_75
0xe6a0	      0xe943010000	                           jmp 0x400e828	      8412	normal.c	FUNCTION_107	SWITCH_1
0xe6a5	      0xe800000000	                          call 0x400e6ea	      8417	normal.c	FUNCTION_107	SWITCH_1	IF_31	CALL_76
0xe6aa	            0x85c0	                           test eax, eax	      8417	normal.c	FUNCTION_107	SWITCH_1	IF_31	CALL_76
0xe6ac	            0x7419	                            je 0x400e707	      8417	normal.c	FUNCTION_107	SWITCH_1	IF_31	CALL_76
0xe6ae	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8419	normal.c	FUNCTION_107	SWITCH_1	IF_31	CALL_77
0xe6b2	          0x488b00	                    mov rax, qword [rax]	      8419	normal.c	FUNCTION_107	SWITCH_1	IF_31	CALL_77
0xe6b5	          0x4889c7	                            mov rdi, rax	      8419	normal.c	FUNCTION_107	SWITCH_1	IF_31	CALL_77
0xe6b8	      0xe82b73ffff	                    call sym.clearopbeep	      8419	normal.c	FUNCTION_107	SWITCH_1	IF_31	CALL_77
0xe6bd	      0xe800000000	                          call 0x400e702	      8420	normal.c	FUNCTION_107	SWITCH_1	IF_31	CALL_78
0xe6c2	      0xe921010000	                           jmp 0x400e828	      8421	normal.c	FUNCTION_107	SWITCH_1	IF_31
0xe6c7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8424	normal.c	FUNCTION_107	SWITCH_1	IF_32	CALL_79
0xe6cb	          0x4889c7	                            mov rdi, rax	      8424	normal.c	FUNCTION_107	SWITCH_1	IF_32	CALL_79
0xe6ce	      0xe8a572ffff	                  call sym.checkclearopq	      8424	normal.c	FUNCTION_107	SWITCH_1	IF_32	CALL_79
0xe6d3	            0x85c0	                           test eax, eax	      8424	normal.c	FUNCTION_107	SWITCH_1	IF_32	CALL_79
0xe6d5	     0xf8503010000	                           jne 0x400e81e	      8424	normal.c	FUNCTION_107	SWITCH_1	IF_32	CALL_79
0xe6db	      0xbf01000000	                              mov edi, 1	      8425	normal.c	FUNCTION_107	SWITCH_1	CALL_80
0xe6e0	      0xe800000000	                          call 0x400e725	      8425	normal.c	FUNCTION_107	SWITCH_1	CALL_80
0xe6e5	      0xe9f4000000	                           jmp 0x400e81e	      8426	normal.c	FUNCTION_107	SWITCH_1
0xe6ea	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8430	normal.c	FUNCTION_107	SWITCH_1	CALL_81
0xe6ee	          0x4889c7	                            mov rdi, rax	      8430	normal.c	FUNCTION_107	SWITCH_1	CALL_81
0xe6f1	      0xe8f2e7ffff	                      call sym.nv_pcmark	      8430	normal.c	FUNCTION_107	SWITCH_1	CALL_81
0xe6f6	      0xe9ed000000	                           jmp 0x400e828	      8431	normal.c	FUNCTION_107	SWITCH_1
0xe6fb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8434	normal.c	FUNCTION_107	SWITCH_1
0xe6ff	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8434	normal.c	FUNCTION_107	SWITCH_1
0xe703	          0x48f7d8	                                 neg rax	      8434	normal.c	FUNCTION_107	SWITCH_1
0xe706	          0x4889c2	                            mov rdx, rax	      8434	normal.c	FUNCTION_107	SWITCH_1
0xe709	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8434	normal.c	FUNCTION_107	SWITCH_1
0xe70d	        0x48895030	             mov qword [rax + 0x30], rdx	      8434	normal.c	FUNCTION_107	SWITCH_1
0xe711	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8435	normal.c	FUNCTION_107	SWITCH_1	CALL_82
0xe715	          0x4889c7	                            mov rdi, rax	      8435	normal.c	FUNCTION_107	SWITCH_1	CALL_82
0xe718	      0xe8cbe7ffff	                      call sym.nv_pcmark	      8435	normal.c	FUNCTION_107	SWITCH_1	CALL_82
0xe71d	      0xe9c6000000	                           jmp 0x400e828	      8436	normal.c	FUNCTION_107	SWITCH_1
0xe722	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8440	normal.c	FUNCTION_107	SWITCH_1	IF_33	CALL_83
0xe726	          0x4889c7	                            mov rdi, rax	      8440	normal.c	FUNCTION_107	SWITCH_1	IF_33	CALL_83
0xe729	      0xe81a72ffff	                   call sym.checkclearop	      8440	normal.c	FUNCTION_107	SWITCH_1	IF_33	CALL_83
0xe72e	            0x85c0	                           test eax, eax	      8440	normal.c	FUNCTION_107	SWITCH_1	IF_33	CALL_83
0xe730	     0xf85ab000000	                           jne 0x400e821	      8440	normal.c	FUNCTION_107	SWITCH_1	IF_33	CALL_83
0xe736	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8441	normal.c	FUNCTION_107	SWITCH_1	CALL_84
0xe73a	        0x488b4028	            mov rax, qword [rax + 0x28] 	      8441	normal.c	FUNCTION_107	SWITCH_1	CALL_84
0xe73e	            0x89c7	                            mov edi, eax	      8441	normal.c	FUNCTION_107	SWITCH_1	CALL_84
0xe740	      0xe800000000	                          call 0x400e785	      8441	normal.c	FUNCTION_107	SWITCH_1	CALL_84
0xe745	      0xe997000000	                           jmp 0x400e821	      8442	normal.c	FUNCTION_107	SWITCH_1
0xe74a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8444	normal.c	FUNCTION_107	SWITCH_1	IF_34	CALL_85
0xe74e	          0x4889c7	                            mov rdi, rax	      8444	normal.c	FUNCTION_107	SWITCH_1	IF_34	CALL_85
0xe751	      0xe8f271ffff	                   call sym.checkclearop	      8444	normal.c	FUNCTION_107	SWITCH_1	IF_34	CALL_85
0xe756	            0x85c0	                           test eax, eax	      8444	normal.c	FUNCTION_107	SWITCH_1	IF_34	CALL_85
0xe758	     0xf8586000000	                           jne 0x400e824	      8444	normal.c	FUNCTION_107	SWITCH_1	IF_34	CALL_85
0xe75e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8445	normal.c	FUNCTION_107	SWITCH_1	CALL_86
0xe762	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8445	normal.c	FUNCTION_107	SWITCH_1	CALL_86
0xe766	            0xf7d8	                                 neg eax	      8445	normal.c	FUNCTION_107	SWITCH_1	CALL_86
0xe768	            0x89c7	                            mov edi, eax	      8445	normal.c	FUNCTION_107	SWITCH_1	CALL_86
0xe76a	      0xe800000000	                          call 0x400e7af	      8445	normal.c	FUNCTION_107	SWITCH_1	CALL_86
0xe76f	            0xeb73	                           jmp 0x400e824	      8446	normal.c	FUNCTION_107	SWITCH_1
0xe771	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8450	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_87
0xe775	          0x4889c7	                            mov rdi, rax	      8450	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_87
0xe778	      0xe8fb71ffff	                  call sym.checkclearopq	      8450	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_87
0xe77d	            0x85c0	                           test eax, eax	      8450	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_87
0xe77f	            0x7566	                           jne 0x400e827	      8450	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_87
0xe781	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8451	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0xe785	          0x8b4010	            mov eax, dword [rax + 0x10] 	      8451	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0xe788	          0x83f82d	                           cmp eax, 0x2d	      8451	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0xe78b	            0x750d	                           jne 0x400e7da	      8451	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0xe78d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8451	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0xe791	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8451	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0xe795	          0x48f7d8	                                 neg rax	      8451	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0xe798	            0xeb08	                           jmp 0x400e7e2	      8451	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0xe79a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8451	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0xe79e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8451	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0xe7a2	      0xb900000000	                              mov ecx, 0	      8451	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0xe7a7	      0xba00000000	                              mov edx, 0	      8451	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0xe7ac	      0xbe00000000	                              mov esi, 0	      8451	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0xe7b1	          0x4889c7	                            mov rdi, rax	      8451	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0xe7b4	      0xe800000000	                          call 0x400e7f9	      8451	normal.c	FUNCTION_107	SWITCH_1	IF_35	CALL_88
0xe7b9	            0xeb2c	                           jmp 0x400e827	      8453	normal.c	FUNCTION_107	SWITCH_1
0xe7bb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      8456	normal.c	FUNCTION_107	SWITCH_1	CALL_89
0xe7bf	          0x4889c7	                            mov rdi, rax	      8456	normal.c	FUNCTION_107	SWITCH_1	CALL_89
0xe7c2	      0xe82172ffff	                    call sym.clearopbeep	      8456	normal.c	FUNCTION_107	SWITCH_1	CALL_89
0xe7c7	            0xeb1f	                           jmp 0x400e828	      8457	normal.c	FUNCTION_107	SWITCH_1
0xe7c9	              0x90	                                     nop	      8398	normal.c	FUNCTION_107	SWITCH_1
0xe7ca	            0xeb1c	                           jmp 0x400e828	      8398	normal.c	FUNCTION_107	SWITCH_1
0xe7cc	              0x90	                                     nop	      7936	normal.c	FUNCTION_107	SWITCH_1	IF_3
0xe7cd	            0xeb19	                           jmp 0x400e828	      7936	normal.c	FUNCTION_107	SWITCH_1	IF_3
0xe7cf	              0x90	                                     nop	      8039	normal.c	FUNCTION_107	SWITCH_1
0xe7d0	            0xeb16	                           jmp 0x400e828	      8039	normal.c	FUNCTION_107	SWITCH_1
0xe7d2	              0x90	                                     nop	      8062	normal.c	FUNCTION_107	SWITCH_1
0xe7d3	            0xeb13	                           jmp 0x400e828	      8062	normal.c	FUNCTION_107	SWITCH_1
0xe7d5	              0x90	                                     nop	      8081	normal.c	FUNCTION_107	SWITCH_1
0xe7d6	            0xeb10	                           jmp 0x400e828	      8081	normal.c	FUNCTION_107	SWITCH_1
0xe7d8	              0x90	                                     nop	      8238	normal.c	FUNCTION_107	SWITCH_1
0xe7d9	            0xeb0d	                           jmp 0x400e828	      8238	normal.c	FUNCTION_107	SWITCH_1
0xe7db	              0x90	                                     nop	      8276	normal.c	FUNCTION_107	SWITCH_1
0xe7dc	            0xeb0a	                           jmp 0x400e828	      8276	normal.c	FUNCTION_107	SWITCH_1
0xe7de	              0x90	                                     nop	      8426	normal.c	FUNCTION_107	SWITCH_1
0xe7df	            0xeb07	                           jmp 0x400e828	      8426	normal.c	FUNCTION_107	SWITCH_1
0xe7e1	              0x90	                                     nop	      8442	normal.c	FUNCTION_107	SWITCH_1
0xe7e2	            0xeb04	                           jmp 0x400e828	      8442	normal.c	FUNCTION_107	SWITCH_1
0xe7e4	              0x90	                                     nop	      8446	normal.c	FUNCTION_107	SWITCH_1
0xe7e5	            0xeb01	                           jmp 0x400e828	      8446	normal.c	FUNCTION_107	SWITCH_1
0xe7e7	              0x90	                                     nop	      8453	normal.c	FUNCTION_107	SWITCH_1
0xe7e8	              0x90	                                     nop	      8459	normal.c	FUNCTION_107
0xe7e9	        0x4883c458	                           add rsp, 0x58	      8459	normal.c	FUNCTION_107
0xe7ed	              0x5b	                                 pop rbx	      8459	normal.c	FUNCTION_107
0xe7ee	              0x5d	                                 pop rbp	      8459	normal.c	FUNCTION_107
0xe7ef	              0xc3	                                     ret	      8459	normal.c	FUNCTION_107
adjust_for_sel	CALL,3:ELSE,1:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	63
0xf196	              0x55	                                push rbp	      8843	normal.c	FUNCTION_122
0xf197	          0x4889e5	                            mov rbp, rsp	      8843	normal.c	FUNCTION_122
0xf19a	        0x4883ec10	                           sub rsp, 0x10	      8843	normal.c	FUNCTION_122
0xf19e	        0x48897df8	                mov qword [rbp - 8], rdi	      8843	normal.c	FUNCTION_122
0xf1a2	    0x8b0500000000	            mov eax, dword [0x0400f1e8] 	      8844	normal.c	FUNCTION_122	IF_1
0xf1a8	            0x85c0	                           test eax, eax	      8844	normal.c	FUNCTION_122	IF_1
0xf1aa	     0xf84d5000000	                            je 0x400f2c5	      8844	normal.c	FUNCTION_122	IF_1
0xf1b0	        0x488b45f8	                mov rax, qword [rbp - 8]	      8844	normal.c	FUNCTION_122	IF_1
0xf1b4	          0x488b00	                    mov rax, qword [rax]	      8844	normal.c	FUNCTION_122	IF_1
0xf1b7	          0x8b4014	            mov eax, dword [rax + 0x14] 	      8844	normal.c	FUNCTION_122	IF_1
0xf1ba	            0x85c0	                           test eax, eax	      8844	normal.c	FUNCTION_122	IF_1
0xf1bc	     0xf84c3000000	                            je 0x400f2c5	      8844	normal.c	FUNCTION_122	IF_1
0xf1c2	    0x488b05000000	            mov rax, qword [0x0400f209] 	      8844	normal.c	FUNCTION_122	IF_1
0xf1c9	           0xfb600	                   movzx eax, byte [rax]	      8844	normal.c	FUNCTION_122	IF_1
0xf1cc	            0x3c65	                            cmp al, 0x65	      8844	normal.c	FUNCTION_122	IF_1
0xf1ce	     0xf85b1000000	                           jne 0x400f2c5	      8844	normal.c	FUNCTION_122	IF_1
0xf1d4	      0xe800000000	                          call 0x400f219	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf1d9	            0x85c0	                           test eax, eax	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf1db	     0xf84a4000000	                            je 0x400f2c5	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf1e1	    0x488b15000000	            mov rdx, qword [0x0400f228] 	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf1e8	    0x488b05000000	            mov rax, qword [0x0400f22f] 	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf1ef	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf1f3	          0x4839c2	                            cmp rdx, rax	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf1f6	            0x741a	                            je 0x400f252	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf1f8	    0x488b15000000	            mov rdx, qword [0x0400f23f] 	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf1ff	    0x488b05000000	            mov rax, qword [0x0400f246] 	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf206	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf20a	          0x4839c2	                            cmp rdx, rax	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf20d	           0xf9cc0	                                 setl al	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf210	            0xeb40	                           jmp 0x400f292	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf212	    0x8b1500000000	            mov edx, dword [0x0400f258] 	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf218	    0x488b05000000	            mov rax, qword [0x0400f25f] 	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf21f	          0x8b4040	            mov eax, dword [rax + 0x40] 	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf222	            0x39c2	                            cmp edx, eax	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf224	            0x7417	                            je 0x400f27d	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf226	    0x8b1500000000	            mov edx, dword [0x0400f26c] 	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf22c	    0x488b05000000	            mov rax, qword [0x0400f273] 	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf233	          0x8b4040	            mov eax, dword [rax + 0x40] 	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf236	            0x39c2	                            cmp edx, eax	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf238	           0xf9cc0	                                 setl al	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf23b	            0xeb15	                           jmp 0x400f292	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf23d	    0x8b1500000000	            mov edx, dword [0x0400f283] 	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf243	    0x488b05000000	            mov rax, qword [0x0400f28a] 	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf24a	          0x8b4044	            mov eax, dword [rax + 0x44] 	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf24d	            0x39c2	                            cmp edx, eax	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf24f	           0xf9cc0	                                 setl al	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf252	            0x84c0	                             test al, al	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf254	            0x742f	                            je 0x400f2c5	      8845	normal.c	FUNCTION_122	IF_1	CALL_2
0xf256	    0x8b0500000000	            mov eax, dword [0x0400f29c] 	      8848	normal.c	FUNCTION_122	IF_1	IF_2
0xf25c	            0x85c0	                           test eax, eax	      8848	normal.c	FUNCTION_122	IF_1	IF_2
0xf25e	            0x7407	                            je 0x400f2a7	      8848	normal.c	FUNCTION_122	IF_1	IF_2
0xf260	      0xe800000000	                          call 0x400f2a5	      8849	normal.c	FUNCTION_122	IF_1	CALL_3
0xf265	            0xeb10	                           jmp 0x400f2b7	      8849	normal.c	FUNCTION_122	IF_1	CALL_3
0xf267	    0x488b05000000	            mov rax, qword [0x0400f2ae] 	      8852	normal.c	FUNCTION_122	IF_1	ELSE_1
0xf26e	          0x8b5040	            mov edx, dword [rax + 0x40] 	      8852	normal.c	FUNCTION_122	IF_1	ELSE_1
0xf271	          0x83c201	                              add edx, 1	      8852	normal.c	FUNCTION_122	IF_1	ELSE_1
0xf274	          0x895040	             mov dword [rax + 0x40], edx	      8852	normal.c	FUNCTION_122	IF_1	ELSE_1
0xf277	        0x488b45f8	                mov rax, qword [rbp - 8]	      8853	normal.c	FUNCTION_122	IF_1	ELSE_1
0xf27b	          0x488b00	                    mov rax, qword [rax]	      8853	normal.c	FUNCTION_122	IF_1	ELSE_1
0xf27e	    0xc74014000000	               mov dword [rax + 0x14], 0	      8853	normal.c	FUNCTION_122	IF_1	ELSE_1
0xf285	              0x90	                                     nop	      8855	normal.c	FUNCTION_122	ELSE_1
0xf286	              0xc9	                                   leave	      8855	normal.c	FUNCTION_122	ELSE_1
0xf287	              0xc3	                                     ret	      8855	normal.c	FUNCTION_122	ELSE_1
nv_scroll_line	CALL,2:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	20
0x739f	              0x55	                                push rbp	      4693	normal.c	FUNCTION_49
0x73a0	          0x4889e5	                            mov rbp, rsp	      4693	normal.c	FUNCTION_49
0x73a3	        0x4883ec10	                           sub rsp, 0x10	      4693	normal.c	FUNCTION_49
0x73a7	        0x48897df8	                mov qword [rbp - 8], rdi	      4693	normal.c	FUNCTION_49
0x73ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      4694	normal.c	FUNCTION_49	IF_1	CALL_1
0x73af	          0x488b00	                    mov rax, qword [rax]	      4694	normal.c	FUNCTION_49	IF_1	CALL_1
0x73b2	          0x4889c7	                            mov rdi, rax	      4694	normal.c	FUNCTION_49	IF_1	CALL_1
0x73b5	      0xe88ee5ffff	                   call sym.checkclearop	      4694	normal.c	FUNCTION_49	IF_1	CALL_1
0x73ba	            0x85c0	                           test eax, eax	      4694	normal.c	FUNCTION_49	IF_1	CALL_1
0x73bc	            0x7519	                           jne 0x4007417	      4694	normal.c	FUNCTION_49	IF_1	CALL_1
0x73be	        0x488b45f8	                mov rax, qword [rbp - 8]	      4695	normal.c	FUNCTION_49	CALL_2
0x73c2	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4695	normal.c	FUNCTION_49	CALL_2
0x73c6	        0x488b45f8	                mov rax, qword [rbp - 8]	      4695	normal.c	FUNCTION_49	CALL_2
0x73ca	          0x8b4038	            mov eax, dword [rax + 0x38] 	      4695	normal.c	FUNCTION_49	CALL_2
0x73cd	          0x4889d6	                            mov rsi, rdx	      4695	normal.c	FUNCTION_49	CALL_2
0x73d0	            0x89c7	                            mov edi, eax	      4695	normal.c	FUNCTION_49	CALL_2
0x73d2	      0xe800000000	                          call 0x4007417	      4695	normal.c	FUNCTION_49	CALL_2
0x73d7	              0x90	                                     nop	      4696	normal.c	FUNCTION_49
0x73d8	              0xc9	                                   leave	      4696	normal.c	FUNCTION_49
0x73d9	              0xc3	                                     ret	      4696	normal.c	FUNCTION_49
nv_kundo	CALL,2:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	19
0xbcb5	              0x55	                                push rbp	      6977	normal.c	FUNCTION_87
0xbcb6	          0x4889e5	                            mov rbp, rsp	      6977	normal.c	FUNCTION_87
0xbcb9	        0x4883ec10	                           sub rsp, 0x10	      6977	normal.c	FUNCTION_87
0xbcbd	        0x48897df8	                mov qword [rbp - 8], rdi	      6977	normal.c	FUNCTION_87
0xbcc1	        0x488b45f8	                mov rax, qword [rbp - 8]	      6978	normal.c	FUNCTION_87	IF_1	CALL_1
0xbcc5	          0x488b00	                    mov rax, qword [rax]	      6978	normal.c	FUNCTION_87	IF_1	CALL_1
0xbcc8	          0x4889c7	                            mov rdi, rax	      6978	normal.c	FUNCTION_87	IF_1	CALL_1
0xbccb	      0xe8a89cffff	                  call sym.checkclearopq	      6978	normal.c	FUNCTION_87	IF_1	CALL_1
0xbcd0	            0x85c0	                           test eax, eax	      6978	normal.c	FUNCTION_87	IF_1	CALL_1
0xbcd2	            0x751d	                           jne 0x400bd31	      6978	normal.c	FUNCTION_87	IF_1	CALL_1
0xbcd4	        0x488b45f8	                mov rax, qword [rbp - 8]	      6980	normal.c	FUNCTION_87	IF_1	CALL_2
0xbcd8	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6980	normal.c	FUNCTION_87	IF_1	CALL_2
0xbcdc	            0x89c7	                            mov edi, eax	      6980	normal.c	FUNCTION_87	IF_1	CALL_2
0xbcde	      0xe800000000	                          call 0x400bd23	      6980	normal.c	FUNCTION_87	IF_1	CALL_2
0xbce3	    0x488b05000000	            mov rax, qword [0x0400bd2a] 	      6981	normal.c	FUNCTION_87	IF_1
0xbcea	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6981	normal.c	FUNCTION_87	IF_1
0xbcf1	              0x90	                                     nop	      6983	normal.c	FUNCTION_87
0xbcf2	              0xc9	                                   leave	      6983	normal.c	FUNCTION_87
0xbcf3	              0xc3	                                     ret	      6983	normal.c	FUNCTION_87
op_function	CALL,6:ELSE,3:DO,0:FOR,0:functions,0:IF,4:WHILE,0:SWITCH,0	71
0x344e	              0x55	                                push rbp	      2235	normal.c	FUNCTION_8
0x344f	          0x4889e5	                            mov rbp, rsp	      2235	normal.c	FUNCTION_8
0x3452	        0x4883ec30	                           sub rsp, 0x30	      2235	normal.c	FUNCTION_8
0x3456	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2235	normal.c	FUNCTION_8
0x345a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2235	normal.c	FUNCTION_8
0x3463	        0x488945f8	                mov qword [rbp - 8], rax	      2235	normal.c	FUNCTION_8
0x3467	            0x31c0	                            xor eax, eax	      2235	normal.c	FUNCTION_8
0x3469	    0x8b0500000000	            mov eax, dword [0x040034af] 	      2239	normal.c	FUNCTION_8
0x346f	          0x8945ec	             mov dword [rbp - 0x14], eax	      2239	normal.c	FUNCTION_8
0x3472	    0x488b05000000	            mov rax, qword [0x040034b9] 	      2242	normal.c	FUNCTION_8	IF_1
0x3479	           0xfb600	                   movzx eax, byte [rax]	      2242	normal.c	FUNCTION_8	IF_1
0x347c	            0x84c0	                             test al, al	      2242	normal.c	FUNCTION_8	IF_1
0x347e	            0x7517	                           jne 0x40034d7	      2242	normal.c	FUNCTION_8	IF_1
0x3480	      0xbf00000000	                              mov edi, 0	      2243	normal.c	FUNCTION_8	CALL_2
0x3485	      0xe800000000	                          call 0x40034ca	      2243	normal.c	FUNCTION_8	CALL_2
0x348a	          0x4889c7	                            mov rdi, rax	      2243	normal.c	FUNCTION_8	CALL_2
0x348d	      0xe800000000	                          call 0x40034d2	      2243	normal.c	FUNCTION_8	CALL_2
0x3492	      0xe9d1000000	                           jmp 0x40035a8	      2275	normal.c	FUNCTION_8
0x3497	    0x488b0d000000	            mov rcx, qword [0x040034de] 	      2247	normal.c	FUNCTION_8	ELSE_1
0x349e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2247	normal.c	FUNCTION_8	ELSE_1
0x34a2	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2247	normal.c	FUNCTION_8	ELSE_1
0x34a6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2247	normal.c	FUNCTION_8	ELSE_1
0x34aa	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      2247	normal.c	FUNCTION_8	ELSE_1
0x34b1	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      2247	normal.c	FUNCTION_8	ELSE_1
0x34b8	    0x488b0d000000	            mov rcx, qword [0x040034ff] 	      2248	normal.c	FUNCTION_8	ELSE_1
0x34bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2248	normal.c	FUNCTION_8	ELSE_1
0x34c3	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2248	normal.c	FUNCTION_8	ELSE_1
0x34c7	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2248	normal.c	FUNCTION_8	ELSE_1
0x34cb	    0x488981f01100	          mov qword [rcx + 0x11f0], rax 	      2248	normal.c	FUNCTION_8	ELSE_1
0x34d2	    0x488991f81100	          mov qword [rcx + 0x11f8], rdx 	      2248	normal.c	FUNCTION_8	ELSE_1
0x34d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2249	normal.c	FUNCTION_8	ELSE_1	IF_2
0x34dd	          0x8b4008	                mov eax, dword [rax + 8]	      2249	normal.c	FUNCTION_8	ELSE_1	IF_2
0x34e0	          0x83f801	                              cmp eax, 1	      2249	normal.c	FUNCTION_8	ELSE_1	IF_2
0x34e3	            0x7420	                            je 0x4003545	      2249	normal.c	FUNCTION_8	ELSE_1	IF_2
0x34e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2249	normal.c	FUNCTION_8	ELSE_1	IF_2
0x34e9	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2249	normal.c	FUNCTION_8	ELSE_1	IF_2
0x34ec	            0x85c0	                           test eax, eax	      2249	normal.c	FUNCTION_8	ELSE_1	IF_2
0x34ee	            0x7515	                           jne 0x4003545	      2249	normal.c	FUNCTION_8	ELSE_1	IF_2
0x34f0	    0x488b05000000	            mov rax, qword [0x04003537] 	      2251	normal.c	FUNCTION_8	ELSE_1	CALL_3
0x34f7	    0x4805f0110000	                         add rax, 0x11f0	      2251	normal.c	FUNCTION_8	ELSE_1	CALL_3
0x34fd	          0x4889c7	                            mov rdi, rax	      2251	normal.c	FUNCTION_8	ELSE_1	CALL_3
0x3500	      0xe800000000	                          call 0x4003545	      2251	normal.c	FUNCTION_8	ELSE_1	CALL_3
0x3505	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2253	normal.c	FUNCTION_8	ELSE_1	IF_3
0x3509	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2253	normal.c	FUNCTION_8	ELSE_1	IF_3
0x350c	            0x85c0	                           test eax, eax	      2253	normal.c	FUNCTION_8	ELSE_1	IF_3
0x350e	            0x740a	                            je 0x400355a	      2253	normal.c	FUNCTION_8	ELSE_1	IF_3
0x3510	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2254	normal.c	FUNCTION_8	ELSE_1	IF_3
0x3518	            0xeb1e	                           jmp 0x4003578	      2254	normal.c	FUNCTION_8	ELSE_1	IF_3
0x351a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2255	normal.c	FUNCTION_8	ELSE_1	ELSE_2	IF_4
0x351e	          0x8b4008	                mov eax, dword [rax + 8]	      2255	normal.c	FUNCTION_8	ELSE_1	ELSE_2	IF_4
0x3521	          0x83f801	                              cmp eax, 1	      2255	normal.c	FUNCTION_8	ELSE_1	ELSE_2	IF_4
0x3524	            0x750a	                           jne 0x4003570	      2255	normal.c	FUNCTION_8	ELSE_1	ELSE_2	IF_4
0x3526	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2256	normal.c	FUNCTION_8	ELSE_1	ELSE_2	IF_4
0x352e	            0xeb08	                           jmp 0x4003578	      2256	normal.c	FUNCTION_8	ELSE_1	ELSE_2	IF_4
0x3530	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2258	normal.c	FUNCTION_8	ELSE_1	ELSE_3
0x3538	    0xc70500000000	               mov dword [0x04003582], 2	      2263	normal.c	FUNCTION_8	ELSE_1
0x3542	    0x488b05000000	            mov rax, qword [0x04003589] 	      2266	normal.c	FUNCTION_8	ELSE_1	CALL_4
0x3549	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      2266	normal.c	FUNCTION_8	ELSE_1	CALL_4
0x354d	      0xb900000000	                              mov ecx, 0	      2266	normal.c	FUNCTION_8	ELSE_1	CALL_4
0x3552	      0xbe01000000	                              mov esi, 1	      2266	normal.c	FUNCTION_8	ELSE_1	CALL_4
0x3557	          0x4889c7	                            mov rdi, rax	      2266	normal.c	FUNCTION_8	ELSE_1	CALL_4
0x355a	      0xe800000000	                          call 0x400359f	      2266	normal.c	FUNCTION_8	ELSE_1	CALL_4
0x355f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2269	normal.c	FUNCTION_8	ELSE_1
0x3562	    0x890500000000	            mov dword [0x040035a8], eax 	      2269	normal.c	FUNCTION_8	ELSE_1
0x3568	              0x90	                                     nop	      2275	normal.c	FUNCTION_8
0x3569	        0x488b45f8	                mov rax, qword [rbp - 8]	      2275	normal.c	FUNCTION_8
0x356d	    0x644833042528	                xor rax, qword fs:[0x28]	      2275	normal.c	FUNCTION_8
0x3576	            0x7405	                            je 0x40035bd	      2275	normal.c	FUNCTION_8
0x3578	      0xe800000000	                          call 0x40035bd	      2275	normal.c	FUNCTION_8
0x357d	              0xc9	                                   leave	      2275	normal.c	FUNCTION_8
0x357e	              0xc3	                                     ret	      2275	normal.c	FUNCTION_8
nv_percent	CALL,8:ELSE,4:DO,0:FOR,0:functions,0:IF,6:WHILE,0:SWITCH,0	133
0xb879	              0x55	                                push rbp	      6834	normal.c	FUNCTION_82
0xb87a	          0x4889e5	                            mov rbp, rsp	      6834	normal.c	FUNCTION_82
0xb87d	        0x4883ec20	                           sub rsp, 0x20	      6834	normal.c	FUNCTION_82
0xb881	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6834	normal.c	FUNCTION_82
0xb885	    0x488b05000000	            mov rax, qword [0x0400b8cc] 	      6837	normal.c	FUNCTION_82
0xb88c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6837	normal.c	FUNCTION_82
0xb890	        0x488945f0	             mov qword [rbp - 0x10], rax	      6837	normal.c	FUNCTION_82
0xb894	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6840	normal.c	FUNCTION_82
0xb898	          0x488b00	                    mov rax, qword [rax]	      6840	normal.c	FUNCTION_82
0xb89b	    0xc74014010000	               mov dword [rax + 0x14], 1	      6840	normal.c	FUNCTION_82
0xb8a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6841	normal.c	FUNCTION_82	IF_1
0xb8a6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6841	normal.c	FUNCTION_82	IF_1
0xb8aa	          0x4885c0	                           test rax, rax	      6841	normal.c	FUNCTION_82	IF_1
0xb8ad	     0xf841e010000	                            je 0x400ba11	      6841	normal.c	FUNCTION_82	IF_1
0xb8b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6843	normal.c	FUNCTION_82	IF_1	IF_2
0xb8b7	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6843	normal.c	FUNCTION_82	IF_1	IF_2
0xb8bb	        0x4883f864	                           cmp rax, 0x64	      6843	normal.c	FUNCTION_82	IF_1	IF_2
0xb8bf	            0x7e14	                           jle 0x400b915	      6843	normal.c	FUNCTION_82	IF_1	IF_2
0xb8c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6844	normal.c	FUNCTION_82	IF_1	CALL_1
0xb8c5	          0x488b00	                    mov rax, qword [rax]	      6844	normal.c	FUNCTION_82	IF_1	CALL_1
0xb8c8	          0x4889c7	                            mov rdi, rax	      6844	normal.c	FUNCTION_82	IF_1	CALL_1
0xb8cb	      0xe818a1ffff	                    call sym.clearopbeep	      6844	normal.c	FUNCTION_82	IF_1	CALL_1
0xb8d0	      0xe98f010000	                           jmp 0x400baa4	      6844	normal.c	FUNCTION_82	IF_1	CALL_1
0xb8d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1
0xb8d9	          0x488b00	                    mov rax, qword [rax]	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1
0xb8dc	    0xc74008010000	                  mov dword [rax + 8], 1	      6847	normal.c	FUNCTION_82	IF_1	ELSE_1
0xb8e3	      0xe800000000	                          call 0x400b928	      6848	normal.c	FUNCTION_82	IF_1	ELSE_1	CALL_2
0xb8e8	    0x488b05000000	            mov rax, qword [0x0400b92f] 	      6851	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb8ef	          0x488b00	                    mov rax, qword [rax]	      6851	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb8f2	    0x483d40420f00	                        cmp rax, 0xf4240	      6851	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb8f8	            0x7e4c	                           jle 0x400b986	      6851	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb8fa	    0x488b35000000	            mov rsi, qword [0x0400b941] 	      6852	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb901	    0x488b05000000	            mov rax, qword [0x0400b948] 	      6852	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb908	          0x488b00	                    mov rax, qword [rax]	      6852	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb90b	        0x488d4863	                   lea rcx, [rax + 0x63]	      6852	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb90f	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      6853	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb919	          0x4889c8	                            mov rax, rcx	      6853	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb91c	          0x48f7ea	                                imul rdx	      6853	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb91f	        0x488d040a	                    lea rax, [rdx + rcx]	      6853	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb923	        0x48c1f806	                              sar rax, 6	      6853	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb927	          0x4889c2	                            mov rdx, rax	      6853	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb92a	          0x4889c8	                            mov rax, rcx	      6853	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb92d	        0x48c1f83f	                           sar rax, 0x3f	      6853	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb931	          0x4829c2	                            sub rdx, rax	      6853	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb934	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6853	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb938	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6853	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb93c	        0x480fafc2	                           imul rax, rdx	      6853	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb940	        0x48894638	             mov qword [rsi + 0x38], rax	      6852	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb944	            0xeb4d	                           jmp 0x400b9d3	      6852	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_3
0xb946	    0x488b35000000	            mov rsi, qword [0x0400b98d] 	      6855	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb94d	    0x488b05000000	            mov rax, qword [0x0400b994] 	      6855	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb954	          0x488b10	                    mov rdx, qword [rax]	      6855	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb957	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6856	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb95b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6856	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb95f	        0x480fafc2	                           imul rax, rdx	      6855	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb963	        0x488d4863	                   lea rcx, [rax + 0x63]	      6856	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb967	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      6856	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb971	          0x4889c8	                            mov rax, rcx	      6856	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb974	          0x48f7ea	                                imul rdx	      6856	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb977	        0x488d040a	                    lea rax, [rdx + rcx]	      6856	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb97b	        0x48c1f806	                              sar rax, 6	      6856	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb97f	          0x4889c2	                            mov rdx, rax	      6856	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb982	          0x4889c8	                            mov rax, rcx	      6856	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb985	        0x48c1f83f	                           sar rax, 0x3f	      6856	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb989	          0x4829c2	                            sub rdx, rax	      6856	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb98c	          0x4889d0	                            mov rax, rdx	      6856	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb98f	        0x48894638	             mov qword [rsi + 0x38], rax	      6855	normal.c	FUNCTION_82	IF_1	ELSE_1	ELSE_2
0xb993	    0x488b05000000	            mov rax, qword [0x0400b9da] 	      6857	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_4
0xb99a	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      6857	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_4
0xb99e	    0x488b05000000	            mov rax, qword [0x0400b9e5] 	      6857	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_4
0xb9a5	          0x488b00	                    mov rax, qword [rax]	      6857	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_4
0xb9a8	          0x4839c2	                            cmp rdx, rax	      6857	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_4
0xb9ab	            0x7e15	                           jle 0x400ba02	      6857	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_4
0xb9ad	    0x488b05000000	            mov rax, qword [0x0400b9f4] 	      6858	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_4
0xb9b4	    0x488b15000000	            mov rdx, qword [0x0400b9fb] 	      6858	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_4
0xb9bb	          0x488b12	                    mov rdx, qword [rdx]	      6858	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_4
0xb9be	        0x48895038	             mov qword [rax + 0x38], rdx	      6858	normal.c	FUNCTION_82	IF_1	ELSE_1	IF_4
0xb9c2	      0xbf06000000	                              mov edi, 6	      6859	normal.c	FUNCTION_82	IF_1	ELSE_1	CALL_3
0xb9c7	      0xe800000000	                          call 0x400ba0c	      6859	normal.c	FUNCTION_82	IF_1	ELSE_1	CALL_3
0xb9cc	      0xe993000000	                           jmp 0x400baa4	      6859	normal.c	FUNCTION_82	IF_1	ELSE_1	CALL_3
0xb9d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6864	normal.c	FUNCTION_82	ELSE_3
0xb9d5	          0x488b00	                    mov rax, qword [rax]	      6864	normal.c	FUNCTION_82	ELSE_3
0xb9d8	    0xc74008000000	                  mov dword [rax + 8], 0	      6864	normal.c	FUNCTION_82	ELSE_3
0xb9df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6865	normal.c	FUNCTION_82	ELSE_3
0xb9e3	          0x488b00	                    mov rax, qword [rax]	      6865	normal.c	FUNCTION_82	ELSE_3
0xb9e6	    0xc74010010000	               mov dword [rax + 0x10], 1	      6865	normal.c	FUNCTION_82	ELSE_3
0xb9ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6866	normal.c	FUNCTION_82	ELSE_3	IF_5	CALL_4
0xb9f1	          0x488b00	                    mov rax, qword [rax]	      6866	normal.c	FUNCTION_82	ELSE_3	IF_5	CALL_4
0xb9f4	      0xbe00000000	                              mov esi, 0	      6866	normal.c	FUNCTION_82	ELSE_3	IF_5	CALL_4
0xb9f9	          0x4889c7	                            mov rdi, rax	      6866	normal.c	FUNCTION_82	ELSE_3	IF_5	CALL_4
0xb9fc	      0xe800000000	                          call 0x400ba41	      6866	normal.c	FUNCTION_82	ELSE_3	IF_5	CALL_4
0xba01	        0x488945f8	                mov qword [rbp - 8], rax	      6866	normal.c	FUNCTION_82	ELSE_3	IF_5	CALL_4
0xba05	      0x48837df800	                  cmp qword [rbp - 8], 0	      6866	normal.c	FUNCTION_82	ELSE_3	IF_5	CALL_4
0xba0a	            0x7511	                           jne 0x400ba5d	      6866	normal.c	FUNCTION_82	ELSE_3	IF_5	CALL_4
0xba0c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6867	normal.c	FUNCTION_82	ELSE_3	CALL_5
0xba10	          0x488b00	                    mov rax, qword [rax]	      6867	normal.c	FUNCTION_82	ELSE_3	CALL_5
0xba13	          0x4889c7	                            mov rdi, rax	      6867	normal.c	FUNCTION_82	ELSE_3	CALL_5
0xba16	      0xe8cd9fffff	                    call sym.clearopbeep	      6867	normal.c	FUNCTION_82	ELSE_3	CALL_5
0xba1b	            0xeb47	                           jmp 0x400baa4	      6867	normal.c	FUNCTION_82	ELSE_3	CALL_5
0xba1d	      0xe800000000	                          call 0x400ba62	      6870	normal.c	FUNCTION_82	ELSE_3	ELSE_4	CALL_6
0xba22	    0x488b0d000000	            mov rcx, qword [0x0400ba69] 	      6871	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0xba29	        0x488b45f8	                mov rax, qword [rbp - 8]	      6871	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0xba2d	        0x488b5008	                mov rdx, qword [rax + 8]	      6871	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0xba31	          0x488b00	                    mov rax, qword [rax]	      6871	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0xba34	        0x48894138	             mov qword [rcx + 0x38], rax	      6871	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0xba38	        0x48895140	             mov qword [rcx + 0x40], rdx	      6871	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0xba3c	    0x488b05000000	            mov rax, qword [0x0400ba83] 	      6872	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0xba43	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6872	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0xba4a	    0x488b05000000	            mov rax, qword [0x0400ba91] 	      6874	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0xba51	    0xc74044000000	               mov dword [rax + 0x44], 0	      6874	normal.c	FUNCTION_82	ELSE_3	ELSE_4
0xba58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6876	normal.c	FUNCTION_82	ELSE_3	ELSE_4	CALL_7
0xba5c	          0x4889c7	                            mov rdi, rax	      6876	normal.c	FUNCTION_82	ELSE_3	ELSE_4	CALL_7
0xba5f	      0xe832370000	                 call sym.adjust_for_sel	      6876	normal.c	FUNCTION_82	ELSE_3	ELSE_4	CALL_7
0xba64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6880	normal.c	FUNCTION_82	IF_6
0xba68	          0x488b00	                    mov rax, qword [rax]	      6880	normal.c	FUNCTION_82	IF_6
0xba6b	            0x8b00	                    mov eax, dword [rax]	      6880	normal.c	FUNCTION_82	IF_6
0xba6d	            0x85c0	                           test eax, eax	      6880	normal.c	FUNCTION_82	IF_6
0xba6f	            0x752d	                           jne 0x400bade	      6880	normal.c	FUNCTION_82	IF_6
0xba71	    0x488b05000000	            mov rax, qword [0x0400bab8] 	      6881	normal.c	FUNCTION_82	IF_6
0xba78	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6881	normal.c	FUNCTION_82	IF_6
0xba7c	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      6881	normal.c	FUNCTION_82	IF_6
0xba80	            0x741c	                            je 0x400bade	      6881	normal.c	FUNCTION_82	IF_6
0xba82	    0x8b0500000000	            mov eax, dword [0x0400bac8] 	      6882	normal.c	FUNCTION_82	IF_6
0xba88	          0x83e010	                           and eax, 0x10	      6882	normal.c	FUNCTION_82	IF_6
0xba8b	            0x85c0	                           test eax, eax	      6882	normal.c	FUNCTION_82	IF_6
0xba8d	            0x740f	                            je 0x400bade	      6882	normal.c	FUNCTION_82	IF_6
0xba8f	    0x8b0500000000	            mov eax, dword [0x0400bad5] 	      6883	normal.c	FUNCTION_82	IF_6
0xba95	            0x85c0	                           test eax, eax	      6883	normal.c	FUNCTION_82	IF_6
0xba97	            0x7405	                            je 0x400bade	      6883	normal.c	FUNCTION_82	IF_6
0xba99	      0xe800000000	                          call 0x400bade	      6884	normal.c	FUNCTION_82	CALL_8
0xba9e	              0x90	                                     nop	      6886	normal.c	FUNCTION_82
0xba9f	              0xc9	                                   leave	      6886	normal.c	FUNCTION_82
0xbaa0	              0xc3	                                     ret	      6886	normal.c	FUNCTION_82
nv_esc	CALL,8:ELSE,1:DO,0:FOR,0:functions,0:IF,7:WHILE,0:SWITCH,0	88
0xf5f7	              0x55	                                push rbp	      8978	normal.c	FUNCTION_127
0xf5f8	          0x4889e5	                            mov rbp, rsp	      8978	normal.c	FUNCTION_127
0xf5fb	        0x4883ec20	                           sub rsp, 0x20	      8978	normal.c	FUNCTION_127
0xf5ff	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8978	normal.c	FUNCTION_127
0xf603	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8981	normal.c	FUNCTION_127
0xf607	          0x488b00	                    mov rax, qword [rax]	      8981	normal.c	FUNCTION_127
0xf60a	            0x8b00	                    mov eax, dword [rax]	      8981	normal.c	FUNCTION_127
0xf60c	            0x85c0	                           test eax, eax	      8985	normal.c	FUNCTION_127
0xf60e	            0x7539	                           jne 0x400f689	      8985	normal.c	FUNCTION_127
0xf610	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8982	normal.c	FUNCTION_127
0xf614	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8982	normal.c	FUNCTION_127
0xf618	          0x4885c0	                           test rax, rax	      8982	normal.c	FUNCTION_127
0xf61b	            0x752c	                           jne 0x400f689	      8982	normal.c	FUNCTION_127
0xf61d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8983	normal.c	FUNCTION_127
0xf621	        0x488b4028	            mov rax, qword [rax + 0x28] 	      8983	normal.c	FUNCTION_127
0xf625	          0x4885c0	                           test rax, rax	      8983	normal.c	FUNCTION_127
0xf628	            0x751f	                           jne 0x400f689	      8983	normal.c	FUNCTION_127
0xf62a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8984	normal.c	FUNCTION_127
0xf62e	          0x488b00	                    mov rax, qword [rax]	      8984	normal.c	FUNCTION_127
0xf631	          0x8b4004	                mov eax, dword [rax + 4]	      8984	normal.c	FUNCTION_127
0xf634	            0x85c0	                           test eax, eax	      8984	normal.c	FUNCTION_127
0xf636	            0x7511	                           jne 0x400f689	      8984	normal.c	FUNCTION_127
0xf638	    0x8b0500000000	            mov eax, dword [0x0400f67e] 	      8985	normal.c	FUNCTION_127
0xf63e	            0x85c0	                           test eax, eax	      8985	normal.c	FUNCTION_127
0xf640	            0x7507	                           jne 0x400f689	      8985	normal.c	FUNCTION_127
0xf642	      0xb801000000	                              mov eax, 1	      8985	normal.c	FUNCTION_127
0xf647	            0xeb05	                           jmp 0x400f68e	      8985	normal.c	FUNCTION_127
0xf649	      0xb800000000	                              mov eax, 0	      8985	normal.c	FUNCTION_127
0xf64e	          0x8945fc	                mov dword [rbp - 4], eax	      8981	normal.c	FUNCTION_127
0xf651	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8987	normal.c	FUNCTION_127	IF_1
0xf655	          0x8b4038	            mov eax, dword [rax + 0x38] 	      8987	normal.c	FUNCTION_127	IF_1
0xf658	            0x85c0	                           test eax, eax	      8987	normal.c	FUNCTION_127	IF_1
0xf65a	            0x746a	                            je 0x400f706	      8987	normal.c	FUNCTION_127	IF_1
0xf65c	    0x8b0500000000	            mov eax, dword [0x0400f6a2] 	      8989	normal.c	FUNCTION_127	IF_1	IF_2
0xf662	            0x85c0	                           test eax, eax	      8989	normal.c	FUNCTION_127	IF_1	IF_2
0xf664	            0x752c	                           jne 0x400f6d2	      8989	normal.c	FUNCTION_127	IF_1	IF_2
0xf666	    0x8b0500000000	            mov eax, dword [0x0400f6ac] 	      8991	normal.c	FUNCTION_127	IF_1	IF_2
0xf66c	            0x85c0	                           test eax, eax	      8991	normal.c	FUNCTION_127	IF_1	IF_2
0xf66e	            0x7522	                           jne 0x400f6d2	      8991	normal.c	FUNCTION_127	IF_1	IF_2
0xf670	    0x8b0500000000	            mov eax, dword [0x0400f6b6] 	      8993	normal.c	FUNCTION_127	IF_1	IF_2
0xf676	            0x85c0	                           test eax, eax	      8993	normal.c	FUNCTION_127	IF_1	IF_2
0xf678	            0x7518	                           jne 0x400f6d2	      8993	normal.c	FUNCTION_127	IF_1	IF_2
0xf67a	        0x837dfc00	                  cmp dword [rbp - 4], 0	      8994	normal.c	FUNCTION_127	IF_1	IF_2
0xf67e	            0x7412	                            je 0x400f6d2	      8994	normal.c	FUNCTION_127	IF_1	IF_2
0xf680	      0xbf00000000	                              mov edi, 0	      8995	normal.c	FUNCTION_127	IF_1	CALL_2
0xf685	      0xe800000000	                          call 0x400f6ca	      8995	normal.c	FUNCTION_127	IF_1	CALL_2
0xf68a	          0x4889c7	                            mov rdi, rax	      8995	normal.c	FUNCTION_127	IF_1	CALL_2
0xf68d	      0xe800000000	                          call 0x400f6d2	      8995	normal.c	FUNCTION_127	IF_1	CALL_2
0xf692	    0x8b0500000000	            mov eax, dword [0x0400f6d8] 	      8999	normal.c	FUNCTION_127	IF_1	IF_3
0xf698	            0x85c0	                           test eax, eax	      8999	normal.c	FUNCTION_127	IF_1	IF_3
0xf69a	            0x750a	                           jne 0x400f6e6	      8999	normal.c	FUNCTION_127	IF_1	IF_3
0xf69c	    0xc70500000000	               mov dword [0x0400f6e6], 0	      9000	normal.c	FUNCTION_127	IF_1	IF_3
0xf6a6	    0x8b0500000000	            mov eax, dword [0x0400f6ec] 	      9002	normal.c	FUNCTION_127	IF_1	IF_4
0xf6ac	            0x85c0	                           test eax, eax	      9002	normal.c	FUNCTION_127	IF_1	IF_4
0xf6ae	            0x7416	                            je 0x400f706	      9002	normal.c	FUNCTION_127	IF_1	IF_4
0xf6b0	    0xc70500000000	     mov dword [0x0400f6fa], 0xffffca03 	      9004	normal.c	FUNCTION_127	IF_1	IF_4
0xf6ba	    0xc70500000000	               mov dword [0x0400f704], 0	      9005	normal.c	FUNCTION_127	IF_1	IF_4
0xf6c4	            0xeb74	                           jmp 0x400f77a	      9006	normal.c	FUNCTION_127	IF_1	IF_4
0xf6c6	    0x8b0500000000	            mov eax, dword [0x0400f70c] 	      9011	normal.c	FUNCTION_127	IF_5
0xf6cc	            0x85c0	                           test eax, eax	      9011	normal.c	FUNCTION_127	IF_5
0xf6ce	            0x7424	                            je 0x400f734	      9011	normal.c	FUNCTION_127	IF_5
0xf6d0	      0xe800000000	                          call 0x400f715	      9013	normal.c	FUNCTION_127	IF_5	CALL_3
0xf6d5	      0xe800000000	                          call 0x400f71a	      9014	normal.c	FUNCTION_127	IF_5	CALL_4
0xf6da	    0x488b05000000	            mov rax, qword [0x0400f721] 	      9015	normal.c	FUNCTION_127	IF_5
0xf6e1	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      9015	normal.c	FUNCTION_127	IF_5
0xf6e8	      0xbf14000000	                           mov edi, 0x14	      9016	normal.c	FUNCTION_127	IF_5	CALL_5
0xf6ed	      0xe800000000	                          call 0x400f732	      9016	normal.c	FUNCTION_127	IF_5	CALL_5
0xf6f2	            0xeb10	                           jmp 0x400f744	      9016	normal.c	FUNCTION_127	IF_5	CALL_5
0xf6f4	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9018	normal.c	FUNCTION_127	ELSE_1	IF_6
0xf6f8	            0x740a	                            je 0x400f744	      9018	normal.c	FUNCTION_127	ELSE_1	IF_6
0xf6fa	      0xbf80000000	                           mov edi, 0x80	      9019	normal.c	FUNCTION_127	ELSE_1	IF_6
0xf6ff	      0xe800000000	                          call 0x400f744	      9019	normal.c	FUNCTION_127	ELSE_1	IF_6
0xf704	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9020	normal.c	FUNCTION_127	CALL_7
0xf708	          0x488b00	                    mov rax, qword [rax]	      9020	normal.c	FUNCTION_127	CALL_7
0xf70b	          0x4889c7	                            mov rdi, rax	      9020	normal.c	FUNCTION_127	CALL_7
0xf70e	      0xe89f62ffff	                        call sym.clearop	      9020	normal.c	FUNCTION_127	CALL_7
0xf713	    0x8b0500000000	            mov eax, dword [0x0400f759] 	      9024	normal.c	FUNCTION_127	IF_7	CALL_8
0xf719	            0x85c0	                           test eax, eax	      9024	normal.c	FUNCTION_127	IF_7	CALL_8
0xf71b	            0x751d	                           jne 0x400f77a	      9024	normal.c	FUNCTION_127	IF_7	CALL_8
0xf71d	      0xe800000000	                          call 0x400f762	      9024	normal.c	FUNCTION_127	IF_7	CALL_8
0xf722	            0x85c0	                           test eax, eax	      9024	normal.c	FUNCTION_127	IF_7	CALL_8
0xf724	            0x7414	                            je 0x400f77a	      9024	normal.c	FUNCTION_127	IF_7	CALL_8
0xf726	    0x8b0500000000	            mov eax, dword [0x0400f76c] 	      9024	normal.c	FUNCTION_127	IF_7	CALL_8
0xf72c	            0x85c0	                           test eax, eax	      9024	normal.c	FUNCTION_127	IF_7	CALL_8
0xf72e	            0x750a	                           jne 0x400f77a	      9024	normal.c	FUNCTION_127	IF_7	CALL_8
0xf730	    0xc70500000000	           mov dword [0x0400f77a], 0x61 	      9025	normal.c	FUNCTION_127	IF_7
0xf73a	              0xc9	                                   leave	      9026	normal.c	FUNCTION_127
0xf73b	              0xc3	                                     ret	      9026	normal.c	FUNCTION_127
nv_suspend	CALL,3:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	17
0xd632	              0x55	                                push rbp	      7868	normal.c	FUNCTION_106
0xd633	          0x4889e5	                            mov rbp, rsp	      7868	normal.c	FUNCTION_106
0xd636	        0x4883ec10	                           sub rsp, 0x10	      7868	normal.c	FUNCTION_106
0xd63a	        0x48897df8	                mov qword [rbp - 8], rdi	      7868	normal.c	FUNCTION_106
0xd63e	        0x488b45f8	                mov rax, qword [rbp - 8]	      7869	normal.c	FUNCTION_106	CALL_1
0xd642	          0x488b00	                    mov rax, qword [rax]	      7869	normal.c	FUNCTION_106	CALL_1
0xd645	          0x4889c7	                            mov rdi, rax	      7869	normal.c	FUNCTION_106	CALL_1
0xd648	      0xe86583ffff	                        call sym.clearop	      7869	normal.c	FUNCTION_106	CALL_1
0xd64d	    0x8b0500000000	            mov eax, dword [0x0400d693] 	      7870	normal.c	FUNCTION_106	IF_1
0xd653	            0x85c0	                           test eax, eax	      7870	normal.c	FUNCTION_106	IF_1
0xd655	            0x7405	                            je 0x400d69c	      7870	normal.c	FUNCTION_106	IF_1
0xd657	      0xe800000000	                          call 0x400d69c	      7871	normal.c	FUNCTION_106	CALL_2
0xd65c	      0xbf00000000	                              mov edi, 0	      7872	normal.c	FUNCTION_106	CALL_3
0xd661	      0xe800000000	                          call 0x400d6a6	      7872	normal.c	FUNCTION_106	CALL_3
0xd666	              0x90	                                     nop	      7873	normal.c	FUNCTION_106
0xd667	              0xc9	                                   leave	      7873	normal.c	FUNCTION_106
0xd668	              0xc3	                                     ret	      7873	normal.c	FUNCTION_106
nv_beginline	CALL,2:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	31
0xf12a	              0x55	                                push rbp	      8826	normal.c	FUNCTION_121
0xf12b	          0x4889e5	                            mov rbp, rsp	      8826	normal.c	FUNCTION_121
0xf12e	        0x4883ec10	                           sub rsp, 0x10	      8826	normal.c	FUNCTION_121
0xf132	        0x48897df8	                mov qword [rbp - 8], rdi	      8826	normal.c	FUNCTION_121
0xf136	        0x488b45f8	                mov rax, qword [rbp - 8]	      8827	normal.c	FUNCTION_121
0xf13a	          0x488b00	                    mov rax, qword [rax]	      8827	normal.c	FUNCTION_121
0xf13d	    0xc74008000000	                  mov dword [rax + 8], 0	      8827	normal.c	FUNCTION_121
0xf144	        0x488b45f8	                mov rax, qword [rbp - 8]	      8828	normal.c	FUNCTION_121
0xf148	          0x488b00	                    mov rax, qword [rax]	      8828	normal.c	FUNCTION_121
0xf14b	    0xc74014000000	               mov dword [rax + 0x14], 0	      8828	normal.c	FUNCTION_121
0xf152	        0x488b45f8	                mov rax, qword [rbp - 8]	      8829	normal.c	FUNCTION_121	CALL_1
0xf156	          0x8b4038	            mov eax, dword [rax + 0x38] 	      8829	normal.c	FUNCTION_121	CALL_1
0xf159	            0x89c7	                            mov edi, eax	      8829	normal.c	FUNCTION_121	CALL_1
0xf15b	      0xe800000000	                          call 0x400f1a0	      8829	normal.c	FUNCTION_121	CALL_1
0xf160	    0x8b0500000000	            mov eax, dword [0x0400f1a6] 	      8831	normal.c	FUNCTION_121	IF_1
0xf166	          0x83e004	                              and eax, 4	      8831	normal.c	FUNCTION_121	IF_1
0xf169	            0x85c0	                           test eax, eax	      8831	normal.c	FUNCTION_121	IF_1
0xf16b	            0x741c	                            je 0x400f1c9	      8831	normal.c	FUNCTION_121	IF_1
0xf16d	    0x8b0500000000	            mov eax, dword [0x0400f1b3] 	      8831	normal.c	FUNCTION_121	IF_1
0xf173	            0x85c0	                           test eax, eax	      8831	normal.c	FUNCTION_121	IF_1
0xf175	            0x7412	                            je 0x400f1c9	      8831	normal.c	FUNCTION_121	IF_1
0xf177	        0x488b45f8	                mov rax, qword [rbp - 8]	      8831	normal.c	FUNCTION_121	IF_1
0xf17b	          0x488b00	                    mov rax, qword [rax]	      8831	normal.c	FUNCTION_121	IF_1
0xf17e	            0x8b00	                    mov eax, dword [rax]	      8831	normal.c	FUNCTION_121	IF_1
0xf180	            0x85c0	                           test eax, eax	      8831	normal.c	FUNCTION_121	IF_1
0xf182	            0x7505	                           jne 0x400f1c9	      8831	normal.c	FUNCTION_121	IF_1
0xf184	      0xe800000000	                          call 0x400f1c9	      8832	normal.c	FUNCTION_121	CALL_2
0xf189	    0xc70500000000	               mov dword [0x0400f1d3], 0	      8834	normal.c	FUNCTION_121
0xf193	              0x90	                                     nop	      8836	normal.c	FUNCTION_121
0xf194	              0xc9	                                   leave	      8836	normal.c	FUNCTION_121
0xf195	              0xc3	                                     ret	      8836	normal.c	FUNCTION_121
nv_help	CALL,2:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	15
0x6548	              0x55	                                push rbp	      4177	normal.c	FUNCTION_40
0x6549	          0x4889e5	                            mov rbp, rsp	      4177	normal.c	FUNCTION_40
0x654c	        0x4883ec10	                           sub rsp, 0x10	      4177	normal.c	FUNCTION_40
0x6550	        0x48897df8	                mov qword [rbp - 8], rdi	      4177	normal.c	FUNCTION_40
0x6554	        0x488b45f8	                mov rax, qword [rbp - 8]	      4178	normal.c	FUNCTION_40	IF_1	CALL_1
0x6558	          0x488b00	                    mov rax, qword [rax]	      4178	normal.c	FUNCTION_40	IF_1	CALL_1
0x655b	          0x4889c7	                            mov rdi, rax	      4178	normal.c	FUNCTION_40	IF_1	CALL_1
0x655e	      0xe815f4ffff	                  call sym.checkclearopq	      4178	normal.c	FUNCTION_40	IF_1	CALL_1
0x6563	            0x85c0	                           test eax, eax	      4178	normal.c	FUNCTION_40	IF_1	CALL_1
0x6565	            0x750a	                           jne 0x40065b1	      4178	normal.c	FUNCTION_40	IF_1	CALL_1
0x6567	      0xbf00000000	                              mov edi, 0	      4179	normal.c	FUNCTION_40	CALL_2
0x656c	      0xe800000000	                          call 0x40065b1	      4179	normal.c	FUNCTION_40	CALL_2
0x6571	              0x90	                                     nop	      4180	normal.c	FUNCTION_40
0x6572	              0xc9	                                   leave	      4180	normal.c	FUNCTION_40
0x6573	              0xc3	                                     ret	      4180	normal.c	FUNCTION_40
nv_end	CALL,2:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	25
0xa468	              0x55	                                push rbp	      6284	normal.c	FUNCTION_75
0xa469	          0x4889e5	                            mov rbp, rsp	      6284	normal.c	FUNCTION_75
0xa46c	        0x4883ec10	                           sub rsp, 0x10	      6284	normal.c	FUNCTION_75
0xa470	        0x48897df8	                mov qword [rbp - 8], rdi	      6284	normal.c	FUNCTION_75
0xa474	        0x488b45f8	                mov rax, qword [rbp - 8]	      6285	normal.c	FUNCTION_75	IF_1
0xa478	          0x8b4038	            mov eax, dword [rax + 0x38] 	      6285	normal.c	FUNCTION_75	IF_1
0xa47b	            0x85c0	                           test eax, eax	      6285	normal.c	FUNCTION_75	IF_1
0xa47d	            0x750d	                           jne 0x400a4cc	      6285	normal.c	FUNCTION_75	IF_1
0xa47f	    0x8b0500000000	            mov eax, dword [0x0400a4c5] 	      6285	normal.c	FUNCTION_75	IF_1
0xa485	          0x83e004	                              and eax, 4	      6285	normal.c	FUNCTION_75	IF_1
0xa488	            0x85c0	                           test eax, eax	      6285	normal.c	FUNCTION_75	IF_1
0xa48a	            0x7423	                            je 0x400a4ef	      6285	normal.c	FUNCTION_75	IF_1
0xa48c	        0x488b45f8	                mov rax, qword [rbp - 8]	      6287	normal.c	FUNCTION_75	IF_1
0xa490	    0xc74038010000	               mov dword [rax + 0x38], 1	      6287	normal.c	FUNCTION_75	IF_1
0xa497	        0x488b45f8	                mov rax, qword [rbp - 8]	      6288	normal.c	FUNCTION_75	IF_1	CALL_1
0xa49b	          0x4889c7	                            mov rdi, rax	      6288	normal.c	FUNCTION_75	IF_1	CALL_1
0xa49e	      0xe8c04f0000	                        call sym.nv_goto	      6288	normal.c	FUNCTION_75	IF_1	CALL_1
0xa4a3	        0x488b45f8	                mov rax, qword [rbp - 8]	      6289	normal.c	FUNCTION_75	IF_1
0xa4a7	    0x48c740300100	               mov qword [rax + 0x30], 1	      6289	normal.c	FUNCTION_75	IF_1
0xa4af	        0x488b45f8	                mov rax, qword [rbp - 8]	      6291	normal.c	FUNCTION_75	CALL_2
0xa4b3	          0x4889c7	                            mov rdi, rax	      6291	normal.c	FUNCTION_75	CALL_2
0xa4b6	      0xe803000000	                      call sym.nv_dollar	      6291	normal.c	FUNCTION_75	CALL_2
0xa4bb	              0x90	                                     nop	      6292	normal.c	FUNCTION_75
0xa4bc	              0xc9	                                   leave	      6292	normal.c	FUNCTION_75
0xa4bd	              0xc3	                                     ret	      6292	normal.c	FUNCTION_75
nv_window	CALL,3:ELSE,1:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	33
0xd5c2	              0x55	                                push rbp	      7851	normal.c	FUNCTION_105
0xd5c3	          0x4889e5	                            mov rbp, rsp	      7851	normal.c	FUNCTION_105
0xd5c6	        0x4883ec10	                           sub rsp, 0x10	      7851	normal.c	FUNCTION_105
0xd5ca	        0x48897df8	                mov qword [rbp - 8], rdi	      7851	normal.c	FUNCTION_105
0xd5ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      7852	normal.c	FUNCTION_105	IF_1
0xd5d2	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7852	normal.c	FUNCTION_105	IF_1
0xd5d5	          0x83f83a	                           cmp eax, 0x3a	      7852	normal.c	FUNCTION_105	IF_1
0xd5d8	            0x7524	                           jne 0x400d63e	      7852	normal.c	FUNCTION_105	IF_1
0xd5da	        0x488b45f8	                mov rax, qword [rbp - 8]	      7855	normal.c	FUNCTION_105	IF_1
0xd5de	    0xc7400c3a0000	            mov dword [rax + 0xc], 0x3a 	      7855	normal.c	FUNCTION_105	IF_1
0xd5e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      7856	normal.c	FUNCTION_105	IF_1
0xd5e9	    0xc74010000000	               mov dword [rax + 0x10], 0	      7856	normal.c	FUNCTION_105	IF_1
0xd5f0	        0x488b45f8	                mov rax, qword [rbp - 8]	      7857	normal.c	FUNCTION_105	IF_1	CALL_1
0xd5f4	          0x4889c7	                            mov rdi, rax	      7857	normal.c	FUNCTION_105	IF_1	CALL_1
0xd5f7	      0xe83cb2ffff	                       call sym.nv_colon	      7857	normal.c	FUNCTION_105	IF_1	CALL_1
0xd5fc	            0xeb31	                           jmp 0x400d66f	      7861	normal.c	FUNCTION_105
0xd5fe	        0x488b45f8	                mov rax, qword [rbp - 8]	      7859	normal.c	FUNCTION_105	ELSE_1	IF_2	CALL_2
0xd602	          0x488b00	                    mov rax, qword [rax]	      7859	normal.c	FUNCTION_105	ELSE_1	IF_2	CALL_2
0xd605	          0x4889c7	                            mov rdi, rax	      7859	normal.c	FUNCTION_105	ELSE_1	IF_2	CALL_2
0xd608	      0xe83b83ffff	                   call sym.checkclearop	      7859	normal.c	FUNCTION_105	ELSE_1	IF_2	CALL_2
0xd60d	            0x85c0	                           test eax, eax	      7859	normal.c	FUNCTION_105	ELSE_1	IF_2	CALL_2
0xd60f	            0x751e	                           jne 0x400d66f	      7859	normal.c	FUNCTION_105	ELSE_1	IF_2	CALL_2
0xd611	        0x488b45f8	                mov rax, qword [rbp - 8]	      7860	normal.c	FUNCTION_105	ELSE_1	IF_2
0xd615	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      7860	normal.c	FUNCTION_105	ELSE_1	IF_2
0xd619	        0x488b45f8	                mov rax, qword [rbp - 8]	      7860	normal.c	FUNCTION_105	ELSE_1	IF_2
0xd61d	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7860	normal.c	FUNCTION_105	ELSE_1	IF_2
0xd620	      0xba00000000	                              mov edx, 0	      7860	normal.c	FUNCTION_105	ELSE_1	IF_2
0xd625	          0x4889ce	                            mov rsi, rcx	      7860	normal.c	FUNCTION_105	ELSE_1	IF_2
0xd628	            0x89c7	                            mov edi, eax	      7860	normal.c	FUNCTION_105	ELSE_1	IF_2
0xd62a	      0xe800000000	                          call 0x400d66f	      7860	normal.c	FUNCTION_105	ELSE_1	IF_2
0xd62f	              0x90	                                     nop	      7861	normal.c	FUNCTION_105
0xd630	              0xc9	                                   leave	      7861	normal.c	FUNCTION_105
0xd631	              0xc3	                                     ret	      7861	normal.c	FUNCTION_105
nv_brackets	CALL,47:ELSE,20:DO,0:FOR,4:functions,0:IF,45:WHILE,1:SWITCH,0	885
0xa9c6	              0x55	                                push rbp	      6465	normal.c	FUNCTION_81
0xa9c7	          0x4889e5	                            mov rbp, rsp	      6465	normal.c	FUNCTION_81
0xa9ca	            0x4156	                                push r14	      6465	normal.c	FUNCTION_81
0xa9cc	            0x4155	                                push r13	      6465	normal.c	FUNCTION_81
0xa9ce	            0x4154	                                push r12	      6465	normal.c	FUNCTION_81
0xa9d0	              0x53	                                push rbx	      6465	normal.c	FUNCTION_81
0xa9d1	    0x4881eca00000	                           sub rsp, 0xa0	      6465	normal.c	FUNCTION_81
0xa9d8	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      6465	normal.c	FUNCTION_81
0xa9df	    0x64488b042528	                mov rax, qword fs:[0x28]	      6465	normal.c	FUNCTION_81
0xa9e8	        0x488945d8	             mov qword [rbp - 0x28], rax	      6465	normal.c	FUNCTION_81
0xa9ec	            0x31c0	                            xor eax, eax	      6465	normal.c	FUNCTION_81
0xa9ee	    0x48c745900000	               mov qword [rbp - 0x70], 0	      6466	normal.c	FUNCTION_81	CALL_1
0xa9f6	    0xc74598000000	               mov dword [rbp - 0x68], 0	      6466	normal.c	FUNCTION_81	CALL_1
0xa9fd	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      6466	normal.c	FUNCTION_81	CALL_1
0xaa04	    0x48c745800000	               mov qword [rbp - 0x80], 0	      6468	normal.c	FUNCTION_81
0xaa0c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6475	normal.c	FUNCTION_81
0xaa13	          0x488b00	                    mov rax, qword [rax]	      6475	normal.c	FUNCTION_81
0xaa16	    0xc74008000000	                  mov dword [rax + 8], 0	      6475	normal.c	FUNCTION_81
0xaa1d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6476	normal.c	FUNCTION_81
0xaa24	          0x488b00	                    mov rax, qword [rax]	      6476	normal.c	FUNCTION_81
0xaa27	    0xc74014000000	               mov dword [rax + 0x14], 0	      6476	normal.c	FUNCTION_81
0xaa2e	    0x488b05000000	            mov rax, qword [0x0400aa75] 	      6477	normal.c	FUNCTION_81
0xaa35	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      6477	normal.c	FUNCTION_81
0xaa39	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6477	normal.c	FUNCTION_81
0xaa3d	        0x488945a0	             mov qword [rbp - 0x60], rax	      6477	normal.c	FUNCTION_81
0xaa41	        0x488955a8	             mov qword [rbp - 0x58], rdx	      6477	normal.c	FUNCTION_81
0xaa45	    0x488b05000000	            mov rax, qword [0x0400aa8c] 	      6479	normal.c	FUNCTION_81
0xaa4c	    0xc74044000000	               mov dword [rax + 0x44], 0	      6479	normal.c	FUNCTION_81
0xaa53	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6486	normal.c	FUNCTION_81	IF_1
0xaa5a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6486	normal.c	FUNCTION_81	IF_1
0xaa5d	          0x83f866	                           cmp eax, 0x66	      6486	normal.c	FUNCTION_81	IF_1
0xaa60	            0x7514	                           jne 0x400aab6	      6486	normal.c	FUNCTION_81	IF_1
0xaa62	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6487	normal.c	FUNCTION_81	CALL_2
0xaa69	          0x4889c7	                            mov rdi, rax	      6487	normal.c	FUNCTION_81	CALL_2
0xaa6c	      0xe86ff8ffff	                    call sym.nv_gotofile	      6487	normal.c	FUNCTION_81	CALL_2
0xaa71	      0xe9e10d0000	                           jmp 0x400b897	      6827	normal.c	FUNCTION_81
0xaa76	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6501	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_3
0xaa7d	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6501	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_3
0xaa80	            0x89c6	                            mov esi, eax	      6501	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_3
0xaa82	      0xbf00000000	                              mov edi, 0	      6501	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_3
0xaa87	      0xe800000000	                          call 0x400aacc	      6501	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_3
0xaa8c	          0x4885c0	                           test rax, rax	      6501	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_3
0xaa8f	     0xf8475010000	                            je 0x400ac4a	      6501	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_3
0xaa95	        0x488d45c0	                   lea rax, [rbp - 0x40]	      6512	normal.c	FUNCTION_81	ELSE_1	IF_2	IF_3	CALL_4
0xaa99	      0xbe01000000	                              mov esi, 1	      6512	normal.c	FUNCTION_81	ELSE_1	IF_2	IF_3	CALL_4
0xaa9e	          0x4889c7	                            mov rdi, rax	      6512	normal.c	FUNCTION_81	ELSE_1	IF_2	IF_3	CALL_4
0xaaa1	      0xe800000000	                          call 0x400aae6	      6512	normal.c	FUNCTION_81	ELSE_1	IF_2	IF_3	CALL_4
0xaaa6	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      6512	normal.c	FUNCTION_81	ELSE_1	IF_2	IF_3	CALL_4
0xaaac	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      6512	normal.c	FUNCTION_81	ELSE_1	IF_2	IF_3	CALL_4
0xaab3	            0x7517	                           jne 0x400ab0c	      6512	normal.c	FUNCTION_81	ELSE_1	IF_2	IF_3	CALL_4
0xaab5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6513	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_5
0xaabc	          0x488b00	                    mov rax, qword [rax]	      6513	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_5
0xaabf	          0x4889c7	                            mov rdi, rax	      6513	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_5
0xaac2	      0xe8ebaeffff	                        call sym.clearop	      6513	normal.c	FUNCTION_81	ELSE_1	IF_2	CALL_5
0xaac7	      0xe98b0d0000	                           jmp 0x400b897	      6827	normal.c	FUNCTION_81
0xaacc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6522	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2
0xaad3	          0x8b400c	              mov eax, dword [rax + 0xc]	      6522	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2
0xaad6	          0x83f85d	                           cmp eax, 0x5d	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xaad9	            0x7511	                           jne 0x400ab2c	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xaadb	    0x488b05000000	            mov rax, qword [0x0400ab22] 	      6522	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2
0xaae2	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6522	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2
0xaae6	        0x4c8d6801	                      lea r13, [rax + 1]	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xaaea	            0xeb06	                           jmp 0x400ab32	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xaaec	    0x41bd01000000	                             mov r13d, 1	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xaaf2	      0xe800000000	                          call 0x400ab37	      6520	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_8
0xaaf7	          0x488b10	                    mov rdx, qword [rax]	      6520	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_8
0xaafa	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6520	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_8
0xab01	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6520	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_8
0xab04	            0x4898	                                    cdqe	      6520	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_8
0xab06	          0x4801c0	                            add rax, rax	      6520	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_8
0xab09	          0x4801d0	                            add rax, rdx	      6520	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_8
0xab0c	           0xfb700	                   movzx eax, word [rax]	      6520	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_8
0xab0f	           0xfb7c0	                           movzx eax, ax	      6520	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_8
0xab12	      0x2500010000	                          and eax, 0x100	      6520	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_8
0xab17	            0x85c0	                           test eax, eax	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xab19	            0x7537	                           jne 0x400ab92	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xab1b	      0xe800000000	                          call 0x400ab60	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab20	          0x488b10	                    mov rdx, qword [rax]	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab23	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab2a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab2d	            0x4898	                                    cdqe	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab2f	          0x4801c0	                            add rax, rax	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab32	          0x4801d0	                            add rax, rdx	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab35	           0xfb700	                   movzx eax, word [rax]	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab38	           0xfb7c0	                           movzx eax, ax	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab3b	      0x2500020000	                          and eax, 0x200	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab40	            0x85c0	                           test eax, eax	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab42	            0x7407	                            je 0x400ab8b	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab44	      0xbb01000000	                              mov ebx, 1	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab49	            0xeb0c	                           jmp 0x400ab97	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab4b	      0xbb02000000	                              mov ebx, 2	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab50	            0xeb05	                           jmp 0x400ab97	      6521	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_9
0xab52	      0xbb04000000	                              mov ebx, 4	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xab57	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xab5e	        0x4c8b6030	            mov r12, qword [rax + 0x30] 	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xab62	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6518	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2
0xab69	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6518	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2
0xab6c	          0x83e00f	                            and eax, 0xf	      6518	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2
0xab6f	          0x83f804	                              cmp eax, 4	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xab72	            0x7508	                           jne 0x400abbc	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xab74	    0x41be02000000	                             mov r14d, 2	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xab7a	            0xeb06	                           jmp 0x400abc2	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xab7c	    0x41be01000000	                             mov r14d, 1	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xab82	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_7
0xab89	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_7
0xab8d	          0x4885c0	                           test rax, rax	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xab90	            0x7530	                           jne 0x400ac02	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xab92	      0xe800000000	                          call 0x400abd7	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_7
0xab97	          0x488b10	                    mov rdx, qword [rax]	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_7
0xab9a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_7
0xaba1	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_7
0xaba4	            0x4898	                                    cdqe	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_7
0xaba6	          0x4801c0	                            add rax, rax	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_7
0xaba9	          0x4801d0	                            add rax, rdx	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_7
0xabac	           0xfb700	                   movzx eax, word [rax]	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_7
0xabaf	           0xfb7c0	                           movzx eax, ax	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_7
0xabb2	      0x2500010000	                          and eax, 0x100	      6517	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_7
0xabb7	            0x85c0	                           test eax, eax	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabb9	            0x7507	                           jne 0x400ac02	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabbb	      0xb901000000	                              mov ecx, 1	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabc0	            0xeb05	                           jmp 0x400ac07	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabc2	      0xb900000000	                              mov ecx, 0	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabc7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabcb	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabd1	      0x68ffffff7f	                         push 0x7fffffff	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabd6	            0x4155	                                push r13	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabd8	              0x53	                                push rbx	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabd9	            0x4154	                                push r12	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabdb	          0x4589f1	                           mov r9d, r14d	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabde	          0x4189c8	                            mov r8d, ecx	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabe1	      0xb901000000	                              mov ecx, 1	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabe6	      0xbe00000000	                              mov esi, 0	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabeb	          0x4889c7	                            mov rdi, rax	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabee	      0xe800000000	                          call 0x400ac33	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabf3	        0x4883c420	                           add rsp, 0x20	      6516	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2	CALL_6
0xabf7	    0x488b05000000	            mov rax, qword [0x0400ac3e] 	      6524	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2
0xabfe	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6524	normal.c	FUNCTION_81	ELSE_1	IF_2	ELSE_2
0xac05	      0xe94d0c0000	                           jmp 0x400b897	      6827	normal.c	FUNCTION_81
0xac0a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6537	normal.c	FUNCTION_81	ELSE_3	IF_4
0xac11	          0x8b400c	              mov eax, dword [rax + 0xc]	      6537	normal.c	FUNCTION_81	ELSE_3	IF_4
0xac14	          0x83f85b	                           cmp eax, 0x5b	      6537	normal.c	FUNCTION_81	ELSE_3	IF_4
0xac17	            0x751b	                           jne 0x400ac74	      6537	normal.c	FUNCTION_81	ELSE_3	IF_4
0xac19	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6538	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_10
0xac20	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6538	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_10
0xac23	            0x89c6	                            mov esi, eax	      6538	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_10
0xac25	      0xbf00000000	                              mov edi, 0	      6538	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_10
0xac2a	      0xe800000000	                          call 0x400ac6f	      6538	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_10
0xac2f	          0x4885c0	                           test rax, rax	      6538	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_10
0xac32	            0x7532	                           jne 0x400aca6	      6538	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_10
0xac34	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6539	normal.c	FUNCTION_81	ELSE_3	IF_4
0xac3b	          0x8b400c	              mov eax, dword [rax + 0xc]	      6539	normal.c	FUNCTION_81	ELSE_3	IF_4
0xac3e	          0x83f85d	                           cmp eax, 0x5d	      6539	normal.c	FUNCTION_81	ELSE_3	IF_4
0xac41	     0xf854a040000	                           jne 0x400b0d1	      6539	normal.c	FUNCTION_81	ELSE_3	IF_4
0xac47	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6540	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_11
0xac4e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6540	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_11
0xac51	            0x89c6	                            mov esi, eax	      6540	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_11
0xac53	      0xbf00000000	                              mov edi, 0	      6540	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_11
0xac58	      0xe800000000	                          call 0x400ac9d	      6540	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_11
0xac5d	          0x4885c0	                           test rax, rax	      6540	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_11
0xac60	     0xf842b040000	                            je 0x400b0d1	      6540	normal.c	FUNCTION_81	ELSE_3	IF_4	CALL_11
0xac66	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6542	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_5
0xac6d	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6542	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_5
0xac70	          0x83f82a	                           cmp eax, 0x2a	      6542	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_5
0xac73	            0x750e	                           jne 0x400acc3	      6542	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_5
0xac75	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6543	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_5
0xac7c	    0xc740102f0000	           mov dword [rax + 0x10], 0x2f 	      6543	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_5
0xac83	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      6544	normal.c	FUNCTION_81	ELSE_3	IF_4
0xac8b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6545	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6
0xac92	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6545	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6
0xac95	          0x83f86d	                           cmp eax, 0x6d	      6545	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6
0xac98	            0x740f	                            je 0x400ace9	      6545	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6
0xac9a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6545	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6
0xaca1	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6545	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6
0xaca4	          0x83f84d	                           cmp eax, 0x4d	      6545	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6
0xaca7	            0x752f	                           jne 0x400ad18	      6545	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6
0xaca9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6547	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6	IF_7
0xacb0	          0x8b400c	              mov eax, dword [rax + 0xc]	      6547	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6	IF_7
0xacb3	          0x83f85b	                           cmp eax, 0x5b	      6547	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6	IF_7
0xacb6	            0x750c	                           jne 0x400ad04	      6547	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6	IF_7
0xacb8	    0xc78564ffffff	           mov dword [rbp - 0x9c], 0x7b 	      6548	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6	IF_7
0xacc2	            0xeb0a	                           jmp 0x400ad0e	      6548	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6	IF_7
0xacc4	    0xc78564ffffff	           mov dword [rbp - 0x9c], 0x7d 	      6550	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6	ELSE_4
0xacce	    0x48c745880f27	          mov qword [rbp - 0x78], 0x270f	      6551	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6	ELSE_4
0xacd6	            0xeb1f	                           jmp 0x400ad37	      6551	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_6	ELSE_4
0xacd8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6555	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	ELSE_5
0xacdf	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6555	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	ELSE_5
0xace2	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	      6555	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	ELSE_5
0xace8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6556	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	ELSE_5
0xacef	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6556	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	ELSE_5
0xacf3	        0x48894588	             mov qword [rbp - 0x78], rax	      6556	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	ELSE_5
0xacf7	      0xe9ca000000	                           jmp 0x400ae06	      6558	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1
0xacfc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6561	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8
0xad03	          0x8b400c	              mov eax, dword [rax + 0xc]	      6561	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8
0xad06	          0x83f85b	                           cmp eax, 0x5b	      6560	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0xad09	            0x7507	                           jne 0x400ad52	      6560	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0xad0b	      0xba01000000	                              mov edx, 1	      6560	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0xad10	            0xeb05	                           jmp 0x400ad57	      6560	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0xad12	      0xba02000000	                              mov edx, 2	      6560	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0xad17	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6560	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0xad1e	          0x488b00	                    mov rax, qword [rax]	      6560	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0xad21	    0x8bb564ffffff	             mov esi, dword [rbp - 0x9c]	      6560	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0xad27	      0xb900000000	                              mov ecx, 0	      6560	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0xad2c	          0x4889c7	                            mov rdi, rax	      6560	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0xad2f	      0xe800000000	                          call 0x400ad74	      6560	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0xad34	        0x48894580	             mov qword [rbp - 0x80], rax	      6560	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0xad38	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      6560	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0xad3d	            0x7545	                           jne 0x400adc4	      6560	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	CALL_12
0xad3f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      6563	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9
0xad43	          0x4885c0	                           test rax, rax	      6563	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9
0xad46	            0x7532	                           jne 0x400adba	      6563	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9
0xad48	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6565	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	IF_10
0xad4f	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6565	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	IF_10
0xad52	          0x83f86d	                           cmp eax, 0x6d	      6565	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	IF_10
0xad55	            0x747c	                            je 0x400ae13	      6565	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	IF_10
0xad57	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6565	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	IF_10
0xad5e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6565	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	IF_10
0xad61	          0x83f84d	                           cmp eax, 0x4d	      6565	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	IF_10
0xad64	            0x746d	                            je 0x400ae13	      6565	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	IF_10
0xad66	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6566	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	CALL_13
0xad6d	          0x488b00	                    mov rax, qword [rax]	      6566	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	CALL_13
0xad70	          0x4889c7	                            mov rdi, rax	      6566	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	CALL_13
0xad73	      0xe870acffff	                    call sym.clearopbeep	      6566	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	IF_9	CALL_13
0xad78	            0xeb59	                           jmp 0x400ae13	      6570	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	ELSE_6
0xad7a	        0x488d4590	                   lea rax, [rbp - 0x70]	      6569	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	ELSE_6
0xad7e	        0x48894580	             mov qword [rbp - 0x80], rax	      6569	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	ELSE_6
0xad82	            0xeb4f	                           jmp 0x400ae13	      6570	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	ELSE_6
0xad84	        0x488b4590	             mov rax, qword [rbp - 0x70]	      6572	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0xad88	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      6572	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0xad8c	        0x488945c0	             mov qword [rbp - 0x40], rax	      6572	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0xad90	        0x488955c8	             mov qword [rbp - 0x38], rdx	      6572	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0xad94	    0x488b0d000000	            mov rcx, qword [0x0400addb] 	      6573	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0xad9b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      6573	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0xad9f	        0x488b5008	                mov rdx, qword [rax + 8]	      6573	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0xada3	          0x488b00	                    mov rax, qword [rax]	      6573	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0xada6	        0x48894138	             mov qword [rcx + 0x38], rax	      6573	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0xadaa	        0x48895140	             mov qword [rcx + 0x40], rdx	      6573	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0xadae	        0x488b4580	             mov rax, qword [rbp - 0x80]	      6574	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0xadb2	        0x488b5008	                mov rdx, qword [rax + 8]	      6574	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0xadb6	          0x488b00	                    mov rax, qword [rax]	      6574	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0xadb9	        0x48894590	             mov qword [rbp - 0x70], rax	      6574	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0xadbd	        0x48895598	             mov qword [rbp - 0x68], rdx	      6574	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	ELSE_6
0xadc1	      0x48836d8801	               sub qword [rbp - 0x78], 1	      6558	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1
0xadc6	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      6558	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1
0xadcb	     0xf8f2bffffff	                            jg 0x400ad3c	      6558	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1
0xadd1	            0xeb01	                           jmp 0x400ae14	      6558	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1
0xadd3	              0x90	                                     nop	      6570	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_4	FOR_1	IF_8	ELSE_6
0xadd4	    0x488b0d000000	            mov rcx, qword [0x0400ae1b] 	      6576	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6
0xaddb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      6576	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6
0xaddf	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      6576	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6
0xade3	        0x48894138	             mov qword [rcx + 0x38], rax	      6576	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6
0xade7	        0x48895140	             mov qword [rcx + 0x40], rdx	      6576	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6
0xadeb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6584	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xadf2	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6584	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xadf5	          0x83f86d	                           cmp eax, 0x6d	      6584	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xadf8	            0x7413	                            je 0x400ae4d	      6584	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xadfa	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6584	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae01	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6584	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae04	          0x83f84d	                           cmp eax, 0x4d	      6584	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae07	     0xf850f020000	                           jne 0x400b05c	      6584	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae0d	    0x83bd64ffffff	           cmp dword [rbp - 0x9c], 0x7b 	      6587	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae14	           0xf95c2	                                setne dl	      6587	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae17	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6587	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae1e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6587	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae21	          0x83f86d	                           cmp eax, 0x6d	      6587	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae24	           0xf94c0	                                 sete al	      6587	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae27	            0x31d0	                            xor eax, edx	      6587	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae29	           0xfb6c0	                           movzx eax, al	      6587	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae2c	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      6587	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae32	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6589	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae39	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6589	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae3d	        0x48894588	             mov qword [rbp - 0x78], rax	      6589	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xae41	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6591	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0xae45	          0x4885c0	                           test rax, rax	      6591	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0xae48	            0x7436	                            je 0x400aec0	      6591	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0xae4a	        0x488d45c0	                   lea rax, [rbp - 0x40]	      6593	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0xae4e	        0x48894580	             mov qword [rbp - 0x80], rax	      6593	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0xae52	    0x488b0d000000	            mov rcx, qword [0x0400ae99] 	      6594	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0xae59	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6594	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0xae5d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      6594	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0xae61	        0x48894138	             mov qword [rcx + 0x38], rax	      6594	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0xae65	        0x48895140	             mov qword [rcx + 0x40], rdx	      6594	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12
0xae69	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      6595	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12	IF_13
0xae70	     0xf8462010000	                            je 0x400b018	      6595	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12	IF_13
0xae76	      0x48836d8801	               sub qword [rbp - 0x78], 1	      6596	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12	IF_13
0xae7b	      0xe958010000	                           jmp 0x400b018	      6596	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_12	IF_13
0xae80	    0x48c745800000	               mov qword [rbp - 0x80], 0	      6599	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7
0xae88	      0xe94b010000	                           jmp 0x400b018	      6600	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1
0xae8d	    0x83bd64ffffff	           cmp dword [rbp - 0x9c], 0x7b 	      6604	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0xae94	            0x750a	                           jne 0x400aee0	      6604	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0xae96	      0xe800000000	                          call 0x400aedb	      6604	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0xae9b	          0xc1e81f	                           shr eax, 0x1f	      6604	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0xae9e	            0xeb08	                           jmp 0x400aee8	      6604	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0xaea0	      0xe800000000	                          call 0x400aee5	      6604	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0xaea5	          0xc1e81f	                           shr eax, 0x1f	      6604	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0xaea8	            0x84c0	                             test al, al	      6604	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0xaeaa	            0x7426	                            je 0x400af12	      6604	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_15
0xaeac	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      6607	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	IF_15
0xaeb1	            0x7512	                           jne 0x400af05	      6607	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	IF_15
0xaeb3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6608	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_16
0xaeba	          0x488b00	                    mov rax, qword [rax]	      6608	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_16
0xaebd	          0x4889c7	                            mov rdi, rax	      6608	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_16
0xaec0	      0xe823abffff	                    call sym.clearopbeep	      6608	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14	CALL_16
0xaec5	    0x48c745880000	               mov qword [rbp - 0x78], 0	      6609	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14
0xaecd	      0xe901010000	                           jmp 0x400b013	      6610	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_14
0xaed2	      0xe800000000	                          call 0x400af17	      6612	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	CALL_17
0xaed7	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      6612	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	CALL_17
0xaedd	    0x83bd7cffffff	           cmp dword [rbp - 0x84], 0x7b 	      6613	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16
0xaee4	            0x7409	                            je 0x400af2f	      6613	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16
0xaee6	    0x83bd7cffffff	           cmp dword [rbp - 0x84], 0x7d 	      6613	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16
0xaeed	            0x759e	                           jne 0x400aecd	      6613	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16
0xaeef	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      6617	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaef5	    0x3b8564ffffff	             cmp eax, dword [rbp - 0x9c]	      6617	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaefb	            0x7509	                           jne 0x400af46	      6617	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaefd	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      6617	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaf04	            0x7510	                           jne 0x400af56	      6617	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaf06	      0x48837d8801	               cmp qword [rbp - 0x78], 1	      6617	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaf0b	            0x7535	                           jne 0x400af82	      6617	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaf0d	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      6617	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaf14	            0x752c	                           jne 0x400af82	      6617	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaf16	    0x488b05000000	            mov rax, qword [0x0400af5d] 	      6619	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaf1d	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      6619	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaf21	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6619	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaf25	        0x48894590	             mov qword [rbp - 0x70], rax	      6619	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaf29	        0x48895598	             mov qword [rbp - 0x68], rdx	      6619	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaf2d	        0x488d4590	                   lea rax, [rbp - 0x70]	      6620	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaf31	        0x48894580	             mov qword [rbp - 0x80], rax	      6620	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaf35	    0x48c745880000	               mov qword [rbp - 0x78], 0	      6621	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	IF_17
0xaf3d	      0xe991000000	                           jmp 0x400b013	      6637	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16
0xaf42	        0x488b4590	             mov rax, qword [rbp - 0x70]	      6625	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0xaf46	          0x4885c0	                           test rax, rax	      6625	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0xaf49	            0x7521	                           jne 0x400afac	      6625	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0xaf4b	    0x488b05000000	            mov rax, qword [0x0400af92] 	      6627	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0xaf52	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      6627	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0xaf56	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6627	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0xaf5a	        0x48894590	             mov qword [rbp - 0x70], rax	      6627	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0xaf5e	        0x48895598	             mov qword [rbp - 0x68], rdx	      6627	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0xaf62	        0x488d4590	                   lea rax, [rbp - 0x70]	      6628	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0xaf66	        0x48894580	             mov qword [rbp - 0x80], rax	      6628	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_8	IF_18
0xaf6a	            0xeb67	                           jmp 0x400b013	      6637	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16
0xaf6c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6632	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19
0xaf73	          0x8b400c	              mov eax, dword [rax + 0xc]	      6632	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19
0xaf76	          0x83f85b	                           cmp eax, 0x5b	      6631	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0xaf79	            0x7507	                           jne 0x400afc2	      6631	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0xaf7b	      0xba01000000	                              mov edx, 1	      6631	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0xaf80	            0xeb05	                           jmp 0x400afc7	      6631	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0xaf82	      0xba02000000	                              mov edx, 2	      6631	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0xaf87	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6631	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0xaf8e	          0x488b00	                    mov rax, qword [rax]	      6631	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0xaf91	    0x8bb564ffffff	             mov esi, dword [rbp - 0x9c]	      6631	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0xaf97	      0xb900000000	                              mov ecx, 0	      6631	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0xaf9c	          0x4889c7	                            mov rdi, rax	      6631	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0xaf9f	      0xe800000000	                          call 0x400afe4	      6631	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0xafa4	        0x48894580	             mov qword [rbp - 0x80], rax	      6631	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0xafa8	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      6631	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0xafad	            0x750a	                           jne 0x400aff9	      6631	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19	CALL_18
0xafaf	    0x48c745880000	               mov qword [rbp - 0x78], 0	      6634	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_9	IF_19
0xafb7	            0xeb1a	                           jmp 0x400b013	      6637	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16
0xafb9	    0x488b0d000000	            mov rcx, qword [0x0400b000] 	      6636	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_10
0xafc0	        0x488b4580	             mov rax, qword [rbp - 0x80]	      6636	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_10
0xafc4	        0x488b5008	                mov rdx, qword [rax + 8]	      6636	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_10
0xafc8	          0x488b00	                    mov rax, qword [rax]	      6636	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_10
0xafcb	        0x48894138	             mov qword [rcx + 0x38], rax	      6636	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_10
0xafcf	        0x48895140	             mov qword [rcx + 0x40], rdx	      6636	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1	FOR_2	IF_16	ELSE_10
0xafd3	      0x48836d8801	               sub qword [rbp - 0x78], 1	      6640	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1
0xafd8	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      6600	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1
0xafdd	     0xf8faafeffff	                            jg 0x400aecd	      6600	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	ELSE_7	WHILE_1
0xafe3	    0x488b0d000000	            mov rcx, qword [0x0400b02a] 	      6642	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xafea	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      6642	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xafee	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      6642	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xaff2	        0x48894138	             mov qword [rcx + 0x38], rax	      6642	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xaff6	        0x48895140	             mov qword [rcx + 0x40], rdx	      6642	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11
0xaffa	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      6643	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_20
0xafff	            0x751b	                           jne 0x400b05c	      6643	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_20
0xb001	        0x488b4590	             mov rax, qword [rbp - 0x70]	      6643	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_20
0xb005	          0x4885c0	                           test rax, rax	      6643	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_20
0xb008	            0x7412	                            je 0x400b05c	      6643	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	IF_20
0xb00a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6644	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	CALL_19
0xb011	          0x488b00	                    mov rax, qword [rax]	      6644	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	CALL_19
0xb014	          0x4889c7	                            mov rdi, rax	      6644	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	CALL_19
0xb017	      0xe8cca9ffff	                    call sym.clearopbeep	      6644	normal.c	FUNCTION_81	ELSE_3	IF_4	ELSE_6	IF_11	CALL_19
0xb01c	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      6646	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0xb021	     0xf8426080000	                            je 0x400b88d	      6646	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0xb027	      0xe800000000	                          call 0x400b06c	      6648	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	CALL_20
0xb02c	    0x488b0d000000	            mov rcx, qword [0x0400b073] 	      6649	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0xb033	        0x488b4580	             mov rax, qword [rbp - 0x80]	      6649	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0xb037	        0x488b5008	                mov rdx, qword [rax + 8]	      6649	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0xb03b	          0x488b00	                    mov rax, qword [rax]	      6649	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0xb03e	        0x48894138	             mov qword [rcx + 0x38], rax	      6649	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0xb042	        0x48895140	             mov qword [rcx + 0x40], rdx	      6649	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0xb046	    0x488b05000000	            mov rax, qword [0x0400b08d] 	      6650	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0xb04d	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6650	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0xb054	    0x8b0500000000	            mov eax, dword [0x0400b09a] 	      6652	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0xb05a	          0x83e002	                              and eax, 2	      6652	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0xb05d	            0x85c0	                           test eax, eax	      6652	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0xb05f	     0xf84e8070000	                            je 0x400b88d	      6652	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0xb065	    0x8b0500000000	            mov eax, dword [0x0400b0ab] 	      6652	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0xb06b	            0x85c0	                           test eax, eax	      6652	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0xb06d	     0xf84da070000	                            je 0x400b88d	      6652	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0xb073	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6653	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0xb07a	          0x488b00	                    mov rax, qword [rax]	      6653	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0xb07d	            0x8b00	                    mov eax, dword [rax]	      6653	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0xb07f	            0x85c0	                           test eax, eax	      6653	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0xb081	     0xf85c6070000	                           jne 0x400b88d	      6653	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	IF_22
0xb087	      0xe800000000	                          call 0x400b0cc	      6654	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21	CALL_21
0xb08c	      0xe9bc070000	                           jmp 0x400b88d	      6646	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0xb091	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6662	normal.c	FUNCTION_81	ELSE_11	IF_23
0xb098	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6662	normal.c	FUNCTION_81	ELSE_11	IF_23
0xb09b	          0x83f85b	                           cmp eax, 0x5b	      6662	normal.c	FUNCTION_81	ELSE_11	IF_23
0xb09e	            0x7413	                            je 0x400b0f3	      6662	normal.c	FUNCTION_81	ELSE_11	IF_23
0xb0a0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6662	normal.c	FUNCTION_81	ELSE_11	IF_23
0xb0a7	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6662	normal.c	FUNCTION_81	ELSE_11	IF_23
0xb0aa	          0x83f85d	                           cmp eax, 0x5d	      6662	normal.c	FUNCTION_81	ELSE_11	IF_23
0xb0ad	     0xf8515010000	                           jne 0x400b208	      6662	normal.c	FUNCTION_81	ELSE_11	IF_23
0xb0b3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6664	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_24
0xb0ba	          0x8b5010	            mov edx, dword [rax + 0x10] 	      6664	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_24
0xb0bd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6664	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_24
0xb0c4	          0x8b400c	              mov eax, dword [rax + 0xc]	      6664	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_24
0xb0c7	            0x39c2	                            cmp edx, eax	      6664	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_24
0xb0c9	            0x750c	                           jne 0x400b117	      6664	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_24
0xb0cb	    0xc78560ffffff	           mov dword [rbp - 0xa0], 0x7b 	      6665	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_24
0xb0d5	            0xeb0a	                           jmp 0x400b121	      6665	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_24
0xb0d7	    0xc78560ffffff	           mov dword [rbp - 0xa0], 0x7d 	      6667	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_12
0xb0e1	    0x488b05000000	            mov rax, qword [0x0400b128] 	      6669	normal.c	FUNCTION_81	ELSE_11	IF_23
0xb0e8	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6669	normal.c	FUNCTION_81	ELSE_11	IF_23
0xb0ef	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6675	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25
0xb0f6	          0x488b00	                    mov rax, qword [rax]	      6675	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25
0xb0f9	            0x8b00	                    mov eax, dword [rax]	      6675	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25
0xb0fb	            0x85c0	                           test eax, eax	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb0fd	            0x741f	                            je 0x400b15e	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb0ff	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6676	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25
0xb106	          0x8b4038	            mov eax, dword [rax + 0x38] 	      6676	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25
0xb109	          0x83f801	                              cmp eax, 1	      6676	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25
0xb10c	            0x7510	                           jne 0x400b15e	      6676	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25
0xb10e	    0x83bd60ffffff	           cmp dword [rbp - 0xa0], 0x7b 	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb115	            0x7507	                           jne 0x400b15e	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb117	      0xbe01000000	                              mov esi, 1	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb11c	            0xeb05	                           jmp 0x400b163	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb11e	      0xbe00000000	                              mov esi, 0	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb123	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb12a	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb12e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb135	          0x8b4038	            mov eax, dword [rax + 0x38] 	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb138	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb13f	          0x488b09	                    mov rcx, qword [rcx]	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb142	        0x488d7914	                   lea rdi, [rcx + 0x14]	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb146	    0x8b8d60ffffff	             mov ecx, dword [rbp - 0xa0]	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb14c	          0x4189f0	                            mov r8d, esi	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb14f	            0x89c6	                            mov esi, eax	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb151	      0xe800000000	                          call 0x400b196	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb156	            0x85c0	                           test eax, eax	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb158	            0x7517	                           jne 0x400b1b1	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb15a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6677	normal.c	FUNCTION_81	ELSE_11	IF_23	CALL_23
0xb161	          0x488b00	                    mov rax, qword [rax]	      6677	normal.c	FUNCTION_81	ELSE_11	IF_23	CALL_23
0xb164	          0x4889c7	                            mov rdi, rax	      6677	normal.c	FUNCTION_81	ELSE_11	IF_23	CALL_23
0xb167	      0xe87ca8ffff	                    call sym.clearopbeep	      6677	normal.c	FUNCTION_81	ELSE_11	IF_23	CALL_23
0xb16c	      0xe9df060000	                           jmp 0x400b890	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb171	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6680	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_26
0xb178	          0x488b00	                    mov rax, qword [rax]	      6680	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_26
0xb17b	            0x8b00	                    mov eax, dword [rax]	      6680	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_26
0xb17d	            0x85c0	                           test eax, eax	      6680	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_26
0xb17f	            0x750a	                           jne 0x400b1cb	      6680	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_26
0xb181	      0xbf05000000	                              mov edi, 5	      6681	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	CALL_24
0xb186	      0xe800000000	                          call 0x400b1cb	      6681	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	CALL_24
0xb18b	    0x8b0500000000	            mov eax, dword [0x0400b1d1] 	      6683	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0xb191	          0x83e002	                              and eax, 2	      6683	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0xb194	            0x85c0	                           test eax, eax	      6683	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0xb196	     0xf84b4060000	                            je 0x400b890	      6683	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0xb19c	    0x8b0500000000	            mov eax, dword [0x0400b1e2] 	      6683	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0xb1a2	            0x85c0	                           test eax, eax	      6683	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0xb1a4	     0xf84a6060000	                            je 0x400b890	      6683	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0xb1aa	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6683	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0xb1b1	          0x488b00	                    mov rax, qword [rax]	      6683	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0xb1b4	            0x8b00	                    mov eax, dword [rax]	      6683	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0xb1b6	            0x85c0	                           test eax, eax	      6683	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0xb1b8	     0xf8592060000	                           jne 0x400b890	      6683	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	IF_27
0xb1be	      0xe800000000	                          call 0x400b203	      6684	normal.c	FUNCTION_81	ELSE_11	IF_23	ELSE_13	CALL_25
0xb1c3	      0xe988060000	                           jmp 0x400b890	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb1c8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6692	normal.c	FUNCTION_81	ELSE_14	IF_28
0xb1cf	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6692	normal.c	FUNCTION_81	ELSE_14	IF_28
0xb1d2	          0x83f870	                           cmp eax, 0x70	      6692	normal.c	FUNCTION_81	ELSE_14	IF_28
0xb1d5	            0x7413	                            je 0x400b22a	      6692	normal.c	FUNCTION_81	ELSE_14	IF_28
0xb1d7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6692	normal.c	FUNCTION_81	ELSE_14	IF_28
0xb1de	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6692	normal.c	FUNCTION_81	ELSE_14	IF_28
0xb1e1	          0x83f850	                           cmp eax, 0x50	      6692	normal.c	FUNCTION_81	ELSE_14	IF_28
0xb1e4	     0xf855e030000	                           jne 0x400b588	      6692	normal.c	FUNCTION_81	ELSE_14	IF_28
0xb1ea	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6694	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_26
0xb1f1	          0x488b00	                    mov rax, qword [rax]	      6694	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_26
0xb1f4	          0x4889c7	                            mov rdi, rax	      6694	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_26
0xb1f7	      0xe84ca7ffff	                   call sym.checkclearop	      6694	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_26
0xb1fc	            0x85c0	                           test eax, eax	      6694	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_26
0xb1fe	     0xf854f060000	                           jne 0x400b893	      6694	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_26
0xb204	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6696	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb20b	          0x8b400c	              mov eax, dword [rax + 0xc]	      6696	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb20e	          0x83f85d	                           cmp eax, 0x5d	      6697	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb211	            0x7516	                           jne 0x400b269	      6697	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb213	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6696	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb21a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6696	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb21d	          0x83f870	                           cmp eax, 0x70	      6696	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb220	            0x7507	                           jne 0x400b269	      6696	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb222	      0xb801000000	                              mov eax, 1	      6697	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb227	            0xeb05	                           jmp 0x400b26e	      6697	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb229	      0xb8ffffffff	                     mov eax, 0xffffffff	      6697	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb22e	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      6696	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb234	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb23b	          0x488b00	                    mov rax, qword [rax]	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb23e	          0x8b4004	                mov eax, dword [rax + 4]	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb241	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      6698	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb247	    0x8b0500000000	            mov eax, dword [0x0400b28d] 	      6699	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb24d	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      6699	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb253	    0x488b05000000	            mov rax, qword [0x0400b29a] 	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb25a	          0x488b00	                    mov rax, qword [rax]	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb25d	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      6700	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29
0xb263	    0x8b0500000000	            mov eax, dword [0x0400b2a9] 	      6703	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb269	            0x85c0	                           test eax, eax	      6703	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb26b	     0xf846a010000	                            je 0x400b41b	      6703	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb271	    0x488b15000000	            mov rdx, qword [0x0400b2b8] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb278	    0x488b05000000	            mov rax, qword [0x0400b2bf] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb27f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb283	          0x4839c2	                            cmp rdx, rax	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb286	            0x741c	                            je 0x400b2e4	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb288	    0x488b15000000	            mov rdx, qword [0x0400b2cf] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb28f	    0x488b05000000	            mov rax, qword [0x0400b2d6] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb296	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb29a	          0x4839c2	                            cmp rdx, rax	      6706	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb29d	            0x7d43	                           jge 0x400b322	      6706	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb29f	      0xe996000000	                           jmp 0x400b37a	      6706	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb2a4	    0x8b1500000000	            mov edx, dword [0x0400b2ea] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2aa	    0x488b05000000	            mov rax, qword [0x0400b2f1] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2b1	          0x8b4040	            mov eax, dword [rax + 0x40] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2b4	            0x39c2	                            cmp edx, eax	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2b6	            0x7416	                            je 0x400b30e	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2b8	    0x8b1500000000	            mov edx, dword [0x0400b2fe] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2be	    0x488b05000000	            mov rax, qword [0x0400b305] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2c5	          0x8b4040	            mov eax, dword [rax + 0x40] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2c8	            0x39c2	                            cmp edx, eax	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2ca	            0x7d16	                           jge 0x400b322	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2cc	            0xeb6c	                           jmp 0x400b37a	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2ce	    0x8b1500000000	            mov edx, dword [0x0400b314] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2d4	    0x488b05000000	            mov rax, qword [0x0400b31b] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2db	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2de	            0x39c2	                            cmp edx, eax	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2e0	            0x7c58	                            jl 0x400b37a	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2e2	    0x488b15000000	            mov rdx, qword [0x0400b329] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2e9	    0x488b05000000	            mov rax, qword [0x0400b330] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2f0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2f4	          0x4839c2	                            cmp rdx, rax	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2f7	            0x7528	                           jne 0x400b361	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2f9	    0x8b1500000000	            mov edx, dword [0x0400b33f] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb2ff	    0x488b05000000	            mov rax, qword [0x0400b346] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb306	          0x8b4040	            mov eax, dword [rax + 0x40] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb309	            0x39c2	                            cmp edx, eax	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb30b	            0x7514	                           jne 0x400b361	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb30d	    0x8b1500000000	            mov edx, dword [0x0400b353] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb313	    0x488b05000000	            mov rax, qword [0x0400b35a] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb31a	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb31d	            0x39c2	                            cmp edx, eax	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb31f	            0x7419	                            je 0x400b37a	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb321	    0x488b05000000	            mov rax, qword [0x0400b368] 	      6706	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb328	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb32c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb330	        0x488945b0	             mov qword [rbp - 0x50], rax	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb334	        0x488955b8	             mov qword [rbp - 0x48], rdx	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb338	            0xeb16	                           jmp 0x400b390	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb33a	    0x488b05000000	            mov rax, qword [0x0400b381] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb341	    0x488b15000000	            mov rdx, qword [0x0400b388] 	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb348	        0x488945b0	             mov qword [rbp - 0x50], rax	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb34c	        0x488955b8	             mov qword [rbp - 0x48], rdx	      6705	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_27
0xb350	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb354	    0x488b05000000	            mov rax, qword [0x0400b39b] 	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb35b	          0x4839c2	                            cmp rdx, rax	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb35e	            0x7533	                           jne 0x400b3d3	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb360	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb363	    0x8b0500000000	            mov eax, dword [0x0400b3a9] 	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb369	            0x39c2	                            cmp edx, eax	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb36b	            0x7526	                           jne 0x400b3d3	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb36d	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb370	    0x8b0500000000	            mov eax, dword [0x0400b3b6] 	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb376	            0x39c2	                            cmp edx, eax	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb378	            0x7519	                           jne 0x400b3d3	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb37a	    0x488b05000000	            mov rax, qword [0x0400b3c1] 	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb381	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb385	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb389	        0x488945c0	             mov qword [rbp - 0x40], rax	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb38d	        0x488955c8	             mov qword [rbp - 0x38], rdx	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb391	            0xeb16	                           jmp 0x400b3e9	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb393	    0x488b05000000	            mov rax, qword [0x0400b3da] 	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb39a	    0x488b15000000	            mov rdx, qword [0x0400b3e1] 	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb3a1	        0x488945c0	             mov qword [rbp - 0x40], rax	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb3a5	        0x488955c8	             mov qword [rbp - 0x38], rdx	      6707	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30	CALL_28
0xb3a9	    0x488b0d000000	            mov rcx, qword [0x0400b3f0] 	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb3b0	    0x83bd6cffffff	cmp dword [rbp - 0x94], 0xffffffffffffffff	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb3b7	            0x7512	                           jne 0x400b40b	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb3b9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb3bd	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb3c1	        0x48894138	             mov qword [rcx + 0x38], rax	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb3c5	        0x48895140	             mov qword [rcx + 0x40], rdx	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb3c9	            0xeb10	                           jmp 0x400b41b	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb3cb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb3cf	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb3d3	        0x48894138	             mov qword [rcx + 0x38], rax	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb3d7	        0x48895140	             mov qword [rcx + 0x40], rdx	      6708	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_30
0xb3db	    0x488d855cffff	                   lea rax, [rbp - 0xa4]	      6711	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_29
0xb3e2	          0x4889c7	                            mov rdi, rax	      6711	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_29
0xb3e5	      0xe800000000	                          call 0x400b42a	      6711	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_29
0xb3ea	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6713	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_30
0xb3f1	          0x4889c7	                            mov rdi, rax	      6713	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_30
0xb3f4	      0xe85da4ffff	                  call sym.prep_redo_cmd	      6713	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_30
0xb3f9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6715	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0xb400	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6715	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0xb404	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      6715	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0xb40a	    0x8bb56cffffff	             mov esi, dword [rbp - 0x94]	      6715	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0xb410	      0xb901000000	                              mov ecx, 1	      6715	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0xb415	            0x89c7	                            mov edi, eax	      6715	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0xb417	      0xe800000000	                          call 0x400b45c	      6715	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_31
0xb41c	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      6716	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0xb423	     0xf842a040000	                            je 0x400b893	      6716	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0xb429	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6718	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0xb42d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      6718	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0xb431	    0x488905000000	            mov qword [0x0400b478], rax 	      6718	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0xb438	    0x488915000000	            mov qword [0x0400b47f], rdx 	      6718	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0xb43f	    0x488b0d000000	            mov rcx, qword [0x0400b486] 	      6719	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0xb446	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6719	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0xb44a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      6719	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0xb44e	        0x48894138	             mov qword [rcx + 0x38], rax	      6719	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0xb452	        0x48895140	             mov qword [rcx + 0x40], rdx	      6719	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0xb456	    0x83bd6cffffff	cmp dword [rbp - 0x94], 0xffffffffffffffff	      6720	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb45d	            0x755b	                           jne 0x400b4fa	      6720	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb45f	    0x488b15000000	            mov rdx, qword [0x0400b4a6] 	      6723	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb466	    0x488b05000000	            mov rax, qword [0x0400b4ad] 	      6723	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb46d	          0x488b08	                    mov rcx, qword [rax]	      6723	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb470	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      6723	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb476	            0x4898	                                    cdqe	      6723	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb478	          0x4829c1	                            sub rcx, rax	      6723	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb47b	          0x4889c8	                            mov rax, rcx	      6723	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb47e	          0x4801d0	                            add rax, rdx	      6723	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb481	    0x488905000000	            mov qword [0x0400b4c8], rax 	      6723	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb488	    0x488b05000000	            mov rax, qword [0x0400b4cf] 	      6724	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb48f	    0x488b15000000	            mov rdx, qword [0x0400b4d6] 	      6724	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb496	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      6724	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb49a	    0x488b15000000	            mov rdx, qword [0x0400b4e1] 	      6725	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb4a1	          0x488b32	                    mov rsi, qword [rdx]	      6725	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb4a4	    0x8b9574ffffff	             mov edx, dword [rbp - 0x8c]	      6725	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb4aa	          0x4863d2	                         movsxd rdx, edx	      6725	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb4ad	          0x4829d6	                            sub rsi, rdx	      6725	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb4b0	          0x4889f2	                            mov rdx, rsi	      6725	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb4b3	          0x4801ca	                            add rdx, rcx	      6724	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb4b6	        0x48895038	             mov qword [rax + 0x38], rdx	      6724	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_32
0xb4ba	    0xc70500000000	               mov dword [0x0400b504], 1	      6728	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31
0xb4c4	    0x8b0500000000	            mov eax, dword [0x0400b50a] 	      6729	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0xb4ca	          0x83f856	                           cmp eax, 0x56	      6729	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0xb4cd	            0x7557	                           jne 0x400b566	      6729	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0xb4cf	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6732	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0xb4d6	    0xc7400c640000	            mov dword [rax + 0xc], 0x64 	      6732	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0xb4dd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6733	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0xb4e4	    0xc74010000000	               mov dword [rax + 0x10], 0	      6733	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0xb4eb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6734	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0xb4f2	          0x488b00	                    mov rax, qword [rax]	      6734	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0xb4f5	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      6734	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0xb4fb	          0x895004	                mov dword [rax + 4], edx	      6734	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33
0xb4fe	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6735	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33	CALL_32
0xb505	          0x4889c7	                            mov rdi, rax	      6735	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33	CALL_32
0xb508	      0xe826360000	                    call sym.nv_operator	      6735	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33	CALL_32
0xb50d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6736	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33	CALL_33
0xb514	      0xba00000000	                              mov edx, 0	      6736	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33	CALL_33
0xb519	      0xbe00000000	                              mov esi, 0	      6736	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33	CALL_33
0xb51e	          0x4889c7	                            mov rdi, rax	      6736	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33	CALL_33
0xb521	      0xe800000000	                          call 0x400b566	      6736	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_33	CALL_33
0xb526	    0x8b0500000000	            mov eax, dword [0x0400b56c] 	      6738	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_34
0xb52c	            0x85c0	                           test eax, eax	      6738	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_34
0xb52e	     0xf841f030000	                            je 0x400b893	      6738	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_34
0xb534	      0xe800000000	                          call 0x400b579	      6740	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_34	CALL_34
0xb539	      0xbf23000000	                           mov edi, 0x23	      6741	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_34	CALL_35
0xb53e	      0xe800000000	                          call 0x400b583	      6741	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	IF_31	IF_34	CALL_35
0xb543	      0xe90b030000	                           jmp 0x400b893	      6694	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_26
0xb548	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6750	normal.c	FUNCTION_81	ELSE_15	IF_35
0xb54f	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6750	normal.c	FUNCTION_81	ELSE_15	IF_35
0xb552	          0x83f827	                           cmp eax, 0x27	      6750	normal.c	FUNCTION_81	ELSE_15	IF_35
0xb555	            0x7413	                            je 0x400b5aa	      6750	normal.c	FUNCTION_81	ELSE_15	IF_35
0xb557	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6750	normal.c	FUNCTION_81	ELSE_15	IF_35
0xb55e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6750	normal.c	FUNCTION_81	ELSE_15	IF_35
0xb561	          0x83f860	                           cmp eax, 0x60	      6750	normal.c	FUNCTION_81	ELSE_15	IF_35
0xb564	     0xf85c5000000	                           jne 0x400b66f	      6750	normal.c	FUNCTION_81	ELSE_15	IF_35
0xb56a	    0x488b05000000	            mov rax, qword [0x0400b5b1] 	      6752	normal.c	FUNCTION_81	ELSE_15	IF_35
0xb571	        0x4883c038	                           add rax, 0x38	      6752	normal.c	FUNCTION_81	ELSE_15	IF_35
0xb575	        0x48894580	             mov qword [rbp - 0x80], rax	      6752	normal.c	FUNCTION_81	ELSE_15	IF_35
0xb579	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6753	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0xb580	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6753	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0xb584	        0x48894588	             mov qword [rbp - 0x78], rax	      6753	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0xb588	            0xeb5f	                           jmp 0x400b629	      6753	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0xb58a	        0x488b4580	             mov rax, qword [rbp - 0x80]	      6755	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0xb58e	        0x488b5008	                mov rdx, qword [rax + 8]	      6755	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0xb592	          0x488b00	                    mov rax, qword [rax]	      6755	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0xb595	        0x488945c0	             mov qword [rbp - 0x40], rax	      6755	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0xb599	        0x488955c8	             mov qword [rbp - 0x38], rdx	      6755	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0xb59d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6757	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0xb5a4	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6757	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0xb5a7	          0x83f827	                           cmp eax, 0x27	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0xb5aa	           0xf94c0	                                 sete al	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0xb5ad	           0xfb6d0	                           movzx edx, al	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0xb5b0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0xb5b7	          0x8b400c	              mov eax, dword [rax + 0xc]	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0xb5ba	          0x83f85b	                           cmp eax, 0x5b	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0xb5bd	            0x7507	                           jne 0x400b606	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0xb5bf	      0xb9ffffffff	                     mov ecx, 0xffffffff	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0xb5c4	            0xeb05	                           jmp 0x400b60b	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0xb5c6	      0xb901000000	                              mov ecx, 1	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0xb5cb	        0x488b4580	             mov rax, qword [rbp - 0x80]	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0xb5cf	            0x89ce	                            mov esi, ecx	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0xb5d1	          0x4889c7	                            mov rdi, rax	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0xb5d4	      0xe800000000	                          call 0x400b619	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0xb5d9	        0x48894580	             mov qword [rbp - 0x80], rax	      6756	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	CALL_36
0xb5dd	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      6758	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	IF_36
0xb5e2	            0x740e	                            je 0x400b632	      6758	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	IF_36
0xb5e4	      0x48836d8801	               sub qword [rbp - 0x78], 1	      6753	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0xb5e9	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      6753	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0xb5ee	            0x7f9a	                            jg 0x400b5ca	      6753	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0xb5f0	            0xeb01	                           jmp 0x400b633	      6753	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3
0xb5f2	              0x90	                                     nop	      6759	normal.c	FUNCTION_81	ELSE_15	IF_35	FOR_3	IF_36
0xb5f3	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      6761	normal.c	FUNCTION_81	ELSE_15	IF_35	IF_37
0xb5f8	            0x7508	                           jne 0x400b642	      6761	normal.c	FUNCTION_81	ELSE_15	IF_35	IF_37
0xb5fa	        0x488d45c0	                   lea rax, [rbp - 0x40]	      6762	normal.c	FUNCTION_81	ELSE_15	IF_35	IF_37
0xb5fe	        0x48894580	             mov qword [rbp - 0x80], rax	      6762	normal.c	FUNCTION_81	ELSE_15	IF_35	IF_37
0xb602	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6763	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0xb609	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6763	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0xb60c	          0x83f827	                           cmp eax, 0x27	      6763	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0xb60f	           0xf94c0	                                 sete al	      6763	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0xb612	           0xfb6c8	                           movzx ecx, al	      6763	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0xb615	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      6763	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0xb619	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6763	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0xb620	            0x89ce	                            mov esi, ecx	      6763	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0xb622	          0x4889c7	                            mov rdi, rax	      6763	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0xb625	      0xe825140000	                  call sym.nv_cursormark	      6763	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0xb62a	      0xe928020000	                           jmp 0x400b897	      6763	normal.c	FUNCTION_81	ELSE_15	IF_35	CALL_37
0xb62f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6771	normal.c	FUNCTION_81	ELSE_16	IF_38
0xb636	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6771	normal.c	FUNCTION_81	ELSE_16	IF_38
0xb639	      0x3d03cbffff	                     cmp eax, 0xffffcb03	      6771	normal.c	FUNCTION_81	ELSE_16	IF_38
0xb63e	            0x7c63	                            jl 0x400b6e3	      6771	normal.c	FUNCTION_81	ELSE_16	IF_38
0xb640	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6771	normal.c	FUNCTION_81	ELSE_16	IF_38
0xb647	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6771	normal.c	FUNCTION_81	ELSE_16	IF_38
0xb64a	      0x3d04d3ffff	                     cmp eax, 0xffffd304	      6771	normal.c	FUNCTION_81	ELSE_16	IF_38
0xb64f	            0x7d52	                           jge 0x400b6e3	      6771	normal.c	FUNCTION_81	ELSE_16	IF_38
0xb651	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb658	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb65c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6774	normal.c	FUNCTION_81	ELSE_16	IF_38
0xb663	          0x8b400c	              mov eax, dword [rax + 0xc]	      6774	normal.c	FUNCTION_81	ELSE_16	IF_38
0xb666	          0x83f85d	                           cmp eax, 0x5d	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb669	            0x7507	                           jne 0x400b6b2	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb66b	      0xbf01000000	                              mov edi, 1	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb670	            0xeb05	                           jmp 0x400b6b7	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb672	      0xbfffffffff	                     mov edi, 0xffffffff	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb677	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb67e	          0x8b7010	            mov esi, dword [rax + 0x10] 	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb681	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb688	          0x488b00	                    mov rax, qword [rax]	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb68b	    0x41b801000000	                              mov r8d, 1	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb691	          0x4889d1	                            mov rcx, rdx	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb694	            0x89fa	                            mov edx, edi	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb696	          0x4889c7	                            mov rdi, rax	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb699	      0xe800000000	                          call 0x400b6de	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb69e	      0xe9b4010000	                           jmp 0x400b897	      6773	normal.c	FUNCTION_81	ELSE_16	IF_38	CALL_38
0xb6a3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6783	normal.c	FUNCTION_81	ELSE_17	IF_39
0xb6aa	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6783	normal.c	FUNCTION_81	ELSE_17	IF_39
0xb6ad	          0x83f87a	                           cmp eax, 0x7a	      6783	normal.c	FUNCTION_81	ELSE_17	IF_39
0xb6b0	            0x7554	                           jne 0x400b746	      6783	normal.c	FUNCTION_81	ELSE_17	IF_39
0xb6b2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6785	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0xb6b9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6785	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0xb6bd	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      6785	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0xb6c4	          0x8b520c	              mov edx, dword [rdx + 0xc]	      6785	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0xb6c7	          0x83fa5d	                           cmp edx, 0x5d	      6785	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0xb6ca	            0x7507	                           jne 0x400b713	      6785	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0xb6cc	      0xb901000000	                              mov ecx, 1	      6785	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0xb6d1	            0xeb05	                           jmp 0x400b718	      6785	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0xb6d3	      0xb9ffffffff	                     mov ecx, 0xffffffff	      6785	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0xb6d8	          0x4889c2	                            mov rdx, rax	      6785	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0xb6db	            0x89ce	                            mov esi, ecx	      6785	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0xb6dd	      0xbf00000000	                              mov edi, 0	      6785	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0xb6e2	      0xe800000000	                          call 0x400b727	      6785	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0xb6e7	            0x85c0	                           test eax, eax	      6785	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0xb6e9	     0xf8568010000	                           jne 0x400b897	      6785	normal.c	FUNCTION_81	ELSE_17	IF_39	IF_40	CALL_39
0xb6ef	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6787	normal.c	FUNCTION_81	ELSE_17	IF_39	CALL_40
0xb6f6	          0x488b00	                    mov rax, qword [rax]	      6787	normal.c	FUNCTION_81	ELSE_17	IF_39	CALL_40
0xb6f9	          0x4889c7	                            mov rdi, rax	      6787	normal.c	FUNCTION_81	ELSE_17	IF_39	CALL_40
0xb6fc	      0xe8e7a2ffff	                    call sym.clearopbeep	      6787	normal.c	FUNCTION_81	ELSE_17	IF_39	CALL_40
0xb701	      0xe951010000	                           jmp 0x400b897	      6827	normal.c	FUNCTION_81
0xb706	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6795	normal.c	FUNCTION_81	ELSE_18	IF_41
0xb70d	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6795	normal.c	FUNCTION_81	ELSE_18	IF_41
0xb710	          0x83f863	                           cmp eax, 0x63	      6795	normal.c	FUNCTION_81	ELSE_18	IF_41
0xb713	            0x754f	                           jne 0x400b7a4	      6795	normal.c	FUNCTION_81	ELSE_18	IF_41
0xb715	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6797	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0xb71c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6797	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0xb720	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      6797	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0xb727	          0x8b520c	              mov edx, dword [rdx + 0xc]	      6797	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0xb72a	          0x83fa5d	                           cmp edx, 0x5d	      6797	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0xb72d	            0x7507	                           jne 0x400b776	      6797	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0xb72f	      0xba01000000	                              mov edx, 1	      6797	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0xb734	            0xeb05	                           jmp 0x400b77b	      6797	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0xb736	      0xbaffffffff	                     mov edx, 0xffffffff	      6797	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0xb73b	          0x4889c6	                            mov rsi, rax	      6797	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0xb73e	            0x89d7	                            mov edi, edx	      6797	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0xb740	      0xe800000000	                          call 0x400b785	      6797	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0xb745	            0x85c0	                           test eax, eax	      6797	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0xb747	     0xf850a010000	                           jne 0x400b897	      6797	normal.c	FUNCTION_81	ELSE_18	IF_41	IF_42	CALL_41
0xb74d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6799	normal.c	FUNCTION_81	ELSE_18	IF_41	CALL_42
0xb754	          0x488b00	                    mov rax, qword [rax]	      6799	normal.c	FUNCTION_81	ELSE_18	IF_41	CALL_42
0xb757	          0x4889c7	                            mov rdi, rax	      6799	normal.c	FUNCTION_81	ELSE_18	IF_41	CALL_42
0xb75a	      0xe889a2ffff	                    call sym.clearopbeep	      6799	normal.c	FUNCTION_81	ELSE_18	IF_41	CALL_42
0xb75f	      0xe9f3000000	                           jmp 0x400b897	      6827	normal.c	FUNCTION_81
0xb764	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6807	normal.c	FUNCTION_81	ELSE_19	IF_43
0xb76b	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6807	normal.c	FUNCTION_81	ELSE_19	IF_43
0xb76e	          0x83f873	                           cmp eax, 0x73	      6807	normal.c	FUNCTION_81	ELSE_19	IF_43
0xb771	            0x7413	                            je 0x400b7c6	      6807	normal.c	FUNCTION_81	ELSE_19	IF_43
0xb773	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6807	normal.c	FUNCTION_81	ELSE_19	IF_43
0xb77a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6807	normal.c	FUNCTION_81	ELSE_19	IF_43
0xb77d	          0x83f853	                           cmp eax, 0x53	      6807	normal.c	FUNCTION_81	ELSE_19	IF_43
0xb780	     0xf85b3000000	                           jne 0x400b879	      6807	normal.c	FUNCTION_81	ELSE_19	IF_43
0xb786	      0xe800000000	                          call 0x400b7cb	      6809	normal.c	FUNCTION_81	ELSE_19	IF_43	CALL_43
0xb78b	    0x48c745880000	               mov qword [rbp - 0x78], 0	      6810	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4
0xb793	            0xeb65	                           jmp 0x400b83a	      6810	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4
0xb795	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6812	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44
0xb79c	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6812	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44
0xb79f	          0x83f873	                           cmp eax, 0x73	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7a2	           0xf94c0	                                 sete al	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7a5	           0xfb6d0	                           movzx edx, al	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7a8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7af	          0x8b400c	              mov eax, dword [rax + 0xc]	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7b2	          0x83f85d	                           cmp eax, 0x5d	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7b5	            0x7507	                           jne 0x400b7fe	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7b7	      0xbe01000000	                              mov esi, 1	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7bc	            0xeb05	                           jmp 0x400b803	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7be	      0xbeffffffff	                     mov esi, 0xffffffff	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7c3	    0x488b05000000	            mov rax, qword [0x0400b80a] 	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7ca	    0x41b800000000	                              mov r8d, 0	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7d0	      0xb900000000	                              mov ecx, 0	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7d5	          0x4889c7	                            mov rdi, rax	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7d8	      0xe800000000	                          call 0x400b81d	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7dd	            0x85c0	                           test eax, eax	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7df	            0x7514	                           jne 0x400b835	      6811	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_44
0xb7e1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6814	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_45
0xb7e8	          0x488b00	                    mov rax, qword [rax]	      6814	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_45
0xb7eb	          0x4889c7	                            mov rdi, rax	      6814	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_45
0xb7ee	      0xe8f5a1ffff	                    call sym.clearopbeep	      6814	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44	CALL_45
0xb7f3	            0xeb16	                           jmp 0x400b84b	      6815	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4	IF_44
0xb7f5	      0x4883458801	               add qword [rbp - 0x78], 1	      6810	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4
0xb7fa	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6810	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4
0xb801	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6810	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4
0xb805	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      6810	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4
0xb809	            0x7f8a	                            jg 0x400b7d5	      6810	normal.c	FUNCTION_81	ELSE_19	IF_43	FOR_4
0xb80b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6818	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0xb812	          0x488b00	                    mov rax, qword [rax]	      6818	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0xb815	            0x8b00	                    mov eax, dword [rax]	      6818	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0xb817	            0x85c0	                           test eax, eax	      6818	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0xb819	            0x753b	                           jne 0x400b896	      6818	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0xb81b	    0x8b0500000000	            mov eax, dword [0x0400b861] 	      6818	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0xb821	          0x83e040	                           and eax, 0x40	      6818	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0xb824	            0x85c0	                           test eax, eax	      6818	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0xb826	            0x742e	                            je 0x400b896	      6818	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0xb828	    0x8b0500000000	            mov eax, dword [0x0400b86e] 	      6818	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0xb82e	            0x85c0	                           test eax, eax	      6818	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0xb830	            0x7424	                            je 0x400b896	      6818	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0xb832	      0xe800000000	                          call 0x400b877	      6819	normal.c	FUNCTION_81	ELSE_19	IF_43	CALL_46
0xb837	            0xeb1d	                           jmp 0x400b896	      6818	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0xb839	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      6826	normal.c	FUNCTION_81	CALL_47
0xb840	          0x488b00	                    mov rax, qword [rax]	      6826	normal.c	FUNCTION_81	CALL_47
0xb843	          0x4889c7	                            mov rdi, rax	      6826	normal.c	FUNCTION_81	CALL_47
0xb846	      0xe89da1ffff	                    call sym.clearopbeep	      6826	normal.c	FUNCTION_81	CALL_47
0xb84b	            0xeb0a	                           jmp 0x400b897	      6827	normal.c	FUNCTION_81
0xb84d	              0x90	                                     nop	      6646	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0xb84e	            0xeb07	                           jmp 0x400b897	      6646	normal.c	FUNCTION_81	ELSE_3	IF_4	IF_21
0xb850	              0x90	                                     nop	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb851	            0xeb04	                           jmp 0x400b897	      6674	normal.c	FUNCTION_81	ELSE_11	IF_23	IF_25	CALL_22
0xb853	              0x90	                                     nop	      6694	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_26
0xb854	            0xeb01	                           jmp 0x400b897	      6694	normal.c	FUNCTION_81	ELSE_14	IF_28	IF_29	CALL_26
0xb856	              0x90	                                     nop	      6818	normal.c	FUNCTION_81	ELSE_19	IF_43	IF_45
0xb857	              0x90	                                     nop	      6827	normal.c	FUNCTION_81
0xb858	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6827	normal.c	FUNCTION_81
0xb85c	    0x644833042528	                xor rax, qword fs:[0x28]	      6827	normal.c	FUNCTION_81
0xb865	            0x7405	                            je 0x400b8ac	      6827	normal.c	FUNCTION_81
0xb867	      0xe800000000	                          call 0x400b8ac	      6827	normal.c	FUNCTION_81
0xb86c	        0x488d65e0	                   lea rsp, [rbp - 0x20]	      6827	normal.c	FUNCTION_81
0xb870	              0x5b	                                 pop rbx	      6827	normal.c	FUNCTION_81
0xb871	            0x415c	                                 pop r12	      6827	normal.c	FUNCTION_81
0xb873	            0x415d	                                 pop r13	      6827	normal.c	FUNCTION_81
0xb875	            0x415e	                                 pop r14	      6827	normal.c	FUNCTION_81
0xb877	              0x5d	                                 pop rbp	      6827	normal.c	FUNCTION_81
0xb878	              0xc3	                                     ret	      6827	normal.c	FUNCTION_81
init_normal_cmds	CALL,1:ELSE,0:DO,0:FOR,2:functions,0:IF,1:WHILE,0:SWITCH,0	44
0x6c	              0x55	                                push rbp	       470	normal.c	FUNCTION_2
0x6d	          0x4889e5	                            mov rbp, rsp	       470	normal.c	FUNCTION_2
0x70	        0x4883ec10	                           sub rsp, 0x10	       470	normal.c	FUNCTION_2
0x74	    0xc745fc000000	                  mov dword [rbp - 4], 0	       474	normal.c	FUNCTION_2	FOR_1
0x7b	            0xeb16	                           jmp 0x40000d3	       474	normal.c	FUNCTION_2	FOR_1
0x7d	          0x8b45fc	                mov eax, dword [rbp - 4]	       475	normal.c	FUNCTION_2	FOR_1
0x80	            0x89c2	                            mov edx, eax	       475	normal.c	FUNCTION_2	FOR_1
0x82	          0x8b45fc	                mov eax, dword [rbp - 4]	       475	normal.c	FUNCTION_2	FOR_1
0x85	            0x4898	                                    cdqe	       475	normal.c	FUNCTION_2	FOR_1
0x87	    0x668994000000	                mov word [rax + rax], dx	       475	normal.c	FUNCTION_2	FOR_1
0x8f	        0x8345fc01	                  add dword [rbp - 4], 1	       474	normal.c	FUNCTION_2	FOR_1
0x93	    0x817dfcbc0000	               cmp dword [rbp - 4], 0xbc	       474	normal.c	FUNCTION_2	FOR_1
0x9a	            0x7ee1	                           jle 0x40000bd	       474	normal.c	FUNCTION_2	FOR_1
0x9c	      0xb900000000	                              mov ecx, 0	       478	normal.c	FUNCTION_2	CALL_1
0xa1	      0xba02000000	                              mov edx, 2	       478	normal.c	FUNCTION_2	CALL_1
0xa6	      0xbebd000000	                           mov esi, 0xbd	       478	normal.c	FUNCTION_2	CALL_1
0xab	      0xbf00000000	                              mov edi, 0	       478	normal.c	FUNCTION_2	CALL_1
0xb0	      0xe800000000	                          call 0x40000f5	       478	normal.c	FUNCTION_2	CALL_1
0xb5	    0xc745fc000000	                  mov dword [rbp - 4], 0	       481	normal.c	FUNCTION_2	FOR_2
0xbc	            0xeb2f	                           jmp 0x400012d	       481	normal.c	FUNCTION_2	FOR_2
0xbe	          0x8b45fc	                mov eax, dword [rbp - 4]	       482	normal.c	FUNCTION_2	FOR_2	IF_1
0xc1	            0x4898	                                    cdqe	       482	normal.c	FUNCTION_2	FOR_2	IF_1
0xc3	     0xfb784000000	             movzx eax, word [rax + rax]	       482	normal.c	FUNCTION_2	FOR_2	IF_1
0xcb	              0x98	                                    cwde	       482	normal.c	FUNCTION_2	FOR_2	IF_1
0xcc	          0x4863d0	                         movsxd rdx, eax	       482	normal.c	FUNCTION_2	FOR_2	IF_1
0xcf	          0x4889d0	                            mov rax, rdx	       482	normal.c	FUNCTION_2	FOR_2	IF_1
0xd2	          0x4801c0	                            add rax, rax	       482	normal.c	FUNCTION_2	FOR_2	IF_1
0xd5	          0x4801d0	                            add rax, rdx	       482	normal.c	FUNCTION_2	FOR_2	IF_1
0xd8	        0x48c1e003	                              shl rax, 3	       482	normal.c	FUNCTION_2	FOR_2	IF_1
0xdc	    0x480500000000	                              add rax, 0	       482	normal.c	FUNCTION_2	FOR_2	IF_1
0xe2	            0x8b00	                    mov eax, dword [rax]	       482	normal.c	FUNCTION_2	FOR_2	IF_1
0xe4	          0x3b45fc	                cmp eax, dword [rbp - 4]	       482	normal.c	FUNCTION_2	FOR_2	IF_1
0xe7	            0x750f	                           jne 0x4000138	       482	normal.c	FUNCTION_2	FOR_2	IF_1
0xe9	        0x8345fc01	                  add dword [rbp - 4], 1	       481	normal.c	FUNCTION_2	FOR_2
0xed	    0x817dfcbc0000	               cmp dword [rbp - 4], 0xbc	       481	normal.c	FUNCTION_2	FOR_2
0xf4	            0x7ec8	                           jle 0x40000fe	       481	normal.c	FUNCTION_2	FOR_2
0xf6	            0xeb01	                           jmp 0x4000139	       481	normal.c	FUNCTION_2	FOR_2
0xf8	              0x90	                                     nop	       483	normal.c	FUNCTION_2	FOR_2	IF_1
0xf9	          0x8b45fc	                mov eax, dword [rbp - 4]	       484	normal.c	FUNCTION_2
0xfc	          0x83e801	                              sub eax, 1	       484	normal.c	FUNCTION_2
0xff	    0x890500000000	            mov dword [0x04000145], eax 	       484	normal.c	FUNCTION_2
0x105	              0x90	                                     nop	       485	normal.c	FUNCTION_2
0x106	              0xc9	                                   leave	       485	normal.c	FUNCTION_2
0x107	              0xc3	                                     ret	       485	normal.c	FUNCTION_2
nv_gomark	CALL,9:ELSE,3:DO,0:FOR,0:functions,0:IF,5:WHILE,0:SWITCH,0	92
0xcdb8	              0x55	                                push rbp	      7541	normal.c	FUNCTION_98
0xcdb9	          0x4889e5	                            mov rbp, rsp	      7541	normal.c	FUNCTION_98
0xcdbc	        0x4883ec30	                           sub rsp, 0x30	      7541	normal.c	FUNCTION_98
0xcdc0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      7541	normal.c	FUNCTION_98
0xcdc4	    0x488b05000000	            mov rax, qword [0x0400ce0b] 	      7545	normal.c	FUNCTION_98
0xcdcb	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7545	normal.c	FUNCTION_98
0xcdcf	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7545	normal.c	FUNCTION_98
0xcdd3	        0x488945f0	             mov qword [rbp - 0x10], rax	      7545	normal.c	FUNCTION_98
0xcdd7	        0x488955f8	                mov qword [rbp - 8], rdx	      7545	normal.c	FUNCTION_98
0xcddb	    0x8b0500000000	            mov eax, dword [0x0400ce21] 	      7546	normal.c	FUNCTION_98
0xcde1	          0x8945e4	             mov dword [rbp - 0x1c], eax	      7546	normal.c	FUNCTION_98
0xcde4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7549	normal.c	FUNCTION_98	IF_1
0xcde8	          0x8b400c	              mov eax, dword [rax + 0xc]	      7549	normal.c	FUNCTION_98	IF_1
0xcdeb	          0x83f867	                           cmp eax, 0x67	      7549	normal.c	FUNCTION_98	IF_1
0xcdee	            0x750c	                           jne 0x400ce3c	      7549	normal.c	FUNCTION_98	IF_1
0xcdf0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7550	normal.c	FUNCTION_98	IF_1
0xcdf4	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      7550	normal.c	FUNCTION_98	IF_1
0xcdf7	          0x8945e0	             mov dword [rbp - 0x20], eax	      7550	normal.c	FUNCTION_98	IF_1
0xcdfa	            0xeb0a	                           jmp 0x400ce46	      7550	normal.c	FUNCTION_98	IF_1
0xcdfc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7552	normal.c	FUNCTION_98	ELSE_1
0xce00	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7552	normal.c	FUNCTION_98	ELSE_1
0xce03	          0x8945e0	             mov dword [rbp - 0x20], eax	      7552	normal.c	FUNCTION_98	ELSE_1
0xce06	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7553	normal.c	FUNCTION_98	CALL_1
0xce0a	          0x488b00	                    mov rax, qword [rax]	      7553	normal.c	FUNCTION_98	CALL_1
0xce0d	            0x8b00	                    mov eax, dword [rax]	      7553	normal.c	FUNCTION_98	CALL_1
0xce0f	            0x85c0	                           test eax, eax	      7553	normal.c	FUNCTION_98	CALL_1
0xce11	           0xf94c0	                                 sete al	      7553	normal.c	FUNCTION_98	CALL_1
0xce14	           0xfb6d0	                           movzx edx, al	      7553	normal.c	FUNCTION_98	CALL_1
0xce17	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7553	normal.c	FUNCTION_98	CALL_1
0xce1a	            0x89d6	                            mov esi, edx	      7553	normal.c	FUNCTION_98	CALL_1
0xce1c	            0x89c7	                            mov edi, eax	      7553	normal.c	FUNCTION_98	CALL_1
0xce1e	      0xe800000000	                          call 0x400ce63	      7553	normal.c	FUNCTION_98	CALL_1
0xce23	        0x488945e8	             mov qword [rbp - 0x18], rax	      7553	normal.c	FUNCTION_98	CALL_1
0xce27	      0x48837de8ff	cmp qword [rbp - 0x18], 0xffffffffffffffff	      7554	normal.c	FUNCTION_98	IF_2
0xce2c	            0x7523	                           jne 0x400ce91	      7554	normal.c	FUNCTION_98	IF_2
0xce2e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7556	normal.c	FUNCTION_98	IF_2	IF_3
0xce32	          0x8b4038	            mov eax, dword [rax + 0x38] 	      7556	normal.c	FUNCTION_98	IF_2	IF_3
0xce35	            0x85c0	                           test eax, eax	      7556	normal.c	FUNCTION_98	IF_2	IF_3
0xce37	            0x7411	                            je 0x400ce8a	      7556	normal.c	FUNCTION_98	IF_2	IF_3
0xce39	      0xe800000000	                          call 0x400ce7e	      7558	normal.c	FUNCTION_98	IF_2	IF_3	CALL_2
0xce3e	      0xbf05000000	                              mov edi, 5	      7559	normal.c	FUNCTION_98	IF_2	IF_3	CALL_3
0xce43	      0xe800000000	                          call 0x400ce88	      7559	normal.c	FUNCTION_98	IF_2	IF_3	CALL_3
0xce48	            0xeb20	                           jmp 0x400ceaa	      7559	normal.c	FUNCTION_98	IF_2	IF_3	CALL_3
0xce4a	      0xe800000000	                          call 0x400ce8f	      7562	normal.c	FUNCTION_98	IF_2	CALL_4
0xce4f	            0xeb19	                           jmp 0x400ceaa	      7562	normal.c	FUNCTION_98	IF_2	CALL_4
0xce51	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7565	normal.c	FUNCTION_98	CALL_5
0xce55	          0x8b4838	            mov ecx, dword [rax + 0x38] 	      7565	normal.c	FUNCTION_98	CALL_5
0xce58	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7565	normal.c	FUNCTION_98	CALL_5
0xce5c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7565	normal.c	FUNCTION_98	CALL_5
0xce60	            0x89ce	                            mov esi, ecx	      7565	normal.c	FUNCTION_98	CALL_5
0xce62	          0x4889c7	                            mov rdi, rax	      7565	normal.c	FUNCTION_98	CALL_5
0xce65	      0xe8e5fbffff	                  call sym.nv_cursormark	      7565	normal.c	FUNCTION_98	CALL_5
0xce6a	      0xe800000000	                          call 0x400ceaf	      7569	normal.c	FUNCTION_98	IF_4	CALL_6
0xce6f	            0x85c0	                           test eax, eax	      7569	normal.c	FUNCTION_98	IF_4	CALL_6
0xce71	            0x750e	                           jne 0x400cec1	      7569	normal.c	FUNCTION_98	IF_4	CALL_6
0xce73	    0x488b05000000	            mov rax, qword [0x0400ceba] 	      7570	normal.c	FUNCTION_98	IF_4
0xce7a	    0xc74044000000	               mov dword [rax + 0x44], 0	      7570	normal.c	FUNCTION_98	IF_4
0xce81	      0xe800000000	                          call 0x400cec6	      7572	normal.c	FUNCTION_98	CALL_7
0xce86	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7574	normal.c	FUNCTION_98	IF_5
0xce8a	          0x488b00	                    mov rax, qword [rax]	      7574	normal.c	FUNCTION_98	IF_5
0xce8d	            0x8b00	                    mov eax, dword [rax]	      7574	normal.c	FUNCTION_98	IF_5
0xce8f	            0x85c0	                           test eax, eax	      7574	normal.c	FUNCTION_98	IF_5
0xce91	            0x7552	                           jne 0x400cf25	      7574	normal.c	FUNCTION_98	IF_5
0xce93	      0x48837de800	               cmp qword [rbp - 0x18], 0	      7575	normal.c	FUNCTION_98	IF_5
0xce98	            0x744b	                            je 0x400cf25	      7575	normal.c	FUNCTION_98	IF_5
0xce9a	      0x48837de8ff	cmp qword [rbp - 0x18], 0xffffffffffffffff	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xce9f	            0x742c	                            je 0x400cf0d	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xcea1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xcea5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xcea9	          0x488b00	                    mov rax, qword [rax]	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xceac	          0x4839c2	                            cmp rdx, rax	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xceaf	            0x751c	                           jne 0x400cf0d	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xceb1	          0x8b55f8	                mov edx, dword [rbp - 8]	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xceb4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xceb8	          0x8b4008	                mov eax, dword [rax + 8]	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xcebb	            0x39c2	                            cmp edx, eax	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xcebd	            0x750e	                           jne 0x400cf0d	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xcebf	          0x8b55fc	                mov edx, dword [rbp - 4]	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xcec2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xcec6	          0x8b400c	              mov eax, dword [rax + 0xc]	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xcec9	            0x39c2	                            cmp edx, eax	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xcecb	            0x7418	                            je 0x400cf25	      7576	normal.c	FUNCTION_98	IF_5	CALL_8
0xcecd	    0x8b0500000000	            mov eax, dword [0x0400cf13] 	      7577	normal.c	FUNCTION_98	IF_5
0xced3	          0x83e008	                              and eax, 8	      7577	normal.c	FUNCTION_98	IF_5
0xced6	            0x85c0	                           test eax, eax	      7577	normal.c	FUNCTION_98	IF_5
0xced8	            0x740b	                            je 0x400cf25	      7577	normal.c	FUNCTION_98	IF_5
0xceda	        0x837de400	               cmp dword [rbp - 0x1c], 0	      7578	normal.c	FUNCTION_98	IF_5
0xcede	            0x7405	                            je 0x400cf25	      7578	normal.c	FUNCTION_98	IF_5
0xcee0	      0xe800000000	                          call 0x400cf25	      7579	normal.c	FUNCTION_98	CALL_9
0xcee5	              0x90	                                     nop	      7581	normal.c	FUNCTION_98
0xcee6	              0xc9	                                   leave	      7581	normal.c	FUNCTION_98
0xcee7	              0xc3	                                     ret	      7581	normal.c	FUNCTION_98
find_ident_at_pos	CALL,25:ELSE,5:DO,0:FOR,1:functions,0:IF,12:WHILE,6:SWITCH,0	516
0x51ac	              0x55	                                push rbp	      3445	normal.c	FUNCTION_19
0x51ad	          0x4889e5	                            mov rbp, rsp	      3445	normal.c	FUNCTION_19
0x51b0	              0x53	                                push rbx	      3445	normal.c	FUNCTION_19
0x51b1	        0x4883ec58	                           sub rsp, 0x58	      3445	normal.c	FUNCTION_19
0x51b5	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3445	normal.c	FUNCTION_19
0x51b9	        0x488975b0	             mov qword [rbp - 0x50], rsi	      3445	normal.c	FUNCTION_19
0x51bd	          0x8955ac	             mov dword [rbp - 0x54], edx	      3445	normal.c	FUNCTION_19
0x51c0	        0x48894da0	             mov qword [rbp - 0x60], rcx	      3445	normal.c	FUNCTION_19
0x51c4	        0x448945a8	             mov dword [rbp - 0x58], r8d	      3445	normal.c	FUNCTION_19
0x51c8	    0x64488b042528	                mov rax, qword fs:[0x28]	      3445	normal.c	FUNCTION_19
0x51d1	        0x488945e8	             mov qword [rbp - 0x18], rax	      3445	normal.c	FUNCTION_19
0x51d5	            0x31c0	                            xor eax, eax	      3445	normal.c	FUNCTION_19
0x51d7	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      3447	normal.c	FUNCTION_19
0x51de	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      3450	normal.c	FUNCTION_19
0x51e5	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      3454	normal.c	FUNCTION_19
0x51ec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3460	normal.c	FUNCTION_19	CALL_1
0x51f0	        0x488b4008	                mov rax, qword [rax + 8]	      3460	normal.c	FUNCTION_19	CALL_1
0x51f4	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      3460	normal.c	FUNCTION_19	CALL_1
0x51f8	      0xba00000000	                              mov edx, 0	      3460	normal.c	FUNCTION_19	CALL_1
0x51fd	          0x4889ce	                            mov rsi, rcx	      3460	normal.c	FUNCTION_19	CALL_1
0x5200	          0x4889c7	                            mov rdi, rax	      3460	normal.c	FUNCTION_19	CALL_1
0x5203	      0xe800000000	                          call 0x4005248	      3460	normal.c	FUNCTION_19	CALL_1
0x5208	        0x488945e0	             mov qword [rbp - 0x20], rax	      3460	normal.c	FUNCTION_19	CALL_1
0x520c	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3461	normal.c	FUNCTION_19	FOR_1
0x520f	          0x83e001	                              and eax, 1	      3461	normal.c	FUNCTION_19	FOR_1
0x5212	            0x85c0	                           test eax, eax	      3461	normal.c	FUNCTION_19	FOR_1
0x5214	           0xf94c0	                                 sete al	      3461	normal.c	FUNCTION_19	FOR_1
0x5217	           0xfb6c0	                           movzx eax, al	      3461	normal.c	FUNCTION_19	FOR_1
0x521a	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3461	normal.c	FUNCTION_19	FOR_1
0x521d	      0xe9c1030000	                           jmp 0x4005623	      3461	normal.c	FUNCTION_19	FOR_1
0x5222	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3466	normal.c	FUNCTION_19	FOR_1
0x5225	          0x8945c8	             mov dword [rbp - 0x38], eax	      3466	normal.c	FUNCTION_19	FOR_1
0x5228	    0x8b0500000000	            mov eax, dword [0x0400526e] 	      3468	normal.c	FUNCTION_19	FOR_1	IF_1
0x522e	            0x85c0	                           test eax, eax	      3468	normal.c	FUNCTION_19	FOR_1	IF_1
0x5230	     0xf849f000000	                            je 0x4005315	      3468	normal.c	FUNCTION_19	FOR_1	IF_1
0x5236	            0xeb77	                           jmp 0x40052ef	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x5238	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x523b	          0x83e004	                              and eax, 4	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x523e	            0x85c0	                           test eax, eax	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x5240	            0x7418	                            je 0x400529a	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x5242	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x5245	          0x4863d0	                         movsxd rdx, eax	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x5248	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x524c	          0x4801d0	                            add rax, rdx	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x524f	           0xfb600	                   movzx eax, byte [rax]	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x5252	            0x3c5d	                            cmp al, 0x5d	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x5254	     0xf841c010000	                            je 0x40053b6	      3473	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x525a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3475	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	CALL_2
0x525d	          0x4863d0	                         movsxd rdx, eax	      3475	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	CALL_2
0x5260	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3475	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	CALL_2
0x5264	          0x4801d0	                            add rax, rdx	      3475	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	CALL_2
0x5267	          0x4889c7	                            mov rdi, rax	      3475	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	CALL_2
0x526a	      0xe800000000	                          call 0x40052af	      3475	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	CALL_2
0x526f	          0x8945d8	             mov dword [rbp - 0x28], eax	      3475	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	CALL_2
0x5272	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3476	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_3
0x5276	            0x7414	                            je 0x40052cc	      3476	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_3
0x5278	        0x837dd401	               cmp dword [rbp - 0x2c], 1	      3476	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_3
0x527c	     0xf84f5000000	                            je 0x40053b7	      3476	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_3
0x5282	        0x837dd801	               cmp dword [rbp - 0x28], 1	      3476	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_3
0x5286	     0xf85eb000000	                           jne 0x40053b7	      3476	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_3
0x528c	    0x488b05000000	            mov rax, qword [0x040052d3] 	      3478	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x5293	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      3478	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x5296	          0x4863ca	                         movsxd rcx, edx	      3478	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x5299	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3478	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x529d	          0x4801ca	                            add rdx, rcx	      3478	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x52a0	          0x4889d7	                            mov rdi, rdx	      3478	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x52a3	            0xffd0	                                call rax	      3478	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x52a5	            0x89c2	                            mov edx, eax	      3478	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x52a7	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3478	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x52aa	             0x1d0	                            add eax, edx	      3478	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x52ac	          0x8945c8	             mov dword [rbp - 0x38], eax	      3478	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x52af	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x52b2	          0x4863d0	                         movsxd rdx, eax	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x52b5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x52b9	          0x4801d0	                            add rax, rdx	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x52bc	           0xfb600	                   movzx eax, byte [rax]	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x52bf	            0x84c0	                             test al, al	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x52c1	     0xf8571ffffff	                           jne 0x4005278	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x52c7	      0xe9ab000000	                           jmp 0x40053b7	      3470	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1
0x52cc	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3487	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x52cf	          0x83c001	                              add eax, 1	      3487	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x52d2	          0x8945c8	             mov dword [rbp - 0x38], eax	      3487	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x52d5	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3483	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x52d8	          0x4863d0	                         movsxd rdx, eax	      3483	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x52db	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3483	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x52df	          0x4801d0	                            add rax, rdx	      3483	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x52e2	           0xfb600	                   movzx eax, byte [rax]	      3483	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x52e5	            0x84c0	                             test al, al	      3483	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x52e7	     0xf848a000000	                            je 0x40053b7	      3483	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x52ed	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3483	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x52f1	            0x7520	                           jne 0x4005353	      3483	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x52f3	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x52f6	          0x4863d0	                         movsxd rdx, eax	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x52f9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x52fd	          0x4801d0	                            add rax, rdx	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5300	           0xfb600	                   movzx eax, byte [rax]	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5303	           0xfb6c0	                           movzx eax, al	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5306	            0x89c7	                            mov edi, eax	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5308	      0xe800000000	                          call 0x400534d	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x530d	            0x85c0	                           test eax, eax	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x530f	            0x743d	                            je 0x400538e	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5311	            0xeb64	                           jmp 0x40053b7	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5313	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5316	          0x4863d0	                         movsxd rdx, eax	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5319	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x531d	          0x4801d0	                            add rax, rdx	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5320	           0xfb600	                   movzx eax, byte [rax]	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5323	            0x3c20	                            cmp al, 0x20	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5325	            0x7414	                            je 0x400537b	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5327	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x532a	          0x4863d0	                         movsxd rdx, eax	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x532d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5331	          0x4801d0	                            add rax, rdx	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5334	           0xfb600	                   movzx eax, byte [rax]	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5337	            0x3c09	                               cmp al, 9	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5339	            0x7507	                           jne 0x4005382	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x533b	      0xb801000000	                              mov eax, 1	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5340	            0xeb05	                           jmp 0x4005387	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5342	      0xb800000000	                              mov eax, 0	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x5347	          0x83e001	                              and eax, 1	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x534a	            0x84c0	                             test al, al	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x534c	            0x7429	                            je 0x40053b7	      3484	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2	CALL_4
0x534e	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3485	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x5351	          0x83e004	                              and eax, 4	      3485	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x5354	            0x85c0	                           test eax, eax	      3485	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x5356	     0xf8470ffffff	                            je 0x400530c	      3485	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x535c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3485	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x535f	          0x4863d0	                         movsxd rdx, eax	      3485	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x5362	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3485	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x5366	          0x4801d0	                            add rax, rdx	      3485	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x5369	           0xfb600	                   movzx eax, byte [rax]	      3485	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x536c	            0x3c5d	                            cmp al, 0x5d	      3485	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x536e	     0xf8558ffffff	                           jne 0x400530c	      3485	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x5374	            0xeb01	                           jmp 0x40053b7	      3485	normal.c	FUNCTION_19	FOR_1	ELSE_1	WHILE_2
0x5376	              0x90	                                     nop	      3474	normal.c	FUNCTION_19	FOR_1	IF_1	WHILE_1	IF_2
0x5377	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3490	normal.c	FUNCTION_19	FOR_1
0x537a	          0x4863d0	                         movsxd rdx, eax	      3490	normal.c	FUNCTION_19	FOR_1
0x537d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3490	normal.c	FUNCTION_19	FOR_1
0x5381	          0x4801d0	                            add rax, rdx	      3490	normal.c	FUNCTION_19	FOR_1
0x5384	           0xfb600	                   movzx eax, byte [rax]	      3490	normal.c	FUNCTION_19	FOR_1
0x5387	            0x3c5d	                            cmp al, 0x5d	      3490	normal.c	FUNCTION_19	FOR_1
0x5389	           0xf94c0	                                 sete al	      3490	normal.c	FUNCTION_19	FOR_1
0x538c	           0xfb6c0	                           movzx eax, al	      3490	normal.c	FUNCTION_19	FOR_1
0x538f	          0x8945d0	             mov dword [rbp - 0x30], eax	      3490	normal.c	FUNCTION_19	FOR_1
0x5392	    0x8b0500000000	            mov eax, dword [0x040053d8] 	      3496	normal.c	FUNCTION_19	FOR_1	IF_4
0x5398	            0x85c0	                           test eax, eax	      3496	normal.c	FUNCTION_19	FOR_1	IF_4
0x539a	     0xf8433010000	                            je 0x4005513	      3496	normal.c	FUNCTION_19	FOR_1	IF_4
0x53a0	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3499	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x53a3	          0x83e004	                              and eax, 4	      3499	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x53a6	            0x85c0	                           test eax, eax	      3499	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x53a8	            0x7423	                            je 0x400540d	      3499	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x53aa	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3499	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x53ad	          0x4863d0	                         movsxd rdx, eax	      3499	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x53b0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3499	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x53b4	          0x4801d0	                            add rax, rdx	      3499	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x53b7	           0xfb600	                   movzx eax, byte [rax]	      3499	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x53ba	            0x3c5d	                            cmp al, 0x5d	      3499	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x53bc	            0x750f	                           jne 0x400540d	      3499	normal.c	FUNCTION_19	FOR_1	IF_4	IF_5
0x53be	      0xbf00000000	                              mov edi, 0	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_5
0x53c3	      0xe800000000	                          call 0x4005408	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_5
0x53c8	          0x8945d8	             mov dword [rbp - 0x28], eax	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_5
0x53cb	            0xeb18	                           jmp 0x4005425	      3500	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_5
0x53cd	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3502	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_6
0x53d0	          0x4863d0	                         movsxd rdx, eax	      3502	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_6
0x53d3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3502	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_6
0x53d7	          0x4801d0	                            add rax, rdx	      3502	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_6
0x53da	          0x4889c7	                            mov rdi, rax	      3502	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_6
0x53dd	      0xe800000000	                          call 0x4005422	      3502	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_6
0x53e2	          0x8945d8	             mov dword [rbp - 0x28], eax	      3502	normal.c	FUNCTION_19	FOR_1	IF_4	CALL_6
0x53e5	      0xe9a5000000	                           jmp 0x40054cf	      3503	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x53ea	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3505	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x53ed	          0x8d58ff	                      lea ebx, [rax - 1]	      3505	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x53f0	    0x488b05000000	            mov rax, qword [0x04005437] 	      3505	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x53f7	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      3505	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x53fa	          0x4863d2	                         movsxd rdx, edx	      3505	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x53fd	        0x488d4aff	                      lea rcx, [rdx - 1]	      3505	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x5401	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3505	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x5405	          0x4801d1	                            add rcx, rdx	      3505	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x5408	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3505	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x540c	          0x4889ce	                            mov rsi, rcx	      3505	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x540f	          0x4889d7	                            mov rdi, rdx	      3505	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x5412	            0xffd0	                                call rax	      3505	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x5414	            0x29c3	                            sub ebx, eax	      3505	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x5416	            0x89d8	                            mov eax, ebx	      3505	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x5418	          0x8945cc	             mov dword [rbp - 0x34], eax	      3505	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x541b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3506	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	CALL_7
0x541e	          0x4863d0	                         movsxd rdx, eax	      3506	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	CALL_7
0x5421	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3506	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	CALL_7
0x5425	          0x4801d0	                            add rax, rdx	      3506	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	CALL_7
0x5428	          0x4889c7	                            mov rdi, rax	      3506	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	CALL_7
0x542b	      0xe800000000	                          call 0x4005470	      3506	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	CALL_7
0x5430	          0x8945dc	             mov dword [rbp - 0x24], eax	      3506	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	CALL_7
0x5433	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3507	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x5436	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      3507	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x5439	            0x744e	                            je 0x40054c9	      3507	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x543b	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3508	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x543f	            0x7410	                            je 0x4005491	      3508	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x5441	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3509	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x5445	            0x740a	                            je 0x4005491	      3509	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x5447	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3510	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x544a	          0x83e001	                              and eax, 1	      3510	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x544d	            0x85c0	                           test eax, eax	      3510	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x544f	            0x7438	                            je 0x40054c9	      3510	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x5451	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3511	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x5454	          0x83e004	                              and eax, 4	      3511	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x5457	            0x85c0	                           test eax, eax	      3511	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x5459	            0x7445	                            je 0x40054e0	      3511	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x545b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3512	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x545e	            0x85c0	                           test eax, eax	      3512	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x5460	            0x743e	                            je 0x40054e0	      3512	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6
0x5462	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3513	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x5465	          0x4863d0	                         movsxd rdx, eax	      3513	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x5468	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3513	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x546c	        0x488d3c02	                    lea rdi, [rdx + rax]	      3513	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x5470	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3513	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x5474	        0x488d45cc	                   lea rax, [rbp - 0x34]	      3513	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x5478	      0xb9ffffffff	                     mov ecx, 0xffffffff	      3513	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x547d	          0x4889c6	                            mov rsi, rax	      3513	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x5480	      0xe8f4fbffff	              call sym.find_is_eval_item	      3513	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x5485	            0x85c0	                           test eax, eax	      3513	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x5487	            0x7417	                            je 0x40054e0	      3513	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3	IF_6	CALL_8
0x5489	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3517	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x548c	          0x8945c8	             mov dword [rbp - 0x38], eax	      3517	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x548f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3503	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x5492	            0x85c0	                           test eax, eax	      3503	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x5494	            0x7e0a	                           jle 0x40054e0	      3503	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x5496	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3503	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x549a	     0xf854affffff	                           jne 0x400542a	      3503	normal.c	FUNCTION_19	FOR_1	IF_4	WHILE_3
0x54a0	        0x837dd802	               cmp dword [rbp - 0x28], 2	      3522	normal.c	FUNCTION_19	FOR_1	IF_4	IF_7
0x54a4	            0x7e07	                           jle 0x40054ed	      3522	normal.c	FUNCTION_19	FOR_1	IF_4	IF_7
0x54a6	    0xc745d8020000	               mov dword [rbp - 0x28], 2	      3523	normal.c	FUNCTION_19	FOR_1	IF_4	IF_7
0x54ad	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3524	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x54b0	          0x83e002	                              and eax, 2	      3524	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x54b3	            0x85c0	                           test eax, eax	      3524	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x54b5	     0xf8432010000	                            je 0x400562d	      3524	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x54bb	        0x837dd802	               cmp dword [rbp - 0x28], 2	      3524	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x54bf	     0xf8428010000	                            je 0x400562d	      3524	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x54c5	      0xe915010000	                           jmp 0x400561f	      3524	normal.c	FUNCTION_19	FOR_1	IF_4	IF_8
0x54ca	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3541	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x54cd	          0x83e801	                              sub eax, 1	      3541	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x54d0	          0x8945c8	             mov dword [rbp - 0x38], eax	      3541	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x54d3	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3530	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x54d6	            0x85c0	                           test eax, eax	      3530	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x54d8	     0xf8ed9000000	                           jle 0x40055f7	      3530	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x54de	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3530	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x54e2	            0x7523	                           jne 0x4005547	      3530	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x54e4	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3532	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_9
0x54e7	            0x4898	                                    cdqe	      3532	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_9
0x54e9	        0x488d50ff	                      lea rdx, [rax - 1]	      3532	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_9
0x54ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3532	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_9
0x54f1	          0x4801d0	                            add rax, rdx	      3532	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_9
0x54f4	           0xfb600	                   movzx eax, byte [rax]	      3532	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_9
0x54f7	           0xfb6c0	                           movzx eax, al	      3532	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_9
0x54fa	            0x89c7	                            mov edi, eax	      3532	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_9
0x54fc	      0xe800000000	                          call 0x4005541	      3532	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_9
0x5501	            0x85c0	                           test eax, eax	      3531	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x5503	            0x75c5	                           jne 0x400550a	      3531	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x5505	            0xeb70	                           jmp 0x40055b7	      3531	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x5507	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x550a	            0x4898	                                    cdqe	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x550c	        0x488d50ff	                      lea rdx, [rax - 1]	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x5510	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x5514	          0x4801d0	                            add rax, rdx	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x5517	           0xfb600	                   movzx eax, byte [rax]	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x551a	            0x3c20	                            cmp al, 0x20	      3534	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x551c	            0x7449	                            je 0x40055a7	      3534	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x551e	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x5521	            0x4898	                                    cdqe	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x5523	        0x488d50ff	                      lea rdx, [rax - 1]	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x5527	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x552b	          0x4801d0	                            add rax, rdx	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x552e	           0xfb600	                   movzx eax, byte [rax]	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x5531	            0x3c09	                               cmp al, 9	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x5533	            0x7432	                            je 0x40055a7	      3533	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_10
0x5535	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3534	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x5538	          0x83e001	                              and eax, 1	      3534	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x553b	            0x85c0	                           test eax, eax	      3534	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x553d	            0x7421	                            je 0x40055a0	      3534	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x553f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_11
0x5542	            0x4898	                                    cdqe	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_11
0x5544	        0x488d50ff	                      lea rdx, [rax - 1]	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_11
0x5548	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_11
0x554c	          0x4801d0	                            add rax, rdx	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_11
0x554f	           0xfb600	                   movzx eax, byte [rax]	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_11
0x5552	           0xfb6c0	                           movzx eax, al	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_11
0x5555	            0x89c7	                            mov edi, eax	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_11
0x5557	      0xe800000000	                          call 0x400559c	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_11
0x555c	            0x85c0	                           test eax, eax	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_11
0x555e	            0x7507	                           jne 0x40055a7	      3535	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_11
0x5560	      0xb801000000	                              mov eax, 1	      3534	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x5565	            0xeb05	                           jmp 0x40055ac	      3534	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x5567	      0xb800000000	                              mov eax, 0	      3534	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x556c	          0x83e001	                              and eax, 1	      3536	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x556f	            0x84c0	                             test al, al	      3536	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x5571	     0xf8553ffffff	                           jne 0x400550a	      3536	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x5577	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3536	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x557a	          0x83e004	                              and eax, 4	      3536	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x557d	            0x85c0	                           test eax, eax	      3536	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x557f	            0x7436	                            je 0x40055f7	      3536	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x5581	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3537	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x5584	          0x83f801	                              cmp eax, 1	      3537	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x5587	            0x7e2e	                           jle 0x40055f7	      3537	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4
0x5589	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3538	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x558c	            0x4898	                                    cdqe	      3538	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x558e	        0x488d50ff	                      lea rdx, [rax - 1]	      3538	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x5592	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3538	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x5596	        0x488d3c02	                    lea rdi, [rdx + rax]	      3538	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x559a	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3538	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x559e	        0x488d45c8	                   lea rax, [rbp - 0x38]	      3538	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x55a2	      0xb9ffffffff	                     mov ecx, 0xffffffff	      3538	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x55a7	          0x4889c6	                            mov rsi, rax	      3538	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x55aa	      0xe8cafaffff	              call sym.find_is_eval_item	      3538	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x55af	            0x85c0	                           test eax, eax	      3538	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x55b1	     0xf8513ffffff	                           jne 0x400550a	      3538	normal.c	FUNCTION_19	FOR_1	ELSE_3	WHILE_4	CALL_12
0x55b7	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3545	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x55ba	          0x83e002	                              and eax, 2	      3545	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x55bd	            0x85c0	                           test eax, eax	      3545	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x55bf	            0x742c	                            je 0x400562d	      3545	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x55c1	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3545	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x55c4	          0x4863d0	                         movsxd rdx, eax	      3545	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x55c7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3545	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x55cb	          0x4801d0	                            add rax, rdx	      3545	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x55ce	           0xfb600	                   movzx eax, byte [rax]	      3545	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x55d1	           0xfb6c0	                           movzx eax, al	      3545	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x55d4	            0x89c7	                            mov edi, eax	      3545	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x55d6	      0xe800000000	                          call 0x400561b	      3545	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x55db	            0x85c0	                           test eax, eax	      3545	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x55dd	            0x750e	                           jne 0x400562d	      3545	normal.c	FUNCTION_19	FOR_1	ELSE_3	IF_9	CALL_13
0x55df	        0x8345d401	               add dword [rbp - 0x2c], 1	      3461	normal.c	FUNCTION_19	FOR_1
0x55e3	        0x837dd401	               cmp dword [rbp - 0x2c], 1	      3461	normal.c	FUNCTION_19	FOR_1
0x55e7	     0xf8e35fcffff	                           jle 0x4005262	      3461	normal.c	FUNCTION_19	FOR_1
0x55ed	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3550	normal.c	FUNCTION_19	IF_10
0x55f0	          0x4863d0	                         movsxd rdx, eax	      3550	normal.c	FUNCTION_19	IF_10
0x55f3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3550	normal.c	FUNCTION_19	IF_10
0x55f7	          0x4801d0	                            add rax, rdx	      3550	normal.c	FUNCTION_19	IF_10
0x55fa	           0xfb600	                   movzx eax, byte [rax]	      3550	normal.c	FUNCTION_19	IF_10
0x55fd	            0x84c0	                             test al, al	      3550	normal.c	FUNCTION_19	IF_10
0x55ff	            0x7436	                            je 0x4005677	      3550	normal.c	FUNCTION_19	IF_10
0x5601	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3550	normal.c	FUNCTION_19	IF_10
0x5605	            0x756f	                           jne 0x40056b6	      3550	normal.c	FUNCTION_19	IF_10
0x5607	    0x8b0500000000	            mov eax, dword [0x0400564d] 	      3552	normal.c	FUNCTION_19	IF_10
0x560d	            0x85c0	                           test eax, eax	      3550	normal.c	FUNCTION_19	IF_10
0x560f	            0x7408	                            je 0x4005659	      3550	normal.c	FUNCTION_19	IF_10
0x5611	        0x837dd802	               cmp dword [rbp - 0x28], 2	      3550	normal.c	FUNCTION_19	IF_10
0x5615	            0x7520	                           jne 0x4005677	      3550	normal.c	FUNCTION_19	IF_10
0x5617	            0xeb5d	                           jmp 0x40056b6	      3550	normal.c	FUNCTION_19	IF_10
0x5619	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3554	normal.c	FUNCTION_19	IF_10	CALL_14
0x561c	          0x4863d0	                         movsxd rdx, eax	      3554	normal.c	FUNCTION_19	IF_10	CALL_14
0x561f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3554	normal.c	FUNCTION_19	IF_10	CALL_14
0x5623	          0x4801d0	                            add rax, rdx	      3554	normal.c	FUNCTION_19	IF_10	CALL_14
0x5626	           0xfb600	                   movzx eax, byte [rax]	      3554	normal.c	FUNCTION_19	IF_10	CALL_14
0x5629	           0xfb6c0	                           movzx eax, al	      3554	normal.c	FUNCTION_19	IF_10	CALL_14
0x562c	            0x89c7	                            mov edi, eax	      3554	normal.c	FUNCTION_19	IF_10	CALL_14
0x562e	      0xe800000000	                          call 0x4005673	      3554	normal.c	FUNCTION_19	IF_10	CALL_14
0x5633	            0x85c0	                           test eax, eax	      3550	normal.c	FUNCTION_19	IF_10
0x5635	            0x753f	                           jne 0x40056b6	      3550	normal.c	FUNCTION_19	IF_10
0x5637	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3559	normal.c	FUNCTION_19	IF_10	IF_11
0x563a	          0x83e002	                              and eax, 2	      3559	normal.c	FUNCTION_19	IF_10	IF_11
0x563d	            0x85c0	                           test eax, eax	      3559	normal.c	FUNCTION_19	IF_10	IF_11
0x563f	            0x7414	                            je 0x4005695	      3559	normal.c	FUNCTION_19	IF_10	IF_11
0x5641	      0xbf00000000	                              mov edi, 0	      3560	normal.c	FUNCTION_19	IF_10	CALL_16
0x5646	      0xe800000000	                          call 0x400568b	      3560	normal.c	FUNCTION_19	IF_10	CALL_16
0x564b	          0x4889c7	                            mov rdi, rax	      3560	normal.c	FUNCTION_19	IF_10	CALL_16
0x564e	      0xe800000000	                          call 0x4005693	      3560	normal.c	FUNCTION_19	IF_10	CALL_16
0x5653	            0xeb17	                           jmp 0x40056ac	      3560	normal.c	FUNCTION_19	IF_10	CALL_16
0x5655	    0x488b05000000	            mov rax, qword [0x0400569c] 	      3562	normal.c	FUNCTION_19	IF_10	CALL_18
0x565c	          0x4889c7	                            mov rdi, rax	      3562	normal.c	FUNCTION_19	IF_10	CALL_18
0x565f	      0xe800000000	                          call 0x40056a4	      3562	normal.c	FUNCTION_19	IF_10	CALL_18
0x5664	          0x4889c7	                            mov rdi, rax	      3562	normal.c	FUNCTION_19	IF_10	CALL_18
0x5667	      0xe800000000	                          call 0x40056ac	      3562	normal.c	FUNCTION_19	IF_10	CALL_18
0x566c	      0xb800000000	                              mov eax, 0	      3563	normal.c	FUNCTION_19	IF_10
0x5671	      0xe9c5010000	                           jmp 0x400587b	      3563	normal.c	FUNCTION_19	IF_10
0x5676	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3565	normal.c	FUNCTION_19
0x5679	            0x4898	                                    cdqe	      3565	normal.c	FUNCTION_19
0x567b	        0x480145e0	            add qword [rbp - 0x20], rax 	      3565	normal.c	FUNCTION_19
0x567f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3566	normal.c	FUNCTION_19
0x5683	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3566	normal.c	FUNCTION_19
0x5687	          0x488910	                    mov qword [rax], rdx	      3566	normal.c	FUNCTION_19
0x568a	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      3571	normal.c	FUNCTION_19
0x5691	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3572	normal.c	FUNCTION_19
0x5694	          0x2945ac	             sub dword [rbp - 0x54], eax	      3572	normal.c	FUNCTION_19
0x5697	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      3573	normal.c	FUNCTION_19
0x569e	    0x8b0500000000	            mov eax, dword [0x040056e4] 	      3575	normal.c	FUNCTION_19	IF_12
0x56a4	            0x85c0	                           test eax, eax	      3575	normal.c	FUNCTION_19	IF_12
0x56a6	     0xf84da000000	                            je 0x40057c6	      3575	normal.c	FUNCTION_19	IF_12
0x56ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3578	normal.c	FUNCTION_19	IF_12	CALL_19
0x56b0	          0x4889c7	                            mov rdi, rax	      3578	normal.c	FUNCTION_19	IF_12	CALL_19
0x56b3	      0xe800000000	                          call 0x40056f8	      3578	normal.c	FUNCTION_19	IF_12	CALL_19
0x56b8	          0x8945d8	             mov dword [rbp - 0x28], eax	      3578	normal.c	FUNCTION_19	IF_12	CALL_19
0x56bb	            0xeb23	                           jmp 0x4005720	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56bd	    0x488b05000000	            mov rax, qword [0x04005704] 	      3586	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56c4	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      3586	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56c7	          0x4863ca	                         movsxd rcx, edx	      3586	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56ca	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3586	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56ce	          0x4801ca	                            add rdx, rcx	      3586	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56d1	          0x4889d7	                            mov rdi, rdx	      3586	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56d4	            0xffd0	                                call rax	      3586	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56d6	            0x89c2	                            mov edx, eax	      3586	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56d8	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3586	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56db	             0x1d0	                            add eax, edx	      3586	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56dd	          0x8945c8	             mov dword [rbp - 0x38], eax	      3586	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56e0	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56e3	          0x4863d0	                         movsxd rdx, eax	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56ea	          0x4801d0	                            add rax, rdx	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56ed	           0xfb600	                   movzx eax, byte [rax]	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56f0	            0x84c0	                             test al, al	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56f2	     0xf8440010000	                            je 0x4005878	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56f8	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56fc	            0x751c	                           jne 0x400575a	      3579	normal.c	FUNCTION_19	IF_12	WHILE_5
0x56fe	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3580	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_20
0x5701	          0x4863d0	                         movsxd rdx, eax	      3580	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_20
0x5704	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3580	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_20
0x5708	          0x4801d0	                            add rax, rdx	      3580	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_20
0x570b	          0x4889c7	                            mov rdi, rax	      3580	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_20
0x570e	      0xe800000000	                          call 0x4005753	      3580	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_20
0x5713	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      3580	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_20
0x5716	            0x74a5	                            je 0x40056fd	      3580	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_20
0x5718	            0xeb19	                           jmp 0x4005773	      3580	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_20
0x571a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3581	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_21
0x571d	          0x4863d0	                         movsxd rdx, eax	      3581	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_21
0x5720	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3581	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_21
0x5724	          0x4801d0	                            add rax, rdx	      3581	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_21
0x5727	          0x4889c7	                            mov rdi, rax	      3581	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_21
0x572a	      0xe800000000	                          call 0x400576f	      3581	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_21
0x572f	            0x85c0	                           test eax, eax	      3582	normal.c	FUNCTION_19	IF_12	WHILE_5
0x5731	            0x758a	                           jne 0x40056fd	      3582	normal.c	FUNCTION_19	IF_12	WHILE_5
0x5733	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3582	normal.c	FUNCTION_19	IF_12	WHILE_5
0x5736	          0x83e004	                              and eax, 4	      3582	normal.c	FUNCTION_19	IF_12	WHILE_5
0x5739	            0x85c0	                           test eax, eax	      3582	normal.c	FUNCTION_19	IF_12	WHILE_5
0x573b	     0xf84f7000000	                            je 0x4005878	      3582	normal.c	FUNCTION_19	IF_12	WHILE_5
0x5741	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3583	normal.c	FUNCTION_19	IF_12	WHILE_5
0x5744	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      3583	normal.c	FUNCTION_19	IF_12	WHILE_5
0x5747	     0xf8feb000000	                            jg 0x4005878	      3583	normal.c	FUNCTION_19	IF_12	WHILE_5
0x574d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3584	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x5750	          0x4863d0	                         movsxd rdx, eax	      3584	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x5753	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3584	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x5757	        0x488d3c02	                    lea rdi, [rdx + rax]	      3584	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x575b	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3584	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x575f	        0x488d45c8	                   lea rax, [rbp - 0x38]	      3584	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x5763	      0xb901000000	                              mov ecx, 1	      3584	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x5768	          0x4889c6	                            mov rsi, rax	      3584	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x576b	      0xe809f9ffff	              call sym.find_is_eval_item	      3584	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x5770	            0x85c0	                           test eax, eax	      3584	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x5772	     0xf8545ffffff	                           jne 0x40056fd	      3584	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x5778	      0xe9bb000000	                           jmp 0x4005878	      3584	normal.c	FUNCTION_19	IF_12	WHILE_5	CALL_22
0x577d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3597	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x5780	          0x83c001	                              add eax, 1	      3597	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x5783	          0x8945c8	             mov dword [rbp - 0x38], eax	      3597	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x5786	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x578a	            0x7520	                           jne 0x40057ec	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x578c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x578f	          0x4863d0	                         movsxd rdx, eax	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x5792	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x5796	          0x4801d0	                            add rax, rdx	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x5799	           0xfb600	                   movzx eax, byte [rax]	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x579c	           0xfb6c0	                           movzx eax, al	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x579f	            0x89c7	                            mov edi, eax	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x57a1	      0xe800000000	                          call 0x40057e6	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x57a6	            0x85c0	                           test eax, eax	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x57a8	            0x75d3	                           jne 0x40057bd	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x57aa	            0xeb4f	                           jmp 0x400583b	      3590	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_23
0x57ac	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57af	          0x4863d0	                         movsxd rdx, eax	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57b2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57b6	          0x4801d0	                            add rax, rdx	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57b9	           0xfb600	                   movzx eax, byte [rax]	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57bc	            0x84c0	                             test al, al	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57be	            0x742f	                            je 0x400582f	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57c0	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57c3	          0x4863d0	                         movsxd rdx, eax	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57c6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57ca	          0x4801d0	                            add rax, rdx	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57cd	           0xfb600	                   movzx eax, byte [rax]	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57d0	            0x3c20	                            cmp al, 0x20	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57d2	            0x741b	                            je 0x400582f	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57d4	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57d7	          0x4863d0	                         movsxd rdx, eax	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57da	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57de	          0x4801d0	                            add rax, rdx	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57e1	           0xfb600	                   movzx eax, byte [rax]	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57e4	            0x3c09	                               cmp al, 9	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57e6	            0x7407	                            je 0x400582f	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57e8	      0xb801000000	                              mov eax, 1	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57ed	            0xeb05	                           jmp 0x4005834	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57ef	      0xb800000000	                              mov eax, 0	      3591	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_24
0x57f4	          0x83e001	                              and eax, 1	      3592	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x57f7	            0x84c0	                             test al, al	      3592	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x57f9	            0x7582	                           jne 0x40057bd	      3592	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x57fb	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3592	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x57fe	          0x83e004	                              and eax, 4	      3592	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x5801	            0x85c0	                           test eax, eax	      3592	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x5803	            0x7433	                            je 0x4005878	      3592	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x5805	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3593	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x5808	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      3593	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x580b	            0x7f2b	                            jg 0x4005878	      3593	normal.c	FUNCTION_19	ELSE_5	WHILE_6
0x580d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3594	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x5810	          0x4863d0	                         movsxd rdx, eax	      3594	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x5813	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3594	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x5817	        0x488d3c02	                    lea rdi, [rdx + rax]	      3594	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x581b	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      3594	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x581f	        0x488d45c8	                   lea rax, [rbp - 0x38]	      3594	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x5823	      0xb901000000	                              mov ecx, 1	      3594	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x5828	          0x4889c6	                            mov rsi, rax	      3594	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x582b	      0xe849f8ffff	              call sym.find_is_eval_item	      3594	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x5830	            0x85c0	                           test eax, eax	      3594	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x5832	     0xf8545ffffff	                           jne 0x40057bd	      3594	normal.c	FUNCTION_19	ELSE_5	WHILE_6	CALL_25
0x5838	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      3600	normal.c	FUNCTION_19
0x583b	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3601	normal.c	FUNCTION_19
0x583f	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3601	normal.c	FUNCTION_19
0x5848	            0x7405	                            je 0x400588f	      3601	normal.c	FUNCTION_19
0x584a	      0xe800000000	                          call 0x400588f	      3601	normal.c	FUNCTION_19
0x584f	        0x4883c458	                           add rsp, 0x58	      3601	normal.c	FUNCTION_19
0x5853	              0x5b	                                 pop rbx	      3601	normal.c	FUNCTION_19
0x5854	              0x5d	                                 pop rbp	      3601	normal.c	FUNCTION_19
0x5855	              0xc3	                                     ret	      3601	normal.c	FUNCTION_19
nv_error	CALL,1:ELSE,0:DO,0:FOR,0:functions,0:IF,0:WHILE,0:SWITCH,0	11
0x652a	              0x55	                                push rbp	      4168	normal.c	FUNCTION_39
0x652b	          0x4889e5	                            mov rbp, rsp	      4168	normal.c	FUNCTION_39
0x652e	        0x4883ec10	                           sub rsp, 0x10	      4168	normal.c	FUNCTION_39
0x6532	        0x48897df8	                mov qword [rbp - 8], rdi	      4168	normal.c	FUNCTION_39
0x6536	        0x488b45f8	                mov rax, qword [rbp - 8]	      4169	normal.c	FUNCTION_39	CALL_1
0x653a	          0x488b00	                    mov rax, qword [rax]	      4169	normal.c	FUNCTION_39	CALL_1
0x653d	          0x4889c7	                            mov rdi, rax	      4169	normal.c	FUNCTION_39	CALL_1
0x6540	      0xe8a3f4ffff	                    call sym.clearopbeep	      4169	normal.c	FUNCTION_39	CALL_1
0x6545	              0x90	                                     nop	      4170	normal.c	FUNCTION_39
0x6546	              0xc9	                                   leave	      4170	normal.c	FUNCTION_39
0x6547	              0xc3	                                     ret	      4170	normal.c	FUNCTION_39
nv_gd	CALL,4:ELSE,1:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	50
0x6696	              0x55	                                push rbp	      4230	normal.c	FUNCTION_43
0x6697	          0x4889e5	                            mov rbp, rsp	      4230	normal.c	FUNCTION_43
0x669a	        0x4883ec30	                           sub rsp, 0x30	      4230	normal.c	FUNCTION_43
0x669e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4230	normal.c	FUNCTION_43
0x66a2	          0x8975d4	             mov dword [rbp - 0x2c], esi	      4230	normal.c	FUNCTION_43
0x66a5	          0x8955d0	             mov dword [rbp - 0x30], edx	      4230	normal.c	FUNCTION_43
0x66a8	    0x64488b042528	                mov rax, qword fs:[0x28]	      4230	normal.c	FUNCTION_43
0x66b1	        0x488945f8	                mov qword [rbp - 8], rax	      4230	normal.c	FUNCTION_43
0x66b5	            0x31c0	                            xor eax, eax	      4230	normal.c	FUNCTION_43
0x66b7	        0x488d45f0	                   lea rax, [rbp - 0x10]	      4234	normal.c	FUNCTION_43	IF_1	CALL_1
0x66bb	      0xbe01000000	                              mov esi, 1	      4234	normal.c	FUNCTION_43	IF_1	CALL_1
0x66c0	          0x4889c7	                            mov rdi, rax	      4234	normal.c	FUNCTION_43	IF_1	CALL_1
0x66c3	      0xe800000000	                          call 0x4006708	      4234	normal.c	FUNCTION_43	IF_1	CALL_1
0x66c8	          0x8945ec	             mov dword [rbp - 0x14], eax	      4234	normal.c	FUNCTION_43	IF_1	CALL_1
0x66cb	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4234	normal.c	FUNCTION_43	IF_1	CALL_1
0x66cf	            0x7426	                            je 0x4006737	      4234	normal.c	FUNCTION_43	IF_1	CALL_1
0x66d1	        0x837dd464	           cmp dword [rbp - 0x2c], 0x64 	      4235	normal.c	FUNCTION_43	IF_1	CALL_2
0x66d5	           0xf94c0	                                 sete al	      4235	normal.c	FUNCTION_43	IF_1	CALL_2
0x66d8	           0xfb6d0	                           movzx edx, al	      4235	normal.c	FUNCTION_43	IF_1	CALL_2
0x66db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4235	normal.c	FUNCTION_43	IF_1	CALL_2
0x66df	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      4235	normal.c	FUNCTION_43	IF_1	CALL_2
0x66e2	          0x8b75ec	             mov esi, dword [rbp - 0x14]	      4235	normal.c	FUNCTION_43	IF_1	CALL_2
0x66e5	    0x41b800010000	                          mov r8d, 0x100	      4235	normal.c	FUNCTION_43	IF_1	CALL_2
0x66eb	          0x4889c7	                            mov rdi, rax	      4235	normal.c	FUNCTION_43	IF_1	CALL_2
0x66ee	      0xe800000000	                          call 0x4006733	      4235	normal.c	FUNCTION_43	IF_1	CALL_2
0x66f3	            0x85c0	                           test eax, eax	      4235	normal.c	FUNCTION_43	IF_1	CALL_2
0x66f5	            0x750e	                           jne 0x4006745	      4235	normal.c	FUNCTION_43	IF_1	CALL_2
0x66f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4237	normal.c	FUNCTION_43	CALL_3
0x66fb	          0x4889c7	                            mov rdi, rax	      4237	normal.c	FUNCTION_43	CALL_3
0x66fe	      0xe8e5f2ffff	                    call sym.clearopbeep	      4237	normal.c	FUNCTION_43	CALL_3
0x6703	            0xeb26	                           jmp 0x400676b	      4242	normal.c	FUNCTION_43
0x6705	    0x8b0500000000	            mov eax, dword [0x0400674b] 	      4239	normal.c	FUNCTION_43	ELSE_1	IF_2
0x670b	          0x83e040	                           and eax, 0x40	      4239	normal.c	FUNCTION_43	ELSE_1	IF_2
0x670e	            0x85c0	                           test eax, eax	      4239	normal.c	FUNCTION_43	ELSE_1	IF_2
0x6710	            0x7419	                            je 0x400676b	      4239	normal.c	FUNCTION_43	ELSE_1	IF_2
0x6712	    0x8b0500000000	            mov eax, dword [0x04006758] 	      4239	normal.c	FUNCTION_43	ELSE_1	IF_2
0x6718	            0x85c0	                           test eax, eax	      4239	normal.c	FUNCTION_43	ELSE_1	IF_2
0x671a	            0x740f	                            je 0x400676b	      4239	normal.c	FUNCTION_43	ELSE_1	IF_2
0x671c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4239	normal.c	FUNCTION_43	ELSE_1	IF_2
0x6720	            0x8b00	                    mov eax, dword [rax]	      4239	normal.c	FUNCTION_43	ELSE_1	IF_2
0x6722	            0x85c0	                           test eax, eax	      4239	normal.c	FUNCTION_43	ELSE_1	IF_2
0x6724	            0x7505	                           jne 0x400676b	      4239	normal.c	FUNCTION_43	ELSE_1	IF_2
0x6726	      0xe800000000	                          call 0x400676b	      4240	normal.c	FUNCTION_43	ELSE_1	IF_2
0x672b	              0x90	                                     nop	      4242	normal.c	FUNCTION_43
0x672c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4242	normal.c	FUNCTION_43
0x6730	    0x644833042528	                xor rax, qword fs:[0x28]	      4242	normal.c	FUNCTION_43
0x6739	            0x7405	                            je 0x4006780	      4242	normal.c	FUNCTION_43
0x673b	      0xe800000000	                          call 0x4006780	      4242	normal.c	FUNCTION_43
0x6740	              0xc9	                                   leave	      4242	normal.c	FUNCTION_43
0x6741	              0xc3	                                     ret	      4242	normal.c	FUNCTION_43
nv_csearch	CALL,8:ELSE,3:DO,0:FOR,0:functions,0:IF,4:WHILE,0:SWITCH,0	97
0xa867	              0x55	                                push rbp	      6424	normal.c	FUNCTION_80
0xa868	          0x4889e5	                            mov rbp, rsp	      6424	normal.c	FUNCTION_80
0xa86b	        0x4883ec30	                           sub rsp, 0x30	      6424	normal.c	FUNCTION_80
0xa86f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6424	normal.c	FUNCTION_80
0xa873	    0x64488b042528	                mov rax, qword fs:[0x28]	      6424	normal.c	FUNCTION_80
0xa87c	        0x488945f8	                mov qword [rbp - 8], rax	      6424	normal.c	FUNCTION_80
0xa880	            0x31c0	                            xor eax, eax	      6424	normal.c	FUNCTION_80
0xa882	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6427	normal.c	FUNCTION_80	IF_1
0xa886	          0x8b400c	              mov eax, dword [rax + 0xc]	      6427	normal.c	FUNCTION_80	IF_1
0xa889	          0x83f874	                           cmp eax, 0x74	      6427	normal.c	FUNCTION_80	IF_1
0xa88c	            0x740c	                            je 0x400a8da	      6427	normal.c	FUNCTION_80	IF_1
0xa88e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6427	normal.c	FUNCTION_80	IF_1
0xa892	          0x8b400c	              mov eax, dword [rax + 0xc]	      6427	normal.c	FUNCTION_80	IF_1
0xa895	          0x83f854	                           cmp eax, 0x54	      6427	normal.c	FUNCTION_80	IF_1
0xa898	            0x7509	                           jne 0x400a8e3	      6427	normal.c	FUNCTION_80	IF_1
0xa89a	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      6428	normal.c	FUNCTION_80	IF_1
0xa8a1	            0xeb07	                           jmp 0x400a8ea	      6428	normal.c	FUNCTION_80	IF_1
0xa8a3	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      6430	normal.c	FUNCTION_80	ELSE_1
0xa8aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6432	normal.c	FUNCTION_80
0xa8ae	          0x488b00	                    mov rax, qword [rax]	      6432	normal.c	FUNCTION_80
0xa8b1	    0xc74008000000	                  mov dword [rax + 8], 0	      6432	normal.c	FUNCTION_80
0xa8b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6433	normal.c	FUNCTION_80	IF_2	CALL_2
0xa8bc	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6433	normal.c	FUNCTION_80	IF_2	CALL_2
0xa8bf	            0x85c0	                           test eax, eax	      6433	normal.c	FUNCTION_80	IF_2	CALL_2
0xa8c1	            0x7815	                            js 0x400a918	      6433	normal.c	FUNCTION_80	IF_2	CALL_2
0xa8c3	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      6433	normal.c	FUNCTION_80	IF_2	CALL_2
0xa8c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6433	normal.c	FUNCTION_80	IF_2	CALL_2
0xa8ca	            0x89d6	                            mov esi, edx	      6433	normal.c	FUNCTION_80	IF_2	CALL_2
0xa8cc	          0x4889c7	                            mov rdi, rax	      6433	normal.c	FUNCTION_80	IF_2	CALL_2
0xa8cf	      0xe800000000	                          call 0x400a914	      6433	normal.c	FUNCTION_80	IF_2	CALL_2
0xa8d4	            0x85c0	                           test eax, eax	      6433	normal.c	FUNCTION_80	IF_2	CALL_2
0xa8d6	            0x7514	                           jne 0x400a92c	      6433	normal.c	FUNCTION_80	IF_2	CALL_2
0xa8d8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6434	normal.c	FUNCTION_80	CALL_3
0xa8dc	          0x488b00	                    mov rax, qword [rax]	      6434	normal.c	FUNCTION_80	CALL_3
0xa8df	          0x4889c7	                            mov rdi, rax	      6434	normal.c	FUNCTION_80	CALL_3
0xa8e2	      0xe801b1ffff	                    call sym.clearopbeep	      6434	normal.c	FUNCTION_80	CALL_3
0xa8e7	      0xe9c3000000	                           jmp 0x400a9ef	      6457	normal.c	FUNCTION_80
0xa8ec	    0x488b05000000	            mov rax, qword [0x0400a933] 	      6437	normal.c	FUNCTION_80	ELSE_2
0xa8f3	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6437	normal.c	FUNCTION_80	ELSE_2
0xa8fa	      0xe800000000	                          call 0x400a93f	      6440	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0xa8ff	          0x83f809	                              cmp eax, 9	      6440	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0xa902	            0x7568	                           jne 0x400a9ac	      6440	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0xa904	      0xe800000000	                          call 0x400a949	      6440	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0xa909	            0x85c0	                           test eax, eax	      6440	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0xa90b	            0x745f	                            je 0x400a9ac	      6440	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0xa90d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6440	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0xa911	          0x8b4038	            mov eax, dword [rax + 0x38] 	      6440	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0xa914	          0x83f801	                              cmp eax, 1	      6440	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0xa917	            0x7553	                           jne 0x400a9ac	      6440	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_5
0xa919	        0x837df400	                cmp dword [rbp - 0xc], 0	      6441	normal.c	FUNCTION_80	ELSE_2	IF_3
0xa91d	            0x750d	                           jne 0x400a96c	      6441	normal.c	FUNCTION_80	ELSE_2	IF_3
0xa91f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6441	normal.c	FUNCTION_80	ELSE_2	IF_3
0xa923	          0x488b00	                    mov rax, qword [rax]	      6441	normal.c	FUNCTION_80	ELSE_2	IF_3
0xa926	            0x8b00	                    mov eax, dword [rax]	      6441	normal.c	FUNCTION_80	ELSE_2	IF_3
0xa928	            0x85c0	                           test eax, eax	      6441	normal.c	FUNCTION_80	ELSE_2	IF_3
0xa92a	            0x7440	                            je 0x400a9ac	      6441	normal.c	FUNCTION_80	ELSE_2	IF_3
0xa92c	    0x488b05000000	            mov rax, qword [0x0400a973] 	      6445	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_6
0xa933	        0x488d7038	                   lea rsi, [rax + 0x38]	      6445	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_6
0xa937	    0x488b05000000	            mov rax, qword [0x0400a97e] 	      6445	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_6
0xa93e	        0x488d4df0	                   lea rcx, [rbp - 0x10]	      6445	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_6
0xa942	        0x488d55ec	                   lea rdx, [rbp - 0x14]	      6445	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_6
0xa946	          0x4989c8	                             mov r8, rcx	      6445	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_6
0xa949	      0xb900000000	                              mov ecx, 0	      6445	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_6
0xa94e	          0x4889c7	                            mov rdi, rax	      6445	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_6
0xa951	      0xe800000000	                          call 0x400a996	      6445	normal.c	FUNCTION_80	ELSE_2	IF_3	CALL_6
0xa956	    0x488b05000000	            mov rax, qword [0x0400a99d] 	      6446	normal.c	FUNCTION_80	ELSE_2	IF_3
0xa95d	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      6446	normal.c	FUNCTION_80	ELSE_2	IF_3
0xa960	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      6446	normal.c	FUNCTION_80	ELSE_2	IF_3
0xa963	            0x29d1	                            sub ecx, edx	      6446	normal.c	FUNCTION_80	ELSE_2	IF_3
0xa965	            0x89ca	                            mov edx, ecx	      6446	normal.c	FUNCTION_80	ELSE_2	IF_3
0xa967	          0x895044	             mov dword [rax + 0x44], edx	      6446	normal.c	FUNCTION_80	ELSE_2	IF_3
0xa96a	            0xeb0e	                           jmp 0x400a9ba	      6442	normal.c	FUNCTION_80	ELSE_2	IF_3
0xa96c	    0x488b05000000	            mov rax, qword [0x0400a9b3] 	      6449	normal.c	FUNCTION_80	ELSE_2	ELSE_3
0xa973	    0xc74044000000	               mov dword [rax + 0x44], 0	      6449	normal.c	FUNCTION_80	ELSE_2	ELSE_3
0xa97a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6451	normal.c	FUNCTION_80	ELSE_2	CALL_7
0xa97e	          0x4889c7	                            mov rdi, rax	      6451	normal.c	FUNCTION_80	ELSE_2	CALL_7
0xa981	      0xe810480000	                 call sym.adjust_for_sel	      6451	normal.c	FUNCTION_80	ELSE_2	CALL_7
0xa986	    0x8b0500000000	            mov eax, dword [0x0400a9cc] 	      6453	normal.c	FUNCTION_80	ELSE_2	IF_4
0xa98c	          0x83e004	                              and eax, 4	      6453	normal.c	FUNCTION_80	ELSE_2	IF_4
0xa98f	            0x85c0	                           test eax, eax	      6453	normal.c	FUNCTION_80	ELSE_2	IF_4
0xa991	            0x741c	                            je 0x400a9ef	      6453	normal.c	FUNCTION_80	ELSE_2	IF_4
0xa993	    0x8b0500000000	            mov eax, dword [0x0400a9d9] 	      6453	normal.c	FUNCTION_80	ELSE_2	IF_4
0xa999	            0x85c0	                           test eax, eax	      6453	normal.c	FUNCTION_80	ELSE_2	IF_4
0xa99b	            0x7412	                            je 0x400a9ef	      6453	normal.c	FUNCTION_80	ELSE_2	IF_4
0xa99d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6453	normal.c	FUNCTION_80	ELSE_2	IF_4
0xa9a1	          0x488b00	                    mov rax, qword [rax]	      6453	normal.c	FUNCTION_80	ELSE_2	IF_4
0xa9a4	            0x8b00	                    mov eax, dword [rax]	      6453	normal.c	FUNCTION_80	ELSE_2	IF_4
0xa9a6	            0x85c0	                           test eax, eax	      6453	normal.c	FUNCTION_80	ELSE_2	IF_4
0xa9a8	            0x7505	                           jne 0x400a9ef	      6453	normal.c	FUNCTION_80	ELSE_2	IF_4
0xa9aa	      0xe800000000	                          call 0x400a9ef	      6454	normal.c	FUNCTION_80	ELSE_2	CALL_8
0xa9af	              0x90	                                     nop	      6457	normal.c	FUNCTION_80
0xa9b0	        0x488b45f8	                mov rax, qword [rbp - 8]	      6457	normal.c	FUNCTION_80
0xa9b4	    0x644833042528	                xor rax, qword fs:[0x28]	      6457	normal.c	FUNCTION_80
0xa9bd	            0x7405	                            je 0x400aa04	      6457	normal.c	FUNCTION_80
0xa9bf	      0xe800000000	                          call 0x400aa04	      6457	normal.c	FUNCTION_80
0xa9c4	              0xc9	                                   leave	      6457	normal.c	FUNCTION_80
0xa9c5	              0xc3	                                     ret	      6457	normal.c	FUNCTION_80
do_nv_ident	CALL,3:ELSE,0:DO,0:FOR,0:functions,0:IF,0:WHILE,0:SWITCH,0	32
0x8be0	              0x55	                                push rbp	      5550	normal.c	FUNCTION_65
0x8be1	          0x4889e5	                            mov rbp, rsp	      5550	normal.c	FUNCTION_65
0x8be4	    0x4881ecf00000	                           sub rsp, 0xf0	      5550	normal.c	FUNCTION_65
0x8beb	    0x89bd1cffffff	             mov dword [rbp - 0xe4], edi	      5550	normal.c	FUNCTION_65
0x8bf1	    0x89b518ffffff	             mov dword [rbp - 0xe8], esi	      5550	normal.c	FUNCTION_65
0x8bf7	    0x64488b042528	                mov rax, qword fs:[0x28]	      5550	normal.c	FUNCTION_65
0x8c00	        0x488945f8	                mov qword [rbp - 8], rax	      5550	normal.c	FUNCTION_65
0x8c04	            0x31c0	                            xor eax, eax	      5550	normal.c	FUNCTION_65
0x8c06	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      5554	normal.c	FUNCTION_65	CALL_1
0x8c0d	          0x4889c7	                            mov rdi, rax	      5554	normal.c	FUNCTION_65	CALL_1
0x8c10	      0xe800000000	                          call 0x4008c55	      5554	normal.c	FUNCTION_65	CALL_1
0x8c15	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5555	normal.c	FUNCTION_65	CALL_2
0x8c1c	      0xba48000000	                           mov edx, 0x48	      5555	normal.c	FUNCTION_65	CALL_2
0x8c21	      0xbe00000000	                              mov esi, 0	      5555	normal.c	FUNCTION_65	CALL_2
0x8c26	          0x4889c7	                            mov rdi, rax	      5555	normal.c	FUNCTION_65	CALL_2
0x8c29	      0xe800000000	                          call 0x4008c6e	      5555	normal.c	FUNCTION_65	CALL_2
0x8c2e	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      5556	normal.c	FUNCTION_65
0x8c35	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      5556	normal.c	FUNCTION_65
0x8c3c	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      5557	normal.c	FUNCTION_65
0x8c42	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      5557	normal.c	FUNCTION_65
0x8c48	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	      5558	normal.c	FUNCTION_65
0x8c4e	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      5558	normal.c	FUNCTION_65
0x8c54	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      5559	normal.c	FUNCTION_65	CALL_3
0x8c5b	          0x4889c7	                            mov rdi, rax	      5559	normal.c	FUNCTION_65	CALL_3
0x8c5e	      0xe817000000	                       call sym.nv_ident	      5559	normal.c	FUNCTION_65	CALL_3
0x8c63	              0x90	                                     nop	      5560	normal.c	FUNCTION_65
0x8c64	        0x488b45f8	                mov rax, qword [rbp - 8]	      5560	normal.c	FUNCTION_65
0x8c68	    0x644833042528	                xor rax, qword fs:[0x28]	      5560	normal.c	FUNCTION_65
0x8c71	            0x7405	                            je 0x4008cb8	      5560	normal.c	FUNCTION_65
0x8c73	      0xe800000000	                          call 0x4008cb8	      5560	normal.c	FUNCTION_65
0x8c78	              0xc9	                                   leave	      5560	normal.c	FUNCTION_65
0x8c79	              0xc3	                                     ret	      5560	normal.c	FUNCTION_65
nv_undo	CALL,2:ELSE,1:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	26
0xbc5e	              0x55	                                push rbp	      6960	normal.c	FUNCTION_86
0xbc5f	          0x4889e5	                            mov rbp, rsp	      6960	normal.c	FUNCTION_86
0xbc62	        0x4883ec10	                           sub rsp, 0x10	      6960	normal.c	FUNCTION_86
0xbc66	        0x48897df8	                mov qword [rbp - 8], rdi	      6960	normal.c	FUNCTION_86
0xbc6a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6961	normal.c	FUNCTION_86	IF_1
0xbc6e	          0x488b00	                    mov rax, qword [rax]	      6961	normal.c	FUNCTION_86	IF_1
0xbc71	            0x8b00	                    mov eax, dword [rax]	      6961	normal.c	FUNCTION_86	IF_1
0xbc73	          0x83f80c	                            cmp eax, 0xc	      6961	normal.c	FUNCTION_86	IF_1
0xbc76	            0x740a	                            je 0x400bcc2	      6961	normal.c	FUNCTION_86	IF_1
0xbc78	    0x8b0500000000	            mov eax, dword [0x0400bcbe] 	      6961	normal.c	FUNCTION_86	IF_1
0xbc7e	            0x85c0	                           test eax, eax	      6961	normal.c	FUNCTION_86	IF_1
0xbc80	            0x7424	                            je 0x400bce6	      6961	normal.c	FUNCTION_86	IF_1
0xbc82	        0x488b45f8	                mov rax, qword [rbp - 8]	      6964	normal.c	FUNCTION_86	IF_1
0xbc86	    0xc7400c670000	            mov dword [rax + 0xc], 0x67 	      6964	normal.c	FUNCTION_86	IF_1
0xbc8d	        0x488b45f8	                mov rax, qword [rbp - 8]	      6965	normal.c	FUNCTION_86	IF_1
0xbc91	    0xc74010750000	           mov dword [rax + 0x10], 0x75 	      6965	normal.c	FUNCTION_86	IF_1
0xbc98	        0x488b45f8	                mov rax, qword [rbp - 8]	      6966	normal.c	FUNCTION_86	IF_1	CALL_1
0xbc9c	          0x4889c7	                            mov rdi, rax	      6966	normal.c	FUNCTION_86	IF_1	CALL_1
0xbc9f	      0xe88f2e0000	                    call sym.nv_operator	      6966	normal.c	FUNCTION_86	IF_1	CALL_1
0xbca4	            0xeb0c	                           jmp 0x400bcf2	      6966	normal.c	FUNCTION_86	IF_1	CALL_1
0xbca6	        0x488b45f8	                mov rax, qword [rbp - 8]	      6969	normal.c	FUNCTION_86	CALL_2
0xbcaa	          0x4889c7	                            mov rdi, rax	      6969	normal.c	FUNCTION_86	CALL_2
0xbcad	      0xe803000000	                       call sym.nv_kundo	      6969	normal.c	FUNCTION_86	CALL_2
0xbcb2	              0x90	                                     nop	      6970	normal.c	FUNCTION_86
0xbcb3	              0xc9	                                   leave	      6970	normal.c	FUNCTION_86
0xbcb4	              0xc3	                                     ret	      6970	normal.c	FUNCTION_86
nv_gotofile	CALL,16:ELSE,1:DO,0:FOR,0:functions,0:IF,5:WHILE,0:SWITCH,0	100
0xa2e0	              0x55	                                push rbp	      6238	normal.c	FUNCTION_74
0xa2e1	          0x4889e5	                            mov rbp, rsp	      6238	normal.c	FUNCTION_74
0xa2e4	              0x53	                                push rbx	      6238	normal.c	FUNCTION_74
0xa2e5	        0x4883ec38	                           sub rsp, 0x38	      6238	normal.c	FUNCTION_74
0xa2e9	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      6238	normal.c	FUNCTION_74
0xa2ed	    0x64488b042528	                mov rax, qword fs:[0x28]	      6238	normal.c	FUNCTION_74
0xa2f6	        0x488945e8	             mov qword [rbp - 0x18], rax	      6238	normal.c	FUNCTION_74
0xa2fa	            0x31c0	                            xor eax, eax	      6238	normal.c	FUNCTION_74
0xa2fc	    0x48c745d8ffff	mov qword [rbp - 0x28], 0xffffffffffffffff	      6240	normal.c	FUNCTION_74
0xa304	      0xe800000000	                          call 0x400a349	      6242	normal.c	FUNCTION_74	IF_1	CALL_1
0xa309	            0x85c0	                           test eax, eax	      6242	normal.c	FUNCTION_74	IF_1	CALL_1
0xa30b	            0x7419	                            je 0x400a366	      6242	normal.c	FUNCTION_74	IF_1	CALL_1
0xa30d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6244	normal.c	FUNCTION_74	IF_1	CALL_2
0xa311	          0x488b00	                    mov rax, qword [rax]	      6244	normal.c	FUNCTION_74	IF_1	CALL_2
0xa314	          0x4889c7	                            mov rdi, rax	      6244	normal.c	FUNCTION_74	IF_1	CALL_2
0xa317	      0xe8ccb6ffff	                    call sym.clearopbeep	      6244	normal.c	FUNCTION_74	IF_1	CALL_2
0xa31c	      0xe800000000	                          call 0x400a361	      6245	normal.c	FUNCTION_74	IF_1	CALL_3
0xa321	      0xe928010000	                           jmp 0x400a48e	      6246	normal.c	FUNCTION_74	IF_1
0xa326	      0xe800000000	                          call 0x400a36b	      6249	normal.c	FUNCTION_74	IF_2	CALL_4
0xa32b	            0x85c0	                           test eax, eax	      6249	normal.c	FUNCTION_74	IF_2	CALL_4
0xa32d	            0x7414	                            je 0x400a383	      6249	normal.c	FUNCTION_74	IF_2	CALL_4
0xa32f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6251	normal.c	FUNCTION_74	IF_2	CALL_5
0xa333	          0x488b00	                    mov rax, qword [rax]	      6251	normal.c	FUNCTION_74	IF_2	CALL_5
0xa336	          0x4889c7	                            mov rdi, rax	      6251	normal.c	FUNCTION_74	IF_2	CALL_5
0xa339	      0xe874b6ffff	                        call sym.clearop	      6251	normal.c	FUNCTION_74	IF_2	CALL_5
0xa33e	      0xe90b010000	                           jmp 0x400a48e	      6252	normal.c	FUNCTION_74	IF_2
0xa343	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6256	normal.c	FUNCTION_74	CALL_6
0xa347	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6256	normal.c	FUNCTION_74	CALL_6
0xa34b	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      6256	normal.c	FUNCTION_74	CALL_6
0xa34f	          0x4889d6	                            mov rsi, rdx	      6256	normal.c	FUNCTION_74	CALL_6
0xa352	          0x4889c7	                            mov rdi, rax	      6256	normal.c	FUNCTION_74	CALL_6
0xa355	      0xe800000000	                          call 0x400a39a	      6256	normal.c	FUNCTION_74	CALL_6
0xa35a	        0x488945e0	             mov qword [rbp - 0x20], rax	      6256	normal.c	FUNCTION_74	CALL_6
0xa35e	      0x48837de000	               cmp qword [rbp - 0x20], 0	      6258	normal.c	FUNCTION_74	IF_3
0xa363	     0xf84d6000000	                            je 0x400a47f	      6258	normal.c	FUNCTION_74	IF_3
0xa369	      0xe800000000	                          call 0x400a3ae	      6261	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0xa36e	            0x85c0	                           test eax, eax	      6261	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0xa370	            0x7436	                            je 0x400a3e8	      6261	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0xa372	    0x488b05000000	            mov rax, qword [0x0400a3b9] 	      6261	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0xa379	          0x8b4078	            mov eax, dword [rax + 0x78] 	      6261	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0xa37c	          0x83f801	                              cmp eax, 1	      6261	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0xa37f	            0x7f27	                            jg 0x400a3e8	      6261	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0xa381	    0x488b05000000	            mov rax, qword [0x0400a3c8] 	      6261	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0xa388	          0x4889c7	                            mov rdi, rax	      6261	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0xa38b	      0xe800000000	                          call 0x400a3d0	      6261	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0xa390	            0x85c0	                           test eax, eax	      6261	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0xa392	            0x7514	                           jne 0x400a3e8	      6261	normal.c	FUNCTION_74	IF_3	IF_4	CALL_8
0xa394	    0x488b05000000	            mov rax, qword [0x0400a3db] 	      6262	normal.c	FUNCTION_74	IF_3	CALL_9
0xa39b	      0xbe00000000	                              mov esi, 0	      6262	normal.c	FUNCTION_74	IF_3	CALL_9
0xa3a0	          0x4889c7	                            mov rdi, rax	      6262	normal.c	FUNCTION_74	IF_3	CALL_9
0xa3a3	      0xe800000000	                          call 0x400a3e8	      6262	normal.c	FUNCTION_74	IF_3	CALL_9
0xa3a8	      0xe800000000	                          call 0x400a3ed	      6263	normal.c	FUNCTION_74	IF_3	CALL_10
0xa3ad	    0x488b1d000000	            mov rbx, qword [0x0400a3f4] 	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3b4	    0x488b05000000	            mov rax, qword [0x0400a3fb] 	      6265	normal.c	FUNCTION_74	IF_3	IF_5	CALL_12
0xa3bb	          0x4889c7	                            mov rdi, rax	      6265	normal.c	FUNCTION_74	IF_3	IF_5	CALL_12
0xa3be	      0xe800000000	                          call 0x400a403	      6265	normal.c	FUNCTION_74	IF_3	IF_5	CALL_12
0xa3c3	            0x85c0	                           test eax, eax	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3c5	           0xf95c0	                                setne al	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3c8	           0xfb6d0	                           movzx edx, al	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3cb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3cf	        0x4883ec08	                              sub rsp, 8	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3d3	              0x53	                                push rbx	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3d4	          0x4189d1	                            mov r9d, edx	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3d7	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3de	      0xb900000000	                              mov ecx, 0	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3e3	      0xba00000000	                              mov edx, 0	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3e8	          0x4889c6	                            mov rsi, rax	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3eb	      0xbf00000000	                              mov edi, 0	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3f0	      0xe800000000	                          call 0x400a435	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3f5	        0x4883c410	                           add rsp, 0x10	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3f9	          0x83f801	                              cmp eax, 1	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3fc	            0x7533	                           jne 0x400a471	      6264	normal.c	FUNCTION_74	IF_3	IF_5	CALL_11
0xa3fe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6266	normal.c	FUNCTION_74	IF_3	IF_5
0xa402	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6266	normal.c	FUNCTION_74	IF_3	IF_5
0xa405	          0x83f846	                           cmp eax, 0x46	      6266	normal.c	FUNCTION_74	IF_3	IF_5
0xa408	            0x7527	                           jne 0x400a471	      6266	normal.c	FUNCTION_74	IF_3	IF_5
0xa40a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6266	normal.c	FUNCTION_74	IF_3	IF_5
0xa40e	          0x4885c0	                           test rax, rax	      6266	normal.c	FUNCTION_74	IF_3	IF_5
0xa411	            0x781e	                            js 0x400a471	      6266	normal.c	FUNCTION_74	IF_3	IF_5
0xa413	    0x488b05000000	            mov rax, qword [0x0400a45a] 	      6268	normal.c	FUNCTION_74	IF_3	IF_5
0xa41a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      6268	normal.c	FUNCTION_74	IF_3	IF_5
0xa41e	        0x48895038	             mov qword [rax + 0x38], rdx	      6268	normal.c	FUNCTION_74	IF_3	IF_5
0xa422	      0xe800000000	                          call 0x400a467	      6269	normal.c	FUNCTION_74	IF_3	IF_5	CALL_13
0xa427	      0xbf06000000	                              mov edi, 6	      6270	normal.c	FUNCTION_74	IF_3	IF_5	CALL_14
0xa42c	      0xe800000000	                          call 0x400a471	      6270	normal.c	FUNCTION_74	IF_3	IF_5	CALL_14
0xa431	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6272	normal.c	FUNCTION_74	IF_3	CALL_15
0xa435	          0x4889c7	                            mov rdi, rax	      6272	normal.c	FUNCTION_74	IF_3	CALL_15
0xa438	      0xe800000000	                          call 0x400a47d	      6272	normal.c	FUNCTION_74	IF_3	CALL_15
0xa43d	            0xeb0f	                           jmp 0x400a48e	      6272	normal.c	FUNCTION_74	IF_3	CALL_15
0xa43f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6275	normal.c	FUNCTION_74	CALL_16
0xa443	          0x488b00	                    mov rax, qword [rax]	      6275	normal.c	FUNCTION_74	CALL_16
0xa446	          0x4889c7	                            mov rdi, rax	      6275	normal.c	FUNCTION_74	CALL_16
0xa449	      0xe864b5ffff	                        call sym.clearop	      6275	normal.c	FUNCTION_74	CALL_16
0xa44e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6276	normal.c	FUNCTION_74
0xa452	    0x644833042528	                xor rax, qword fs:[0x28]	      6276	normal.c	FUNCTION_74
0xa45b	            0x7405	                            je 0x400a4a2	      6276	normal.c	FUNCTION_74
0xa45d	      0xe800000000	                          call 0x400a4a2	      6276	normal.c	FUNCTION_74
0xa462	        0x488b5df8	                mov rbx, qword [rbp - 8]	      6276	normal.c	FUNCTION_74
0xa466	              0xc9	                                   leave	      6276	normal.c	FUNCTION_74
0xa467	              0xc3	                                     ret	      6276	normal.c	FUNCTION_74
add_to_showcmd	CALL,9:ELSE,0:DO,0:FOR,1:functions,0:IF,7:WHILE,0:SWITCH,0	83
0x5e25	              0x55	                                push rbp	      3847	normal.c	FUNCTION_29
0x5e26	          0x4889e5	                            mov rbp, rsp	      3847	normal.c	FUNCTION_29
0x5e29	        0x4883ec30	                           sub rsp, 0x30	      3847	normal.c	FUNCTION_29
0x5e2d	          0x897ddc	             mov dword [rbp - 0x24], edi	      3847	normal.c	FUNCTION_29
0x5e30	    0x8b0500000000	            mov eax, dword [0x04005e76] 	      3871	normal.c	FUNCTION_29	IF_1
0x5e36	            0x85c0	                           test eax, eax	      3871	normal.c	FUNCTION_29	IF_1
0x5e38	            0x740a	                            je 0x4005e84	      3871	normal.c	FUNCTION_29	IF_1
0x5e3a	    0x8b0500000000	            mov eax, dword [0x04005e80] 	      3871	normal.c	FUNCTION_29	IF_1
0x5e40	            0x85c0	                           test eax, eax	      3871	normal.c	FUNCTION_29	IF_1
0x5e42	            0x740a	                            je 0x4005e8e	      3871	normal.c	FUNCTION_29	IF_1
0x5e44	      0xb800000000	                              mov eax, 0	      3872	normal.c	FUNCTION_29	IF_1
0x5e49	      0xe903010000	                           jmp 0x4005f91	      3872	normal.c	FUNCTION_29	IF_1
0x5e4e	    0x8b0500000000	            mov eax, dword [0x04005e94] 	      3874	normal.c	FUNCTION_29	IF_2
0x5e54	            0x85c0	                           test eax, eax	      3874	normal.c	FUNCTION_29	IF_2
0x5e56	            0x7411	                            je 0x4005ea9	      3874	normal.c	FUNCTION_29	IF_2
0x5e58	    0xc60500000000	                mov byte [0x04005e9f], 0	      3876	normal.c	FUNCTION_29	IF_2
0x5e5f	    0xc70500000000	               mov dword [0x04005ea9], 0	      3877	normal.c	FUNCTION_29	IF_2
0x5e69	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3882	normal.c	FUNCTION_29	IF_3	CALL_1
0x5e6d	            0x7938	                           jns 0x4005ee7	      3882	normal.c	FUNCTION_29	IF_3	CALL_1
0x5e6f	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      3883	normal.c	FUNCTION_29	IF_3	FOR_1
0x5e76	            0xeb1f	                           jmp 0x4005ed7	      3883	normal.c	FUNCTION_29	IF_3	FOR_1
0x5e78	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3884	normal.c	FUNCTION_29	IF_3	FOR_1	IF_4
0x5e7b	            0x4898	                                    cdqe	      3884	normal.c	FUNCTION_29	IF_3	FOR_1	IF_4
0x5e7d	    0x8b0485000000	                  mov eax, dword [rax*4]	      3884	normal.c	FUNCTION_29	IF_3	FOR_1	IF_4
0x5e84	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      3884	normal.c	FUNCTION_29	IF_3	FOR_1	IF_4
0x5e87	            0x750a	                           jne 0x4005ed3	      3884	normal.c	FUNCTION_29	IF_3	FOR_1	IF_4
0x5e89	      0xb800000000	                              mov eax, 0	      3885	normal.c	FUNCTION_29	IF_3	FOR_1	IF_4
0x5e8e	      0xe9be000000	                           jmp 0x4005f91	      3885	normal.c	FUNCTION_29	IF_3	FOR_1	IF_4
0x5e93	        0x8345e801	               add dword [rbp - 0x18], 1	      3883	normal.c	FUNCTION_29	IF_3	FOR_1
0x5e97	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3883	normal.c	FUNCTION_29	IF_3	FOR_1
0x5e9a	            0x4898	                                    cdqe	      3883	normal.c	FUNCTION_29	IF_3	FOR_1
0x5e9c	    0x8b0485000000	                  mov eax, dword [rax*4]	      3883	normal.c	FUNCTION_29	IF_3	FOR_1
0x5ea3	            0x85c0	                           test eax, eax	      3883	normal.c	FUNCTION_29	IF_3	FOR_1
0x5ea5	            0x75d1	                           jne 0x4005eb8	      3883	normal.c	FUNCTION_29	IF_3	FOR_1
0x5ea7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3888	normal.c	FUNCTION_29	CALL_2
0x5eaa	            0x89c7	                            mov edi, eax	      3888	normal.c	FUNCTION_29	CALL_2
0x5eac	      0xe800000000	                          call 0x4005ef1	      3888	normal.c	FUNCTION_29	CALL_2
0x5eb1	        0x488945f8	                mov qword [rbp - 8], rax	      3888	normal.c	FUNCTION_29	CALL_2
0x5eb5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3889	normal.c	FUNCTION_29	IF_5
0x5eb9	           0xfb600	                   movzx eax, byte [rax]	      3889	normal.c	FUNCTION_29	IF_5
0x5ebc	            0x3c20	                            cmp al, 0x20	      3889	normal.c	FUNCTION_29	IF_5
0x5ebe	            0x750e	                           jne 0x4005f0e	      3889	normal.c	FUNCTION_29	IF_5
0x5ec0	        0x488b45f8	                mov rax, qword [rbp - 8]	      3890	normal.c	FUNCTION_29	CALL_3
0x5ec4	    0xc7003c32303e	            mov dword [rax], 0x3e30323c 	      3890	normal.c	FUNCTION_29	CALL_3
0x5eca	        0xc6400400	                   mov byte [rax + 4], 0	      3890	normal.c	FUNCTION_29	CALL_3
0x5ece	      0xbf00000000	                              mov edi, 0	      3891	normal.c	FUNCTION_29	CALL_4
0x5ed3	      0xe800000000	                          call 0x4005f18	      3891	normal.c	FUNCTION_29	CALL_4
0x5ed8	          0x8945ec	             mov dword [rbp - 0x14], eax	      3891	normal.c	FUNCTION_29	CALL_4
0x5edb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3892	normal.c	FUNCTION_29	CALL_5
0x5edf	          0x4889c7	                            mov rdi, rax	      3892	normal.c	FUNCTION_29	CALL_5
0x5ee2	      0xe800000000	                          call 0x4005f27	      3892	normal.c	FUNCTION_29	CALL_5
0x5ee7	          0x8945f0	             mov dword [rbp - 0x10], eax	      3892	normal.c	FUNCTION_29	CALL_5
0x5eea	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      3893	normal.c	FUNCTION_29
0x5eed	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3893	normal.c	FUNCTION_29
0x5ef0	             0x1d0	                            add eax, edx	      3893	normal.c	FUNCTION_29
0x5ef2	          0x83e80a	                            sub eax, 0xa	      3893	normal.c	FUNCTION_29
0x5ef5	          0x8945f4	              mov dword [rbp - 0xc], eax	      3893	normal.c	FUNCTION_29
0x5ef8	        0x837df400	                cmp dword [rbp - 0xc], 0	      3894	normal.c	FUNCTION_29	IF_6
0x5efc	            0x7e28	                           jle 0x4005f66	      3894	normal.c	FUNCTION_29	IF_6
0x5efe	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3895	normal.c	FUNCTION_29	IF_6	CALL_6
0x5f01	          0x2b45f4	              sub eax, dword [rbp - 0xc]	      3895	normal.c	FUNCTION_29	IF_6	CALL_6
0x5f04	          0x83c001	                              add eax, 1	      3895	normal.c	FUNCTION_29	IF_6	CALL_6
0x5f07	            0x4898	                                    cdqe	      3895	normal.c	FUNCTION_29	IF_6	CALL_6
0x5f09	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3895	normal.c	FUNCTION_29	IF_6	CALL_6
0x5f0c	          0x4863d2	                         movsxd rdx, edx	      3895	normal.c	FUNCTION_29	IF_6	CALL_6
0x5f0f	    0x488d8a000000	                          lea rcx, [rdx]	      3895	normal.c	FUNCTION_29	IF_6	CALL_6
0x5f16	          0x4889c2	                            mov rdx, rax	      3895	normal.c	FUNCTION_29	IF_6	CALL_6
0x5f19	          0x4889ce	                            mov rsi, rcx	      3895	normal.c	FUNCTION_29	IF_6	CALL_6
0x5f1c	      0xbf00000000	                              mov edi, 0	      3895	normal.c	FUNCTION_29	IF_6	CALL_6
0x5f21	      0xe800000000	                          call 0x4005f66	      3895	normal.c	FUNCTION_29	IF_6	CALL_6
0x5f26	        0x488b45f8	                mov rax, qword [rbp - 8]	      3897	normal.c	FUNCTION_29	CALL_7
0x5f2a	          0x4889c6	                            mov rsi, rax	      3897	normal.c	FUNCTION_29	CALL_7
0x5f2d	      0xbf00000000	                              mov edi, 0	      3897	normal.c	FUNCTION_29	CALL_7
0x5f32	      0xe800000000	                          call 0x4005f77	      3897	normal.c	FUNCTION_29	CALL_7
0x5f37	      0xe800000000	                          call 0x4005f7c	      3899	normal.c	FUNCTION_29	IF_7	CALL_8
0x5f3c	            0x85c0	                           test eax, eax	      3899	normal.c	FUNCTION_29	IF_7	CALL_8
0x5f3e	            0x7407	                            je 0x4005f87	      3899	normal.c	FUNCTION_29	IF_7	CALL_8
0x5f40	      0xb800000000	                              mov eax, 0	      3900	normal.c	FUNCTION_29	IF_7
0x5f45	            0xeb0a	                           jmp 0x4005f91	      3900	normal.c	FUNCTION_29	IF_7
0x5f47	      0xe8c1000000	                call sym.display_showcmd	      3902	normal.c	FUNCTION_29	CALL_9
0x5f4c	      0xb801000000	                              mov eax, 1	      3904	normal.c	FUNCTION_29
0x5f51	              0xc9	                                   leave	      3905	normal.c	FUNCTION_29
0x5f52	              0xc3	                                     ret	      3905	normal.c	FUNCTION_29
display_showcmd	CALL,5:ELSE,1:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	34
0x600d	              0x55	                                push rbp	      3958	normal.c	FUNCTION_34
0x600e	          0x4889e5	                            mov rbp, rsp	      3958	normal.c	FUNCTION_34
0x6011	        0x4883ec10	                           sub rsp, 0x10	      3958	normal.c	FUNCTION_34
0x6015	      0xe800000000	                          call 0x400605a	      3961	normal.c	FUNCTION_34	CALL_1
0x601a	      0xbf00000000	                              mov edi, 0	      3963	normal.c	FUNCTION_34	CALL_2
0x601f	      0xe800000000	                          call 0x4006064	      3963	normal.c	FUNCTION_34	CALL_2
0x6024	          0x8945fc	                mov dword [rbp - 4], eax	      3963	normal.c	FUNCTION_34	CALL_2
0x6027	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3964	normal.c	FUNCTION_34	IF_1
0x602b	            0x750c	                           jne 0x4006079	      3964	normal.c	FUNCTION_34	IF_1
0x602d	    0xc70500000000	               mov dword [0x04006077], 1	      3965	normal.c	FUNCTION_34	IF_1
0x6037	            0xeb2b	                           jmp 0x40060a4	      3965	normal.c	FUNCTION_34	IF_1
0x6039	    0x8b0500000000	            mov eax, dword [0x0400607f] 	      3968	normal.c	FUNCTION_34	ELSE_1	CALL_3
0x603f	    0x488b15000000	            mov rdx, qword [0x04006086] 	      3968	normal.c	FUNCTION_34	ELSE_1	CALL_3
0x6046	          0x8d72ff	                      lea esi, [rdx - 1]	      3968	normal.c	FUNCTION_34	ELSE_1	CALL_3
0x6049	      0xb900000000	                              mov ecx, 0	      3968	normal.c	FUNCTION_34	ELSE_1	CALL_3
0x604e	            0x89c2	                            mov edx, eax	      3968	normal.c	FUNCTION_34	ELSE_1	CALL_3
0x6050	      0xbf00000000	                              mov edi, 0	      3968	normal.c	FUNCTION_34	ELSE_1	CALL_3
0x6055	      0xe800000000	                          call 0x400609a	      3968	normal.c	FUNCTION_34	ELSE_1	CALL_3
0x605a	    0xc70500000000	               mov dword [0x040060a4], 0	      3969	normal.c	FUNCTION_34	ELSE_1
0x6064	    0x8b1500000000	            mov edx, dword [0x040060aa] 	      3976	normal.c	FUNCTION_34	CALL_4
0x606a	          0x8b45fc	                mov eax, dword [rbp - 4]	      3976	normal.c	FUNCTION_34	CALL_4
0x606d	             0x1c2	                            add edx, eax	      3976	normal.c	FUNCTION_34	CALL_4
0x606f	    0x488b05000000	            mov rax, qword [0x040060b6] 	      3976	normal.c	FUNCTION_34	CALL_4
0x6076	          0x8d70ff	                      lea esi, [rax - 1]	      3976	normal.c	FUNCTION_34	CALL_4
0x6079	          0x8b45fc	                mov eax, dword [rbp - 4]	      3976	normal.c	FUNCTION_34	CALL_4
0x607c	            0x4898	                                    cdqe	      3976	normal.c	FUNCTION_34	CALL_4
0x607e	    0x480500000000	                              add rax, 0	      3976	normal.c	FUNCTION_34	CALL_4
0x6084	      0xb900000000	                              mov ecx, 0	      3976	normal.c	FUNCTION_34	CALL_4
0x6089	          0x4889c7	                            mov rdi, rax	      3976	normal.c	FUNCTION_34	CALL_4
0x608c	      0xe800000000	                          call 0x40060d1	      3976	normal.c	FUNCTION_34	CALL_4
0x6091	      0xe800000000	                          call 0x40060d6	      3978	normal.c	FUNCTION_34	CALL_5
0x6096	              0x90	                                     nop	      3979	normal.c	FUNCTION_34
0x6097	              0xc9	                                   leave	      3979	normal.c	FUNCTION_34
0x6098	              0xc3	                                     ret	      3979	normal.c	FUNCTION_34
find_is_eval_item	CALL,0:ELSE,0:DO,0:FOR,0:functions,0:IF,5:WHILE,0:SWITCH,0	82
0x5079	              0x55	                                push rbp	      3381	normal.c	FUNCTION_17
0x507a	          0x4889e5	                            mov rbp, rsp	      3381	normal.c	FUNCTION_17
0x507d	        0x48897df8	                mov qword [rbp - 8], rdi	      3381	normal.c	FUNCTION_17
0x5081	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3381	normal.c	FUNCTION_17
0x5085	        0x488955e8	             mov qword [rbp - 0x18], rdx	      3381	normal.c	FUNCTION_17
0x5089	          0x894de4	             mov dword [rbp - 0x1c], ecx	      3381	normal.c	FUNCTION_17
0x508c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3383	normal.c	FUNCTION_17	IF_1
0x5090	           0xfb600	                   movzx eax, byte [rax]	      3383	normal.c	FUNCTION_17	IF_1
0x5093	            0x3c5d	                            cmp al, 0x5d	      3383	normal.c	FUNCTION_17	IF_1
0x5095	            0x7506	                           jne 0x40050dd	      3383	normal.c	FUNCTION_17	IF_1
0x5097	        0x837de4ff	cmp dword [rbp - 0x1c], 0xffffffffffffffff	      3383	normal.c	FUNCTION_17	IF_1
0x509b	            0x7411	                            je 0x40050ee	      3383	normal.c	FUNCTION_17	IF_1
0x509d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3383	normal.c	FUNCTION_17	IF_1
0x50a1	           0xfb600	                   movzx eax, byte [rax]	      3383	normal.c	FUNCTION_17	IF_1
0x50a4	            0x3c5b	                            cmp al, 0x5b	      3383	normal.c	FUNCTION_17	IF_1
0x50a6	            0x7515	                           jne 0x40050fd	      3383	normal.c	FUNCTION_17	IF_1
0x50a8	        0x837de401	               cmp dword [rbp - 0x1c], 1	      3383	normal.c	FUNCTION_17	IF_1
0x50ac	            0x750f	                           jne 0x40050fd	      3383	normal.c	FUNCTION_17	IF_1
0x50ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3384	normal.c	FUNCTION_17	IF_1
0x50b2	            0x8b00	                    mov eax, dword [rax]	      3384	normal.c	FUNCTION_17	IF_1
0x50b4	          0x8d5001	                      lea edx, [rax + 1]	      3384	normal.c	FUNCTION_17	IF_1
0x50b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3384	normal.c	FUNCTION_17	IF_1
0x50bb	            0x8910	                    mov dword [rax], edx	      3384	normal.c	FUNCTION_17	IF_1
0x50bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3385	normal.c	FUNCTION_17	IF_2
0x50c1	            0x8b00	                    mov eax, dword [rax]	      3385	normal.c	FUNCTION_17	IF_2
0x50c3	            0x85c0	                           test eax, eax	      3385	normal.c	FUNCTION_17	IF_2
0x50c5	            0x7e38	                           jle 0x400513f	      3385	normal.c	FUNCTION_17	IF_2
0x50c7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3387	normal.c	FUNCTION_17	IF_2	IF_3
0x50cb	           0xfb600	                   movzx eax, byte [rax]	      3387	normal.c	FUNCTION_17	IF_2	IF_3
0x50ce	            0x3c5b	                            cmp al, 0x5b	      3387	normal.c	FUNCTION_17	IF_2	IF_3
0x50d0	            0x7506	                           jne 0x4005118	      3387	normal.c	FUNCTION_17	IF_2	IF_3
0x50d2	        0x837de4ff	cmp dword [rbp - 0x1c], 0xffffffffffffffff	      3387	normal.c	FUNCTION_17	IF_2	IF_3
0x50d6	            0x7411	                            je 0x4005129	      3387	normal.c	FUNCTION_17	IF_2	IF_3
0x50d8	        0x488b45f8	                mov rax, qword [rbp - 8]	      3387	normal.c	FUNCTION_17	IF_2	IF_3
0x50dc	           0xfb600	                   movzx eax, byte [rax]	      3387	normal.c	FUNCTION_17	IF_2	IF_3
0x50df	            0x3c5d	                            cmp al, 0x5d	      3387	normal.c	FUNCTION_17	IF_2	IF_3
0x50e1	            0x7515	                           jne 0x4005138	      3387	normal.c	FUNCTION_17	IF_2	IF_3
0x50e3	        0x837de401	               cmp dword [rbp - 0x1c], 1	      3387	normal.c	FUNCTION_17	IF_2	IF_3
0x50e7	            0x750f	                           jne 0x4005138	      3387	normal.c	FUNCTION_17	IF_2	IF_3
0x50e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3388	normal.c	FUNCTION_17	IF_2	IF_3
0x50ed	            0x8b00	                    mov eax, dword [rax]	      3388	normal.c	FUNCTION_17	IF_2	IF_3
0x50ef	          0x8d50ff	                      lea edx, [rax - 1]	      3388	normal.c	FUNCTION_17	IF_2	IF_3
0x50f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3388	normal.c	FUNCTION_17	IF_2	IF_3
0x50f6	            0x8910	                    mov dword [rax], edx	      3388	normal.c	FUNCTION_17	IF_2	IF_3
0x50f8	      0xb801000000	                              mov eax, 1	      3389	normal.c	FUNCTION_17	IF_2
0x50fd	            0xeb6c	                           jmp 0x40051ab	      3389	normal.c	FUNCTION_17	IF_2
0x50ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      3393	normal.c	FUNCTION_17	IF_4
0x5103	           0xfb600	                   movzx eax, byte [rax]	      3393	normal.c	FUNCTION_17	IF_4
0x5106	            0x3c2e	                            cmp al, 0x2e	      3393	normal.c	FUNCTION_17	IF_4
0x5108	            0x7507	                           jne 0x4005151	      3393	normal.c	FUNCTION_17	IF_4
0x510a	      0xb801000000	                              mov eax, 1	      3394	normal.c	FUNCTION_17	IF_4
0x510f	            0xeb5a	                           jmp 0x40051ab	      3394	normal.c	FUNCTION_17	IF_4
0x5111	        0x837de4ff	cmp dword [rbp - 0x1c], 0xffffffffffffffff	      3397	normal.c	FUNCTION_17	IF_5
0x5115	           0xf95c0	                                setne al	      3397	normal.c	FUNCTION_17	IF_5
0x5118	           0xfb6c0	                           movzx eax, al	      3397	normal.c	FUNCTION_17	IF_5
0x511b	          0x4863d0	                         movsxd rdx, eax	      3397	normal.c	FUNCTION_17	IF_5
0x511e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3397	normal.c	FUNCTION_17	IF_5
0x5122	          0x4801d0	                            add rax, rdx	      3397	normal.c	FUNCTION_17	IF_5
0x5125	           0xfb600	                   movzx eax, byte [rax]	      3397	normal.c	FUNCTION_17	IF_5
0x5128	            0x3c3e	                            cmp al, 0x3e	      3397	normal.c	FUNCTION_17	IF_5
0x512a	            0x753a	                           jne 0x40051a6	      3397	normal.c	FUNCTION_17	IF_5
0x512c	        0x837de4ff	cmp dword [rbp - 0x1c], 0xffffffffffffffff	      3398	normal.c	FUNCTION_17	IF_5
0x5130	            0x7509	                           jne 0x400517b	      3398	normal.c	FUNCTION_17	IF_5
0x5132	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      3398	normal.c	FUNCTION_17	IF_5
0x5139	            0xeb05	                           jmp 0x4005180	      3398	normal.c	FUNCTION_17	IF_5
0x513b	      0xba00000000	                              mov edx, 0	      3398	normal.c	FUNCTION_17	IF_5
0x5140	        0x488b45f8	                mov rax, qword [rbp - 8]	      3398	normal.c	FUNCTION_17	IF_5
0x5144	          0x4801d0	                            add rax, rdx	      3398	normal.c	FUNCTION_17	IF_5
0x5147	           0xfb600	                   movzx eax, byte [rax]	      3398	normal.c	FUNCTION_17	IF_5
0x514a	            0x3c2d	                            cmp al, 0x2d	      3398	normal.c	FUNCTION_17	IF_5
0x514c	            0x7518	                           jne 0x40051a6	      3398	normal.c	FUNCTION_17	IF_5
0x514e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3400	normal.c	FUNCTION_17	IF_5
0x5152	            0x8b10	                    mov edx, dword [rax]	      3400	normal.c	FUNCTION_17	IF_5
0x5154	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3400	normal.c	FUNCTION_17	IF_5
0x5157	             0x1c2	                            add edx, eax	      3400	normal.c	FUNCTION_17	IF_5
0x5159	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3400	normal.c	FUNCTION_17	IF_5
0x515d	            0x8910	                    mov dword [rax], edx	      3400	normal.c	FUNCTION_17	IF_5
0x515f	      0xb801000000	                              mov eax, 1	      3401	normal.c	FUNCTION_17	IF_5
0x5164	            0xeb05	                           jmp 0x40051ab	      3401	normal.c	FUNCTION_17	IF_5
0x5166	      0xb800000000	                              mov eax, 0	      3403	normal.c	FUNCTION_17
0x516b	              0x5d	                                 pop rbp	      3404	normal.c	FUNCTION_17
0x516c	              0xc3	                                     ret	      3404	normal.c	FUNCTION_17
n_swapchar	CALL,23:ELSE,1:DO,0:FOR,1:functions,0:IF,12:WHILE,0:SWITCH,0	203
0xc70b	              0x55	                                push rbp	      7318	normal.c	FUNCTION_92
0xc70c	          0x4889e5	                            mov rbp, rsp	      7318	normal.c	FUNCTION_92
0xc70f	        0x4883ec50	                           sub rsp, 0x50	      7318	normal.c	FUNCTION_92
0xc713	        0x48897db8	             mov qword [rbp - 0x48], rdi	      7318	normal.c	FUNCTION_92
0xc717	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      7321	normal.c	FUNCTION_92
0xc71e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7328	normal.c	FUNCTION_92	IF_1	CALL_1
0xc722	          0x488b00	                    mov rax, qword [rax]	      7328	normal.c	FUNCTION_92	IF_1	CALL_1
0xc725	          0x4889c7	                            mov rdi, rax	      7328	normal.c	FUNCTION_92	IF_1	CALL_1
0xc728	      0xe84b92ffff	                  call sym.checkclearopq	      7328	normal.c	FUNCTION_92	IF_1	CALL_1
0xc72d	            0x85c0	                           test eax, eax	      7328	normal.c	FUNCTION_92	IF_1	CALL_1
0xc72f	     0xf8514030000	                           jne 0x400ca89	      7328	normal.c	FUNCTION_92	IF_1	CALL_1
0xc735	    0x488b05000000	            mov rax, qword [0x0400c77c] 	      7331	normal.c	FUNCTION_92	IF_2	CALL_3
0xc73c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7331	normal.c	FUNCTION_92	IF_2	CALL_3
0xc740	          0x4889c7	                            mov rdi, rax	      7331	normal.c	FUNCTION_92	IF_2	CALL_3
0xc743	      0xe800000000	                          call 0x400c788	      7331	normal.c	FUNCTION_92	IF_2	CALL_3
0xc748	           0xfb600	                   movzx eax, byte [rax]	      7331	normal.c	FUNCTION_92	IF_2	CALL_3
0xc74b	            0x84c0	                             test al, al	      7331	normal.c	FUNCTION_92	IF_2	CALL_3
0xc74d	            0x752d	                           jne 0x400c7bc	      7331	normal.c	FUNCTION_92	IF_2	CALL_3
0xc74f	    0x488b05000000	            mov rax, qword [0x0400c796] 	      7331	normal.c	FUNCTION_92	IF_2	CALL_3
0xc756	      0xbe7e000000	                           mov esi, 0x7e	      7331	normal.c	FUNCTION_92	IF_2	CALL_3
0xc75b	          0x4889c7	                            mov rdi, rax	      7331	normal.c	FUNCTION_92	IF_2	CALL_3
0xc75e	      0xe800000000	                          call 0x400c7a3	      7331	normal.c	FUNCTION_92	IF_2	CALL_3
0xc763	          0x4885c0	                           test rax, rax	      7331	normal.c	FUNCTION_92	IF_2	CALL_3
0xc766	            0x7514	                           jne 0x400c7bc	      7331	normal.c	FUNCTION_92	IF_2	CALL_3
0xc768	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7333	normal.c	FUNCTION_92	IF_2	CALL_4
0xc76c	          0x488b00	                    mov rax, qword [rax]	      7333	normal.c	FUNCTION_92	IF_2	CALL_4
0xc76f	          0x4889c7	                            mov rdi, rax	      7333	normal.c	FUNCTION_92	IF_2	CALL_4
0xc772	      0xe87192ffff	                    call sym.clearopbeep	      7333	normal.c	FUNCTION_92	IF_2	CALL_4
0xc777	      0xe9d1020000	                           jmp 0x400ca8d	      7334	normal.c	FUNCTION_92	IF_2
0xc77c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7337	normal.c	FUNCTION_92	CALL_5
0xc780	          0x4889c7	                            mov rdi, rax	      7337	normal.c	FUNCTION_92	CALL_5
0xc783	      0xe8ce90ffff	                  call sym.prep_redo_cmd	      7337	normal.c	FUNCTION_92	CALL_5
0xc788	      0xe800000000	                          call 0x400c7cd	      7339	normal.c	FUNCTION_92	IF_3	CALL_6
0xc78d	            0x85c0	                           test eax, eax	      7339	normal.c	FUNCTION_92	IF_3	CALL_6
0xc78f	     0xf84b7020000	                            je 0x400ca8c	      7339	normal.c	FUNCTION_92	IF_3	CALL_6
0xc795	    0x488b05000000	            mov rax, qword [0x0400c7dc] 	      7342	normal.c	FUNCTION_92
0xc79c	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7342	normal.c	FUNCTION_92
0xc7a0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7342	normal.c	FUNCTION_92
0xc7a4	        0x488945e0	             mov qword [rbp - 0x20], rax	      7342	normal.c	FUNCTION_92
0xc7a8	        0x488955e8	             mov qword [rbp - 0x18], rdx	      7342	normal.c	FUNCTION_92
0xc7ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7344	normal.c	FUNCTION_92
0xc7b0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7344	normal.c	FUNCTION_92
0xc7b4	        0x488945f0	             mov qword [rbp - 0x10], rax	      7344	normal.c	FUNCTION_92
0xc7b8	        0x488955f8	                mov qword [rbp - 8], rdx	      7344	normal.c	FUNCTION_92
0xc7bc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7346	normal.c	FUNCTION_92	FOR_1
0xc7c0	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7346	normal.c	FUNCTION_92	FOR_1
0xc7c4	        0x488945d0	             mov qword [rbp - 0x30], rax	      7346	normal.c	FUNCTION_92	FOR_1
0xc7c8	      0xe94b010000	                           jmp 0x400c958	      7346	normal.c	FUNCTION_92	FOR_1
0xc7cd	    0x488b05000000	            mov rax, qword [0x0400c814] 	      7348	normal.c	FUNCTION_92	FOR_1	CALL_7
0xc7d4	        0x488d5038	                   lea rdx, [rax + 0x38]	      7348	normal.c	FUNCTION_92	FOR_1	CALL_7
0xc7d8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7348	normal.c	FUNCTION_92	FOR_1	CALL_7
0xc7dc	          0x488b00	                    mov rax, qword [rax]	      7348	normal.c	FUNCTION_92	FOR_1	CALL_7
0xc7df	            0x8b00	                    mov eax, dword [rax]	      7348	normal.c	FUNCTION_92	FOR_1	CALL_7
0xc7e1	          0x4889d6	                            mov rsi, rdx	      7348	normal.c	FUNCTION_92	FOR_1	CALL_7
0xc7e4	            0x89c7	                            mov edi, eax	      7348	normal.c	FUNCTION_92	FOR_1	CALL_7
0xc7e6	      0xe800000000	                          call 0x400c82b	      7348	normal.c	FUNCTION_92	FOR_1	CALL_7
0xc7eb	           0x945c8	              or dword [rbp - 0x38], eax	      7348	normal.c	FUNCTION_92	FOR_1	CALL_7
0xc7ee	      0xe800000000	                          call 0x400c833	      7349	normal.c	FUNCTION_92	FOR_1	CALL_8
0xc7f3	      0xe800000000	                          call 0x400c838	      7350	normal.c	FUNCTION_92	FOR_1	IF_4	CALL_9
0xc7f8	            0x85c0	                           test eax, eax	      7350	normal.c	FUNCTION_92	FOR_1	IF_4	CALL_9
0xc7fa	     0xf8513010000	                           jne 0x400c953	      7350	normal.c	FUNCTION_92	FOR_1	IF_4	CALL_9
0xc800	    0x488b05000000	            mov rax, qword [0x0400c847] 	      7352	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	CALL_10
0xc807	      0xbe7e000000	                           mov esi, 0x7e	      7352	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	CALL_10
0xc80c	          0x4889c7	                            mov rdi, rax	      7352	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	CALL_10
0xc80f	      0xe800000000	                          call 0x400c854	      7352	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	CALL_10
0xc814	          0x4885c0	                           test rax, rax	      7352	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	CALL_10
0xc817	     0xf8409010000	                            je 0x400c966	      7352	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	CALL_10
0xc81d	    0x488b05000000	            mov rax, qword [0x0400c864] 	      7353	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0xc824	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7353	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0xc828	    0x488b05000000	            mov rax, qword [0x0400c86f] 	      7353	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0xc82f	          0x488b00	                    mov rax, qword [rax]	      7353	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0xc832	          0x4839c2	                            cmp rdx, rax	      7353	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0xc835	     0xf8deb000000	                           jge 0x400c966	      7353	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0xc83b	      0xe800000000	                          call 0x400c880	      7356	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	CALL_11
0xc840	            0x85c0	                           test eax, eax	      7356	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	CALL_11
0xc842	     0xf8487000000	                            je 0x400c90f	      7356	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	CALL_11
0xc848	        0x837dc800	               cmp dword [rbp - 0x38], 0	      7358	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7
0xc84c	            0x746e	                            je 0x400c8fc	      7358	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7
0xc84e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7360	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_12
0xc852	          0x4889c7	                            mov rdi, rax	      7360	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_12
0xc855	      0xe800000000	                          call 0x400c89a	      7360	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_12
0xc85a	        0x488945d8	             mov qword [rbp - 0x28], rax	      7360	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_12
0xc85e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7361	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0xc862	          0x4889c7	                            mov rdi, rax	      7361	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0xc865	      0xe800000000	                          call 0x400c8aa	      7361	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0xc86a	            0x89c2	                            mov edx, eax	      7361	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0xc86c	          0x8b45f8	                mov eax, dword [rbp - 8]	      7361	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0xc86f	            0x29c2	                            sub edx, eax	      7361	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0xc871	            0x89d0	                            mov eax, edx	      7361	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0xc873	          0x8945cc	             mov dword [rbp - 0x34], eax	      7361	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_13
0xc876	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7362	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_14
0xc879	          0x4863c8	                         movsxd rcx, eax	      7362	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_14
0xc87c	          0x8b55f8	                mov edx, dword [rbp - 8]	      7362	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_14
0xc87f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      7362	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_14
0xc883	    0x488b05000000	            mov rax, qword [0x0400c8ca] 	      7362	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_14
0xc88a	          0x4889c7	                            mov rdi, rax	      7362	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_14
0xc88d	      0xe800000000	                          call 0x400c8d2	      7362	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_14
0xc892	          0x8b45f8	                mov eax, dword [rbp - 8]	      7365	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7
0xc895	          0x4863d0	                         movsxd rdx, eax	      7364	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0xc898	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7364	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0xc89c	        0x488d0c02	                    lea rcx, [rdx + rax]	      7364	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0xc8a0	          0x8b55f8	                mov edx, dword [rbp - 8]	      7364	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0xc8a3	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      7364	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0xc8a7	    0x488b05000000	            mov rax, qword [0x0400c8ee] 	      7364	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0xc8ae	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	      7364	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0xc8b1	          0x4189f8	                            mov r8d, edi	      7364	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0xc8b4	          0x4889c7	                            mov rdi, rax	      7364	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0xc8b7	      0xe800000000	                          call 0x400c8fc	      7364	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6	IF_7	CALL_15
0xc8bc	    0xc745f8000000	                  mov dword [rbp - 8], 0	      7367	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6
0xc8c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7368	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6
0xc8c7	        0x4883c001	                              add rax, 1	      7368	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6
0xc8cb	        0x488945f0	             mov qword [rbp - 0x10], rax	      7368	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_6
0xc8cf	    0x488b05000000	            mov rax, qword [0x0400c916] 	      7371	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0xc8d6	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7371	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0xc8da	        0x4883c201	                              add rdx, 1	      7371	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0xc8de	        0x48895038	             mov qword [rax + 0x38], rdx	      7371	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0xc8e2	    0x488b05000000	            mov rax, qword [0x0400c929] 	      7372	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0xc8e9	    0xc74040000000	               mov dword [rax + 0x40], 0	      7372	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5
0xc8f0	      0x48837dd001	               cmp qword [rbp - 0x30], 1	      7373	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8
0xc8f5	            0x7e1c	                           jle 0x400c953	      7373	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8
0xc8f7	    0x488b05000000	            mov rax, qword [0x0400c93e] 	      7375	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8	IF_9	CALL_16
0xc8fe	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7375	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8	IF_9	CALL_16
0xc902	          0x4889c7	                            mov rdi, rax	      7375	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8	IF_9	CALL_16
0xc905	      0xe800000000	                          call 0x400c94a	      7375	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8	IF_9	CALL_16
0xc90a	            0x85c0	                           test eax, eax	      7375	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8	IF_9	CALL_16
0xc90c	            0x7417	                            je 0x400c965	      7375	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8	IF_9	CALL_16
0xc90e	      0xe800000000	                          call 0x400c953	      7377	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8	CALL_17
0xc913	      0x48836dd001	               sub qword [rbp - 0x30], 1	      7346	normal.c	FUNCTION_92	FOR_1
0xc918	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      7346	normal.c	FUNCTION_92	FOR_1
0xc91d	     0xf8faafeffff	                            jg 0x400c80d	      7346	normal.c	FUNCTION_92	FOR_1
0xc923	            0xeb01	                           jmp 0x400c966	      7346	normal.c	FUNCTION_92	FOR_1
0xc925	              0x90	                                     nop	      7376	normal.c	FUNCTION_92	FOR_1	IF_4	IF_5	IF_8	IF_9
0xc926	        0x837dc800	               cmp dword [rbp - 0x38], 0	      7385	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_18
0xc92a	            0x7473	                            je 0x400c9df	      7385	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_18
0xc92c	      0xe800000000	                          call 0x400c971	      7385	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_18
0xc931	            0x85c0	                           test eax, eax	      7385	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_18
0xc933	            0x746a	                            je 0x400c9df	      7385	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_18
0xc935	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7387	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_19
0xc939	          0x4889c7	                            mov rdi, rax	      7387	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_19
0xc93c	      0xe800000000	                          call 0x400c981	      7387	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_19
0xc941	        0x488945d8	             mov qword [rbp - 0x28], rax	      7387	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_19
0xc945	    0x488b05000000	            mov rax, qword [0x0400c98c] 	      7388	normal.c	FUNCTION_92	ELSE_1	IF_10
0xc94c	          0x8b5040	            mov edx, dword [rax + 0x40] 	      7388	normal.c	FUNCTION_92	ELSE_1	IF_10
0xc94f	          0x8b45f8	                mov eax, dword [rbp - 8]	      7388	normal.c	FUNCTION_92	ELSE_1	IF_10
0xc952	            0x29c2	                            sub edx, eax	      7388	normal.c	FUNCTION_92	ELSE_1	IF_10
0xc954	            0x89d0	                            mov eax, edx	      7388	normal.c	FUNCTION_92	ELSE_1	IF_10
0xc956	          0x8945cc	             mov dword [rbp - 0x34], eax	      7388	normal.c	FUNCTION_92	ELSE_1	IF_10
0xc959	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7389	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_20
0xc95c	          0x4863c8	                         movsxd rcx, eax	      7389	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_20
0xc95f	          0x8b55f8	                mov edx, dword [rbp - 8]	      7389	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_20
0xc962	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      7389	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_20
0xc966	    0x488b05000000	            mov rax, qword [0x0400c9ad] 	      7389	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_20
0xc96d	          0x4889c7	                            mov rdi, rax	      7389	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_20
0xc970	      0xe800000000	                          call 0x400c9b5	      7389	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_20
0xc975	          0x8b45f8	                mov eax, dword [rbp - 8]	      7390	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0xc978	          0x4863d0	                         movsxd rdx, eax	      7390	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0xc97b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7390	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0xc97f	        0x488d0c02	                    lea rcx, [rdx + rax]	      7390	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0xc983	          0x8b55f8	                mov edx, dword [rbp - 8]	      7390	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0xc986	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      7390	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0xc98a	    0x488b05000000	            mov rax, qword [0x0400c9d1] 	      7390	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0xc991	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	      7390	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0xc994	          0x4189f8	                            mov r8d, edi	      7390	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0xc997	          0x4889c7	                            mov rdi, rax	      7390	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0xc99a	      0xe800000000	                          call 0x400c9df	      7390	normal.c	FUNCTION_92	ELSE_1	IF_10	CALL_21
0xc99f	      0xe800000000	                          call 0x400c9e4	      7395	normal.c	FUNCTION_92	CALL_22
0xc9a4	    0x488b05000000	            mov rax, qword [0x0400c9eb] 	      7396	normal.c	FUNCTION_92
0xc9ab	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7396	normal.c	FUNCTION_92
0xc9b2	        0x837dc800	               cmp dword [rbp - 0x38], 0	      7397	normal.c	FUNCTION_92	IF_11
0xc9b6	     0xf8491000000	                            je 0x400ca8d	      7397	normal.c	FUNCTION_92	IF_11
0xc9bc	    0x488b05000000	            mov rax, qword [0x0400ca03] 	      7399	normal.c	FUNCTION_92	IF_11	CALL_23
0xc9c3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7399	normal.c	FUNCTION_92	IF_11	CALL_23
0xc9c7	        0x488d5001	                      lea rdx, [rax + 1]	      7399	normal.c	FUNCTION_92	IF_11	CALL_23
0xc9cb	          0x8b75e8	             mov esi, dword [rbp - 0x18]	      7399	normal.c	FUNCTION_92	IF_11	CALL_23
0xc9ce	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7399	normal.c	FUNCTION_92	IF_11	CALL_23
0xc9d2	      0xb900000000	                              mov ecx, 0	      7399	normal.c	FUNCTION_92	IF_11	CALL_23
0xc9d7	          0x4889c7	                            mov rdi, rax	      7399	normal.c	FUNCTION_92	IF_11	CALL_23
0xc9da	      0xe800000000	                          call 0x400ca1f	      7399	normal.c	FUNCTION_92	IF_11	CALL_23
0xc9df	    0x488b0d000000	            mov rcx, qword [0x0400ca26] 	      7401	normal.c	FUNCTION_92	IF_11
0xc9e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7401	normal.c	FUNCTION_92	IF_11
0xc9ea	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7401	normal.c	FUNCTION_92	IF_11
0xc9ee	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      7401	normal.c	FUNCTION_92	IF_11
0xc9f5	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      7401	normal.c	FUNCTION_92	IF_11
0xc9fc	    0x488b0d000000	            mov rcx, qword [0x0400ca43] 	      7402	normal.c	FUNCTION_92	IF_11
0xca03	    0x488b05000000	            mov rax, qword [0x0400ca4a] 	      7402	normal.c	FUNCTION_92	IF_11
0xca0a	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7402	normal.c	FUNCTION_92	IF_11
0xca0e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7402	normal.c	FUNCTION_92	IF_11
0xca12	    0x488981f01100	          mov qword [rcx + 0x11f0], rax 	      7402	normal.c	FUNCTION_92	IF_11
0xca19	    0x488991f81100	          mov qword [rcx + 0x11f8], rdx 	      7402	normal.c	FUNCTION_92	IF_11
0xca20	    0x488b05000000	            mov rax, qword [0x0400ca67] 	      7403	normal.c	FUNCTION_92	IF_11	IF_12
0xca27	    0x8b80f8110000	          mov eax, dword [rax + 0x11f8] 	      7403	normal.c	FUNCTION_92	IF_11	IF_12
0xca2d	            0x85c0	                           test eax, eax	      7403	normal.c	FUNCTION_92	IF_11	IF_12
0xca2f	            0x7e1c	                           jle 0x400ca8d	      7403	normal.c	FUNCTION_92	IF_11	IF_12
0xca31	    0x488b05000000	            mov rax, qword [0x0400ca78] 	      7404	normal.c	FUNCTION_92	IF_11	IF_12
0xca38	    0x8b90f8110000	          mov edx, dword [rax + 0x11f8] 	      7404	normal.c	FUNCTION_92	IF_11	IF_12
0xca3e	          0x83ea01	                              sub edx, 1	      7404	normal.c	FUNCTION_92	IF_11	IF_12
0xca41	    0x8990f8110000	          mov dword [rax + 0x11f8], edx 	      7404	normal.c	FUNCTION_92	IF_11	IF_12
0xca47	            0xeb04	                           jmp 0x400ca8d	      7404	normal.c	FUNCTION_92	IF_11	IF_12
0xca49	              0x90	                                     nop	      7329	normal.c	FUNCTION_92	IF_1
0xca4a	            0xeb01	                           jmp 0x400ca8d	      7329	normal.c	FUNCTION_92	IF_1
0xca4c	              0x90	                                     nop	      7340	normal.c	FUNCTION_92	IF_3
0xca4d	              0xc9	                                   leave	      7406	normal.c	FUNCTION_92
0xca4e	              0xc3	                                     ret	      7406	normal.c	FUNCTION_92
nv_vreplace	CALL,11:ELSE,2:DO,0:FOR,0:functions,0:IF,5:WHILE,0:SWITCH,0	61
0xc62a	              0x55	                                push rbp	      7286	normal.c	FUNCTION_91
0xc62b	          0x4889e5	                            mov rbp, rsp	      7286	normal.c	FUNCTION_91
0xc62e	        0x4883ec10	                           sub rsp, 0x10	      7286	normal.c	FUNCTION_91
0xc632	        0x48897df8	                mov qword [rbp - 8], rdi	      7286	normal.c	FUNCTION_91
0xc636	    0x8b0500000000	            mov eax, dword [0x0400c67c] 	      7287	normal.c	FUNCTION_91	IF_1
0xc63c	            0x85c0	                           test eax, eax	      7287	normal.c	FUNCTION_91	IF_1
0xc63e	            0x742a	                            je 0x400c6aa	      7287	normal.c	FUNCTION_91	IF_1
0xc640	        0x488b45f8	                mov rax, qword [rbp - 8]	      7289	normal.c	FUNCTION_91	IF_1
0xc644	    0xc7400c720000	            mov dword [rax + 0xc], 0x72 	      7289	normal.c	FUNCTION_91	IF_1
0xc64b	        0x488b45f8	                mov rax, qword [rbp - 8]	      7290	normal.c	FUNCTION_91	IF_1
0xc64f	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      7290	normal.c	FUNCTION_91	IF_1
0xc652	        0x488b45f8	                mov rax, qword [rbp - 8]	      7290	normal.c	FUNCTION_91	IF_1
0xc656	          0x895010	             mov dword [rax + 0x10], edx	      7290	normal.c	FUNCTION_91	IF_1
0xc659	        0x488b45f8	                mov rax, qword [rbp - 8]	      7291	normal.c	FUNCTION_91	IF_1	CALL_1
0xc65d	          0x4889c7	                            mov rdi, rax	      7291	normal.c	FUNCTION_91	IF_1	CALL_1
0xc660	      0xe88ff6ffff	                     call sym.nv_replace	      7291	normal.c	FUNCTION_91	IF_1	CALL_1
0xc665	      0xe99e000000	                           jmp 0x400c748	      7310	normal.c	FUNCTION_91
0xc66a	        0x488b45f8	                mov rax, qword [rbp - 8]	      7293	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_2
0xc66e	          0x488b00	                    mov rax, qword [rax]	      7293	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_2
0xc671	          0x4889c7	                            mov rdi, rax	      7293	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_2
0xc674	      0xe8ff92ffff	                  call sym.checkclearopq	      7293	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_2
0xc679	            0x85c0	                           test eax, eax	      7293	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_2
0xc67b	     0xf8587000000	                           jne 0x400c748	      7293	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_2
0xc681	    0x488b05000000	            mov rax, qword [0x0400c6c8] 	      7295	normal.c	FUNCTION_91	ELSE_1	IF_2	IF_3
0xc688	    0x8b8028150000	          mov eax, dword [rax + 0x1528] 	      7295	normal.c	FUNCTION_91	ELSE_1	IF_2	IF_3
0xc68e	            0x85c0	                           test eax, eax	      7295	normal.c	FUNCTION_91	ELSE_1	IF_2	IF_3
0xc690	            0x7514	                           jne 0x400c6e6	      7295	normal.c	FUNCTION_91	ELSE_1	IF_2	IF_3
0xc692	      0xbf00000000	                              mov edi, 0	      7296	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_4
0xc697	      0xe800000000	                          call 0x400c6dc	      7296	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_4
0xc69c	          0x4889c7	                            mov rdi, rax	      7296	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_4
0xc69f	      0xe800000000	                          call 0x400c6e4	      7296	normal.c	FUNCTION_91	ELSE_1	IF_2	CALL_4
0xc6a4	            0xeb62	                           jmp 0x400c748	      7310	normal.c	FUNCTION_91
0xc6a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      7299	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	IF_4
0xc6aa	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      7299	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	IF_4
0xc6ad	          0x83f816	                           cmp eax, 0x16	      7299	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	IF_4
0xc6b0	            0x750e	                           jne 0x400c700	      7299	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	IF_4
0xc6b2	      0xe800000000	                          call 0x400c6f7	      7300	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_5
0xc6b7	            0x89c2	                            mov edx, eax	      7300	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_5
0xc6b9	        0x488b45f8	                mov rax, qword [rbp - 8]	      7300	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_5
0xc6bd	          0x89501c	             mov dword [rax + 0x1c], edx	      7300	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_5
0xc6c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      7301	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_6
0xc6c4	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      7301	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_6
0xc6c7	            0x89c7	                            mov edi, eax	      7301	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_6
0xc6c9	      0xe800000000	                          call 0x400c70e	      7301	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_6
0xc6ce	      0xbf1b000000	                           mov edi, 0x1b	      7302	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_7
0xc6d3	      0xe800000000	                          call 0x400c718	      7302	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_7
0xc6d8	      0xe800000000	                          call 0x400c71d	      7304	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	IF_5	CALL_8
0xc6dd	            0x85c0	                           test eax, eax	      7304	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	IF_5	CALL_8
0xc6df	            0x740c	                            je 0x400c72d	      7304	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	IF_5	CALL_8
0xc6e1	      0xe800000000	                          call 0x400c726	      7305	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_10
0xc6e6	            0x89c7	                            mov edi, eax	      7305	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_10
0xc6e8	      0xe800000000	                          call 0x400c72d	      7305	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_10
0xc6ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      7307	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_11
0xc6f1	      0xb900000000	                              mov ecx, 0	      7307	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_11
0xc6f6	      0xba76000000	                           mov edx, 0x76	      7307	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_11
0xc6fb	      0xbe01000000	                              mov esi, 1	      7307	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_11
0xc700	          0x4889c7	                            mov rdi, rax	      7307	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_11
0xc703	      0xe837350000	                    call sym.invoke_edit	      7307	normal.c	FUNCTION_91	ELSE_1	IF_2	ELSE_2	CALL_11
0xc708	              0x90	                                     nop	      7310	normal.c	FUNCTION_91
0xc709	              0xc9	                                   leave	      7310	normal.c	FUNCTION_91
0xc70a	              0xc3	                                     ret	      7310	normal.c	FUNCTION_91
nv_pipe	CALL,2:ELSE,1:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	34
0xed51	              0x55	                                push rbp	      8668	normal.c	FUNCTION_117
0xed52	          0x4889e5	                            mov rbp, rsp	      8668	normal.c	FUNCTION_117
0xed55	        0x4883ec10	                           sub rsp, 0x10	      8668	normal.c	FUNCTION_117
0xed59	        0x48897df8	                mov qword [rbp - 8], rdi	      8668	normal.c	FUNCTION_117
0xed5d	        0x488b45f8	                mov rax, qword [rbp - 8]	      8669	normal.c	FUNCTION_117
0xed61	          0x488b00	                    mov rax, qword [rax]	      8669	normal.c	FUNCTION_117
0xed64	    0xc74008000000	                  mov dword [rax + 8], 0	      8669	normal.c	FUNCTION_117
0xed6b	        0x488b45f8	                mov rax, qword [rbp - 8]	      8670	normal.c	FUNCTION_117
0xed6f	          0x488b00	                    mov rax, qword [rax]	      8670	normal.c	FUNCTION_117
0xed72	    0xc74014000000	               mov dword [rax + 0x14], 0	      8670	normal.c	FUNCTION_117
0xed79	      0xbf00000000	                              mov edi, 0	      8671	normal.c	FUNCTION_117	CALL_1
0xed7e	      0xe800000000	                          call 0x400edc3	      8671	normal.c	FUNCTION_117	CALL_1
0xed83	        0x488b45f8	                mov rax, qword [rbp - 8]	      8672	normal.c	FUNCTION_117	IF_1
0xed87	        0x488b4028	            mov rax, qword [rax + 0x28] 	      8672	normal.c	FUNCTION_117	IF_1
0xed8b	          0x4885c0	                           test rax, rax	      8672	normal.c	FUNCTION_117	IF_1
0xed8e	            0x7e29	                           jle 0x400edf9	      8672	normal.c	FUNCTION_117	IF_1
0xed90	        0x488b45f8	                mov rax, qword [rbp - 8]	      8674	normal.c	FUNCTION_117	IF_1	CALL_2
0xed94	        0x488b4028	            mov rax, qword [rax + 0x28] 	      8674	normal.c	FUNCTION_117	IF_1	CALL_2
0xed98	          0x83e801	                              sub eax, 1	      8674	normal.c	FUNCTION_117	IF_1	CALL_2
0xed9b	            0x89c7	                            mov edi, eax	      8674	normal.c	FUNCTION_117	IF_1	CALL_2
0xed9d	      0xe800000000	                          call 0x400ede2	      8674	normal.c	FUNCTION_117	IF_1	CALL_2
0xeda2	    0x488b05000000	            mov rax, qword [0x0400ede9] 	      8675	normal.c	FUNCTION_117	IF_1
0xeda9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      8675	normal.c	FUNCTION_117	IF_1
0xedad	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      8675	normal.c	FUNCTION_117	IF_1
0xedb1	          0x83ea01	                              sub edx, 1	      8675	normal.c	FUNCTION_117	IF_1
0xedb4	          0x895048	             mov dword [rax + 0x48], edx	      8675	normal.c	FUNCTION_117	IF_1
0xedb7	            0xeb0e	                           jmp 0x400ee07	      8675	normal.c	FUNCTION_117	IF_1
0xedb9	    0x488b05000000	            mov rax, qword [0x0400ee00] 	      8678	normal.c	FUNCTION_117	ELSE_1
0xedc0	    0xc74048000000	               mov dword [rax + 0x48], 0	      8678	normal.c	FUNCTION_117	ELSE_1
0xedc7	    0x488b05000000	            mov rax, qword [0x0400ee0e] 	      8681	normal.c	FUNCTION_117	ELSE_1
0xedce	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      8681	normal.c	FUNCTION_117	ELSE_1
0xedd5	              0x90	                                     nop	      8682	normal.c	FUNCTION_117	ELSE_1
0xedd6	              0xc9	                                   leave	      8682	normal.c	FUNCTION_117	ELSE_1
0xedd7	              0xc3	                                     ret	      8682	normal.c	FUNCTION_117	ELSE_1
nv_home	CALL,2:ELSE,1:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	21
0xed05	              0x55	                                push rbp	      8650	normal.c	FUNCTION_116
0xed06	          0x4889e5	                            mov rbp, rsp	      8650	normal.c	FUNCTION_116
0xed09	        0x4883ec10	                           sub rsp, 0x10	      8650	normal.c	FUNCTION_116
0xed0d	        0x48897df8	                mov qword [rbp - 8], rdi	      8650	normal.c	FUNCTION_116
0xed11	    0x8b0500000000	            mov eax, dword [0x0400ed57] 	      8652	normal.c	FUNCTION_116	IF_1
0xed17	          0x83e004	                              and eax, 4	      8652	normal.c	FUNCTION_116	IF_1
0xed1a	            0x85c0	                           test eax, eax	      8652	normal.c	FUNCTION_116	IF_1
0xed1c	            0x740e	                            je 0x400ed6c	      8652	normal.c	FUNCTION_116	IF_1
0xed1e	        0x488b45f8	                mov rax, qword [rbp - 8]	      8653	normal.c	FUNCTION_116	CALL_1
0xed22	          0x4889c7	                            mov rdi, rax	      8653	normal.c	FUNCTION_116	CALL_1
0xed25	      0xe839070000	                        call sym.nv_goto	      8653	normal.c	FUNCTION_116	CALL_1
0xed2a	            0xeb18	                           jmp 0x400ed84	      8653	normal.c	FUNCTION_116	CALL_1
0xed2c	        0x488b45f8	                mov rax, qword [rbp - 8]	      8656	normal.c	FUNCTION_116	ELSE_1
0xed30	    0x48c740280100	               mov qword [rax + 0x28], 1	      8656	normal.c	FUNCTION_116	ELSE_1
0xed38	        0x488b45f8	                mov rax, qword [rbp - 8]	      8657	normal.c	FUNCTION_116	ELSE_1	CALL_2
0xed3c	          0x4889c7	                            mov rdi, rax	      8657	normal.c	FUNCTION_116	ELSE_1	CALL_2
0xed3f	      0xe80d000000	                        call sym.nv_pipe	      8657	normal.c	FUNCTION_116	ELSE_1	CALL_2
0xed44	    0xc70500000000	               mov dword [0x0400ed8e], 0	      8659	normal.c	FUNCTION_116
0xed4e	              0x90	                                     nop	      8661	normal.c	FUNCTION_116
0xed4f	              0xc9	                                   leave	      8661	normal.c	FUNCTION_116
0xed50	              0xc3	                                     ret	      8661	normal.c	FUNCTION_116
normal_cmd	CALL,102:ELSE,17:DO,0:FOR,0:functions,0:IF,80:WHILE,3:SWITCH,1	1454
0x1f3	              0x55	                                push rbp	       545	normal.c	ELSE_1	FUNCTION_4
0x1f4	          0x4889e5	                            mov rbp, rsp	       545	normal.c	ELSE_1	FUNCTION_4
0x1f7	              0x53	                                push rbx	       545	normal.c	ELSE_1	FUNCTION_4
0x1f8	    0x4881ecc80000	                           sub rsp, 0xc8	       545	normal.c	ELSE_1	FUNCTION_4
0x1ff	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	       545	normal.c	ELSE_1	FUNCTION_4
0x206	    0x89b534ffffff	             mov dword [rbp - 0xcc], esi	       545	normal.c	ELSE_1	FUNCTION_4
0x20c	    0x64488b042528	                mov rax, qword fs:[0x28]	       545	normal.c	ELSE_1	FUNCTION_4
0x215	        0x488945e8	             mov qword [rbp - 0x18], rax	       545	normal.c	ELSE_1	FUNCTION_4
0x219	            0x31c0	                            xor eax, eax	       545	normal.c	ELSE_1	FUNCTION_4
0x21b	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	       548	normal.c	ELSE_1	FUNCTION_4
0x225	    0x488b05000000	            mov rax, qword [0x0400026c] 	       549	normal.c	ELSE_1	FUNCTION_4
0x22c	          0x8b4048	            mov eax, dword [rax + 0x48] 	       549	normal.c	ELSE_1	FUNCTION_4
0x22f	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       549	normal.c	ELSE_1	FUNCTION_4
0x235	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	       558	normal.c	ELSE_1	FUNCTION_4
0x23f	        0x488d45a0	                   lea rax, [rbp - 0x60]	       561	normal.c	ELSE_1	FUNCTION_4	CALL_1
0x243	      0xba48000000	                           mov edx, 0x48	       561	normal.c	ELSE_1	FUNCTION_4	CALL_1
0x248	      0xbe00000000	                              mov esi, 0	       561	normal.c	ELSE_1	FUNCTION_4	CALL_1
0x24d	          0x4889c7	                            mov rdi, rax	       561	normal.c	ELSE_1	FUNCTION_4	CALL_1
0x250	      0xe800000000	                          call 0x4000295	       561	normal.c	ELSE_1	FUNCTION_4	CALL_1
0x255	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       562	normal.c	ELSE_1	FUNCTION_4
0x25c	        0x488945a0	             mov qword [rbp - 0x60], rax	       562	normal.c	ELSE_1	FUNCTION_4
0x260	    0x488b05000000	            mov rax, qword [0x040002a7] 	       567	normal.c	ELSE_1	FUNCTION_4
0x267	        0x488945c0	             mov qword [rbp - 0x40], rax	       567	normal.c	ELSE_1	FUNCTION_4
0x26b	    0x8b0500000000	            mov eax, dword [0x040002b1] 	       575	normal.c	ELSE_1	FUNCTION_4
0x271	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       575	normal.c	ELSE_1	FUNCTION_4
0x277	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       577	normal.c	ELSE_1	FUNCTION_4
0x27e	            0x8b00	                    mov eax, dword [rax]	       577	normal.c	ELSE_1	FUNCTION_4
0x280	            0x85c0	                           test eax, eax	       577	normal.c	ELSE_1	FUNCTION_4
0x282	           0xf95c0	                                setne al	       577	normal.c	ELSE_1	FUNCTION_4
0x285	           0xfb6c0	                           movzx eax, al	       577	normal.c	ELSE_1	FUNCTION_4
0x288	    0x890500000000	            mov dword [0x040002ce], eax 	       577	normal.c	ELSE_1	FUNCTION_4
0x28e	    0x8b0500000000	            mov eax, dword [0x040002d4] 	       579	normal.c	ELSE_1	FUNCTION_4	IF_1
0x294	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	       579	normal.c	ELSE_1	FUNCTION_4	IF_1
0x29a	            0x7405	                            je 0x40002e1	       579	normal.c	ELSE_1	FUNCTION_4	IF_1
0x29c	      0xe800000000	                          call 0x40002e1	       581	normal.c	ELSE_1	FUNCTION_4	IF_1	CALL_2
0x2a1	    0x8b0500000000	            mov eax, dword [0x040002e7] 	       590	normal.c	ELSE_1	FUNCTION_4	IF_2
0x2a7	            0x85c0	                           test eax, eax	       590	normal.c	ELSE_1	FUNCTION_4	IF_2
0x2a9	            0x7520	                           jne 0x400030b	       590	normal.c	ELSE_1	FUNCTION_4	IF_2
0x2ab	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       590	normal.c	ELSE_1	FUNCTION_4	IF_2
0x2b2	          0x8b4004	                mov eax, dword [rax + 4]	       590	normal.c	ELSE_1	FUNCTION_4	IF_2
0x2b5	            0x85c0	                           test eax, eax	       590	normal.c	ELSE_1	FUNCTION_4	IF_2
0x2b7	            0x7512	                           jne 0x400030b	       590	normal.c	ELSE_1	FUNCTION_4	IF_2
0x2b9	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       592	normal.c	ELSE_1	FUNCTION_4	IF_2
0x2c1	    0xc78540ffffff	               mov dword [rbp - 0xc0], 1	       594	normal.c	ELSE_1	FUNCTION_4	IF_2
0x2cb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       602	normal.c	ELSE_1	FUNCTION_4	IF_3
0x2d2	        0x488b4070	            mov rax, qword [rax + 0x70] 	       602	normal.c	ELSE_1	FUNCTION_4	IF_3
0x2d6	          0x4885c0	                           test rax, rax	       602	normal.c	ELSE_1	FUNCTION_4	IF_3
0x2d9	            0x7f10	                            jg 0x400032b	       602	normal.c	ELSE_1	FUNCTION_4	IF_3
0x2db	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       602	normal.c	ELSE_1	FUNCTION_4	IF_3
0x2e2	        0x488b4078	            mov rax, qword [rax + 0x78] 	       602	normal.c	ELSE_1	FUNCTION_4	IF_3
0x2e6	          0x4885c0	                           test rax, rax	       602	normal.c	ELSE_1	FUNCTION_4	IF_3
0x2e9	            0x7e3c	                           jle 0x4000367	       602	normal.c	ELSE_1	FUNCTION_4	IF_3
0x2eb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       604	normal.c	ELSE_1	FUNCTION_4	IF_3
0x2f2	        0x488b4070	            mov rax, qword [rax + 0x70] 	       604	normal.c	ELSE_1	FUNCTION_4	IF_3
0x2f6	        0x488945c0	             mov qword [rbp - 0x40], rax	       604	normal.c	ELSE_1	FUNCTION_4	IF_3
0x2fa	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       605	normal.c	ELSE_1	FUNCTION_4	IF_3
0x301	        0x488b4078	            mov rax, qword [rax + 0x78] 	       605	normal.c	ELSE_1	FUNCTION_4	IF_3
0x305	        0x488945c8	             mov qword [rbp - 0x38], rax	       605	normal.c	ELSE_1	FUNCTION_4	IF_3
0x309	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       606	normal.c	ELSE_1	FUNCTION_4	IF_3
0x310	    0x48c740700000	               mov qword [rax + 0x70], 0	       606	normal.c	ELSE_1	FUNCTION_4	IF_3
0x318	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       607	normal.c	ELSE_1	FUNCTION_4	IF_3
0x31f	    0x48c740780000	               mov qword [rax + 0x78], 0	       607	normal.c	ELSE_1	FUNCTION_4	IF_3
0x327	      0xe800000000	                          call 0x400036c	       611	normal.c	ELSE_1	FUNCTION_4	CALL_4
0x32c	    0x898568ffffff	             mov dword [rbp - 0x98], eax	       611	normal.c	ELSE_1	FUNCTION_4	CALL_4
0x332	    0xc70500000000	          mov dword [0x0400037c], 0x101 	       613	normal.c	ELSE_1	FUNCTION_4
0x33c	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	       622	normal.c	ELSE_1	FUNCTION_4	IF_4	CALL_5
0x343	            0x741f	                            je 0x40003a4	       622	normal.c	ELSE_1	FUNCTION_4	IF_4	CALL_5
0x345	      0xe800000000	                          call 0x400038a	       622	normal.c	ELSE_1	FUNCTION_4	IF_4	CALL_5
0x34a	            0x85c0	                           test eax, eax	       622	normal.c	ELSE_1	FUNCTION_4	IF_4	CALL_5
0x34c	            0x7416	                            je 0x40003a4	       622	normal.c	ELSE_1	FUNCTION_4	IF_4	CALL_5
0x34e	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	       623	normal.c	ELSE_1	FUNCTION_4	CALL_6
0x355	        0x488d45a0	                   lea rax, [rbp - 0x60]	       623	normal.c	ELSE_1	FUNCTION_4	CALL_6
0x359	          0x4889d6	                            mov rsi, rdx	       623	normal.c	ELSE_1	FUNCTION_4	CALL_6
0x35c	          0x4889c7	                            mov rdi, rax	       623	normal.c	ELSE_1	FUNCTION_4	CALL_6
0x35f	      0xe887160000	                  call sym.set_vcount_ca	       623	normal.c	ELSE_1	FUNCTION_4	CALL_6
0x364	      0xe800000000	                          call 0x40003a9	       629	normal.c	ELSE_1	FUNCTION_4	CALL_7
0x369	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       629	normal.c	ELSE_1	FUNCTION_4	CALL_7
0x36f	    0x488b05000000	            mov rax, qword [0x040003b6] 	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x376	           0xfb600	                   movzx eax, byte [rax]	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x379	            0x84c0	                             test al, al	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x37b	            0x7476	                            je 0x4000433	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x37d	      0xe800000000	                          call 0x40003c2	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x382	      0x3d00100000	                         cmp eax, 0x1000	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x387	            0x746a	                            je 0x4000433	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x389	    0x8b0500000000	            mov eax, dword [0x040003cf] 	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x38f	            0x85c0	                           test eax, eax	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x391	            0x7514	                           jne 0x40003e7	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x393	    0x8b0500000000	            mov eax, dword [0x040003d9] 	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x399	            0x85c0	                           test eax, eax	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x39b	            0x7556	                           jne 0x4000433	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x39d	    0x8b0500000000	            mov eax, dword [0x040003e3] 	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3a3	            0x85c0	                           test eax, eax	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3a5	            0x744c	                            je 0x4000433	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3a7	    0x8b0500000000	            mov eax, dword [0x040003ed] 	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3ad	            0x85c0	                           test eax, eax	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3af	            0x7542	                           jne 0x4000433	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3b1	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3b8	            0x7839	                            js 0x4000433	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3ba	    0x81bd48ffffff	           cmp dword [rbp - 0xb8], 0xff 	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3c4	            0x7f1a	                            jg 0x4000420	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3c6	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3cc	            0x4898	                                    cdqe	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3ce	     0xfb680000000	                   movzx eax, byte [rax]	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3d5	           0xfb6c0	                           movzx eax, al	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3d8	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3de	            0xeb13	                           jmp 0x4000433	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3e0	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3e6	            0x89c7	                            mov edi, eax	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3e8	      0xe800000000	                          call 0x400042d	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3ed	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       630	normal.c	ELSE_1	FUNCTION_4	CALL_9
0x3f3	    0x8b0500000000	            mov eax, dword [0x04000439] 	       637	normal.c	ELSE_1	FUNCTION_4	IF_5
0x3f9	            0x85c0	                           test eax, eax	       637	normal.c	ELSE_1	FUNCTION_4	IF_5
0x3fb	            0x750c	                           jne 0x4000449	       637	normal.c	ELSE_1	FUNCTION_4	IF_5
0x3fd	    0xc70500000000	               mov dword [0x04000447], 0	       638	normal.c	ELSE_1	FUNCTION_4	IF_5
0x407	            0xeb31	                           jmp 0x400047a	       638	normal.c	ELSE_1	FUNCTION_4	IF_5
0x409	    0x8b0500000000	            mov eax, dword [0x0400044f] 	       639	normal.c	FUNCTION_4	IF_6
0x40f	            0x85c0	                           test eax, eax	       639	normal.c	FUNCTION_4	IF_6
0x411	            0x751c	                           jne 0x400046f	       639	normal.c	FUNCTION_4	IF_6
0x413	    0x8b0500000000	            mov eax, dword [0x04000459] 	       640	normal.c	FUNCTION_4	IF_6	CALL_10
0x419	            0x85c0	                           test eax, eax	       640	normal.c	FUNCTION_4	IF_6	CALL_10
0x41b	            0x741d	                            je 0x400047a	       640	normal.c	FUNCTION_4	IF_6	CALL_10
0x41d	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	       640	normal.c	FUNCTION_4	IF_6	CALL_10
0x424	            0x7514	                           jne 0x400047a	       640	normal.c	FUNCTION_4	IF_6	CALL_10
0x426	      0xe800000000	                          call 0x400046b	       640	normal.c	FUNCTION_4	IF_6	CALL_10
0x42b	            0x85c0	                           test eax, eax	       640	normal.c	FUNCTION_4	IF_6	CALL_10
0x42d	            0x7e0b	                           jle 0x400047a	       640	normal.c	FUNCTION_4	IF_6	CALL_10
0x42f	      0xe800000000	                          call 0x4000474	       641	normal.c	FUNCTION_4	ELSE_1	CALL_11
0x434	    0x890500000000	            mov dword [0x0400047a], eax 	       641	normal.c	FUNCTION_4	ELSE_1	CALL_11
0x43a	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	       643	normal.c	FUNCTION_4	ELSE_1	IF_7
0x441	            0x750a	                           jne 0x400048d	       643	normal.c	FUNCTION_4	ELSE_1	IF_7
0x443	    0xc78548ffffff	      mov dword [rbp - 0xb8], 0xffffa701	       644	normal.c	FUNCTION_4	ELSE_1	IF_7
0x44d	    0x8b0500000000	            mov eax, dword [0x04000493] 	       649	normal.c	FUNCTION_4	ELSE_1	IF_8
0x453	            0x85c0	                           test eax, eax	       649	normal.c	FUNCTION_4	ELSE_1	IF_8
0x455	            0x747a	                            je 0x4000511	       649	normal.c	FUNCTION_4	ELSE_1	IF_8
0x457	    0x8b0500000000	            mov eax, dword [0x0400049d] 	       650	normal.c	FUNCTION_4	ELSE_1	IF_8
0x45d	            0x85c0	                           test eax, eax	       650	normal.c	FUNCTION_4	ELSE_1	IF_8
0x45f	            0x7470	                            je 0x4000511	       650	normal.c	FUNCTION_4	ELSE_1	IF_8
0x461	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       651	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x467	            0x89c7	                            mov edi, eax	       651	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x469	      0xe800000000	                          call 0x40004ae	       651	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x46e	            0x85c0	                           test eax, eax	       651	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x470	            0x751e	                           jne 0x40004d0	       651	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x472	    0x83bd48ffffff	            cmp dword [rbp - 0xb8], 0xa 	       651	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x479	            0x7415	                            je 0x40004d0	       651	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x47b	    0x83bd48ffffff	            cmp dword [rbp - 0xb8], 0xd 	       651	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x482	            0x740c	                            je 0x40004d0	       651	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x484	    0x81bd48ffffff	     cmp dword [rbp - 0xb8], 0xffffbeb5 	       651	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x48e	            0x7541	                           jne 0x4000511	       651	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_12
0x490	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       658	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_13
0x496	            0x89c7	                            mov edi, eax	       658	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_13
0x498	      0xe800000000	                          call 0x40004dd	       658	normal.c	FUNCTION_4	ELSE_1	IF_8	CALL_13
0x49d	    0x8b0500000000	            mov eax, dword [0x040004e3] 	       659	normal.c	FUNCTION_4	ELSE_1	IF_8	IF_9
0x4a3	            0x85c0	                           test eax, eax	       659	normal.c	FUNCTION_4	ELSE_1	IF_8	IF_9
0x4a5	            0x740c	                            je 0x40004f3	       659	normal.c	FUNCTION_4	ELSE_1	IF_8	IF_9
0x4a7	    0xc78548ffffff	           mov dword [rbp - 0xb8], 0x64 	       660	normal.c	FUNCTION_4	ELSE_1	IF_8	IF_9
0x4b1	            0xeb0a	                           jmp 0x40004fd	       660	normal.c	FUNCTION_4	ELSE_1	IF_8	IF_9
0x4b3	    0xc78548ffffff	           mov dword [rbp - 0xb8], 0x63 	       662	normal.c	FUNCTION_4	ELSE_1	IF_8	ELSE_2
0x4bd	    0xc70500000000	               mov dword [0x04000507], 1	       663	normal.c	FUNCTION_4	ELSE_1	IF_8
0x4c7	    0xc70500000000	               mov dword [0x04000511], 0	       664	normal.c	FUNCTION_4	ELSE_1	IF_8
0x4d1	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       668	normal.c	FUNCTION_4	ELSE_1	CALL_14
0x4d7	            0x89c7	                            mov edi, eax	       668	normal.c	FUNCTION_4	ELSE_1	CALL_14
0x4d9	      0xe800000000	                          call 0x400051e	       668	normal.c	FUNCTION_4	ELSE_1	CALL_14
0x4de	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	       668	normal.c	FUNCTION_4	ELSE_1	CALL_14
0x4e4	    0x8b0500000000	            mov eax, dword [0x0400052a] 	       672	normal.c	FUNCTION_4	ELSE_1	IF_10
0x4ea	            0x85c0	                           test eax, eax	       672	normal.c	FUNCTION_4	ELSE_1	IF_10
0x4ec	     0xf84c1010000	                            je 0x40006f3	       672	normal.c	FUNCTION_4	ELSE_1	IF_10
0x4f2	    0x8b0500000000	            mov eax, dword [0x04000538] 	       672	normal.c	FUNCTION_4	ELSE_1	IF_10
0x4f8	            0x85c0	                           test eax, eax	       672	normal.c	FUNCTION_4	ELSE_1	IF_10
0x4fa	     0xf851b030000	                           jne 0x400085b	       672	normal.c	FUNCTION_4	ELSE_1	IF_10
0x500	      0xe9ae010000	                           jmp 0x40006f3	       679	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x505	    0x81bd48ffffff	     cmp dword [rbp - 0xb8], 0xffffbb95 	       682	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x50f	            0x740c	                            je 0x400055d	       682	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x511	    0x81bd48ffffff	     cmp dword [rbp - 0xb8], 0xffffaf03 	       682	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x51b	            0x7535	                           jne 0x4000592	       682	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x51d	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x521	    0x48ba67666666	          movabs rdx, 0x6666666666666667	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x52b	          0x4889c8	                            mov rax, rcx	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x52e	          0x48f7ea	                                imul rdx	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x531	        0x48c1fa02	                              sar rdx, 2	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x535	          0x4889c8	                            mov rax, rcx	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x538	        0x48c1f83f	                           sar rax, 0x3f	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x53c	          0x4829c2	                            sub rdx, rax	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x53f	          0x4889d0	                            mov rax, rdx	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x542	        0x488945c8	             mov qword [rbp - 0x38], rax	       684	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11
0x546	      0xbf04000000	                              mov edi, 4	       686	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11	CALL_15
0x54b	      0xe8245a0000	               call sym.del_from_showcmd	       686	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11	CALL_15
0x550	            0xeb26	                           jmp 0x40005b8	       686	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_11	CALL_15
0x552	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       690	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x556	          0x4889d0	                            mov rax, rdx	       690	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x559	        0x48c1e002	                              shl rax, 2	       690	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x55d	          0x4801d0	                            add rax, rdx	       690	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x560	          0x4801c0	                            add rax, rax	       690	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x563	          0x4889c2	                            mov rdx, rax	       690	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x566	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       690	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x56c	          0x83e830	                           sub eax, 0x30	       690	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x56f	            0x4898	                                    cdqe	       690	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x571	          0x4801d0	                            add rax, rdx	       690	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x574	        0x488945c8	             mov qword [rbp - 0x38], rax	       690	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	ELSE_3
0x578	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       691	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_12
0x57c	          0x4885c0	                           test rax, rax	       691	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_12
0x57f	            0x7908	                           jns 0x40005c9	       691	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_12
0x581	    0x48c745c8ffc9	      mov qword [rbp - 0x38], 0x3b9ac9ff	       692	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_12
0x589	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	       697	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_13	CALL_16
0x590	            0x741f	                            je 0x40005f1	       697	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_13	CALL_16
0x592	      0xe800000000	                          call 0x40005d7	       697	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_13	CALL_16
0x597	            0x85c0	                           test eax, eax	       697	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_13	CALL_16
0x599	            0x7416	                            je 0x40005f1	       697	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_13	CALL_16
0x59b	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	       698	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_17
0x5a2	        0x488d45a0	                   lea rax, [rbp - 0x60]	       698	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_17
0x5a6	          0x4889d6	                            mov rsi, rdx	       698	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_17
0x5a9	          0x4889c7	                            mov rdi, rax	       698	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_17
0x5ac	      0xe83a140000	                  call sym.set_vcount_ca	       698	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_17
0x5b1	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       700	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_14
0x5b8	            0x741e	                            je 0x4000618	       700	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_14
0x5ba	    0x8b0500000000	            mov eax, dword [0x04000600] 	       702	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_14
0x5c0	          0x83c001	                              add eax, 1	       702	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_14
0x5c3	    0x890500000000	            mov dword [0x04000609], eax 	       702	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_14
0x5c9	    0x8b0500000000	            mov eax, dword [0x0400060f] 	       703	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_14
0x5cf	          0x83c001	                              add eax, 1	       703	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_14
0x5d2	    0x890500000000	            mov dword [0x04000618], eax 	       703	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_14
0x5d8	    0x8b0500000000	            mov eax, dword [0x0400061e] 	       705	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x5de	          0x83c001	                              add eax, 1	       705	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x5e1	    0x890500000000	            mov dword [0x04000627], eax 	       705	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x5e7	      0xe800000000	                          call 0x400062c	       706	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_18
0x5ec	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       706	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_18
0x5f2	    0x488b05000000	            mov rax, qword [0x04000639] 	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x5f9	           0xfb600	                   movzx eax, byte [rax]	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x5fc	            0x84c0	                             test al, al	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x5fe	            0x746a	                            je 0x40006aa	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x600	    0x8b0500000000	            mov eax, dword [0x04000646] 	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x606	            0x85c0	                           test eax, eax	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x608	            0x7514	                           jne 0x400065e	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x60a	    0x8b0500000000	            mov eax, dword [0x04000650] 	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x610	            0x85c0	                           test eax, eax	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x612	            0x7556	                           jne 0x40006aa	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x614	    0x8b0500000000	            mov eax, dword [0x0400065a] 	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x61a	            0x85c0	                           test eax, eax	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x61c	            0x744c	                            je 0x40006aa	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x61e	    0x8b0500000000	            mov eax, dword [0x04000664] 	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x624	            0x85c0	                           test eax, eax	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x626	            0x7542	                           jne 0x40006aa	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x628	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x62f	            0x7839	                            js 0x40006aa	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x631	    0x81bd48ffffff	           cmp dword [rbp - 0xb8], 0xff 	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x63b	            0x7f1a	                            jg 0x4000697	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x63d	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x643	            0x4898	                                    cdqe	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x645	     0xfb680000000	                   movzx eax, byte [rax]	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x64c	           0xfb6c0	                           movzx eax, al	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x64f	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x655	            0xeb13	                           jmp 0x40006aa	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x657	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x65d	            0x89c7	                            mov edi, eax	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x65f	      0xe800000000	                          call 0x40006a4	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x664	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       707	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_19
0x66a	    0x8b0500000000	            mov eax, dword [0x040006b0] 	       708	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x670	          0x83e801	                              sub eax, 1	       708	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x673	    0x890500000000	            mov dword [0x040006b9], eax 	       708	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x679	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       709	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_15
0x680	            0x741e	                            je 0x40006e0	       709	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_15
0x682	    0x8b0500000000	            mov eax, dword [0x040006c8] 	       711	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_15
0x688	          0x83e801	                              sub eax, 1	       711	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_15
0x68b	    0x890500000000	            mov dword [0x040006d1], eax 	       711	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_15
0x691	    0x8b0500000000	            mov eax, dword [0x040006d7] 	       712	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_15
0x697	          0x83e801	                              sub eax, 1	       712	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_15
0x69a	    0x890500000000	            mov dword [0x040006e0], eax 	       712	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	IF_15
0x6a0	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       715	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_20
0x6a6	            0x89c7	                            mov edi, eax	       715	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_20
0x6a8	      0xe800000000	                          call 0x40006ed	       715	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_20
0x6ad	     0x98550ffffff	              or dword [rbp - 0xb0], eax	       715	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1	CALL_20
0x6b3	    0x83bd48ffffff	           cmp dword [rbp - 0xb8], 0x30 	       679	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x6ba	            0x7e0d	                           jle 0x4000709	       679	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x6bc	    0x83bd48ffffff	           cmp dword [rbp - 0xb8], 0x39 	       679	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x6c3	     0xf8e3cfeffff	                           jle 0x4000545	       679	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x6c9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       680	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x6cd	          0x4885c0	                           test rax, rax	       680	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x6d0	            0x742d	                            je 0x400073f	       680	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x6d2	    0x81bd48ffffff	     cmp dword [rbp - 0xb8], 0xffffbb95 	       680	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x6dc	     0xf8423feffff	                            je 0x4000545	       680	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x6e2	    0x81bd48ffffff	     cmp dword [rbp - 0xb8], 0xffffaf03 	       680	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x6ec	     0xf8413feffff	                            je 0x4000545	       680	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x6f2	    0x83bd48ffffff	           cmp dword [rbp - 0xb8], 0x30 	       680	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x6f9	     0xf8406feffff	                            je 0x4000545	       680	normal.c	FUNCTION_4	ELSE_1	IF_10	WHILE_1
0x6ff	    0x83bd48ffffff	           cmp dword [rbp - 0xb8], 0x17 	       722	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x706	     0xf850f010000	                           jne 0x400085b	       722	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x70c	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       722	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x713	     0xf8502010000	                           jne 0x400085b	       722	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x719	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       722	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x720	            0x8b00	                    mov eax, dword [rax]	       722	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x722	            0x85c0	                           test eax, eax	       722	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x724	     0xf85f1000000	                           jne 0x400085b	       722	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x72a	    0xc7854cffffff	               mov dword [rbp - 0xb4], 1	       724	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x734	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       725	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x738	        0x488945c0	             mov qword [rbp - 0x40], rax	       725	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x73c	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       726	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x744	    0x8b0500000000	            mov eax, dword [0x0400078a] 	       727	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x74a	          0x83c001	                              add eax, 1	       727	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x74d	    0x890500000000	            mov dword [0x04000793], eax 	       727	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x753	    0x8b0500000000	            mov eax, dword [0x04000799] 	       728	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x759	          0x83c001	                              add eax, 1	       728	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x75c	    0x890500000000	            mov dword [0x040007a2], eax 	       728	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x762	      0xe800000000	                          call 0x40007a7	       729	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_21
0x767	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       729	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_21
0x76d	    0x488b05000000	            mov rax, qword [0x040007b4] 	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x774	           0xfb600	                   movzx eax, byte [rax]	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x777	            0x84c0	                             test al, al	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x779	            0x746a	                            je 0x4000825	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x77b	    0x8b0500000000	            mov eax, dword [0x040007c1] 	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x781	            0x85c0	                           test eax, eax	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x783	            0x7514	                           jne 0x40007d9	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x785	    0x8b0500000000	            mov eax, dword [0x040007cb] 	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x78b	            0x85c0	                           test eax, eax	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x78d	            0x7556	                           jne 0x4000825	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x78f	    0x8b0500000000	            mov eax, dword [0x040007d5] 	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x795	            0x85c0	                           test eax, eax	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x797	            0x744c	                            je 0x4000825	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x799	    0x8b0500000000	            mov eax, dword [0x040007df] 	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x79f	            0x85c0	                           test eax, eax	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7a1	            0x7542	                           jne 0x4000825	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7a3	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7aa	            0x7839	                            js 0x4000825	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7ac	    0x81bd48ffffff	           cmp dword [rbp - 0xb8], 0xff 	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7b6	            0x7f1a	                            jg 0x4000812	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7b8	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7be	            0x4898	                                    cdqe	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7c0	     0xfb680000000	                   movzx eax, byte [rax]	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7c7	           0xfb6c0	                           movzx eax, al	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7ca	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7d0	            0xeb13	                           jmp 0x4000825	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7d2	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7d8	            0x89c7	                            mov edi, eax	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7da	      0xe800000000	                          call 0x400081f	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7df	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       730	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_22
0x7e5	    0x8b0500000000	            mov eax, dword [0x0400082b] 	       731	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x7eb	          0x83e801	                              sub eax, 1	       731	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x7ee	    0x890500000000	            mov dword [0x04000834], eax 	       731	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x7f4	    0x8b0500000000	            mov eax, dword [0x0400083a] 	       732	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x7fa	          0x83e801	                              sub eax, 1	       732	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x7fd	    0x890500000000	            mov dword [0x04000843], eax 	       732	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x803	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       734	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_23
0x809	            0x89c7	                            mov edi, eax	       734	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_23
0x80b	      0xe800000000	                          call 0x4000850	       734	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_23
0x810	     0x98550ffffff	              or dword [rbp - 0xb0], eax	       734	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16	CALL_23
0x816	      0xe9c9fcffff	                           jmp 0x4000524	       736	normal.c	FUNCTION_4	ELSE_1	IF_10	IF_16
0x81b	    0x81bd48ffffff	     cmp dword [rbp - 0xb8], 0xffff9f03 	       741	normal.c	FUNCTION_4	ELSE_1	IF_17
0x825	            0x7520	                           jne 0x4000887	       741	normal.c	FUNCTION_4	ELSE_1	IF_17
0x827	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       745	normal.c	FUNCTION_4	ELSE_1	IF_17
0x82b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       745	normal.c	FUNCTION_4	ELSE_1	IF_17
0x832	        0x48895070	             mov qword [rax + 0x70], rdx	       745	normal.c	FUNCTION_4	ELSE_1	IF_17
0x836	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       746	normal.c	FUNCTION_4	ELSE_1	IF_17
0x83a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       746	normal.c	FUNCTION_4	ELSE_1	IF_17
0x841	        0x48895078	             mov qword [rax + 0x78], rdx	       746	normal.c	FUNCTION_4	ELSE_1	IF_17
0x845	            0xeb2c	                           jmp 0x40008b3	       746	normal.c	FUNCTION_4	ELSE_1	IF_17
0x847	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       750	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18
0x84b	          0x4885c0	                           test rax, rax	       750	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18
0x84e	            0x7423	                            je 0x40008b3	       750	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18
0x850	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       761	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	IF_19
0x854	          0x4885c0	                           test rax, rax	       761	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	IF_19
0x857	            0x7412	                            je 0x40008ab	       761	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	IF_19
0x859	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       762	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	IF_19
0x85d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       762	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	IF_19
0x861	        0x480fafc2	                           imul rax, rdx	       762	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	IF_19
0x865	        0x488945c8	             mov qword [rbp - 0x38], rax	       762	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	IF_19
0x869	            0xeb08	                           jmp 0x40008b3	       762	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	IF_19
0x86b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       764	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	ELSE_5
0x86f	        0x488945c8	             mov qword [rbp - 0x38], rax	       764	normal.c	FUNCTION_4	ELSE_1	ELSE_4	IF_18	ELSE_5
0x873	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       773	normal.c	FUNCTION_4	ELSE_1
0x877	        0x488945c0	             mov qword [rbp - 0x40], rax	       773	normal.c	FUNCTION_4	ELSE_1
0x87b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       774	normal.c	FUNCTION_4	ELSE_1
0x87f	          0x4885c0	                           test rax, rax	       774	normal.c	FUNCTION_4	ELSE_1
0x882	            0x7406	                            je 0x40008ca	       774	normal.c	FUNCTION_4	ELSE_1
0x884	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       774	normal.c	FUNCTION_4	ELSE_1
0x888	            0xeb05	                           jmp 0x40008cf	       774	normal.c	FUNCTION_4	ELSE_1
0x88a	      0xb801000000	                              mov eax, 1	       774	normal.c	FUNCTION_4	ELSE_1
0x88f	        0x488945d0	             mov qword [rbp - 0x30], rax	       774	normal.c	FUNCTION_4	ELSE_1
0x893	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	       781	normal.c	FUNCTION_4	ELSE_1	IF_20	CALL_24
0x89a	            0x7422	                            je 0x40008fe	       781	normal.c	FUNCTION_4	ELSE_1	IF_20	CALL_24
0x89c	      0xe800000000	                          call 0x40008e1	       781	normal.c	FUNCTION_4	ELSE_1	IF_20	CALL_24
0x8a1	            0x85c0	                           test eax, eax	       781	normal.c	FUNCTION_4	ELSE_1	IF_20	CALL_24
0x8a3	            0x7419	                            je 0x40008fe	       781	normal.c	FUNCTION_4	ELSE_1	IF_20	CALL_24
0x8a5	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	       782	normal.c	FUNCTION_4	ELSE_1	CALL_25
0x8ab	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       782	normal.c	FUNCTION_4	ELSE_1	CALL_25
0x8af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       782	normal.c	FUNCTION_4	ELSE_1	CALL_25
0x8b3	          0x4889ce	                            mov rsi, rcx	       782	normal.c	FUNCTION_4	ELSE_1	CALL_25
0x8b6	          0x4889c7	                            mov rdi, rax	       782	normal.c	FUNCTION_4	ELSE_1	CALL_25
0x8b9	      0xe800000000	                          call 0x40008fe	       782	normal.c	FUNCTION_4	ELSE_1	CALL_25
0x8be	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       789	normal.c	FUNCTION_4	ELSE_1	IF_21
0x8c5	            0x7412	                            je 0x4000919	       789	normal.c	FUNCTION_4	ELSE_1	IF_21
0x8c7	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       791	normal.c	FUNCTION_4	ELSE_1	IF_21
0x8cd	          0x8945b0	             mov dword [rbp - 0x50], eax	       791	normal.c	FUNCTION_4	ELSE_1	IF_21
0x8d0	    0xc745ac170000	           mov dword [rbp - 0x54], 0x17 	       792	normal.c	FUNCTION_4	ELSE_1	IF_21
0x8d7	            0xeb09	                           jmp 0x4000922	       792	normal.c	FUNCTION_4	ELSE_1	IF_21
0x8d9	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       795	normal.c	FUNCTION_4	ELSE_1	ELSE_6
0x8df	          0x8945ac	             mov dword [rbp - 0x54], eax	       795	normal.c	FUNCTION_4	ELSE_1	ELSE_6
0x8e2	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       796	normal.c	FUNCTION_4	ELSE_1	CALL_26
0x8e5	            0x89c7	                            mov edi, eax	       796	normal.c	FUNCTION_4	ELSE_1	CALL_26
0x8e7	      0xe81cf8ffff	                   call sym.find_command	       796	normal.c	FUNCTION_4	ELSE_1	CALL_26
0x8ec	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       796	normal.c	FUNCTION_4	ELSE_1	CALL_26
0x8f2	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	       797	normal.c	FUNCTION_4	ELSE_1	IF_22
0x8f9	            0x7914	                           jns 0x400094f	       797	normal.c	FUNCTION_4	ELSE_1	IF_22
0x8fb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       800	normal.c	FUNCTION_4	ELSE_1	IF_22	CALL_27
0x902	          0x4889c7	                            mov rdi, rax	       800	normal.c	FUNCTION_4	ELSE_1	IF_22	CALL_27
0x905	      0xe8de500000	                    call sym.clearopbeep	       800	normal.c	FUNCTION_4	ELSE_1	IF_22	CALL_27
0x90a	      0xe9f80e0000	                           jmp 0x4001847	       801	normal.c	FUNCTION_4	ELSE_1	IF_22
0x90f	      0xe800000000	                          call 0x4000954	       804	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x914	            0x85c0	                           test eax, eax	       804	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x916	            0x7444	                            je 0x400099c	       804	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x918	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       804	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x91e	          0x4863d0	                         movsxd rdx, eax	       804	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x921	          0x4889d0	                            mov rax, rdx	       804	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x924	          0x4801c0	                            add rax, rax	       804	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x927	          0x4801d0	                            add rax, rdx	       804	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x92a	        0x48c1e003	                              shl rax, 3	       804	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x92e	    0x480500000000	                              add rax, 0	       804	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x934	           0xfb700	                   movzx eax, word [rax]	       804	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x937	           0xfb7c0	                           movzx eax, ax	       804	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x93a	      0x2500020000	                          and eax, 0x200	       804	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x93f	            0x85c0	                           test eax, eax	       804	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x941	            0x7419	                            je 0x400099c	       804	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_28
0x943	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       807	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_29
0x94a	          0x4889c7	                            mov rdi, rax	       807	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_29
0x94d	      0xe896500000	                    call sym.clearopbeep	       807	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_29
0x952	      0xe800000000	                          call 0x4000997	       808	normal.c	FUNCTION_4	ELSE_1	IF_23	CALL_30
0x957	      0xe9ab0e0000	                           jmp 0x4001847	       809	normal.c	FUNCTION_4	ELSE_1	IF_23
0x95c	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       812	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x962	          0x4863d0	                         movsxd rdx, eax	       812	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x965	          0x4889d0	                            mov rax, rdx	       812	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x968	          0x4801c0	                            add rax, rax	       812	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x96b	          0x4801d0	                            add rax, rdx	       812	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x96e	        0x48c1e003	                              shl rax, 3	       812	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x972	    0x480500000000	                              add rax, 0	       812	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x978	           0xfb700	                   movzx eax, word [rax]	       812	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x97b	           0xfb7c0	                           movzx eax, ax	       812	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x97e	      0x2500020000	                          and eax, 0x200	       812	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x983	            0x85c0	                           test eax, eax	       812	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x985	            0x740d	                            je 0x40009d4	       812	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x987	      0xe800000000	                          call 0x40009cc	       812	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x98c	            0x85c0	                           test eax, eax	       812	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x98e	     0xf856f0e0000	                           jne 0x4001843	       812	normal.c	FUNCTION_4	ELSE_1	IF_24	CALL_31
0x994	    0x8b0500000000	            mov eax, dword [0x040009da] 	       819	normal.c	FUNCTION_4	ELSE_1	IF_25
0x99a	            0x85c0	                           test eax, eax	       819	normal.c	FUNCTION_4	ELSE_1	IF_25
0x99c	     0xf8404010000	                            je 0x4000ae6	       819	normal.c	FUNCTION_4	ELSE_1	IF_25
0x9a2	    0x8b0500000000	            mov eax, dword [0x040009e8] 	       822	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9a8	            0x85c0	                           test eax, eax	       822	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9aa	            0x7445	                            je 0x4000a31	       822	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9ac	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       823	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9b2	          0x4863d0	                         movsxd rdx, eax	       823	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9b5	          0x4889d0	                            mov rax, rdx	       823	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9b8	          0x4801c0	                            add rax, rax	       823	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9bb	          0x4801d0	                            add rax, rdx	       823	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9be	        0x48c1e003	                              shl rax, 3	       823	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9c2	    0x480500000000	                              add rax, 0	       823	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9c8	           0xfb700	                   movzx eax, word [rax]	       823	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9cb	           0xfb7c0	                           movzx eax, ax	       823	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9ce	          0x83e040	                           and eax, 0x40	       823	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9d1	            0x85c0	                           test eax, eax	       823	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9d3	            0x741c	                            je 0x4000a31	       823	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9d5	    0x8b0500000000	            mov eax, dword [0x04000a1b] 	       824	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9db	          0x83e002	                              and eax, 2	       824	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9de	            0x85c0	                           test eax, eax	       824	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9e0	            0x750f	                           jne 0x4000a31	       824	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26
0x9e2	      0xe800000000	                          call 0x4000a27	       826	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26	CALL_32
0x9e7	      0xbf14000000	                           mov edi, 0x14	       827	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26	CALL_33
0x9ec	      0xe800000000	                          call 0x4000a31	       827	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_26	CALL_33
0x9f1	    0x8b0500000000	            mov eax, dword [0x04000a37] 	       831	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27
0x9f7	            0x85c0	                           test eax, eax	       831	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27
0x9f9	     0xf84a7000000	                            je 0x4000ae6	       831	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27
0x9ff	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       833	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28
0xa05	          0x4863d0	                         movsxd rdx, eax	       833	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28
0xa08	          0x4889d0	                            mov rax, rdx	       833	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28
0xa0b	          0x4801c0	                            add rax, rax	       833	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28
0xa0e	          0x4801d0	                            add rax, rdx	       833	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28
0xa11	        0x48c1e003	                              shl rax, 3	       833	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28
0xa15	    0x480500000000	                              add rax, 0	       833	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28
0xa1b	           0xfb700	                   movzx eax, word [rax]	       833	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28
0xa1e	           0xfb7c0	                           movzx eax, ax	       833	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28
0xa21	          0x83e010	                           and eax, 0x10	       833	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28
0xa24	            0x85c0	                           test eax, eax	       833	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28
0xa26	            0x7439	                            je 0x4000aa1	       833	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28
0xa28	        0x488d45a0	                   lea rax, [rbp - 0x60]	       835	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	CALL_34
0xa2c	          0x4889c7	                            mov rdi, rax	       835	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	CALL_34
0xa2f	      0xe8d44f0000	                call sym.unshift_special	       835	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	CALL_34
0xa34	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       836	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	CALL_35
0xa37	            0x89c7	                            mov edi, eax	       836	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	CALL_35
0xa39	      0xe8caf6ffff	                   call sym.find_command	       836	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	CALL_35
0xa3e	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       836	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	CALL_35
0xa44	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	       837	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	IF_29
0xa4b	            0x7959	                           jns 0x4000ae6	       837	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	IF_29
0xa4d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       840	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	IF_29	CALL_36
0xa54	          0x4889c7	                            mov rdi, rax	       840	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	IF_29	CALL_36
0xa57	      0xe88c4f0000	                    call sym.clearopbeep	       840	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	IF_29	CALL_36
0xa5c	      0xe9a60d0000	                           jmp 0x4001847	       841	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	IF_28	IF_29
0xa61	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       844	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa67	          0x4863d0	                         movsxd rdx, eax	       844	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa6a	          0x4889d0	                            mov rax, rdx	       844	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa6d	          0x4801c0	                            add rax, rax	       844	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa70	          0x4801d0	                            add rax, rdx	       844	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa73	        0x48c1e003	                              shl rax, 3	       844	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa77	    0x480500000000	                              add rax, 0	       844	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa7d	           0xfb700	                   movzx eax, word [rax]	       844	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa80	           0xfb7c0	                           movzx eax, ax	       844	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa83	          0x83e020	                           and eax, 0x20	       844	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa86	            0x85c0	                           test eax, eax	       844	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa88	            0x741c	                            je 0x4000ae6	       844	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa8a	    0x8b0500000000	            mov eax, dword [0x04000ad0] 	       845	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa90	          0x83e002	                              and eax, 2	       845	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa93	            0x85c0	                           test eax, eax	       845	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa95	            0x740f	                            je 0x4000ae6	       845	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa97	    0x8b0500000000	            mov eax, dword [0x04000add] 	       847	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xa9d	          0x83e0fd	                     and eax, 0xfffffffd	       847	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xaa0	    0x890500000000	            mov dword [0x04000ae6], eax 	       847	normal.c	FUNCTION_4	ELSE_1	IF_25	IF_27	ELSE_7	IF_30
0xaa6	    0x488b05000000	            mov rax, qword [0x04000aed] 	       853	normal.c	FUNCTION_4	ELSE_1	IF_31
0xaad	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	       853	normal.c	FUNCTION_4	ELSE_1	IF_31
0xab3	            0x85c0	                           test eax, eax	       853	normal.c	FUNCTION_4	ELSE_1	IF_31
0xab5	     0xf8415010000	                            je 0x4000c10	       853	normal.c	FUNCTION_4	ELSE_1	IF_31
0xabb	    0x8b0500000000	            mov eax, dword [0x04000b01] 	       853	normal.c	FUNCTION_4	ELSE_1	IF_31
0xac1	            0x85c0	                           test eax, eax	       853	normal.c	FUNCTION_4	ELSE_1	IF_31
0xac3	     0xf8407010000	                            je 0x4000c10	       853	normal.c	FUNCTION_4	ELSE_1	IF_31
0xac9	    0x8b0500000000	            mov eax, dword [0x04000b0f] 	       853	normal.c	FUNCTION_4	ELSE_1	IF_31
0xacf	            0x85c0	                           test eax, eax	       853	normal.c	FUNCTION_4	ELSE_1	IF_31
0xad1	     0xf85f9000000	                           jne 0x4000c10	       853	normal.c	FUNCTION_4	ELSE_1	IF_31
0xad7	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       854	normal.c	FUNCTION_4	ELSE_1	IF_31
0xadd	          0x4863d0	                         movsxd rdx, eax	       854	normal.c	FUNCTION_4	ELSE_1	IF_31
0xae0	          0x4889d0	                            mov rax, rdx	       854	normal.c	FUNCTION_4	ELSE_1	IF_31
0xae3	          0x4801c0	                            add rax, rax	       854	normal.c	FUNCTION_4	ELSE_1	IF_31
0xae6	          0x4801d0	                            add rax, rdx	       854	normal.c	FUNCTION_4	ELSE_1	IF_31
0xae9	        0x48c1e003	                              shl rax, 3	       854	normal.c	FUNCTION_4	ELSE_1	IF_31
0xaed	    0x480500000000	                              add rax, 0	       854	normal.c	FUNCTION_4	ELSE_1	IF_31
0xaf3	           0xfb700	                   movzx eax, word [rax]	       854	normal.c	FUNCTION_4	ELSE_1	IF_31
0xaf6	           0xfb7c0	                           movzx eax, ax	       854	normal.c	FUNCTION_4	ELSE_1	IF_31
0xaf9	      0x2580000000	                           and eax, 0x80	       854	normal.c	FUNCTION_4	ELSE_1	IF_31
0xafe	            0x85c0	                           test eax, eax	       854	normal.c	FUNCTION_4	ELSE_1	IF_31
0xb00	     0xf84ca000000	                            je 0x4000c10	       854	normal.c	FUNCTION_4	ELSE_1	IF_31
0xb06	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb09	      0x3d03aaffff	                     cmp eax, 0xffffaa03	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb0e	     0xf8492000000	                            je 0x4000be6	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb14	      0x3d03aaffff	                     cmp eax, 0xffffaa03	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb19	            0x7f2a	                            jg 0x4000b85	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb1b	      0x3d9593ffff	                     cmp eax, 0xffff9395	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb20	            0x7472	                            je 0x4000bd4	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb22	      0x3d9593ffff	                     cmp eax, 0xffff9395	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb27	            0x7f0c	                            jg 0x4000b75	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb29	      0x3d958dffff	                     cmp eax, 0xffff8d95	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb2e	            0x7440	                            je 0x4000bb0	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb30	      0xe98b000000	                           jmp 0x4000c00	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb35	      0x3ddb96ffff	                     cmp eax, 0xffff96db	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb3a	            0x743d	                            je 0x4000bb9	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb3c	      0x3d03a9ffff	                     cmp eax, 0xffffa903	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb41	            0x743f	                            je 0x4000bc2	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb43	            0xeb7b	                           jmp 0x4000c00	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb45	          0x83f83e	                           cmp eax, 0x3e	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb48	            0x7465	                            je 0x4000bef	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb4a	          0x83f83e	                           cmp eax, 0x3e	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb4d	            0x7f0e	                            jg 0x4000b9d	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb4f	      0x3dddcbffff	                     cmp eax, 0xffffcbdd	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb54	            0x7447	                            je 0x4000bdd	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb56	          0x83f83c	                           cmp eax, 0x3c	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb59	            0x745d	                            je 0x4000bf8	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb5b	            0xeb63	                           jmp 0x4000c00	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb5d	          0x83f868	                           cmp eax, 0x68	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb60	            0x7429	                            je 0x4000bcb	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb62	          0x83f86c	                           cmp eax, 0x6c	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb65	            0x7559	                           jne 0x4000c00	       859	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb67	    0xc745ac680000	           mov dword [rbp - 0x54], 0x68 	       861	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb6e	            0xeb50	                           jmp 0x4000c00	       861	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb70	    0xc745ac9593ff	      mov dword [rbp - 0x54], 0xffff9395	       862	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb77	            0xeb47	                           jmp 0x4000c00	       862	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb79	    0xc745acddcbff	      mov dword [rbp - 0x54], 0xffffcbdd	       863	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb80	            0xeb3e	                           jmp 0x4000c00	       863	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb82	    0xc745ac03aaff	      mov dword [rbp - 0x54], 0xffffaa03	       864	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb89	            0xeb35	                           jmp 0x4000c00	       864	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb8b	    0xc745ac6c0000	           mov dword [rbp - 0x54], 0x6c 	       865	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb92	            0xeb2c	                           jmp 0x4000c00	       865	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb94	    0xc745ac958dff	      mov dword [rbp - 0x54], 0xffff8d95	       866	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb9b	            0xeb23	                           jmp 0x4000c00	       866	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xb9d	    0xc745acdb96ff	      mov dword [rbp - 0x54], 0xffff96db	       867	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xba4	            0xeb1a	                           jmp 0x4000c00	       867	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xba6	    0xc745ac03a9ff	      mov dword [rbp - 0x54], 0xffffa903	       868	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xbad	            0xeb11	                           jmp 0x4000c00	       868	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xbaf	    0xc745ac3c0000	           mov dword [rbp - 0x54], 0x3c 	       869	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xbb6	            0xeb08	                           jmp 0x4000c00	       869	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xbb8	    0xc745ac3e0000	           mov dword [rbp - 0x54], 0x3e 	       870	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xbbf	              0x90	                                     nop	       870	normal.c	FUNCTION_4	ELSE_1	IF_31	SWITCH_1
0xbc0	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       872	normal.c	FUNCTION_4	ELSE_1	IF_31	CALL_37
0xbc3	            0x89c7	                            mov edi, eax	       872	normal.c	FUNCTION_4	ELSE_1	IF_31	CALL_37
0xbc5	      0xe83ef5ffff	                   call sym.find_command	       872	normal.c	FUNCTION_4	ELSE_1	IF_31	CALL_37
0xbca	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       872	normal.c	FUNCTION_4	ELSE_1	IF_31	CALL_37
0xbd0	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       879	normal.c	FUNCTION_4	ELSE_1	IF_32
0xbd6	          0x4863d0	                         movsxd rdx, eax	       879	normal.c	FUNCTION_4	ELSE_1	IF_32
0xbd9	          0x4889d0	                            mov rax, rdx	       879	normal.c	FUNCTION_4	ELSE_1	IF_32
0xbdc	          0x4801c0	                            add rax, rax	       879	normal.c	FUNCTION_4	ELSE_1	IF_32
0xbdf	          0x4801d0	                            add rax, rdx	       879	normal.c	FUNCTION_4	ELSE_1	IF_32
0xbe2	        0x48c1e003	                              shl rax, 3	       879	normal.c	FUNCTION_4	ELSE_1	IF_32
0xbe6	    0x480500000000	                              add rax, 0	       879	normal.c	FUNCTION_4	ELSE_1	IF_32
0xbec	           0xfb700	                   movzx eax, word [rax]	       879	normal.c	FUNCTION_4	ELSE_1	IF_32
0xbef	           0xfb7c0	                           movzx eax, ax	       879	normal.c	FUNCTION_4	ELSE_1	IF_32
0xbf2	          0x83e001	                              and eax, 1	       879	normal.c	FUNCTION_4	ELSE_1	IF_32
0xbf5	            0x85c0	                           test eax, eax	       879	normal.c	FUNCTION_4	ELSE_1	IF_32
0xbf7	     0xf8499070000	                            je 0x40013d6	       879	normal.c	FUNCTION_4	ELSE_1	IF_32
0xbfd	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc03	          0x4863d0	                         movsxd rdx, eax	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc06	          0x4889d0	                            mov rax, rdx	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc09	          0x4801c0	                            add rax, rax	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc0c	          0x4801d0	                            add rax, rdx	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc0f	        0x48c1e003	                              shl rax, 3	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc13	    0x480500000000	                              add rax, 0	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc19	           0xfb700	                   movzx eax, word [rax]	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc1c	           0xfb7c0	                           movzx eax, ax	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc1f	          0x83e003	                              and eax, 3	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc22	          0x83f803	                              cmp eax, 3	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc25	            0x7511	                           jne 0x4000c78	       880	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc27	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       881	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc2e	            0x8b00	                    mov eax, dword [rax]	       881	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc30	            0x85c0	                           test eax, eax	       881	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc32	     0xf8482000000	                            je 0x4000cfa	       881	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc38	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       882	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc3e	          0x4863d0	                         movsxd rdx, eax	       882	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc41	          0x4889d0	                            mov rax, rdx	       882	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc44	          0x4801c0	                            add rax, rax	       882	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc47	          0x4801d0	                            add rax, rdx	       882	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc4a	        0x48c1e003	                              shl rax, 3	       882	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc4e	    0x480500000000	                              add rax, 0	       882	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc54	           0xfb700	                   movzx eax, word [rax]	       882	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc57	           0xfb7c0	                           movzx eax, ax	       882	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc5a	          0x83e005	                              and eax, 5	       882	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc5d	          0x83f805	                              cmp eax, 5	       882	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc60	            0x7458	                            je 0x4000cfa	       882	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc62	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       883	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc65	          0x83f871	                           cmp eax, 0x71	       883	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc68	            0x7521	                           jne 0x4000ccb	       883	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc6a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       884	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc71	            0x8b00	                    mov eax, dword [rax]	       884	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc73	            0x85c0	                           test eax, eax	       884	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc75	            0x7514	                           jne 0x4000ccb	       884	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc77	    0x8b0500000000	            mov eax, dword [0x04000cbd] 	       885	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc7d	            0x85c0	                           test eax, eax	       885	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc7f	            0x750a	                           jne 0x4000ccb	       885	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc81	    0x8b0500000000	            mov eax, dword [0x04000cc7] 	       886	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc87	            0x85c0	                           test eax, eax	       886	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc89	            0x742f	                            je 0x4000cfa	       886	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc8b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       887	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc8e	          0x83f861	                           cmp eax, 0x61	       887	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc91	            0x740c	                            je 0x4000cdf	       887	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc93	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       887	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc96	          0x83f869	                           cmp eax, 0x69	       887	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc99	     0xf85f7060000	                           jne 0x40013d6	       887	normal.c	FUNCTION_4	ELSE_1	IF_32
0xc9f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       888	normal.c	FUNCTION_4	ELSE_1	IF_32
0xca6	            0x8b00	                    mov eax, dword [rax]	       888	normal.c	FUNCTION_4	ELSE_1	IF_32
0xca8	            0x85c0	                           test eax, eax	       888	normal.c	FUNCTION_4	ELSE_1	IF_32
0xcaa	            0x750e	                           jne 0x4000cfa	       888	normal.c	FUNCTION_4	ELSE_1	IF_32
0xcac	    0x8b0500000000	            mov eax, dword [0x04000cf2] 	       888	normal.c	FUNCTION_4	ELSE_1	IF_32
0xcb2	            0x85c0	                           test eax, eax	       888	normal.c	FUNCTION_4	ELSE_1	IF_32
0xcb4	     0xf84dc060000	                            je 0x40013d6	       888	normal.c	FUNCTION_4	ELSE_1	IF_32
0xcba	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       891	normal.c	FUNCTION_4	ELSE_1	IF_32
0xcc4	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	       892	normal.c	FUNCTION_4	ELSE_1	IF_32
0xcce	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	       893	normal.c	FUNCTION_4	ELSE_1	IF_32
0xcd8	    0x8b0500000000	            mov eax, dword [0x04000d1e] 	       899	normal.c	FUNCTION_4	ELSE_1	IF_32
0xcde	          0x83c001	                              add eax, 1	       899	normal.c	FUNCTION_4	ELSE_1	IF_32
0xce1	    0x890500000000	            mov dword [0x04000d27], eax 	       899	normal.c	FUNCTION_4	ELSE_1	IF_32
0xce7	    0x8b0500000000	            mov eax, dword [0x04000d2d] 	       900	normal.c	FUNCTION_4	ELSE_1	IF_32
0xced	          0x83c001	                              add eax, 1	       900	normal.c	FUNCTION_4	ELSE_1	IF_32
0xcf0	    0x890500000000	            mov dword [0x04000d36], eax 	       900	normal.c	FUNCTION_4	ELSE_1	IF_32
0xcf6	    0xc70500000000	               mov dword [0x04000d40], 1	       904	normal.c	FUNCTION_4	ELSE_1	IF_32
0xd00	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       906	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33
0xd03	          0x83f867	                           cmp eax, 0x67	       906	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33
0xd06	     0xf85dc000000	                           jne 0x4000e28	       906	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33
0xd0c	      0xe800000000	                          call 0x4000d51	       912	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_38
0xd11	          0x8945b0	             mov dword [rbp - 0x50], eax	       912	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_38
0xd14	    0x488b05000000	            mov rax, qword [0x04000d5b] 	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd1b	           0xfb600	                   movzx eax, byte [rax]	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd1e	            0x84c0	                             test al, al	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd20	            0x745a	                            je 0x4000dbc	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd22	    0x8b0500000000	            mov eax, dword [0x04000d68] 	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd28	            0x85c0	                           test eax, eax	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd2a	            0x7514	                           jne 0x4000d80	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd2c	    0x8b0500000000	            mov eax, dword [0x04000d72] 	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd32	            0x85c0	                           test eax, eax	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd34	            0x7546	                           jne 0x4000dbc	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd36	    0x8b0500000000	            mov eax, dword [0x04000d7c] 	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd3c	            0x85c0	                           test eax, eax	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd3e	            0x743c	                            je 0x4000dbc	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd40	    0x8b0500000000	            mov eax, dword [0x04000d86] 	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd46	            0x85c0	                           test eax, eax	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd48	            0x7532	                           jne 0x4000dbc	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd4a	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd4d	            0x85c0	                           test eax, eax	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd4f	            0x782b	                            js 0x4000dbc	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd51	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd54	      0x3dff000000	                           cmp eax, 0xff	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd59	            0x7f14	                            jg 0x4000daf	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd5b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd5e	            0x4898	                                    cdqe	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd60	     0xfb680000000	                   movzx eax, byte [rax]	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd67	           0xfb6c0	                           movzx eax, al	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd6a	          0x8945b0	             mov dword [rbp - 0x50], eax	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd6d	            0xeb0d	                           jmp 0x4000dbc	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd6f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd72	            0x89c7	                            mov edi, eax	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd74	      0xe800000000	                          call 0x4000db9	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd79	          0x8945b0	             mov dword [rbp - 0x50], eax	       913	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_39
0xd7c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       915	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_40
0xd7f	            0x89c7	                            mov edi, eax	       915	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_40
0xd81	      0xe800000000	                          call 0x4000dc6	       915	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_40
0xd86	     0x98550ffffff	              or dword [rbp - 0xb0], eax	       915	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	CALL_40
0xd8c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       917	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0xd8f	          0x83f872	                           cmp eax, 0x72	       917	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0xd92	            0x7418	                            je 0x4000dec	       917	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0xd94	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       917	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0xd97	          0x83f827	                           cmp eax, 0x27	       917	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0xd9a	            0x7410	                            je 0x4000dec	       917	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0xd9c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       917	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0xd9f	          0x83f860	                           cmp eax, 0x60	       917	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0xda2	            0x7408	                            je 0x4000dec	       917	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0xda4	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       918	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0xda7	          0x83f81c	                           cmp eax, 0x1c	       918	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0xdaa	            0x752f	                           jne 0x4000e1b	       918	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0xdac	        0x488d45a0	                   lea rax, [rbp - 0x60]	       920	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0xdb0	        0x4883c01c	                           add rax, 0x1c	       920	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0xdb4	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       920	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34
0xdbb	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       921	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34	IF_35
0xdbe	          0x83f872	                           cmp eax, 0x72	       921	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34	IF_35
0xdc1	            0x740c	                            je 0x4000e0f	       921	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34	IF_35
0xdc3	    0xc7855cffffff	               mov dword [rbp - 0xa4], 1	       922	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34	IF_35
0xdcd	            0xeb3a	                           jmp 0x4000e49	       921	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34	IF_35
0xdcf	    0xc78558ffffff	               mov dword [rbp - 0xa8], 1	       924	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34	ELSE_8
0xdd9	            0xeb2e	                           jmp 0x4000e49	       921	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	IF_34	IF_35
0xddb	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       927	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	ELSE_9
0xde6	            0xeb21	                           jmp 0x4000e49	       927	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_33	ELSE_9
0xde8	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       931	normal.c	FUNCTION_4	ELSE_1	IF_32	ELSE_10	IF_36
0xdeb	          0x83f872	                           cmp eax, 0x72	       931	normal.c	FUNCTION_4	ELSE_1	IF_32	ELSE_10	IF_36
0xdee	            0x750a	                           jne 0x4000e3a	       931	normal.c	FUNCTION_4	ELSE_1	IF_32	ELSE_10	IF_36
0xdf0	    0xc78558ffffff	               mov dword [rbp - 0xa8], 1	       932	normal.c	FUNCTION_4	ELSE_1	IF_32	ELSE_10	IF_36
0xdfa	        0x488d45a0	                   lea rax, [rbp - 0x60]	       933	normal.c	FUNCTION_4	ELSE_1	IF_32	ELSE_10
0xdfe	        0x4883c010	                           add rax, 0x10	       933	normal.c	FUNCTION_4	ELSE_1	IF_32	ELSE_10
0xe02	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       933	normal.c	FUNCTION_4	ELSE_1	IF_32	ELSE_10
0xe09	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe10	            0x7529	                           jne 0x4000e7b	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe12	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe18	          0x4863d0	                         movsxd rdx, eax	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe1b	          0x4889d0	                            mov rax, rdx	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe1e	          0x4801c0	                            add rax, rax	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe21	          0x4801d0	                            add rax, rdx	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe24	        0x48c1e003	                              shl rax, 3	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe28	    0x480500000000	                              add rax, 0	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe2e	           0xfb700	                   movzx eax, word [rax]	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe31	           0xfb7c0	                           movzx eax, ax	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe34	          0x83e008	                              and eax, 8	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe37	            0x85c0	                           test eax, eax	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe39	            0x7407	                            je 0x4000e82	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe3b	      0xb801000000	                              mov eax, 1	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe40	            0xeb05	                           jmp 0x4000e87	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe42	      0xb800000000	                              mov eax, 0	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe47	    0x89856cffffff	             mov dword [rbp - 0x94], eax	       935	normal.c	FUNCTION_4	ELSE_1	IF_32
0xe4d	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       940	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0xe55	     0xf841d050000	                            je 0x40013b8	       940	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0xe5b	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	       943	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_38
0xe62	            0x740f	                            je 0x4000eb3	       943	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_38
0xe64	    0xc70500000000	           mov dword [0x04000eae], 0x50 	       945	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_38
0xe6e	      0xe800000000	                          call 0x4000eb3	       946	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_38	CALL_41
0xe73	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       949	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0xe7a	            0x745b	                            je 0x4000f17	       949	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0xe7c	    0x488b05000000	            mov rax, qword [0x04000ec3] 	       949	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0xe83	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	       949	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0xe8a	        0x4883f801	                              cmp rax, 1	       949	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0xe8e	            0x7547	                           jne 0x4000f17	       949	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0xe90	    0x8b0500000000	            mov eax, dword [0x04000ed6] 	       952	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0xe96	          0x83e801	                              sub eax, 1	       952	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0xe99	    0x890500000000	            mov dword [0x04000edf], eax 	       952	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0xe9f	    0x8b0500000000	            mov eax, dword [0x04000ee5] 	       953	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0xea5	          0x83e801	                              sub eax, 1	       953	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0xea8	    0x890500000000	            mov dword [0x04000eee], eax 	       953	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0xeae	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	       954	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39	IF_40
0xeb5	            0x740c	                            je 0x4000f03	       954	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39	IF_40
0xeb7	    0xc70500000000	           mov dword [0x04000f01], 0x60 	       955	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39	IF_40
0xec1	            0xeb0a	                           jmp 0x4000f0d	       955	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39	IF_40
0xec3	    0xc70500000000	           mov dword [0x04000f0d], 0x20 	       957	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39	ELSE_11
0xecd	    0xc78560ffffff	               mov dword [rbp - 0xa0], 1	       958	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_39
0xed7	    0x8b0500000000	            mov eax, dword [0x04000f1d] 	       961	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0xedd	    0x898570ffffff	             mov dword [rbp - 0x90], eax	       961	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0xee3	    0xc70500000000	               mov dword [0x04000f2d], 0	       962	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0xeed	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       963	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_41
0xef4	            0x741e	                            je 0x4000f54	       963	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_41
0xef6	    0x488b05000000	            mov rax, qword [0x04000f3d] 	       963	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_41
0xefd	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	       963	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_41
0xf04	        0x4883f802	                              cmp rax, 2	       963	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_41
0xf08	            0x750a	                           jne 0x4000f54	       963	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_41
0xf0a	      0xbf01000000	                              mov edi, 1	       964	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_42
0xf0f	      0xe800000000	                          call 0x4000f54	       964	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_42
0xf14	      0xe800000000	                          call 0x4000f59	       967	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_43
0xf19	            0x89c2	                            mov edx, eax	       967	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_43
0xf1b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       967	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_43
0xf22	            0x8910	                    mov dword [rax], edx	       967	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_43
0xf24	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	       969	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_42
0xf2b	            0x7428	                            je 0x4000f95	       969	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_42
0xf2d	    0x8b0500000000	            mov eax, dword [0x04000f73] 	       972	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_42
0xf33	          0x83c001	                              add eax, 1	       972	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_42
0xf36	    0x890500000000	            mov dword [0x04000f7c], eax 	       972	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_42
0xf3c	    0x8b0500000000	            mov eax, dword [0x04000f82] 	       973	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_42
0xf42	          0x83c001	                              add eax, 1	       973	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_42
0xf45	    0x890500000000	            mov dword [0x04000f8b], eax 	       973	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_42
0xf4b	    0xc70500000000	          mov dword [0x04000f95], 0x101 	       974	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_42
0xf55	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       977	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43
0xf5c	            0x7433	                            je 0x4000fd1	       977	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43
0xf5e	    0x488b05000000	            mov rax, qword [0x04000fa5] 	       979	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	IF_44
0xf65	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	       979	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	IF_44
0xf6c	        0x4883f801	                              cmp rax, 1	       979	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	IF_44
0xf70	            0x7415	                            je 0x4000fc7	       979	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	IF_44
0xf72	    0x488b05000000	            mov rax, qword [0x04000fb9] 	       980	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	CALL_44
0xf79	    0x480568120000	                         add rax, 0x1268	       980	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	CALL_44
0xf7f	          0x4889c7	                            mov rdi, rax	       980	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	CALL_44
0xf82	      0xe800000000	                          call 0x4000fc7	       980	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	CALL_44
0xf87	      0xbf00000000	                              mov edi, 0	       981	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	CALL_45
0xf8c	      0xe800000000	                          call 0x4000fd1	       981	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_43	CALL_45
0xf91	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	       983	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0xf97	    0x890500000000	            mov dword [0x04000fdd], eax 	       983	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0xf9d	    0xc70500000000	          mov dword [0x04000fe7], 0x101 	       986	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0xfa7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       989	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_46
0xfae	            0x8b00	                    mov eax, dword [rax]	       989	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_46
0xfb0	            0x89c7	                            mov edi, eax	       989	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_46
0xfb2	      0xe800000000	                          call 0x4000ff7	       989	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_46
0xfb7	     0x98550ffffff	              or dword [rbp - 0xb0], eax	       989	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	CALL_46
0xfbd	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	       992	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45
0xfc4	     0xf85bc010000	                           jne 0x40011c6	       992	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45
0xfca	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       996	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0xfd1	            0x8b00	                    mov eax, dword [rax]	       996	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0xfd3	          0x83f80b	                            cmp eax, 0xb	       996	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0xfd6	     0xf859b000000	                           jne 0x40010b7	       996	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0xfdc	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       997	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0xfe2	          0x4863d0	                         movsxd rdx, eax	       997	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0xfe5	          0x4889d0	                            mov rax, rdx	       997	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0xfe8	          0x4801c0	                            add rax, rax	       997	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0xfeb	          0x4801d0	                            add rax, rdx	       997	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0xfee	        0x48c1e003	                              shl rax, 3	       997	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0xff2	    0x480500000000	                              add rax, 0	       997	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0xff8	           0xfb700	                   movzx eax, word [rax]	       997	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0xffb	           0xfb7c0	                           movzx eax, ax	       997	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0xffe	          0x83e008	                              and eax, 8	       997	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0x1001	            0x85c0	                           test eax, eax	       997	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0x1003	            0x7511	                           jne 0x4001056	       997	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0x1005	        0x488d45a0	                   lea rax, [rbp - 0x60]	       998	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0x1009	        0x4883c01c	                           add rax, 0x1c	       998	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0x100d	    0x48398578ffff	            cmp qword [rbp - 0x88], rax 	       998	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0x1014	            0x7561	                           jne 0x40010b7	       998	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46
0x1016	    0x488b05000000	            mov rax, qword [0x0400105d] 	       999	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_47
0x101d	      0xbe44000000	                           mov esi, 0x44	       999	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_47
0x1022	          0x4889c7	                            mov rdi, rax	       999	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_47
0x1025	      0xe800000000	                          call 0x400106a	       999	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_47
0x102a	          0x4885c0	                           test rax, rax	       999	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_47
0x102d	            0x7548	                           jne 0x40010b7	       999	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_47
0x102f	      0xbf00000000	                              mov edi, 0	      1001	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_48
0x1034	      0xe800000000	                          call 0x4001079	      1001	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_48
0x1039	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1001	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	CALL_48
0x103f	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47
0x1046	            0x7e2f	                           jle 0x40010b7	      1002	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47
0x1048	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1004	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47
0x104f	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      1004	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47
0x1055	            0x8910	                    mov dword [rax], edx	      1004	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47
0x1057	      0xbf03000000	                              mov edi, 3	      1007	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47	CALL_49
0x105c	      0xe8134f0000	               call sym.del_from_showcmd	      1007	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47	CALL_49
0x1061	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1008	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47	CALL_50
0x1068	            0x8b00	                    mov eax, dword [rax]	      1008	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47	CALL_50
0x106a	            0x89c7	                            mov edi, eax	      1008	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47	CALL_50
0x106c	      0xe800000000	                          call 0x40010b1	      1008	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47	CALL_50
0x1071	     0x98550ffffff	              or dword [rbp - 0xb0], eax	      1008	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_46	IF_47	CALL_50
0x1077	    0x488b05000000	            mov rax, qword [0x040010be] 	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x107e	           0xfb600	                   movzx eax, byte [rax]	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x1081	            0x84c0	                             test al, al	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x1083	     0xf848d000000	                            je 0x4001156	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x1089	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x1090	     0xf8580000000	                           jne 0x4001156	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x1096	    0x8b0500000000	            mov eax, dword [0x040010dc] 	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x109c	            0x85c0	                           test eax, eax	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x109e	            0x7514	                           jne 0x40010f4	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10a0	    0x8b0500000000	            mov eax, dword [0x040010e6] 	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10a6	            0x85c0	                           test eax, eax	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10a8	            0x756c	                           jne 0x4001156	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10aa	    0x8b0500000000	            mov eax, dword [0x040010f0] 	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10b0	            0x85c0	                           test eax, eax	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10b2	            0x7462	                            je 0x4001156	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10b4	    0x8b0500000000	            mov eax, dword [0x040010fa] 	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10ba	            0x85c0	                           test eax, eax	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10bc	            0x7558	                           jne 0x4001156	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10be	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10c5	            0x8b00	                    mov eax, dword [rax]	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10c7	            0x85c0	                           test eax, eax	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10c9	            0x784b	                            js 0x4001156	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10cb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10d2	            0x8b00	                    mov eax, dword [rax]	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10d4	      0x3dff000000	                           cmp eax, 0xff	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10d9	            0x7f20	                            jg 0x400113b	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10db	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10e2	            0x8b00	                    mov eax, dword [rax]	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10e4	            0x4898	                                    cdqe	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10e6	     0xfb680000000	                   movzx eax, byte [rax]	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10ed	           0xfb6d0	                           movzx edx, al	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10f0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10f7	            0x8910	                    mov dword [rax], edx	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10f9	            0xeb1b	                           jmp 0x4001156	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x10fb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x1102	            0x8b00	                    mov eax, dword [rax]	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x1104	            0x89c7	                            mov edi, eax	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x1106	      0xe800000000	                          call 0x400114b	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x110b	            0x89c2	                            mov edx, eax	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x110d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x1114	            0x8910	                    mov dword [rax], edx	      1015	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_51
0x1116	    0x8b0500000000	            mov eax, dword [0x0400115c] 	      1018	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x111c	            0x85c0	                           test eax, eax	      1018	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x111e	            0x742e	                            je 0x400118e	      1018	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x1120	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1018	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x1127	            0x7425	                            je 0x400118e	      1018	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x1129	    0x8b0500000000	            mov eax, dword [0x0400116f] 	      1018	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x112f	            0x85c0	                           test eax, eax	      1018	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x1131	            0x741b	                            je 0x400118e	      1018	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_48
0x1133	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1019	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_52
0x113a	            0x8b00	                    mov eax, dword [rax]	      1019	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_52
0x113c	            0x89c7	                            mov edi, eax	      1019	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_52
0x113e	      0xe800000000	                          call 0x4001183	      1019	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_52
0x1143	            0x89c2	                            mov edx, eax	      1019	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_52
0x1145	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1019	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_52
0x114c	            0x8910	                    mov dword [rax], edx	      1019	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_52
0x114e	    0x8b0500000000	            mov eax, dword [0x04001194] 	      1022	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_49
0x1154	            0x85c0	                           test eax, eax	      1022	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_49
0x1156	            0x742e	                            je 0x40011c6	      1022	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_49
0x1158	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1022	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_49
0x115f	            0x7425	                            je 0x40011c6	      1022	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_49
0x1161	    0x8b0500000000	            mov eax, dword [0x040011a7] 	      1022	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_49
0x1167	            0x85c0	                           test eax, eax	      1022	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_49
0x1169	            0x741b	                            je 0x40011c6	      1022	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	IF_49
0x116b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1023	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_53
0x1172	            0x8b00	                    mov eax, dword [rax]	      1023	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_53
0x1174	            0x89c7	                            mov edi, eax	      1023	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_53
0x1176	      0xe800000000	                          call 0x40011bb	      1023	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_53
0x117b	            0x89c2	                            mov edx, eax	      1023	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_53
0x117d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1023	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_53
0x1184	            0x8910	                    mov dword [rax], edx	      1023	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_45	CALL_53
0x1186	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1032	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x118a	        0x4883c01c	                           add rax, 0x1c	      1032	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x118e	    0x48398578ffff	            cmp qword [rbp - 0x88], rax 	      1032	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x1195	            0x753a	                           jne 0x4001211	      1032	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x1197	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1033	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x119a	          0x83f81c	                           cmp eax, 0x1c	      1033	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x119d	            0x7532	                           jne 0x4001211	      1033	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x119f	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1034	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x11a2	          0x83f80e	                            cmp eax, 0xe	      1034	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x11a5	            0x7408	                            je 0x40011ef	      1034	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x11a7	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1034	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x11aa	          0x83f807	                              cmp eax, 7	      1034	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x11ad	            0x7522	                           jne 0x4001211	      1034	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x11af	    0xc745ac1c0000	           mov dword [rbp - 0x54], 0x1c 	      1036	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x11b6	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1037	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x11b9	          0x8945b0	             mov dword [rbp - 0x50], eax	      1037	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50
0x11bc	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1038	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50	CALL_54
0x11bf	            0x89c7	                            mov edi, eax	      1038	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50	CALL_54
0x11c1	      0xe842efffff	                   call sym.find_command	      1038	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50	CALL_54
0x11c6	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      1038	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50	CALL_54
0x11cc	      0xe9f8000000	                           jmp 0x4001309	      1038	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	IF_50	CALL_54
0x11d1	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1040	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x11d4	          0x83f86e	                           cmp eax, 0x6e	      1040	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x11d7	            0x7408	                            je 0x4001221	      1040	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x11d9	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1040	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x11dc	          0x83f84e	                           cmp eax, 0x4e	      1040	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x11df	            0x7528	                           jne 0x4001249	      1040	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x11e1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1040	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x11e4	          0x83f867	                           cmp eax, 0x67	      1040	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x11e7	            0x7520	                           jne 0x4001249	      1040	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x11e9	        0x488b5da0	             mov rbx, qword [rbp - 0x60]	      1041	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x11ed	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1041	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x11f4	            0x8b00	                    mov eax, dword [rax]	      1041	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x11f6	      0xbe00000000	                              mov esi, 0	      1041	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x11fb	            0x89c7	                            mov edi, eax	      1041	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x11fd	      0xe800000000	                          call 0x4001242	      1041	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x1202	            0x8903	                    mov dword [rbx], eax	      1041	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x1204	      0xe9c0000000	                           jmp 0x4001309	      1041	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_12	IF_51
0x1209	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1042	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x1210	            0x8b00	                    mov eax, dword [rax]	      1042	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x1212	          0x83f81c	                           cmp eax, 0x1c	      1042	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x1215	     0xf85ae000000	                           jne 0x4001309	      1042	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x121b	    0x488b05000000	            mov rax, qword [0x04001262] 	      1044	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x1222	          0x4885c0	                           test rax, rax	      1044	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x1225	            0x7809	                            js 0x4001270	      1044	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x1227	    0x488b05000000	            mov rax, qword [0x0400126e] 	      1044	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x122e	            0xeb07	                           jmp 0x4001277	      1044	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x1230	    0x488b05000000	            mov rax, qword [0x04001277] 	      1044	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x1237	        0x48894580	             mov qword [rbp - 0x80], rax	      1044	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52
0x123b	            0xeb1c	                           jmp 0x4001299	      1048	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_56
0x123d	      0xb832000000	                           mov eax, 0x32	      1050	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_57
0x1242	      0x48837d8032	           cmp qword [rbp - 0x80], 0x32 	      1050	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_57
0x1247	      0x480f4e4580	          cmovle rax, qword [rbp - 0x80]	      1050	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_57
0x124c	          0x4889c7	                            mov rdi, rax	      1050	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_57
0x124f	      0xe800000000	                          call 0x4001294	      1050	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_57
0x1254	      0x48836d8032	           sub qword [rbp - 0x80], 0x32 	      1051	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2
0x1259	      0xe800000000	                          call 0x400129e	      1048	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_56
0x125e	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1048	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_56
0x1264	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	      1048	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_56
0x126b	            0x7f07	                            jg 0x40012b4	      1048	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_56
0x126d	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      1048	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_56
0x1272	            0x7fc9	                            jg 0x400127d	      1048	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	WHILE_2	CALL_56
0x1274	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	      1053	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53
0x127b	            0x7e4c	                           jle 0x4001309	      1053	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53
0x127d	      0xe800000000	                          call 0x40012c2	      1055	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	CALL_58
0x1282	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1055	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	CALL_58
0x1288	    0x83bd48ffffff	            cmp dword [rbp - 0xb8], 0xe 	      1056	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	IF_54
0x128f	            0x7418	                            je 0x40012e9	      1056	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	IF_54
0x1291	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 7	      1056	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	IF_54
0x1298	            0x740f	                            je 0x40012e9	      1056	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	IF_54
0x129a	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      1057	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	CALL_59
0x12a0	            0x89c7	                            mov edi, eax	      1057	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	CALL_59
0x12a2	      0xe800000000	                          call 0x40012e7	      1057	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	CALL_59
0x12a7	            0xeb20	                           jmp 0x4001309	      1057	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	CALL_59
0x12a9	    0xc745ac1c0000	           mov dword [rbp - 0x54], 0x1c 	      1060	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	ELSE_14
0x12b0	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      1061	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	ELSE_14
0x12b6	          0x8945b0	             mov dword [rbp - 0x50], eax	      1061	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	ELSE_14
0x12b9	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1062	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	ELSE_14	CALL_60
0x12bc	            0x89c7	                            mov edi, eax	      1062	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	ELSE_14	CALL_60
0x12be	      0xe845eeffff	                   call sym.find_command	      1062	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	ELSE_14	CALL_60
0x12c3	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      1062	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	ELSE_13	IF_52	IF_53	ELSE_14	CALL_60
0x12c9	    0x8b0500000000	            mov eax, dword [0x0400130f] 	      1073	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x12cf	          0x83e801	                              sub eax, 1	      1073	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x12d2	    0x890500000000	            mov dword [0x04001318], eax 	      1073	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x12d8	            0xeb46	                           jmp 0x4001360	      1074	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x12da	      0xe800000000	                          call 0x400131f	      1077	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_64
0x12df	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1077	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_64
0x12e5	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      1078	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55	CALL_65
0x12eb	            0x89c7	                            mov edi, eax	      1078	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55	CALL_65
0x12ed	      0xe800000000	                          call 0x4001332	      1078	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55	CALL_65
0x12f2	            0x85c0	                           test eax, eax	      1078	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55	CALL_65
0x12f4	            0x750f	                           jne 0x4001345	      1078	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55	CALL_65
0x12f6	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      1080	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55	CALL_66
0x12fc	            0x89c7	                            mov edi, eax	      1080	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55	CALL_66
0x12fe	      0xe800000000	                          call 0x4001343	      1080	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55	CALL_66
0x1303	            0xeb64	                           jmp 0x40013a9	      1081	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	IF_55
0x1305	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1083	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	ELSE_15	IF_56
0x1308	            0x85c0	                           test eax, eax	      1083	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	ELSE_15	IF_56
0x130a	            0x750b	                           jne 0x4001357	      1083	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	ELSE_15	IF_56
0x130c	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      1084	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	ELSE_15	IF_56
0x1312	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1084	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	ELSE_15	IF_56
0x1315	            0xeb09	                           jmp 0x4001360	      1084	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	ELSE_15	IF_56
0x1317	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      1086	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	ELSE_16
0x131d	          0x8945b8	             mov dword [rbp - 0x48], eax	      1086	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	ELSE_16
0x1320	    0x8b0500000000	            mov eax, dword [0x04001366] 	      1074	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x1326	            0x85c0	                           test eax, eax	      1074	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x1328	            0x743f	                            je 0x40013a9	      1074	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x132a	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1074	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x1331	            0x7436	                            je 0x40013a9	      1074	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x1333	      0xe800000000	                          call 0x4001378	      1074	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x1338	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1074	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x133e	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	      1074	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x1345	            0x7e22	                           jle 0x40013a9	      1074	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_61
0x1347	    0x81bd48ffffff	           cmp dword [rbp - 0xb8], 0xff 	      1075	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_63
0x1351	            0x7f87	                            jg 0x400131a	      1075	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_63
0x1353	      0xe800000000	                          call 0x4001398	      1075	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_63
0x1358	            0x4898	                                    cdqe	      1075	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_63
0x135a	     0xfb680000000	                   movzx eax, byte [rax]	      1075	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_63
0x1361	            0x3c01	                               cmp al, 1	      1075	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_63
0x1363	     0xf8f71ffffff	                            jg 0x400131a	      1075	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37	WHILE_3	CALL_63
0x1369	    0x8b0500000000	            mov eax, dword [0x040013af] 	      1088	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x136f	          0x83c001	                              add eax, 1	      1088	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x1372	    0x890500000000	            mov dword [0x040013b8], eax 	      1088	normal.c	FUNCTION_4	ELSE_1	IF_32	IF_37
0x1378	    0x8b0500000000	            mov eax, dword [0x040013be] 	      1091	normal.c	FUNCTION_4	ELSE_1	IF_32
0x137e	          0x83e801	                              sub eax, 1	      1091	normal.c	FUNCTION_4	ELSE_1	IF_32
0x1381	    0x890500000000	            mov dword [0x040013c7], eax 	      1091	normal.c	FUNCTION_4	ELSE_1	IF_32
0x1387	    0x8b0500000000	            mov eax, dword [0x040013cd] 	      1092	normal.c	FUNCTION_4	ELSE_1	IF_32
0x138d	          0x83e801	                              sub eax, 1	      1092	normal.c	FUNCTION_4	ELSE_1	IF_32
0x1390	    0x890500000000	            mov dword [0x040013d6], eax 	      1092	normal.c	FUNCTION_4	ELSE_1	IF_32
0x1396	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	      1102	normal.c	FUNCTION_4	ELSE_1	IF_57
0x139d	            0x7405	                            je 0x40013e4	      1102	normal.c	FUNCTION_4	ELSE_1	IF_57
0x139f	      0xe800000000	                          call 0x40013e4	      1103	normal.c	FUNCTION_4	ELSE_1	CALL_67
0x13a4	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1106	normal.c	FUNCTION_4	ELSE_1	IF_58
0x13a7	      0x3d03caffff	                     cmp eax, 0xffffca03	      1106	normal.c	FUNCTION_4	ELSE_1	IF_58
0x13ac	            0x740a	                            je 0x40013f8	      1106	normal.c	FUNCTION_4	ELSE_1	IF_58
0x13ae	    0xc70500000000	               mov dword [0x040013f8], 0	      1107	normal.c	FUNCTION_4	ELSE_1	IF_58
0x13b8	    0xc70500000000	               mov dword [0x04001402], 1	      1110	normal.c	FUNCTION_4	ELSE_1
0x13c2	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1112	normal.c	FUNCTION_4	ELSE_1	IF_59
0x13c5	          0x83f81b	                           cmp eax, 0x1b	      1112	normal.c	FUNCTION_4	ELSE_1	IF_59
0x13c8	            0x7539	                           jne 0x4001443	      1112	normal.c	FUNCTION_4	ELSE_1	IF_59
0x13ca	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1114	normal.c	FUNCTION_4	ELSE_1	IF_59	CALL_68
0x13d1	          0x4889c7	                            mov rdi, rax	      1114	normal.c	FUNCTION_4	ELSE_1	IF_59	CALL_68
0x13d4	      0xe8d9450000	                        call sym.clearop	      1114	normal.c	FUNCTION_4	ELSE_1	IF_59	CALL_68
0x13d9	    0x8b0500000000	            mov eax, dword [0x0400141f] 	      1115	normal.c	FUNCTION_4	ELSE_1	IF_59	IF_60	CALL_69
0x13df	            0x85c0	                           test eax, eax	      1115	normal.c	FUNCTION_4	ELSE_1	IF_59	IF_60	CALL_69
0x13e1	     0xf851f040000	                           jne 0x4001846	      1115	normal.c	FUNCTION_4	ELSE_1	IF_59	IF_60	CALL_69
0x13e7	      0xe800000000	                          call 0x400142c	      1115	normal.c	FUNCTION_4	ELSE_1	IF_59	IF_60	CALL_69
0x13ec	            0x85c0	                           test eax, eax	      1115	normal.c	FUNCTION_4	ELSE_1	IF_59	IF_60	CALL_69
0x13ee	     0xf8412040000	                            je 0x4001846	      1115	normal.c	FUNCTION_4	ELSE_1	IF_59	IF_60	CALL_69
0x13f4	    0xc70500000000	           mov dword [0x0400143e], 0x61 	      1116	normal.c	FUNCTION_4	ELSE_1	IF_59	IF_60
0x13fe	      0xe903040000	                           jmp 0x4001846	      1117	normal.c	FUNCTION_4	ELSE_1	IF_59
0x1403	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1120	normal.c	FUNCTION_4	ELSE_1	IF_61
0x1406	      0x3d03caffff	                     cmp eax, 0xffffca03	      1120	normal.c	FUNCTION_4	ELSE_1	IF_61
0x140b	            0x7414	                            je 0x4001461	      1120	normal.c	FUNCTION_4	ELSE_1	IF_61
0x140d	    0xc70500000000	               mov dword [0x04001457], 0	      1122	normal.c	FUNCTION_4	ELSE_1	IF_61
0x1417	    0xc70500000000	               mov dword [0x04001461], 0	      1123	normal.c	FUNCTION_4	ELSE_1	IF_61
0x1421	    0x488b05000000	            mov rax, qword [0x04001468] 	      1126	normal.c	FUNCTION_4	ELSE_1
0x1428	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1126	normal.c	FUNCTION_4	ELSE_1
0x142c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1126	normal.c	FUNCTION_4	ELSE_1
0x1430	        0x48894590	             mov qword [rbp - 0x70], rax	      1126	normal.c	FUNCTION_4	ELSE_1
0x1434	        0x48895598	             mov qword [rbp - 0x68], rdx	      1126	normal.c	FUNCTION_4	ELSE_1
0x1438	    0x8b0500000000	            mov eax, dword [0x0400147e] 	      1130	normal.c	FUNCTION_4	ELSE_1	IF_62
0x143e	            0x85c0	                           test eax, eax	      1130	normal.c	FUNCTION_4	ELSE_1	IF_62
0x1440	     0xf85a4000000	                           jne 0x400152a	      1130	normal.c	FUNCTION_4	ELSE_1	IF_62
0x1446	    0x8b0500000000	            mov eax, dword [0x0400148c] 	      1130	normal.c	FUNCTION_4	ELSE_1	IF_62
0x144c	            0x85c0	                           test eax, eax	      1130	normal.c	FUNCTION_4	ELSE_1	IF_62
0x144e	     0xf8496000000	                            je 0x400152a	      1130	normal.c	FUNCTION_4	ELSE_1	IF_62
0x1454	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      1132	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x145a	          0x4863d0	                         movsxd rdx, eax	      1132	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x145d	          0x4889d0	                            mov rax, rdx	      1132	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x1460	          0x4801c0	                            add rax, rax	      1132	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x1463	          0x4801d0	                            add rax, rdx	      1132	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x1466	        0x48c1e003	                              shl rax, 3	      1132	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x146a	    0x480500000000	                              add rax, 0	      1132	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x1470	           0xfb700	                   movzx eax, word [rax]	      1132	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x1473	           0xfb7c0	                           movzx eax, ax	      1132	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x1476	          0x83e010	                           and eax, 0x10	      1132	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x1479	            0x85c0	                           test eax, eax	      1132	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x147b	            0x7423	                            je 0x40014e0	      1132	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63
0x147d	      0xe800000000	                          call 0x40014c2	      1134	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_70
0x1482	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1135	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_71
0x1486	          0x4889c7	                            mov rdi, rax	      1135	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_71
0x1489	      0xe87a450000	                call sym.unshift_special	      1135	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_71
0x148e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1136	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_72
0x1491	            0x89c7	                            mov edi, eax	      1136	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_72
0x1493	      0xe870ecffff	                   call sym.find_command	      1136	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_72
0x1498	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      1136	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_72
0x149e	            0xeb4a	                           jmp 0x400152a	      1136	normal.c	FUNCTION_4	ELSE_1	IF_62	IF_63	CALL_72
0x14a0	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      1138	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14a6	          0x4863d0	                         movsxd rdx, eax	      1138	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14a9	          0x4889d0	                            mov rax, rdx	      1138	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14ac	          0x4801c0	                            add rax, rax	      1138	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14af	          0x4801d0	                            add rax, rdx	      1138	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14b2	        0x48c1e003	                              shl rax, 3	      1138	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14b6	    0x480500000000	                              add rax, 0	      1138	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14bc	           0xfb700	                   movzx eax, word [rax]	      1138	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14bf	           0xfb7c0	                           movzx eax, ax	      1138	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14c2	          0x83e020	                           and eax, 0x20	      1138	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14c5	            0x85c0	                           test eax, eax	      1138	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14c7	            0x7421	                            je 0x400152a	      1138	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14c9	    0x8b0500000000	            mov eax, dword [0x0400150f] 	      1139	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14cf	          0x83e002	                              and eax, 2	      1139	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14d2	            0x85c0	                           test eax, eax	      1139	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14d4	            0x7414	                            je 0x400152a	      1139	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14d6	      0xe800000000	                          call 0x400151b	      1141	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64	CALL_73
0x14db	    0x8b0500000000	            mov eax, dword [0x04001521] 	      1142	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14e1	          0x83e0fd	                     and eax, 0xfffffffd	      1142	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14e4	    0x890500000000	            mov dword [0x0400152a], eax 	      1142	normal.c	FUNCTION_4	ELSE_1	IF_62	ELSE_17	IF_64
0x14ea	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      1150	normal.c	FUNCTION_4	ELSE_1
0x14f0	          0x4863d0	                         movsxd rdx, eax	      1150	normal.c	FUNCTION_4	ELSE_1
0x14f3	          0x4889d0	                            mov rax, rdx	      1150	normal.c	FUNCTION_4	ELSE_1
0x14f6	          0x4801c0	                            add rax, rax	      1150	normal.c	FUNCTION_4	ELSE_1
0x14f9	          0x4801d0	                            add rax, rdx	      1150	normal.c	FUNCTION_4	ELSE_1
0x14fc	        0x48c1e003	                              shl rax, 3	      1150	normal.c	FUNCTION_4	ELSE_1
0x1500	    0x480500000000	                              add rax, 0	      1150	normal.c	FUNCTION_4	ELSE_1
0x1506	           0xfb700	                   movzx eax, word [rax]	      1150	normal.c	FUNCTION_4	ELSE_1
0x1509	              0x98	                                    cwde	      1150	normal.c	FUNCTION_4	ELSE_1
0x150a	          0x8945d8	             mov dword [rbp - 0x28], eax	      1150	normal.c	FUNCTION_4	ELSE_1
0x150d	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      1151	normal.c	FUNCTION_4	ELSE_1
0x1513	          0x4863d0	                         movsxd rdx, eax	      1151	normal.c	FUNCTION_4	ELSE_1
0x1516	          0x4889d0	                            mov rax, rdx	      1151	normal.c	FUNCTION_4	ELSE_1
0x1519	          0x4801c0	                            add rax, rax	      1151	normal.c	FUNCTION_4	ELSE_1
0x151c	          0x4801d0	                            add rax, rdx	      1151	normal.c	FUNCTION_4	ELSE_1
0x151f	        0x48c1e003	                              shl rax, 3	      1151	normal.c	FUNCTION_4	ELSE_1
0x1523	    0x480500000000	                              add rax, 0	      1151	normal.c	FUNCTION_4	ELSE_1
0x1529	          0x488b00	                    mov rax, qword [rax]	      1151	normal.c	FUNCTION_4	ELSE_1
0x152c	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      1151	normal.c	FUNCTION_4	ELSE_1
0x1530	          0x4889d7	                            mov rdi, rdx	      1151	normal.c	FUNCTION_4	ELSE_1
0x1533	            0xffd0	                                call rax	      1151	normal.c	FUNCTION_4	ELSE_1
0x1535	    0x8b0500000000	            mov eax, dword [0x0400157b] 	      1157	normal.c	FUNCTION_4	ELSE_1	IF_65
0x153b	            0x85c0	                           test eax, eax	      1157	normal.c	FUNCTION_4	ELSE_1	IF_65
0x153d	            0x7576	                           jne 0x40015f5	      1157	normal.c	FUNCTION_4	ELSE_1	IF_65
0x153f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1158	normal.c	FUNCTION_4	ELSE_1	IF_65
0x1546	            0x8b00	                    mov eax, dword [rax]	      1158	normal.c	FUNCTION_4	ELSE_1	IF_65
0x1548	            0x85c0	                           test eax, eax	      1158	normal.c	FUNCTION_4	ELSE_1	IF_65
0x154a	            0x7569	                           jne 0x40015f5	      1158	normal.c	FUNCTION_4	ELSE_1	IF_65
0x154c	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      1159	normal.c	FUNCTION_4	ELSE_1	IF_65
0x1553	            0x782b	                            js 0x40015c0	      1159	normal.c	FUNCTION_4	ELSE_1	IF_65
0x1555	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      1159	normal.c	FUNCTION_4	ELSE_1	IF_65
0x155b	          0x4863d0	                         movsxd rdx, eax	      1159	normal.c	FUNCTION_4	ELSE_1	IF_65
0x155e	          0x4889d0	                            mov rax, rdx	      1159	normal.c	FUNCTION_4	ELSE_1	IF_65
0x1561	          0x4801c0	                            add rax, rax	      1159	normal.c	FUNCTION_4	ELSE_1	IF_65
0x1564	          0x4801d0	                            add rax, rdx	      1159	normal.c	FUNCTION_4	ELSE_1	IF_65
0x1567	        0x48c1e003	                              shl rax, 3	      1159	normal.c	FUNCTION_4	ELSE_1	IF_65
0x156b	    0x480500000000	                              add rax, 0	      1159	normal.c	FUNCTION_4	ELSE_1	IF_65
0x1571	           0xfb700	                   movzx eax, word [rax]	      1159	normal.c	FUNCTION_4	ELSE_1	IF_65
0x1574	           0xfb7c0	                           movzx eax, ax	      1159	normal.c	FUNCTION_4	ELSE_1	IF_65
0x1577	      0x2500010000	                          and eax, 0x100	      1159	normal.c	FUNCTION_4	ELSE_1	IF_65
0x157c	            0x85c0	                           test eax, eax	      1159	normal.c	FUNCTION_4	ELSE_1	IF_65
0x157e	            0x7535	                           jne 0x40015f5	      1159	normal.c	FUNCTION_4	ELSE_1	IF_65
0x1580	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1161	normal.c	FUNCTION_4	ELSE_1	IF_65	CALL_74
0x1587	          0x4889c7	                            mov rdi, rax	      1161	normal.c	FUNCTION_4	ELSE_1	IF_65	CALL_74
0x158a	      0xe823440000	                        call sym.clearop	      1161	normal.c	FUNCTION_4	ELSE_1	IF_65	CALL_74
0x158f	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	      1164	normal.c	FUNCTION_4	ELSE_1	IF_65
0x1599	    0x488d8544ffff	                   lea rax, [rbp - 0xbc]	      1169	normal.c	FUNCTION_4	ELSE_1	IF_65	CALL_75
0x15a0	          0x4889c7	                            mov rdi, rax	      1169	normal.c	FUNCTION_4	ELSE_1	IF_65	CALL_75
0x15a3	      0xe800000000	                          call 0x40015e8	      1169	normal.c	FUNCTION_4	ELSE_1	IF_65	CALL_75
0x15a8	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      1171	normal.c	FUNCTION_4	ELSE_1	IF_65	CALL_76
0x15ae	            0x89c7	                            mov edi, eax	      1171	normal.c	FUNCTION_4	ELSE_1	IF_65	CALL_76
0x15b0	      0xe800000000	                          call 0x40015f5	      1171	normal.c	FUNCTION_4	ELSE_1	IF_65	CALL_76
0x15b5	    0x8b0500000000	            mov eax, dword [0x040015fb] 	      1178	normal.c	FUNCTION_4	ELSE_1	IF_66
0x15bb	            0x85c0	                           test eax, eax	      1178	normal.c	FUNCTION_4	ELSE_1	IF_66
0x15bd	            0x7e0b	                           jle 0x400160a	      1178	normal.c	FUNCTION_4	ELSE_1	IF_66
0x15bf	      0xe800000000	                          call 0x4001604	      1179	normal.c	FUNCTION_4	ELSE_1	CALL_77
0x15c4	    0x890500000000	            mov dword [0x0400160a], eax 	      1179	normal.c	FUNCTION_4	ELSE_1	CALL_77
0x15ca	    0x8b8d64ffffff	             mov ecx, dword [rbp - 0x9c]	      1184	normal.c	FUNCTION_4	ELSE_1	CALL_78
0x15d0	        0x488d45a0	                   lea rax, [rbp - 0x60]	      1184	normal.c	FUNCTION_4	ELSE_1	CALL_78
0x15d4	      0xba00000000	                              mov edx, 0	      1184	normal.c	FUNCTION_4	ELSE_1	CALL_78
0x15d9	            0x89ce	                            mov esi, ecx	      1184	normal.c	FUNCTION_4	ELSE_1	CALL_78
0x15db	          0x4889c7	                            mov rdi, rax	      1184	normal.c	FUNCTION_4	ELSE_1	CALL_78
0x15de	      0xe800000000	                          call 0x4001623	      1184	normal.c	FUNCTION_4	ELSE_1	CALL_78
0x15e3	    0x8b0500000000	            mov eax, dword [0x04001629] 	      1198	normal.c	FUNCTION_4	ELSE_1	IF_67
0x15e9	            0x85c0	                           test eax, eax	      1198	normal.c	FUNCTION_4	ELSE_1	IF_67
0x15eb	     0xf8489000000	                            je 0x40016ba	      1198	normal.c	FUNCTION_4	ELSE_1	IF_67
0x15f1	    0x8b0500000000	            mov eax, dword [0x04001637] 	      1199	normal.c	FUNCTION_4	ELSE_1	IF_67
0x15f7	            0x85c0	                           test eax, eax	      1199	normal.c	FUNCTION_4	ELSE_1	IF_67
0x15f9	            0x757f	                           jne 0x40016ba	      1199	normal.c	FUNCTION_4	ELSE_1	IF_67
0x15fb	    0x8b0500000000	            mov eax, dword [0x04001641] 	      1200	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1601	            0x85c0	                           test eax, eax	      1200	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1603	            0x752f	                           jne 0x4001674	      1200	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1605	    0x8b0500000000	            mov eax, dword [0x0400164b] 	      1201	normal.c	FUNCTION_4	ELSE_1	IF_67
0x160b	            0x85c0	                           test eax, eax	      1201	normal.c	FUNCTION_4	ELSE_1	IF_67
0x160d	            0x746b	                            je 0x40016ba	      1201	normal.c	FUNCTION_4	ELSE_1	IF_67
0x160f	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1202	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1613	    0x488b05000000	            mov rax, qword [0x0400165a] 	      1202	normal.c	FUNCTION_4	ELSE_1	IF_67
0x161a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1202	normal.c	FUNCTION_4	ELSE_1	IF_67
0x161e	          0x4839c2	                            cmp rdx, rax	      1202	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1621	            0x7557	                           jne 0x40016ba	      1202	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1623	          0x8b5598	             mov edx, dword [rbp - 0x68]	      1203	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1626	    0x488b05000000	            mov rax, qword [0x0400166d] 	      1203	normal.c	FUNCTION_4	ELSE_1	IF_67
0x162d	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1203	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1630	            0x39c2	                            cmp edx, eax	      1203	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1632	            0x7546	                           jne 0x40016ba	      1203	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1634	    0x8b0500000000	            mov eax, dword [0x0400167a] 	      1205	normal.c	FUNCTION_4	ELSE_1	IF_67
0x163a	            0x85c0	                           test eax, eax	      1205	normal.c	FUNCTION_4	ELSE_1	IF_67
0x163c	            0x750a	                           jne 0x4001688	      1205	normal.c	FUNCTION_4	ELSE_1	IF_67
0x163e	    0x8b0500000000	            mov eax, dword [0x04001684] 	      1206	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1644	            0x85c0	                           test eax, eax	      1206	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1646	            0x7432	                            je 0x40016ba	      1206	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1648	    0x8b0500000000	            mov eax, dword [0x0400168e] 	      1207	normal.c	FUNCTION_4	ELSE_1	IF_67
0x164e	            0x85c0	                           test eax, eax	      1207	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1650	            0x7514	                           jne 0x40016a6	      1207	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1652	    0x8b0500000000	            mov eax, dword [0x04001698] 	      1207	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1658	            0x85c0	                           test eax, eax	      1207	normal.c	FUNCTION_4	ELSE_1	IF_67
0x165a	            0x741e	                            je 0x40016ba	      1207	normal.c	FUNCTION_4	ELSE_1	IF_67
0x165c	    0x8b0500000000	            mov eax, dword [0x040016a2] 	      1207	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1662	            0x85c0	                           test eax, eax	      1207	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1664	            0x7414	                            je 0x40016ba	      1207	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1666	    0x8b0500000000	            mov eax, dword [0x040016ac] 	      1208	normal.c	FUNCTION_4	ELSE_1	IF_67
0x166c	            0x85c0	                           test eax, eax	      1208	normal.c	FUNCTION_4	ELSE_1	IF_67
0x166e	            0x750a	                           jne 0x40016ba	      1208	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1670	    0x8b0500000000	            mov eax, dword [0x040016b6] 	      1209	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1676	            0x85c0	                           test eax, eax	      1209	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1678	            0x7534	                           jne 0x40016ee	      1209	normal.c	FUNCTION_4	ELSE_1	IF_67
0x167a	    0x8b0500000000	            mov eax, dword [0x040016c0] 	      1210	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1680	            0x85c0	                           test eax, eax	      1210	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1682	     0xf847f010000	                            je 0x4001847	      1210	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1688	    0x8b0500000000	            mov eax, dword [0x040016ce] 	      1211	normal.c	FUNCTION_4	ELSE_1	IF_67
0x168e	            0x85c0	                           test eax, eax	      1211	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1690	     0xf8571010000	                           jne 0x4001847	      1211	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1696	    0x8b0500000000	            mov eax, dword [0x040016dc] 	      1212	normal.c	FUNCTION_4	ELSE_1	IF_67
0x169c	            0x85c0	                           test eax, eax	      1212	normal.c	FUNCTION_4	ELSE_1	IF_67
0x169e	            0x750e	                           jne 0x40016ee	      1212	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16a0	    0x8b0500000000	            mov eax, dword [0x040016e6] 	      1213	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16a6	            0x85c0	                           test eax, eax	      1213	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16a8	     0xf8459010000	                            je 0x4001847	      1213	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16ae	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1214	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16b5	          0x8b4004	                mov eax, dword [rax + 4]	      1214	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16b8	            0x85c0	                           test eax, eax	      1214	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16ba	     0xf8547010000	                           jne 0x4001847	      1214	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16c0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1215	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16c3	          0x83e001	                              and eax, 1	      1215	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16c6	            0x85c0	                           test eax, eax	      1215	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16c8	     0xf8539010000	                           jne 0x4001847	      1215	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16ce	      0xe800000000	                          call 0x4001713	      1216	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_79
0x16d3	            0x85c0	                           test eax, eax	      1216	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_79
0x16d5	     0xf842c010000	                            je 0x4001847	      1216	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_79
0x16db	      0xe800000000	                          call 0x4001720	      1217	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_80
0x16e0	            0x85c0	                           test eax, eax	      1217	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_80
0x16e2	     0xf841f010000	                            je 0x4001847	      1217	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_80
0x16e8	    0x8b0500000000	            mov eax, dword [0x0400172e] 	      1218	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16ee	            0x85c0	                           test eax, eax	      1218	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16f0	     0xf8511010000	                           jne 0x4001847	      1218	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16f6	    0x8b0500000000	            mov eax, dword [0x0400173c] 	      1219	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16fc	            0x85c0	                           test eax, eax	      1219	normal.c	FUNCTION_4	ELSE_1	IF_67
0x16fe	     0xf8503010000	                           jne 0x4001847	      1219	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1704	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1220	normal.c	FUNCTION_4	ELSE_1	IF_67
0x170b	            0x8b00	                    mov eax, dword [rax]	      1220	normal.c	FUNCTION_4	ELSE_1	IF_67
0x170d	            0x85c0	                           test eax, eax	      1220	normal.c	FUNCTION_4	ELSE_1	IF_67
0x170f	     0xf85f2000000	                           jne 0x4001847	      1220	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1715	    0x8b0500000000	            mov eax, dword [0x0400175b] 	      1222	normal.c	FUNCTION_4	ELSE_1	IF_67
0x171b	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      1222	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1721	    0x8b0500000000	            mov eax, dword [0x04001767] 	      1225	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_68
0x1727	            0x85c0	                           test eax, eax	      1225	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_68
0x1729	            0x740a	                            je 0x4001775	      1225	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_68
0x172b	    0xc70500000000	           mov dword [0x04001775], 0x10 	      1226	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_68
0x1735	    0x8b0500000000	            mov eax, dword [0x0400177b] 	      1230	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x173b	            0x85c0	                           test eax, eax	      1230	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x173d	            0x7461	                            je 0x40017e0	      1230	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x173f	    0x488b05000000	            mov rax, qword [0x04001786] 	      1230	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x1746	          0x4885c0	                           test rax, rax	      1230	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x1749	            0x7455	                            je 0x40017e0	      1230	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x174b	    0x8b0500000000	            mov eax, dword [0x04001791] 	      1230	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x1751	            0x85c0	                           test eax, eax	      1230	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x1753	            0x754b	                           jne 0x40017e0	      1230	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x1755	    0x488b05000000	            mov rax, qword [0x0400179c] 	      1234	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x175c	        0x48894588	             mov qword [rbp - 0x78], rax	      1234	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x1760	    0x48c705000000	               mov qword [0x040017ab], 0	      1235	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x176b	      0xbf00000000	                              mov edi, 0	      1237	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_81
0x1770	      0xe800000000	                          call 0x40017b5	      1237	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_81
0x1775	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1239	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x1779	    0x488905000000	            mov qword [0x040017c0], rax 	      1239	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69
0x1780	    0x8b1500000000	            mov edx, dword [0x040017c6] 	      1240	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_82
0x1786	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1240	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_82
0x178a	            0x89d6	                            mov esi, edx	      1240	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_82
0x178c	          0x4889c7	                            mov rdi, rax	      1240	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_82
0x178f	      0xe800000000	                          call 0x40017d4	      1240	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_82
0x1794	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1241	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_83
0x1798	          0x4889c7	                            mov rdi, rax	      1241	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_83
0x179b	      0xe800000000	                          call 0x40017e0	      1241	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_69	CALL_83
0x17a0	      0xe800000000	                          call 0x40017e5	      1243	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_84
0x17a5	      0xe800000000	                          call 0x40017ea	      1244	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_85
0x17aa	      0xe800000000	                          call 0x40017ef	      1245	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_86
0x17af	    0x8b0500000000	            mov eax, dword [0x040017f5] 	      1246	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_70
0x17b5	            0x85c0	                           test eax, eax	      1246	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_70
0x17b7	            0x750a	                           jne 0x4001803	      1246	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_70
0x17b9	    0x8b0500000000	            mov eax, dword [0x040017ff] 	      1246	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_70
0x17bf	            0x85c0	                           test eax, eax	      1246	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_70
0x17c1	            0x740f	                            je 0x4001812	      1246	normal.c	FUNCTION_4	ELSE_1	IF_67	IF_70
0x17c3	      0xbe01000000	                              mov esi, 1	      1247	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_87
0x17c8	      0xbfe8030000	                          mov edi, 0x3e8	      1247	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_87
0x17cd	      0xe800000000	                          call 0x4001812	      1247	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_87
0x17d2	      0xbe00000000	                              mov esi, 0	      1248	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_88
0x17d7	      0xbfb80b0000	                          mov edi, 0xbb8	      1248	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_88
0x17dc	      0xe800000000	                          call 0x4001821	      1248	normal.c	FUNCTION_4	ELSE_1	IF_67	CALL_88
0x17e1	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      1249	normal.c	FUNCTION_4	ELSE_1	IF_67
0x17e7	    0x890500000000	            mov dword [0x0400182d], eax 	      1249	normal.c	FUNCTION_4	ELSE_1	IF_67
0x17ed	    0xc70500000000	               mov dword [0x04001837], 0	      1251	normal.c	FUNCTION_4	ELSE_1	IF_67
0x17f7	    0xc70500000000	               mov dword [0x04001841], 0	      1252	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1801	            0xeb04	                           jmp 0x4001847	      1252	normal.c	FUNCTION_4	ELSE_1	IF_67
0x1803	              0x90	                                     nop	       813	normal.c	FUNCTION_4	ELSE_1	IF_24
0x1804	            0xeb01	                           jmp 0x4001847	       813	normal.c	FUNCTION_4	ELSE_1	IF_24
0x1806	              0x90	                                     nop	      1117	normal.c	FUNCTION_4	ELSE_1	IF_59
0x1807	    0xc70500000000	               mov dword [0x04001851], 0	      1260	normal.c	FUNCTION_4	ELSE_1
0x1811	    0x8b0500000000	            mov eax, dword [0x04001857] 	      1264	normal.c	FUNCTION_4	ELSE_1
0x1817	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      1264	normal.c	FUNCTION_4	ELSE_1
0x181d	    0xc70500000000	               mov dword [0x04001867], 0	      1266	normal.c	FUNCTION_4	ELSE_1
0x1827	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	      1270	normal.c	FUNCTION_4	ELSE_1	IF_71
0x182e	            0x7508	                           jne 0x4001878	      1270	normal.c	FUNCTION_4	ELSE_1	IF_71
0x1830	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1270	normal.c	FUNCTION_4	ELSE_1	IF_71
0x1833	          0x83f872	                           cmp eax, 0x72	      1270	normal.c	FUNCTION_4	ELSE_1	IF_71
0x1836	            0x7505	                           jne 0x400187d	      1270	normal.c	FUNCTION_4	ELSE_1	IF_71
0x1838	      0xe800000000	                          call 0x400187d	      1272	normal.c	FUNCTION_4	ELSE_1	IF_71	CALL_89
0x183d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1280	normal.c	FUNCTION_4	ELSE_1	IF_72
0x1844	            0x8b00	                    mov eax, dword [rax]	      1280	normal.c	FUNCTION_4	ELSE_1	IF_72
0x1846	            0x85c0	                           test eax, eax	      1280	normal.c	FUNCTION_4	ELSE_1	IF_72
0x1848	            0x751d	                           jne 0x40018a7	      1280	normal.c	FUNCTION_4	ELSE_1	IF_72
0x184a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1280	normal.c	FUNCTION_4	ELSE_1	IF_72
0x1851	          0x8b4004	                mov eax, dword [rax + 4]	      1280	normal.c	FUNCTION_4	ELSE_1	IF_72
0x1854	            0x85c0	                           test eax, eax	      1280	normal.c	FUNCTION_4	ELSE_1	IF_72
0x1856	            0x750f	                           jne 0x40018a7	      1280	normal.c	FUNCTION_4	ELSE_1	IF_72
0x1858	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1282	normal.c	FUNCTION_4	ELSE_1	IF_72
0x185b	      0x3d039fffff	                     cmp eax, 0xffff9f03	      1282	normal.c	FUNCTION_4	ELSE_1	IF_72
0x1860	            0x7405	                            je 0x40018a7	      1282	normal.c	FUNCTION_4	ELSE_1	IF_72
0x1862	      0xe800000000	                          call 0x40018a7	      1285	normal.c	FUNCTION_4	ELSE_1	CALL_91
0x1867	      0xe800000000	                          call 0x40018ac	      1288	normal.c	FUNCTION_4	ELSE_1	CALL_92
0x186c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1289	normal.c	FUNCTION_4	ELSE_1	CALL_93
0x1870	          0x4889c7	                            mov rdi, rax	      1289	normal.c	FUNCTION_4	ELSE_1	CALL_93
0x1873	      0xe800000000	                          call 0x40018b8	      1289	normal.c	FUNCTION_4	ELSE_1	CALL_93
0x1878	    0x8b0500000000	            mov eax, dword [0x040018be] 	      1292	normal.c	FUNCTION_4	ELSE_1	IF_73
0x187e	            0x85c0	                           test eax, eax	      1292	normal.c	FUNCTION_4	ELSE_1	IF_73
0x1880	            0x7405	                            je 0x40018c7	      1292	normal.c	FUNCTION_4	ELSE_1	IF_73
0x1882	      0xe800000000	                          call 0x40018c7	      1293	normal.c	FUNCTION_4	ELSE_1	CALL_94
0x1887	    0x488b05000000	            mov rax, qword [0x040018ce] 	      1297	normal.c	FUNCTION_4	ELSE_1	IF_74
0x188e	    0x8b8088020000	           mov eax, dword [rax + 0x288] 	      1297	normal.c	FUNCTION_4	ELSE_1	IF_74
0x1894	            0x85c0	                           test eax, eax	      1297	normal.c	FUNCTION_4	ELSE_1	IF_74
0x1896	            0x7418	                            je 0x40018f0	      1297	normal.c	FUNCTION_4	ELSE_1	IF_74
0x1898	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      1297	normal.c	FUNCTION_4	ELSE_1	IF_74
0x189f	            0x740f	                            je 0x40018f0	      1297	normal.c	FUNCTION_4	ELSE_1	IF_74
0x18a1	      0xe800000000	                          call 0x40018e6	      1299	normal.c	FUNCTION_4	ELSE_1	IF_74	CALL_95
0x18a6	      0xbf01000000	                              mov edi, 1	      1300	normal.c	FUNCTION_4	ELSE_1	IF_74	CALL_96
0x18ab	      0xe800000000	                          call 0x40018f0	      1300	normal.c	FUNCTION_4	ELSE_1	IF_74	CALL_96
0x18b0	    0x488b05000000	            mov rax, qword [0x040018f7] 	      1305	normal.c	FUNCTION_4	ELSE_1	IF_75
0x18b7	    0x8b80b0020000	           mov eax, dword [rax + 0x2b0] 	      1305	normal.c	FUNCTION_4	ELSE_1	IF_75
0x18bd	            0x85c0	                           test eax, eax	      1305	normal.c	FUNCTION_4	ELSE_1	IF_75
0x18bf	            0x7413	                            je 0x4001914	      1305	normal.c	FUNCTION_4	ELSE_1	IF_75
0x18c1	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      1305	normal.c	FUNCTION_4	ELSE_1	IF_75
0x18c8	            0x740a	                            je 0x4001914	      1305	normal.c	FUNCTION_4	ELSE_1	IF_75
0x18ca	      0xe800000000	                          call 0x400190f	      1307	normal.c	FUNCTION_4	ELSE_1	IF_75	CALL_97
0x18cf	      0xe800000000	                          call 0x4001914	      1308	normal.c	FUNCTION_4	ELSE_1	IF_75	CALL_98
0x18d4	    0x488b05000000	            mov rax, qword [0x0400191b] 	      1314	normal.c	FUNCTION_4	ELSE_1	IF_76	CALL_99
0x18db	    0x488b80281c00	          mov rax, qword [rax + 0x1c28] 	      1314	normal.c	FUNCTION_4	ELSE_1	IF_76	CALL_99
0x18e2	          0x4889c7	                            mov rdi, rax	      1314	normal.c	FUNCTION_4	ELSE_1	IF_76	CALL_99
0x18e5	      0xe800000000	                          call 0x400192a	      1314	normal.c	FUNCTION_4	ELSE_1	IF_76	CALL_99
0x18ea	            0x85c0	                           test eax, eax	      1314	normal.c	FUNCTION_4	ELSE_1	IF_76	CALL_99
0x18ec	            0x740a	                            je 0x4001938	      1314	normal.c	FUNCTION_4	ELSE_1	IF_76	CALL_99
0x18ee	    0xc70500000000	               mov dword [0x04001938], 0	      1315	normal.c	FUNCTION_4	ELSE_1	IF_76
0x18f8	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1323	normal.c	FUNCTION_4	ELSE_1	IF_77
0x18ff	            0x8b00	                    mov eax, dword [rax]	      1323	normal.c	FUNCTION_4	ELSE_1	IF_77
0x1901	            0x85c0	                           test eax, eax	      1323	normal.c	FUNCTION_4	ELSE_1	IF_77
0x1903	     0xf85a3000000	                           jne 0x40019ec	      1323	normal.c	FUNCTION_4	ELSE_1	IF_77
0x1909	    0x8b0500000000	            mov eax, dword [0x0400194f] 	      1324	normal.c	FUNCTION_4	ELSE_1	IF_77
0x190f	            0x85c0	                           test eax, eax	      1324	normal.c	FUNCTION_4	ELSE_1	IF_77
0x1911	            0x7414	                            je 0x4001967	      1324	normal.c	FUNCTION_4	ELSE_1	IF_77
0x1913	    0x8b0500000000	            mov eax, dword [0x04001959] 	      1324	normal.c	FUNCTION_4	ELSE_1	IF_77
0x1919	            0x85c0	                           test eax, eax	      1324	normal.c	FUNCTION_4	ELSE_1	IF_77
0x191b	            0x750a	                           jne 0x4001967	      1324	normal.c	FUNCTION_4	ELSE_1	IF_77
0x191d	    0x8b0500000000	            mov eax, dword [0x04001963] 	      1324	normal.c	FUNCTION_4	ELSE_1	IF_77
0x1923	            0x85c0	                           test eax, eax	      1324	normal.c	FUNCTION_4	ELSE_1	IF_77
0x1925	            0x740b	                            je 0x4001972	      1324	normal.c	FUNCTION_4	ELSE_1	IF_77
0x1927	    0x8b0500000000	            mov eax, dword [0x0400196d] 	      1325	normal.c	FUNCTION_4	ELSE_1	IF_77
0x192d	          0x83f801	                              cmp eax, 1	      1325	normal.c	FUNCTION_4	ELSE_1	IF_77
0x1930	            0x757a	                           jne 0x40019ec	      1325	normal.c	FUNCTION_4	ELSE_1	IF_77
0x1932	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1326	normal.c	FUNCTION_4	ELSE_1	IF_77
0x1935	          0x83e001	                              and eax, 1	      1326	normal.c	FUNCTION_4	ELSE_1	IF_77
0x1938	            0x85c0	                           test eax, eax	      1326	normal.c	FUNCTION_4	ELSE_1	IF_77
0x193a	            0x7570	                           jne 0x40019ec	      1326	normal.c	FUNCTION_4	ELSE_1	IF_77
0x193c	      0xe800000000	                          call 0x4001981	      1327	normal.c	FUNCTION_4	ELSE_1	IF_77	CALL_100
0x1941	            0x85c0	                           test eax, eax	      1327	normal.c	FUNCTION_4	ELSE_1	IF_77	CALL_100
0x1943	            0x7467	                            je 0x40019ec	      1327	normal.c	FUNCTION_4	ELSE_1	IF_77	CALL_100
0x1945	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1328	normal.c	FUNCTION_4	ELSE_1	IF_77
0x194c	          0x8b4004	                mov eax, dword [rax + 4]	      1328	normal.c	FUNCTION_4	ELSE_1	IF_77
0x194f	            0x85c0	                           test eax, eax	      1328	normal.c	FUNCTION_4	ELSE_1	IF_77
0x1951	            0x7559	                           jne 0x40019ec	      1328	normal.c	FUNCTION_4	ELSE_1	IF_77
0x1953	    0x8b0500000000	            mov eax, dword [0x04001999] 	      1330	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_78
0x1959	          0x83f801	                              cmp eax, 1	      1330	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_78
0x195c	            0x7519	                           jne 0x40019b7	      1330	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_78
0x195e	    0xc70500000000	               mov dword [0x040019a8], 1	      1332	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_78
0x1968	      0xe800000000	                          call 0x40019ad	      1333	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_78	CALL_101
0x196d	    0xc70500000000	               mov dword [0x040019b7], 0	      1334	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_78
0x1977	    0x8b0500000000	            mov eax, dword [0x040019bd] 	      1336	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x197d	            0x85c0	                           test eax, eax	      1336	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x197f	            0x742b	                            je 0x40019ec	      1336	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x1981	    0x8b0500000000	            mov eax, dword [0x040019c7] 	      1336	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x1987	            0x85c0	                           test eax, eax	      1336	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x1989	            0x7521	                           jne 0x40019ec	      1336	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x198b	    0x8b0500000000	            mov eax, dword [0x040019d1] 	      1336	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x1991	            0x85c0	                           test eax, eax	      1336	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x1993	            0x7517	                           jne 0x40019ec	      1336	normal.c	FUNCTION_4	ELSE_1	IF_77	IF_79
0x1995	    0x8b0500000000	            mov eax, dword [0x040019db] 	      1337	normal.c	FUNCTION_4	ELSE_1	IF_77	CALL_102
0x199b	      0xba01000000	                              mov edx, 1	      1337	normal.c	FUNCTION_4	ELSE_1	IF_77	CALL_102
0x19a0	      0xbe00000000	                              mov esi, 0	      1337	normal.c	FUNCTION_4	ELSE_1	IF_77	CALL_102
0x19a5	            0x89c7	                            mov edi, eax	      1337	normal.c	FUNCTION_4	ELSE_1	IF_77	CALL_102
0x19a7	      0xe800000000	                          call 0x40019ec	      1337	normal.c	FUNCTION_4	ELSE_1	IF_77	CALL_102
0x19ac	    0x8b0500000000	            mov eax, dword [0x040019f2] 	      1340	normal.c	FUNCTION_4	ELSE_1	IF_80
0x19b2	          0x83f802	                              cmp eax, 2	      1340	normal.c	FUNCTION_4	ELSE_1	IF_80
0x19b5	            0x750a	                           jne 0x4001a01	      1340	normal.c	FUNCTION_4	ELSE_1	IF_80
0x19b7	    0xc70500000000	               mov dword [0x04001a01], 1	      1341	normal.c	FUNCTION_4	ELSE_1	IF_80
0x19c1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1344	normal.c	FUNCTION_4	ELSE_1
0x19c5	    0x488905000000	            mov qword [0x04001a0c], rax 	      1344	normal.c	FUNCTION_4	ELSE_1
0x19cc	              0x90	                                     nop	      1345	normal.c	FUNCTION_4	ELSE_1
0x19cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1345	normal.c	FUNCTION_4	ELSE_1
0x19d1	    0x644833042528	                xor rax, qword fs:[0x28]	      1345	normal.c	FUNCTION_4	ELSE_1
0x19da	            0x7405	                            je 0x4001a21	      1345	normal.c	FUNCTION_4	ELSE_1
0x19dc	      0xe800000000	                          call 0x4001a21	      1345	normal.c	FUNCTION_4	ELSE_1
0x19e1	    0x4881c4c80000	                           add rsp, 0xc8	      1345	normal.c	FUNCTION_4	ELSE_1
0x19e8	              0x5b	                                 pop rbx	      1345	normal.c	FUNCTION_4	ELSE_1
0x19e9	              0x5d	                                 pop rbp	      1345	normal.c	FUNCTION_4	ELSE_1
0x19ea	              0xc3	                                     ret	      1345	normal.c	FUNCTION_4	ELSE_1
v_swap_corners	CALL,6:ELSE,1:DO,0:FOR,0:functions,0:IF,4:WHILE,0:SWITCH,0	129
0xc32c	              0x55	                                push rbp	      7205	normal.c	FUNCTION_89
0xc32d	          0x4889e5	                            mov rbp, rsp	      7205	normal.c	FUNCTION_89
0xc330	        0x4883ec40	                           sub rsp, 0x40	      7205	normal.c	FUNCTION_89
0xc334	          0x897dcc	             mov dword [rbp - 0x34], edi	      7205	normal.c	FUNCTION_89
0xc337	    0x64488b042528	                mov rax, qword fs:[0x28]	      7205	normal.c	FUNCTION_89
0xc340	        0x488945f8	                mov qword [rbp - 8], rax	      7205	normal.c	FUNCTION_89
0xc344	            0x31c0	                            xor eax, eax	      7205	normal.c	FUNCTION_89
0xc346	        0x837dcc4f	           cmp dword [rbp - 0x34], 0x4f 	      7209	normal.c	FUNCTION_89	IF_1
0xc34a	     0xf859b010000	                           jne 0x400c52b	      7209	normal.c	FUNCTION_89	IF_1
0xc350	    0x8b0500000000	            mov eax, dword [0x0400c396] 	      7209	normal.c	FUNCTION_89	IF_1
0xc356	          0x83f816	                           cmp eax, 0x16	      7209	normal.c	FUNCTION_89	IF_1
0xc359	     0xf858c010000	                           jne 0x400c52b	      7209	normal.c	FUNCTION_89	IF_1
0xc35f	    0x488b05000000	            mov rax, qword [0x0400c3a6] 	      7211	normal.c	FUNCTION_89	IF_1
0xc366	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7211	normal.c	FUNCTION_89	IF_1
0xc36a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7211	normal.c	FUNCTION_89	IF_1
0xc36e	        0x488945e0	             mov qword [rbp - 0x20], rax	      7211	normal.c	FUNCTION_89	IF_1
0xc372	        0x488955e8	             mov qword [rbp - 0x18], rdx	      7211	normal.c	FUNCTION_89	IF_1
0xc376	    0x488b05000000	            mov rax, qword [0x0400c3bd] 	      7212	normal.c	FUNCTION_89	IF_1	CALL_1
0xc37d	        0x488d4ddc	                   lea rcx, [rbp - 0x24]	      7212	normal.c	FUNCTION_89	IF_1	CALL_1
0xc381	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      7212	normal.c	FUNCTION_89	IF_1	CALL_1
0xc385	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      7212	normal.c	FUNCTION_89	IF_1	CALL_1
0xc389	          0x4989c8	                             mov r8, rcx	      7212	normal.c	FUNCTION_89	IF_1	CALL_1
0xc38c	          0x4889d1	                            mov rcx, rdx	      7212	normal.c	FUNCTION_89	IF_1	CALL_1
0xc38f	      0xba00000000	                              mov edx, 0	      7212	normal.c	FUNCTION_89	IF_1	CALL_1
0xc394	          0x4889c7	                            mov rdi, rax	      7212	normal.c	FUNCTION_89	IF_1	CALL_1
0xc397	      0xe800000000	                          call 0x400c3dc	      7212	normal.c	FUNCTION_89	IF_1	CALL_1
0xc39c	    0x488b05000000	            mov rax, qword [0x0400c3e3] 	      7213	normal.c	FUNCTION_89	IF_1
0xc3a3	    0x488b15000000	            mov rdx, qword [0x0400c3ea] 	      7213	normal.c	FUNCTION_89	IF_1
0xc3aa	        0x48895038	             mov qword [rax + 0x38], rdx	      7213	normal.c	FUNCTION_89	IF_1
0xc3ae	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7214	normal.c	FUNCTION_89	IF_1	CALL_2
0xc3b1	            0x89c7	                            mov edi, eax	      7214	normal.c	FUNCTION_89	IF_1	CALL_2
0xc3b3	      0xe800000000	                          call 0x400c3f8	      7214	normal.c	FUNCTION_89	IF_1	CALL_2
0xc3b8	    0x488b05000000	            mov rax, qword [0x0400c3ff] 	      7215	normal.c	FUNCTION_89	IF_1
0xc3bf	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7215	normal.c	FUNCTION_89	IF_1
0xc3c3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7215	normal.c	FUNCTION_89	IF_1
0xc3c7	    0x488905000000	            mov qword [0x0400c40e], rax 	      7215	normal.c	FUNCTION_89	IF_1
0xc3ce	    0x488915000000	            mov qword [0x0400c415], rdx 	      7215	normal.c	FUNCTION_89	IF_1
0xc3d5	    0x488b05000000	            mov rax, qword [0x0400c41c] 	      7217	normal.c	FUNCTION_89	IF_1
0xc3dc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      7217	normal.c	FUNCTION_89	IF_1
0xc3e0	        0x48895038	             mov qword [rax + 0x38], rdx	      7217	normal.c	FUNCTION_89	IF_1
0xc3e4	    0x488b05000000	            mov rax, qword [0x0400c42b] 	      7218	normal.c	FUNCTION_89	IF_1
0xc3eb	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      7218	normal.c	FUNCTION_89	IF_1
0xc3ee	          0x895048	             mov dword [rax + 0x48], edx	      7218	normal.c	FUNCTION_89	IF_1
0xc3f1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      7221	normal.c	FUNCTION_89	IF_1	IF_2
0xc3f5	    0x488b05000000	            mov rax, qword [0x0400c43c] 	      7221	normal.c	FUNCTION_89	IF_1	IF_2
0xc3fc	          0x4839c2	                            cmp rdx, rax	      7221	normal.c	FUNCTION_89	IF_1	IF_2
0xc3ff	            0x7c1e	                            jl 0x400c45f	      7221	normal.c	FUNCTION_89	IF_1	IF_2
0xc401	    0x488b05000000	            mov rax, qword [0x0400c448] 	      7221	normal.c	FUNCTION_89	IF_1	IF_2
0xc408	           0xfb600	                   movzx eax, byte [rax]	      7221	normal.c	FUNCTION_89	IF_1	IF_2
0xc40b	            0x3c65	                            cmp al, 0x65	      7221	normal.c	FUNCTION_89	IF_1	IF_2
0xc40d	            0x7510	                           jne 0x400c45f	      7221	normal.c	FUNCTION_89	IF_1	IF_2
0xc40f	    0x488b05000000	            mov rax, qword [0x0400c456] 	      7222	normal.c	FUNCTION_89	IF_1	IF_2
0xc416	          0x8b5048	            mov edx, dword [rax + 0x48] 	      7222	normal.c	FUNCTION_89	IF_1	IF_2
0xc419	          0x83c201	                              add edx, 1	      7222	normal.c	FUNCTION_89	IF_1	IF_2
0xc41c	          0x895048	             mov dword [rax + 0x48], edx	      7222	normal.c	FUNCTION_89	IF_1	IF_2
0xc41f	    0x488b05000000	            mov rax, qword [0x0400c466] 	      7223	normal.c	FUNCTION_89	IF_1	CALL_3
0xc426	          0x8b4048	            mov eax, dword [rax + 0x48] 	      7223	normal.c	FUNCTION_89	IF_1	CALL_3
0xc429	            0x89c7	                            mov edi, eax	      7223	normal.c	FUNCTION_89	IF_1	CALL_3
0xc42b	      0xe800000000	                          call 0x400c470	      7223	normal.c	FUNCTION_89	IF_1	CALL_3
0xc430	    0x488b05000000	            mov rax, qword [0x0400c477] 	      7224	normal.c	FUNCTION_89	IF_1	IF_3
0xc437	          0x8b5040	            mov edx, dword [rax + 0x40] 	      7224	normal.c	FUNCTION_89	IF_1	IF_3
0xc43a	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      7224	normal.c	FUNCTION_89	IF_1	IF_3
0xc43d	            0x39c2	                            cmp edx, eax	      7224	normal.c	FUNCTION_89	IF_1	IF_3
0xc43f	     0xf8500010000	                           jne 0x400c585	      7224	normal.c	FUNCTION_89	IF_1	IF_3
0xc445	      0xe800000000	                          call 0x400c48a	      7226	normal.c	FUNCTION_89	IF_1	IF_3	CALL_4
0xc44a	            0x85c0	                           test eax, eax	      7226	normal.c	FUNCTION_89	IF_1	IF_3	CALL_4
0xc44c	            0x7415	                            je 0x400c4a3	      7226	normal.c	FUNCTION_89	IF_1	IF_3	CALL_4
0xc44e	    0x488b05000000	            mov rax, qword [0x0400c495] 	      7227	normal.c	FUNCTION_89	IF_1	IF_3
0xc455	          0x8b5044	            mov edx, dword [rax + 0x44] 	      7227	normal.c	FUNCTION_89	IF_1	IF_3
0xc458	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7227	normal.c	FUNCTION_89	IF_1	IF_3
0xc45b	            0x39c2	                            cmp edx, eax	      7227	normal.c	FUNCTION_89	IF_1	IF_3
0xc45d	     0xf85e2000000	                           jne 0x400c585	      7227	normal.c	FUNCTION_89	IF_1	IF_3
0xc463	    0x488b05000000	            mov rax, qword [0x0400c4aa] 	      7231	normal.c	FUNCTION_89	IF_1	IF_3
0xc46a	    0x488b15000000	            mov rdx, qword [0x0400c4b1] 	      7231	normal.c	FUNCTION_89	IF_1	IF_3
0xc471	        0x48895038	             mov qword [rax + 0x38], rdx	      7231	normal.c	FUNCTION_89	IF_1	IF_3
0xc475	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      7232	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0xc479	    0x488b05000000	            mov rax, qword [0x0400c4c0] 	      7232	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0xc480	          0x4839c2	                            cmp rdx, rax	      7232	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0xc483	            0x7f17	                            jg 0x400c4dc	      7232	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0xc485	    0x488b05000000	            mov rax, qword [0x0400c4cc] 	      7232	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0xc48c	           0xfb600	                   movzx eax, byte [rax]	      7232	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0xc48f	            0x3c65	                            cmp al, 0x65	      7232	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0xc491	            0x7509	                           jne 0x400c4dc	      7232	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0xc493	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      7233	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0xc496	          0x83c001	                              add eax, 1	      7233	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0xc499	          0x8945dc	             mov dword [rbp - 0x24], eax	      7233	normal.c	FUNCTION_89	IF_1	IF_3	IF_4
0xc49c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      7234	normal.c	FUNCTION_89	IF_1	IF_3	CALL_5
0xc49f	            0x89c7	                            mov edi, eax	      7234	normal.c	FUNCTION_89	IF_1	IF_3	CALL_5
0xc4a1	      0xe800000000	                          call 0x400c4e6	      7234	normal.c	FUNCTION_89	IF_1	IF_3	CALL_5
0xc4a6	    0x488b05000000	            mov rax, qword [0x0400c4ed] 	      7235	normal.c	FUNCTION_89	IF_1	IF_3
0xc4ad	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7235	normal.c	FUNCTION_89	IF_1	IF_3
0xc4b1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7235	normal.c	FUNCTION_89	IF_1	IF_3
0xc4b5	    0x488905000000	            mov qword [0x0400c4fc], rax 	      7235	normal.c	FUNCTION_89	IF_1	IF_3
0xc4bc	    0x488915000000	            mov qword [0x0400c503], rdx 	      7235	normal.c	FUNCTION_89	IF_1	IF_3
0xc4c3	    0x488b05000000	            mov rax, qword [0x0400c50a] 	      7237	normal.c	FUNCTION_89	IF_1	IF_3
0xc4ca	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      7237	normal.c	FUNCTION_89	IF_1	IF_3
0xc4ce	        0x48895038	             mov qword [rax + 0x38], rdx	      7237	normal.c	FUNCTION_89	IF_1	IF_3
0xc4d2	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7238	normal.c	FUNCTION_89	IF_1	IF_3	CALL_6
0xc4d5	            0x89c7	                            mov edi, eax	      7238	normal.c	FUNCTION_89	IF_1	IF_3	CALL_6
0xc4d7	      0xe800000000	                          call 0x400c51c	      7238	normal.c	FUNCTION_89	IF_1	IF_3	CALL_6
0xc4dc	    0x488b05000000	            mov rax, qword [0x0400c523] 	      7239	normal.c	FUNCTION_89	IF_1	IF_3
0xc4e3	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      7239	normal.c	FUNCTION_89	IF_1	IF_3
0xc4e6	          0x895048	             mov dword [rax + 0x48], edx	      7239	normal.c	FUNCTION_89	IF_1	IF_3
0xc4e9	            0xeb5a	                           jmp 0x400c585	      7224	normal.c	FUNCTION_89	IF_1	IF_3
0xc4eb	    0x488b05000000	            mov rax, qword [0x0400c532] 	      7244	normal.c	FUNCTION_89	ELSE_1
0xc4f2	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7244	normal.c	FUNCTION_89	ELSE_1
0xc4f6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7244	normal.c	FUNCTION_89	ELSE_1
0xc4fa	        0x488945e0	             mov qword [rbp - 0x20], rax	      7244	normal.c	FUNCTION_89	ELSE_1
0xc4fe	        0x488955e8	             mov qword [rbp - 0x18], rdx	      7244	normal.c	FUNCTION_89	ELSE_1
0xc502	    0x488b0d000000	            mov rcx, qword [0x0400c549] 	      7245	normal.c	FUNCTION_89	ELSE_1
0xc509	    0x488b05000000	            mov rax, qword [0x0400c550] 	      7245	normal.c	FUNCTION_89	ELSE_1
0xc510	    0x488b15000000	            mov rdx, qword [0x0400c557] 	      7245	normal.c	FUNCTION_89	ELSE_1
0xc517	        0x48894138	             mov qword [rcx + 0x38], rax	      7245	normal.c	FUNCTION_89	ELSE_1
0xc51b	        0x48895140	             mov qword [rcx + 0x40], rdx	      7245	normal.c	FUNCTION_89	ELSE_1
0xc51f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7246	normal.c	FUNCTION_89	ELSE_1
0xc523	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7246	normal.c	FUNCTION_89	ELSE_1
0xc527	    0x488905000000	            mov qword [0x0400c56e], rax 	      7246	normal.c	FUNCTION_89	ELSE_1
0xc52e	    0x488915000000	            mov qword [0x0400c575], rdx 	      7246	normal.c	FUNCTION_89	ELSE_1
0xc535	    0x488b05000000	            mov rax, qword [0x0400c57c] 	      7247	normal.c	FUNCTION_89	ELSE_1
0xc53c	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7247	normal.c	FUNCTION_89	ELSE_1
0xc543	            0xeb01	                           jmp 0x400c586	      7249	normal.c	FUNCTION_89
0xc545	              0x90	                                     nop	      7224	normal.c	FUNCTION_89	IF_1	IF_3
0xc546	              0x90	                                     nop	      7249	normal.c	FUNCTION_89
0xc547	        0x488b45f8	                mov rax, qword [rbp - 8]	      7249	normal.c	FUNCTION_89
0xc54b	    0x644833042528	                xor rax, qword fs:[0x28]	      7249	normal.c	FUNCTION_89
0xc554	            0x7405	                            je 0x400c59b	      7249	normal.c	FUNCTION_89
0xc556	      0xe800000000	                          call 0x400c59b	      7249	normal.c	FUNCTION_89
0xc55b	              0xc9	                                   leave	      7249	normal.c	FUNCTION_89
0xc55c	              0xc3	                                     ret	      7249	normal.c	FUNCTION_89
nv_cursormark	CALL,5:ELSE,2:DO,0:FOR,0:functions,0:IF,4:WHILE,0:SWITCH,0	66
0xca4f	              0x55	                                push rbp	      7413	normal.c	FUNCTION_93
0xca50	          0x4889e5	                            mov rbp, rsp	      7413	normal.c	FUNCTION_93
0xca53	        0x4883ec20	                           sub rsp, 0x20	      7413	normal.c	FUNCTION_93
0xca57	        0x48897df8	                mov qword [rbp - 8], rdi	      7413	normal.c	FUNCTION_93
0xca5b	          0x8975f4	              mov dword [rbp - 0xc], esi	      7413	normal.c	FUNCTION_93
0xca5e	        0x488955e8	             mov qword [rbp - 0x18], rdx	      7413	normal.c	FUNCTION_93
0xca62	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7414	normal.c	FUNCTION_93	IF_1	CALL_1
0xca66	          0x4889c7	                            mov rdi, rax	      7414	normal.c	FUNCTION_93	IF_1	CALL_1
0xca69	      0xe800000000	                          call 0x400caae	      7414	normal.c	FUNCTION_93	IF_1	CALL_1
0xca6e	            0x85c0	                           test eax, eax	      7414	normal.c	FUNCTION_93	IF_1	CALL_1
0xca70	            0x7511	                           jne 0x400cac3	      7414	normal.c	FUNCTION_93	IF_1	CALL_1
0xca72	        0x488b45f8	                mov rax, qword [rbp - 8]	      7415	normal.c	FUNCTION_93	CALL_2
0xca76	          0x488b00	                    mov rax, qword [rax]	      7415	normal.c	FUNCTION_93	CALL_2
0xca79	          0x4889c7	                            mov rdi, rax	      7415	normal.c	FUNCTION_93	CALL_2
0xca7c	      0xe8318fffff	                        call sym.clearop	      7415	normal.c	FUNCTION_93	CALL_2
0xca81	            0xeb66	                           jmp 0x400cb29	      7415	normal.c	FUNCTION_93	CALL_2
0xca83	        0x488b45f8	                mov rax, qword [rbp - 8]	      7418	normal.c	FUNCTION_93	ELSE_1	IF_2
0xca87	          0x8b400c	              mov eax, dword [rax + 0xc]	      7418	normal.c	FUNCTION_93	ELSE_1	IF_2
0xca8a	          0x83f827	                           cmp eax, 0x27	      7418	normal.c	FUNCTION_93	ELSE_1	IF_2
0xca8d	            0x7424	                            je 0x400caf3	      7418	normal.c	FUNCTION_93	ELSE_1	IF_2
0xca8f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7419	normal.c	FUNCTION_93	ELSE_1	IF_2
0xca93	          0x8b400c	              mov eax, dword [rax + 0xc]	      7419	normal.c	FUNCTION_93	ELSE_1	IF_2
0xca96	          0x83f860	                           cmp eax, 0x60	      7419	normal.c	FUNCTION_93	ELSE_1	IF_2
0xca99	            0x7418	                            je 0x400caf3	      7419	normal.c	FUNCTION_93	ELSE_1	IF_2
0xca9b	        0x488b45f8	                mov rax, qword [rbp - 8]	      7420	normal.c	FUNCTION_93	ELSE_1	IF_2
0xca9f	          0x8b400c	              mov eax, dword [rax + 0xc]	      7420	normal.c	FUNCTION_93	ELSE_1	IF_2
0xcaa2	          0x83f85b	                           cmp eax, 0x5b	      7420	normal.c	FUNCTION_93	ELSE_1	IF_2
0xcaa5	            0x740c	                            je 0x400caf3	      7420	normal.c	FUNCTION_93	ELSE_1	IF_2
0xcaa7	        0x488b45f8	                mov rax, qword [rbp - 8]	      7421	normal.c	FUNCTION_93	ELSE_1	IF_2
0xcaab	          0x8b400c	              mov eax, dword [rax + 0xc]	      7421	normal.c	FUNCTION_93	ELSE_1	IF_2
0xcaae	          0x83f85d	                           cmp eax, 0x5d	      7421	normal.c	FUNCTION_93	ELSE_1	IF_2
0xcab1	            0x7505	                           jne 0x400caf8	      7421	normal.c	FUNCTION_93	ELSE_1	IF_2
0xcab3	      0xe800000000	                          call 0x400caf8	      7422	normal.c	FUNCTION_93	ELSE_1	CALL_3
0xcab8	    0x488b0d000000	            mov rcx, qword [0x0400caff] 	      7423	normal.c	FUNCTION_93	ELSE_1
0xcabf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7423	normal.c	FUNCTION_93	ELSE_1
0xcac3	        0x488b5008	                mov rdx, qword [rax + 8]	      7423	normal.c	FUNCTION_93	ELSE_1
0xcac7	          0x488b00	                    mov rax, qword [rax]	      7423	normal.c	FUNCTION_93	ELSE_1
0xcaca	        0x48894138	             mov qword [rcx + 0x38], rax	      7423	normal.c	FUNCTION_93	ELSE_1
0xcace	        0x48895140	             mov qword [rcx + 0x40], rdx	      7423	normal.c	FUNCTION_93	ELSE_1
0xcad2	        0x837df400	                cmp dword [rbp - 0xc], 0	      7424	normal.c	FUNCTION_93	ELSE_1	IF_3
0xcad6	            0x740c	                            je 0x400cb24	      7424	normal.c	FUNCTION_93	ELSE_1	IF_3
0xcad8	      0xbf05000000	                              mov edi, 5	      7425	normal.c	FUNCTION_93	ELSE_1	CALL_4
0xcadd	      0xe800000000	                          call 0x400cb22	      7425	normal.c	FUNCTION_93	ELSE_1	CALL_4
0xcae2	            0xeb05	                           jmp 0x400cb29	      7425	normal.c	FUNCTION_93	ELSE_1	CALL_4
0xcae4	      0xe800000000	                          call 0x400cb29	      7427	normal.c	FUNCTION_93	ELSE_1	CALL_5
0xcae9	        0x488b45f8	                mov rax, qword [rbp - 8]	      7429	normal.c	FUNCTION_93
0xcaed	          0x488b00	                    mov rax, qword [rax]	      7429	normal.c	FUNCTION_93
0xcaf0	        0x837df400	                cmp dword [rbp - 0xc], 0	      7429	normal.c	FUNCTION_93
0xcaf4	           0xf95c2	                                setne dl	      7429	normal.c	FUNCTION_93
0xcaf7	           0xfb6d2	                           movzx edx, dl	      7429	normal.c	FUNCTION_93
0xcafa	          0x895008	                mov dword [rax + 8], edx	      7429	normal.c	FUNCTION_93
0xcafd	        0x488b45f8	                mov rax, qword [rbp - 8]	      7430	normal.c	FUNCTION_93	IF_4
0xcb01	          0x8b400c	              mov eax, dword [rax + 0xc]	      7430	normal.c	FUNCTION_93	IF_4
0xcb04	          0x83f860	                           cmp eax, 0x60	      7430	normal.c	FUNCTION_93	IF_4
0xcb07	            0x750e	                           jne 0x400cb57	      7430	normal.c	FUNCTION_93	IF_4
0xcb09	        0x488b45f8	                mov rax, qword [rbp - 8]	      7431	normal.c	FUNCTION_93	IF_4
0xcb0d	          0x488b00	                    mov rax, qword [rax]	      7431	normal.c	FUNCTION_93	IF_4
0xcb10	    0xc74010010000	               mov dword [rax + 0x10], 1	      7431	normal.c	FUNCTION_93	IF_4
0xcb17	        0x488b45f8	                mov rax, qword [rbp - 8]	      7432	normal.c	FUNCTION_93
0xcb1b	          0x488b00	                    mov rax, qword [rax]	      7432	normal.c	FUNCTION_93
0xcb1e	    0xc74014000000	               mov dword [rax + 0x14], 0	      7432	normal.c	FUNCTION_93
0xcb25	    0x488b05000000	            mov rax, qword [0x0400cb6c] 	      7433	normal.c	FUNCTION_93
0xcb2c	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7433	normal.c	FUNCTION_93
0xcb33	              0x90	                                     nop	      7434	normal.c	FUNCTION_93
0xcb34	              0xc9	                                   leave	      7434	normal.c	FUNCTION_93
0xcb35	              0xc3	                                     ret	      7434	normal.c	FUNCTION_93
nv_dollar	CALL,5:ELSE,1:DO,0:FOR,0:functions,0:IF,3:WHILE,0:SWITCH,0	58
0xa4be	              0x55	                                push rbp	      6299	normal.c	FUNCTION_76
0xa4bf	          0x4889e5	                            mov rbp, rsp	      6299	normal.c	FUNCTION_76
0xa4c2	        0x4883ec10	                           sub rsp, 0x10	      6299	normal.c	FUNCTION_76
0xa4c6	        0x48897df8	                mov qword [rbp - 8], rdi	      6299	normal.c	FUNCTION_76
0xa4ca	        0x488b45f8	                mov rax, qword [rbp - 8]	      6300	normal.c	FUNCTION_76
0xa4ce	          0x488b00	                    mov rax, qword [rax]	      6300	normal.c	FUNCTION_76
0xa4d1	    0xc74008000000	                  mov dword [rax + 8], 0	      6300	normal.c	FUNCTION_76
0xa4d8	        0x488b45f8	                mov rax, qword [rbp - 8]	      6301	normal.c	FUNCTION_76
0xa4dc	          0x488b00	                    mov rax, qword [rax]	      6301	normal.c	FUNCTION_76
0xa4df	    0xc74014010000	               mov dword [rax + 0x14], 1	      6301	normal.c	FUNCTION_76
0xa4e6	      0xe800000000	                          call 0x400a52b	      6306	normal.c	FUNCTION_76	IF_1	CALL_2
0xa4eb	            0x85c0	                           test eax, eax	      6306	normal.c	FUNCTION_76	IF_1	CALL_2
0xa4ed	            0x7416	                            je 0x400a545	      6306	normal.c	FUNCTION_76	IF_1	CALL_2
0xa4ef	      0xe800000000	                          call 0x400a534	      6306	normal.c	FUNCTION_76	IF_1	CALL_2
0xa4f4	            0x85c0	                           test eax, eax	      6306	normal.c	FUNCTION_76	IF_1	CALL_2
0xa4f6	            0x750d	                           jne 0x400a545	      6306	normal.c	FUNCTION_76	IF_1	CALL_2
0xa4f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      6307	normal.c	FUNCTION_76	IF_1
0xa4fc	          0x488b00	                    mov rax, qword [rax]	      6307	normal.c	FUNCTION_76	IF_1
0xa4ff	            0x8b00	                    mov eax, dword [rax]	      6307	normal.c	FUNCTION_76	IF_1
0xa501	            0x85c0	                           test eax, eax	      6307	normal.c	FUNCTION_76	IF_1
0xa503	            0x750e	                           jne 0x400a553	      6307	normal.c	FUNCTION_76	IF_1
0xa505	    0x488b05000000	            mov rax, qword [0x0400a54c] 	      6309	normal.c	FUNCTION_76	IF_1
0xa50c	    0xc74048ffffff	     mov dword [rax + 0x48], 0x7fffffff 	      6309	normal.c	FUNCTION_76	IF_1
0xa513	        0x488b45f8	                mov rax, qword [rbp - 8]	      6311	normal.c	FUNCTION_76	IF_2
0xa517	          0x488b00	                    mov rax, qword [rax]	      6311	normal.c	FUNCTION_76	IF_2
0xa51a	            0x8b00	                    mov eax, dword [rax]	      6311	normal.c	FUNCTION_76	IF_2
0xa51c	            0x85c0	                           test eax, eax	      6310	normal.c	FUNCTION_76	IF_2	CALL_3
0xa51e	           0xf94c0	                                 sete al	      6310	normal.c	FUNCTION_76	IF_2	CALL_3
0xa521	           0xfb6c0	                           movzx eax, al	      6310	normal.c	FUNCTION_76	IF_2	CALL_3
0xa524	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6310	normal.c	FUNCTION_76	IF_2	CALL_3
0xa528	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      6310	normal.c	FUNCTION_76	IF_2	CALL_3
0xa52c	        0x4883ea01	                              sub rdx, 1	      6310	normal.c	FUNCTION_76	IF_2	CALL_3
0xa530	            0x89c6	                            mov esi, eax	      6310	normal.c	FUNCTION_76	IF_2	CALL_3
0xa532	          0x4889d7	                            mov rdi, rdx	      6310	normal.c	FUNCTION_76	IF_2	CALL_3
0xa535	      0xe800000000	                          call 0x400a57a	      6310	normal.c	FUNCTION_76	IF_2	CALL_3
0xa53a	            0x85c0	                           test eax, eax	      6310	normal.c	FUNCTION_76	IF_2	CALL_3
0xa53c	            0x7511	                           jne 0x400a58f	      6310	normal.c	FUNCTION_76	IF_2	CALL_3
0xa53e	        0x488b45f8	                mov rax, qword [rbp - 8]	      6312	normal.c	FUNCTION_76	CALL_4
0xa542	          0x488b00	                    mov rax, qword [rax]	      6312	normal.c	FUNCTION_76	CALL_4
0xa545	          0x4889c7	                            mov rdi, rax	      6312	normal.c	FUNCTION_76	CALL_4
0xa548	      0xe89bb4ffff	                    call sym.clearopbeep	      6312	normal.c	FUNCTION_76	CALL_4
0xa54d	            0xeb29	                           jmp 0x400a5b8	      6317	normal.c	FUNCTION_76
0xa54f	    0x8b0500000000	            mov eax, dword [0x0400a595] 	      6314	normal.c	FUNCTION_76	ELSE_1	IF_3
0xa555	          0x83e004	                              and eax, 4	      6314	normal.c	FUNCTION_76	ELSE_1	IF_3
0xa558	            0x85c0	                           test eax, eax	      6314	normal.c	FUNCTION_76	ELSE_1	IF_3
0xa55a	            0x741c	                            je 0x400a5b8	      6314	normal.c	FUNCTION_76	ELSE_1	IF_3
0xa55c	    0x8b0500000000	            mov eax, dword [0x0400a5a2] 	      6314	normal.c	FUNCTION_76	ELSE_1	IF_3
0xa562	            0x85c0	                           test eax, eax	      6314	normal.c	FUNCTION_76	ELSE_1	IF_3
0xa564	            0x7412	                            je 0x400a5b8	      6314	normal.c	FUNCTION_76	ELSE_1	IF_3
0xa566	        0x488b45f8	                mov rax, qword [rbp - 8]	      6314	normal.c	FUNCTION_76	ELSE_1	IF_3
0xa56a	          0x488b00	                    mov rax, qword [rax]	      6314	normal.c	FUNCTION_76	ELSE_1	IF_3
0xa56d	            0x8b00	                    mov eax, dword [rax]	      6314	normal.c	FUNCTION_76	ELSE_1	IF_3
0xa56f	            0x85c0	                           test eax, eax	      6314	normal.c	FUNCTION_76	ELSE_1	IF_3
0xa571	            0x7505	                           jne 0x400a5b8	      6314	normal.c	FUNCTION_76	ELSE_1	IF_3
0xa573	      0xe800000000	                          call 0x400a5b8	      6315	normal.c	FUNCTION_76	ELSE_1	IF_3
0xa578	              0x90	                                     nop	      6317	normal.c	FUNCTION_76
0xa579	              0xc9	                                   leave	      6317	normal.c	FUNCTION_76
0xa57a	              0xc3	                                     ret	      6317	normal.c	FUNCTION_76
invoke_edit	CALL,2:ELSE,1:DO,0:FOR,0:functions,0:IF,3:WHILE,0:SWITCH,0	41
0xfc3f	              0x55	                                push rbp	      9190	normal.c	FUNCTION_129
0xfc40	          0x4889e5	                            mov rbp, rsp	      9190	normal.c	FUNCTION_129
0xfc43	        0x4883ec30	                           sub rsp, 0x30	      9190	normal.c	FUNCTION_129
0xfc47	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9190	normal.c	FUNCTION_129
0xfc4b	          0x8975e4	             mov dword [rbp - 0x1c], esi	      9190	normal.c	FUNCTION_129
0xfc4e	          0x8955e0	             mov dword [rbp - 0x20], edx	      9190	normal.c	FUNCTION_129
0xfc51	          0x894ddc	             mov dword [rbp - 0x24], ecx	      9190	normal.c	FUNCTION_129
0xfc54	    0xc745fc000000	                  mov dword [rbp - 4], 0	      9191	normal.c	FUNCTION_129
0xfc5b	        0x837de400	               cmp dword [rbp - 0x1c], 0	      9196	normal.c	FUNCTION_129	IF_1	CALL_1
0xfc5f	            0x7509	                           jne 0x400fcaa	      9196	normal.c	FUNCTION_129	IF_1	CALL_1
0xfc61	      0xe800000000	                          call 0x400fca6	      9196	normal.c	FUNCTION_129	IF_1	CALL_1
0xfc66	            0x85c0	                           test eax, eax	      9196	normal.c	FUNCTION_129	IF_1	CALL_1
0xfc68	            0x750b	                           jne 0x400fcb5	      9196	normal.c	FUNCTION_129	IF_1	CALL_1
0xfc6a	    0x8b0500000000	            mov eax, dword [0x0400fcb0] 	      9197	normal.c	FUNCTION_129	IF_1
0xfc70	          0x8945fc	                mov dword [rbp - 4], eax	      9197	normal.c	FUNCTION_129	IF_1
0xfc73	            0xeb07	                           jmp 0x400fcbc	      9197	normal.c	FUNCTION_129	IF_1
0xfc75	    0xc745fc000000	                  mov dword [rbp - 4], 0	      9199	normal.c	FUNCTION_129	ELSE_1
0xfc7c	    0xc70500000000	               mov dword [0x0400fcc6], 0	      9202	normal.c	FUNCTION_129
0xfc86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9204	normal.c	FUNCTION_129	IF_2	CALL_2
0xfc8a	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      9204	normal.c	FUNCTION_129	IF_2	CALL_2
0xfc8e	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      9204	normal.c	FUNCTION_129	IF_2	CALL_2
0xfc91	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      9204	normal.c	FUNCTION_129	IF_2	CALL_2
0xfc94	            0x89ce	                            mov esi, ecx	      9204	normal.c	FUNCTION_129	IF_2	CALL_2
0xfc96	            0x89c7	                            mov edi, eax	      9204	normal.c	FUNCTION_129	IF_2	CALL_2
0xfc98	      0xe800000000	                          call 0x400fcdd	      9204	normal.c	FUNCTION_129	IF_2	CALL_2
0xfc9d	            0x85c0	                           test eax, eax	      9204	normal.c	FUNCTION_129	IF_2	CALL_2
0xfc9f	            0x7413	                            je 0x400fcf4	      9204	normal.c	FUNCTION_129	IF_2	CALL_2
0xfca1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9205	normal.c	FUNCTION_129	IF_2
0xfca5	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      9205	normal.c	FUNCTION_129	IF_2
0xfca8	          0x83c801	                               or eax, 1	      9205	normal.c	FUNCTION_129	IF_2
0xfcab	            0x89c2	                            mov edx, eax	      9205	normal.c	FUNCTION_129	IF_2
0xfcad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9205	normal.c	FUNCTION_129	IF_2
0xfcb1	          0x89503c	             mov dword [rax + 0x3c], edx	      9205	normal.c	FUNCTION_129	IF_2
0xfcb4	    0x8b0500000000	            mov eax, dword [0x0400fcfa] 	      9207	normal.c	FUNCTION_129	IF_3
0xfcba	            0x85c0	                           test eax, eax	      9207	normal.c	FUNCTION_129	IF_3
0xfcbc	            0x7509	                           jne 0x400fd07	      9207	normal.c	FUNCTION_129	IF_3
0xfcbe	          0x8b45fc	                mov eax, dword [rbp - 4]	      9208	normal.c	FUNCTION_129	IF_3
0xfcc1	    0x890500000000	            mov dword [0x0400fd07], eax 	      9208	normal.c	FUNCTION_129	IF_3
0xfcc7	              0x90	                                     nop	      9209	normal.c	FUNCTION_129
0xfcc8	              0xc9	                                   leave	      9209	normal.c	FUNCTION_129
0xfcc9	              0xc3	                                     ret	      9209	normal.c	FUNCTION_129
scroll_redraw	CALL,9:ELSE,2:DO,0:FOR,0:functions,0:IF,6:WHILE,1:SWITCH,0	90
0x73da	              0x55	                                push rbp	      4703	normal.c	FUNCTION_50
0x73db	          0x4889e5	                            mov rbp, rsp	      4703	normal.c	FUNCTION_50
0x73de	        0x4883ec30	                           sub rsp, 0x30	      4703	normal.c	FUNCTION_50
0x73e2	          0x897ddc	             mov dword [rbp - 0x24], edi	      4703	normal.c	FUNCTION_50
0x73e5	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4703	normal.c	FUNCTION_50
0x73e9	    0x488b05000000	            mov rax, qword [0x04007430] 	      4704	normal.c	FUNCTION_50
0x73f0	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4704	normal.c	FUNCTION_50
0x73f4	        0x488945f0	             mov qword [rbp - 0x10], rax	      4704	normal.c	FUNCTION_50
0x73f8	    0x488b05000000	            mov rax, qword [0x0400743f] 	      4706	normal.c	FUNCTION_50
0x73ff	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4706	normal.c	FUNCTION_50
0x7405	          0x8945ec	             mov dword [rbp - 0x14], eax	      4706	normal.c	FUNCTION_50
0x7408	    0x488b05000000	            mov rax, qword [0x0400744f] 	      4708	normal.c	FUNCTION_50
0x740f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4708	normal.c	FUNCTION_50
0x7413	        0x488945f8	                mov qword [rbp - 8], rax	      4708	normal.c	FUNCTION_50
0x7417	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4710	normal.c	FUNCTION_50	IF_1
0x741b	            0x7413	                            je 0x4007470	      4710	normal.c	FUNCTION_50	IF_1
0x741d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4711	normal.c	FUNCTION_50	CALL_1
0x7421	      0xbe01000000	                              mov esi, 1	      4711	normal.c	FUNCTION_50	CALL_1
0x7426	          0x4889c7	                            mov rdi, rax	      4711	normal.c	FUNCTION_50	CALL_1
0x7429	      0xe800000000	                          call 0x400746e	      4711	normal.c	FUNCTION_50	CALL_1
0x742e	            0xeb11	                           jmp 0x4007481	      4711	normal.c	FUNCTION_50	CALL_1
0x7430	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4713	normal.c	FUNCTION_50	CALL_2
0x7434	      0xbe01000000	                              mov esi, 1	      4713	normal.c	FUNCTION_50	CALL_2
0x7439	          0x4889c7	                            mov rdi, rax	      4713	normal.c	FUNCTION_50	CALL_2
0x743c	      0xe800000000	                          call 0x4007481	      4713	normal.c	FUNCTION_50	CALL_2
0x7441	    0x488b05000000	            mov rax, qword [0x04007488] 	      4714	normal.c	FUNCTION_50	IF_2
0x7448	          0x4885c0	                           test rax, rax	      4714	normal.c	FUNCTION_50	IF_2
0x744b	     0xf84e8000000	                            je 0x4007579	      4714	normal.c	FUNCTION_50	IF_2
0x7451	      0xe800000000	                          call 0x4007496	      4718	normal.c	FUNCTION_50	IF_2	CALL_3
0x7456	    0x488b05000000	            mov rax, qword [0x0400749d] 	      4719	normal.c	FUNCTION_50	IF_2	CALL_4
0x745d	          0x4889c7	                            mov rdi, rax	      4719	normal.c	FUNCTION_50	IF_2	CALL_4
0x7460	      0xe800000000	                          call 0x40074a5	      4719	normal.c	FUNCTION_50	IF_2	CALL_4
0x7465	    0x488b05000000	            mov rax, qword [0x040074ac] 	      4720	normal.c	FUNCTION_50	IF_2
0x746c	    0x488b15000000	            mov rdx, qword [0x040074b3] 	      4720	normal.c	FUNCTION_50	IF_2
0x7473	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      4720	normal.c	FUNCTION_50	IF_2
0x7479	          0x80ca80	                             or dl, 0x80	      4720	normal.c	FUNCTION_50	IF_2
0x747c	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      4720	normal.c	FUNCTION_50	IF_2
0x7482	      0xe98b000000	                           jmp 0x4007552	      4725	normal.c	FUNCTION_50	IF_2	WHILE_1
0x7487	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4731	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3
0x748b	            0x742e	                            je 0x40074fb	      4731	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3
0x748d	    0x488b05000000	            mov rax, qword [0x040074d4] 	      4733	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x7494	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4733	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x7498	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4733	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x749c	     0xf8f97000000	                            jg 0x4007579	      4733	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x74a2	      0xbe00000000	                              mov esi, 0	      4734	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4	CALL_5
0x74a7	      0xbf01000000	                              mov edi, 1	      4734	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4	CALL_5
0x74ac	      0xe800000000	                          call 0x40074f1	      4734	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4	CALL_5
0x74b1	            0x85c0	                           test eax, eax	      4734	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4	CALL_5
0x74b3	     0xf8480000000	                            je 0x4007579	      4734	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4	CALL_5
0x74b9	            0xeb2b	                           jmp 0x4007526	      4734	normal.c	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4	CALL_5
0x74bb	    0x488b05000000	            mov rax, qword [0x04007502] 	      4739	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5
0x74c2	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4739	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5
0x74c6	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4739	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5
0x74ca	            0x7c6d	                            jl 0x4007579	      4739	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5
0x74cc	      0x48837df001	               cmp qword [rbp - 0x10], 1	      4740	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5
0x74d1	            0x7466	                            je 0x4007579	      4740	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5
0x74d3	      0xbe00000000	                              mov esi, 0	      4741	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5	CALL_6
0x74d8	      0xbf01000000	                              mov edi, 1	      4741	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5	CALL_6
0x74dd	      0xe800000000	                          call 0x4007522	      4741	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5	CALL_6
0x74e2	            0x85c0	                           test eax, eax	      4741	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5	CALL_6
0x74e4	            0x7453	                            je 0x4007579	      4741	normal.c	FUNCTION_50	IF_2	WHILE_1	ELSE_2	IF_5	CALL_6
0x74e6	    0x488b05000000	            mov rax, qword [0x0400752d] 	      4746	normal.c	FUNCTION_50	IF_2	WHILE_1	CALL_7
0x74ed	          0x4889c7	                            mov rdi, rax	      4746	normal.c	FUNCTION_50	IF_2	WHILE_1	CALL_7
0x74f0	      0xe800000000	                          call 0x4007535	      4746	normal.c	FUNCTION_50	IF_2	WHILE_1	CALL_7
0x74f5	    0x488b05000000	            mov rax, qword [0x0400753c] 	      4747	normal.c	FUNCTION_50	IF_2	WHILE_1
0x74fc	    0x488b15000000	            mov rdx, qword [0x04007543] 	      4747	normal.c	FUNCTION_50	IF_2	WHILE_1
0x7503	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      4747	normal.c	FUNCTION_50	IF_2	WHILE_1
0x7509	          0x80ca80	                             or dl, 0x80	      4747	normal.c	FUNCTION_50	IF_2	WHILE_1
0x750c	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      4747	normal.c	FUNCTION_50	IF_2	WHILE_1
0x7512	    0x488b05000000	            mov rax, qword [0x04007559] 	      4725	normal.c	FUNCTION_50	IF_2	WHILE_1
0x7519	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4725	normal.c	FUNCTION_50	IF_2	WHILE_1
0x751d	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4725	normal.c	FUNCTION_50	IF_2	WHILE_1
0x7521	            0x7516	                           jne 0x4007579	      4725	normal.c	FUNCTION_50	IF_2	WHILE_1
0x7523	    0x488b05000000	            mov rax, qword [0x0400756a] 	      4727	normal.c	FUNCTION_50	IF_2	WHILE_1
0x752a	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4727	normal.c	FUNCTION_50	IF_2	WHILE_1
0x7530	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      4727	normal.c	FUNCTION_50	IF_2	WHILE_1
0x7533	     0xf844effffff	                            je 0x40074c7	      4727	normal.c	FUNCTION_50	IF_2	WHILE_1
0x7539	    0x488b05000000	            mov rax, qword [0x04007580] 	      4750	normal.c	FUNCTION_50	IF_6
0x7540	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4750	normal.c	FUNCTION_50	IF_6
0x7544	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4750	normal.c	FUNCTION_50	IF_6
0x7548	            0x7411	                            je 0x400759b	      4750	normal.c	FUNCTION_50	IF_6
0x754a	    0x488b05000000	            mov rax, qword [0x04007591] 	      4751	normal.c	FUNCTION_50	CALL_8
0x7551	          0x8b4048	            mov eax, dword [rax + 0x48] 	      4751	normal.c	FUNCTION_50	CALL_8
0x7554	            0x89c7	                            mov edi, eax	      4751	normal.c	FUNCTION_50	CALL_8
0x7556	      0xe800000000	                          call 0x400759b	      4751	normal.c	FUNCTION_50	CALL_8
0x755b	      0xbf0a000000	                            mov edi, 0xa	      4752	normal.c	FUNCTION_50	CALL_9
0x7560	      0xe800000000	                          call 0x40075a5	      4752	normal.c	FUNCTION_50	CALL_9
0x7565	              0x90	                                     nop	      4753	normal.c	FUNCTION_50
0x7566	              0xc9	                                   leave	      4753	normal.c	FUNCTION_50
0x7567	              0xc3	                                     ret	      4753	normal.c	FUNCTION_50
clearop	CALL,0:ELSE,0:DO,0:FOR,0:functions,0:IF,0:WHILE,0:SWITCH,0	14
0x59b2	              0x55	                                push rbp	      3678	normal.c	FUNCTION_24
0x59b3	          0x4889e5	                            mov rbp, rsp	      3678	normal.c	FUNCTION_24
0x59b6	        0x48897df8	                mov qword [rbp - 8], rdi	      3678	normal.c	FUNCTION_24
0x59ba	        0x488b45f8	                mov rax, qword [rbp - 8]	      3679	normal.c	FUNCTION_24
0x59be	    0xc70000000000	                      mov dword [rax], 0	      3679	normal.c	FUNCTION_24
0x59c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3680	normal.c	FUNCTION_24
0x59c8	    0xc74004000000	                  mov dword [rax + 4], 0	      3680	normal.c	FUNCTION_24
0x59cf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3681	normal.c	FUNCTION_24
0x59d3	    0xc7400c000000	                mov dword [rax + 0xc], 0	      3681	normal.c	FUNCTION_24
0x59da	        0x488b45f8	                mov rax, qword [rbp - 8]	      3682	normal.c	FUNCTION_24
0x59de	    0xc74010000000	               mov dword [rax + 0x10], 0	      3682	normal.c	FUNCTION_24
0x59e5	              0x90	                                     nop	      3683	normal.c	FUNCTION_24
0x59e6	              0x5d	                                 pop rbp	      3683	normal.c	FUNCTION_24
0x59e7	              0xc3	                                     ret	      3683	normal.c	FUNCTION_24
n_start_visual_mode	CALL,7:ELSE,0:DO,0:FOR,0:functions,0:IF,3:WHILE,0:SWITCH,0	54
0xd4ca	              0x55	                                push rbp	      7795	normal.c	FUNCTION_104
0xd4cb	          0x4889e5	                            mov rbp, rsp	      7795	normal.c	FUNCTION_104
0xd4ce	        0x4883ec10	                           sub rsp, 0x10	      7795	normal.c	FUNCTION_104
0xd4d2	          0x897dfc	                mov dword [rbp - 4], edi	      7795	normal.c	FUNCTION_104
0xd4d5	      0xe800000000	                          call 0x400d51a	      7798	normal.c	FUNCTION_104	CALL_1
0xd4da	          0x8b45fc	                mov eax, dword [rbp - 4]	      7801	normal.c	FUNCTION_104
0xd4dd	    0x890500000000	            mov dword [0x0400d523], eax 	      7801	normal.c	FUNCTION_104
0xd4e3	    0xc70500000000	               mov dword [0x0400d52d], 1	      7802	normal.c	FUNCTION_104
0xd4ed	    0xc70500000000	               mov dword [0x0400d537], 1	      7803	normal.c	FUNCTION_104
0xd4f7	        0x837dfc16	               cmp dword [rbp - 4], 0x16	      7808	normal.c	FUNCTION_104	IF_1	CALL_2
0xd4fb	            0x7530	                           jne 0x400d56d	      7808	normal.c	FUNCTION_104	IF_1	CALL_2
0xd4fd	    0x8b0500000000	            mov eax, dword [0x0400d543] 	      7808	normal.c	FUNCTION_104	IF_1	CALL_2
0xd503	          0x83e005	                              and eax, 5	      7808	normal.c	FUNCTION_104	IF_1	CALL_2
0xd506	            0x85c0	                           test eax, eax	      7808	normal.c	FUNCTION_104	IF_1	CALL_2
0xd508	            0x7423	                            je 0x400d56d	      7808	normal.c	FUNCTION_104	IF_1	CALL_2
0xd50a	      0xe800000000	                          call 0x400d54f	      7808	normal.c	FUNCTION_104	IF_1	CALL_2
0xd50f	          0x83f809	                              cmp eax, 9	      7808	normal.c	FUNCTION_104	IF_1	CALL_2
0xd512	            0x7519	                           jne 0x400d56d	      7808	normal.c	FUNCTION_104	IF_1	CALL_2
0xd514	      0xe800000000	                          call 0x400d559	      7810	normal.c	FUNCTION_104	IF_1	CALL_3
0xd519	    0x488b05000000	            mov rax, qword [0x0400d560] 	      7811	normal.c	FUNCTION_104	IF_1	CALL_4
0xd520	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      7811	normal.c	FUNCTION_104	IF_1	CALL_4
0xd526	            0x89c7	                            mov edi, eax	      7811	normal.c	FUNCTION_104	IF_1	CALL_4
0xd528	      0xe800000000	                          call 0x400d56d	      7811	normal.c	FUNCTION_104	IF_1	CALL_4
0xd52d	    0x488b05000000	            mov rax, qword [0x0400d574] 	      7814	normal.c	FUNCTION_104
0xd534	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7814	normal.c	FUNCTION_104
0xd538	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7814	normal.c	FUNCTION_104
0xd53c	    0x488905000000	            mov qword [0x0400d583], rax 	      7814	normal.c	FUNCTION_104
0xd543	    0x488915000000	            mov qword [0x0400d58a], rdx 	      7814	normal.c	FUNCTION_104
0xd54a	      0xe800000000	                          call 0x400d58f	      7817	normal.c	FUNCTION_104	CALL_5
0xd54f	      0xe800000000	                          call 0x400d594	      7821	normal.c	FUNCTION_104	CALL_6
0xd554	      0xe800000000	                          call 0x400d599	      7825	normal.c	FUNCTION_104	CALL_7
0xd559	    0x8b0500000000	            mov eax, dword [0x0400d59f] 	      7828	normal.c	FUNCTION_104	IF_2
0xd55f	            0x85c0	                           test eax, eax	      7828	normal.c	FUNCTION_104	IF_2
0xd561	            0x7414	                            je 0x400d5b7	      7828	normal.c	FUNCTION_104	IF_2
0xd563	    0x8b0500000000	            mov eax, dword [0x0400d5a9] 	      7828	normal.c	FUNCTION_104	IF_2
0xd569	            0x85c0	                           test eax, eax	      7828	normal.c	FUNCTION_104	IF_2
0xd56b	            0x750a	                           jne 0x400d5b7	      7828	normal.c	FUNCTION_104	IF_2
0xd56d	    0xc70500000000	               mov dword [0x0400d5b7], 1	      7829	normal.c	FUNCTION_104	IF_2
0xd577	    0xc70500000000	               mov dword [0x0400d5c1], 0	      7833	normal.c	FUNCTION_104
0xd581	    0x488b05000000	            mov rax, qword [0x0400d5c8] 	      7838	normal.c	FUNCTION_104	IF_3
0xd588	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      7838	normal.c	FUNCTION_104	IF_3
0xd58e	          0x83f813	                           cmp eax, 0x13	      7838	normal.c	FUNCTION_104	IF_3
0xd591	            0x7f2c	                            jg 0x400d5ff	      7838	normal.c	FUNCTION_104	IF_3
0xd593	    0x488b05000000	            mov rax, qword [0x0400d5da] 	      7840	normal.c	FUNCTION_104	IF_3
0xd59a	    0x488b15000000	            mov rdx, qword [0x0400d5e1] 	      7840	normal.c	FUNCTION_104	IF_3
0xd5a1	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      7840	normal.c	FUNCTION_104	IF_3
0xd5a5	        0x48895058	             mov qword [rax + 0x58], rdx	      7840	normal.c	FUNCTION_104	IF_3
0xd5a9	    0x488b05000000	            mov rax, qword [0x0400d5f0] 	      7841	normal.c	FUNCTION_104	IF_3
0xd5b0	    0x488b15000000	            mov rdx, qword [0x0400d5f7] 	      7841	normal.c	FUNCTION_104	IF_3
0xd5b7	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      7841	normal.c	FUNCTION_104	IF_3
0xd5bb	        0x48895068	             mov qword [rax + 0x68], rdx	      7841	normal.c	FUNCTION_104	IF_3
0xd5bf	              0x90	                                     nop	      7843	normal.c	FUNCTION_104
0xd5c0	              0xc9	                                   leave	      7843	normal.c	FUNCTION_104
0xd5c1	              0xc3	                                     ret	      7843	normal.c	FUNCTION_104
nv_mark	CALL,3:ELSE,0:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	23
0xbb5c	              0x55	                                push rbp	      6922	normal.c	FUNCTION_84
0xbb5d	          0x4889e5	                            mov rbp, rsp	      6922	normal.c	FUNCTION_84
0xbb60	        0x4883ec10	                           sub rsp, 0x10	      6922	normal.c	FUNCTION_84
0xbb64	        0x48897df8	                mov qword [rbp - 8], rdi	      6922	normal.c	FUNCTION_84
0xbb68	        0x488b45f8	                mov rax, qword [rbp - 8]	      6923	normal.c	FUNCTION_84	IF_1	CALL_1
0xbb6c	          0x488b00	                    mov rax, qword [rax]	      6923	normal.c	FUNCTION_84	IF_1	CALL_1
0xbb6f	          0x4889c7	                            mov rdi, rax	      6923	normal.c	FUNCTION_84	IF_1	CALL_1
0xbb72	      0xe8d19dffff	                   call sym.checkclearop	      6923	normal.c	FUNCTION_84	IF_1	CALL_1
0xbb77	            0x85c0	                           test eax, eax	      6923	normal.c	FUNCTION_84	IF_1	CALL_1
0xbb79	            0x7521	                           jne 0x400bbdc	      6923	normal.c	FUNCTION_84	IF_1	CALL_1
0xbb7b	        0x488b45f8	                mov rax, qword [rbp - 8]	      6925	normal.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xbb7f	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6925	normal.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xbb82	            0x89c7	                            mov edi, eax	      6925	normal.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xbb84	      0xe800000000	                          call 0x400bbc9	      6925	normal.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xbb89	            0x85c0	                           test eax, eax	      6925	normal.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xbb8b	            0x750f	                           jne 0x400bbdc	      6925	normal.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xbb8d	        0x488b45f8	                mov rax, qword [rbp - 8]	      6926	normal.c	FUNCTION_84	IF_1	CALL_3
0xbb91	          0x488b00	                    mov rax, qword [rax]	      6926	normal.c	FUNCTION_84	IF_1	CALL_3
0xbb94	          0x4889c7	                            mov rdi, rax	      6926	normal.c	FUNCTION_84	IF_1	CALL_3
0xbb97	      0xe84c9effff	                    call sym.clearopbeep	      6926	normal.c	FUNCTION_84	IF_1	CALL_3
0xbb9c	              0x90	                                     nop	      6928	normal.c	FUNCTION_84
0xbb9d	              0xc9	                                   leave	      6928	normal.c	FUNCTION_84
0xbb9e	              0xc3	                                     ret	      6928	normal.c	FUNCTION_84
get_mouse_class	CALL,4:ELSE,0:DO,0:FOR,0:functions,0:IF,4:WHILE,0:SWITCH,0	48
0x4e70	              0x55	                                push rbp	      3253	normal.c	FUNCTION_12
0x4e71	          0x4889e5	                            mov rbp, rsp	      3253	normal.c	FUNCTION_12
0x4e74	        0x4883ec20	                           sub rsp, 0x20	      3253	normal.c	FUNCTION_12
0x4e78	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3253	normal.c	FUNCTION_12
0x4e7c	    0x8b0500000000	            mov eax, dword [0x04004ec2] 	      3257	normal.c	FUNCTION_12	IF_1	CALL_1
0x4e82	            0x85c0	                           test eax, eax	      3257	normal.c	FUNCTION_12	IF_1	CALL_1
0x4e84	            0x7425	                            je 0x4004eeb	      3257	normal.c	FUNCTION_12	IF_1	CALL_1
0x4e86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3257	normal.c	FUNCTION_12	IF_1	CALL_1
0x4e8a	           0xfb600	                   movzx eax, byte [rax]	      3257	normal.c	FUNCTION_12	IF_1	CALL_1
0x4e8d	           0xfb6c0	                           movzx eax, al	      3257	normal.c	FUNCTION_12	IF_1	CALL_1
0x4e90	            0x4898	                                    cdqe	      3257	normal.c	FUNCTION_12	IF_1	CALL_1
0x4e92	     0xfb680000000	                   movzx eax, byte [rax]	      3257	normal.c	FUNCTION_12	IF_1	CALL_1
0x4e99	            0x3c01	                               cmp al, 1	      3257	normal.c	FUNCTION_12	IF_1	CALL_1
0x4e9b	            0x7e0e	                           jle 0x4004eeb	      3257	normal.c	FUNCTION_12	IF_1	CALL_1
0x4e9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3258	normal.c	FUNCTION_12	CALL_2
0x4ea1	          0x4889c7	                            mov rdi, rax	      3258	normal.c	FUNCTION_12	CALL_2
0x4ea4	      0xe800000000	                          call 0x4004ee9	      3258	normal.c	FUNCTION_12	CALL_2
0x4ea9	            0xeb59	                           jmp 0x4004f44	      3258	normal.c	FUNCTION_12	CALL_2
0x4eab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3261	normal.c	FUNCTION_12
0x4eaf	           0xfb600	                   movzx eax, byte [rax]	      3261	normal.c	FUNCTION_12
0x4eb2	           0xfb6c0	                           movzx eax, al	      3261	normal.c	FUNCTION_12
0x4eb5	          0x8945fc	                mov dword [rbp - 4], eax	      3261	normal.c	FUNCTION_12
0x4eb8	        0x837dfc20	               cmp dword [rbp - 4], 0x20	      3262	normal.c	FUNCTION_12	IF_2
0x4ebc	            0x7406	                            je 0x4004f04	      3262	normal.c	FUNCTION_12	IF_2
0x4ebe	        0x837dfc09	                  cmp dword [rbp - 4], 9	      3262	normal.c	FUNCTION_12	IF_2
0x4ec2	            0x7507	                           jne 0x4004f0b	      3262	normal.c	FUNCTION_12	IF_2
0x4ec4	      0xb800000000	                              mov eax, 0	      3263	normal.c	FUNCTION_12	IF_2
0x4ec9	            0xeb39	                           jmp 0x4004f44	      3263	normal.c	FUNCTION_12	IF_2
0x4ecb	          0x8b45fc	                mov eax, dword [rbp - 4]	      3265	normal.c	FUNCTION_12	IF_3	CALL_3
0x4ece	            0x89c7	                            mov edi, eax	      3265	normal.c	FUNCTION_12	IF_3	CALL_3
0x4ed0	      0xe800000000	                          call 0x4004f15	      3265	normal.c	FUNCTION_12	IF_3	CALL_3
0x4ed5	            0x85c0	                           test eax, eax	      3265	normal.c	FUNCTION_12	IF_3	CALL_3
0x4ed7	            0x7407	                            je 0x4004f20	      3265	normal.c	FUNCTION_12	IF_3	CALL_3
0x4ed9	      0xb802000000	                              mov eax, 2	      3266	normal.c	FUNCTION_12	IF_3
0x4ede	            0xeb24	                           jmp 0x4004f44	      3266	normal.c	FUNCTION_12	IF_3
0x4ee0	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3274	normal.c	FUNCTION_12	IF_4	CALL_4
0x4ee4	            0x741b	                            je 0x4004f41	      3274	normal.c	FUNCTION_12	IF_4	CALL_4
0x4ee6	          0x8b45fc	                mov eax, dword [rbp - 4]	      3274	normal.c	FUNCTION_12	IF_4	CALL_4
0x4ee9	            0x89c6	                            mov esi, eax	      3274	normal.c	FUNCTION_12	IF_4	CALL_4
0x4eeb	      0xbf00000000	                              mov edi, 0	      3274	normal.c	FUNCTION_12	IF_4	CALL_4
0x4ef0	      0xe800000000	                          call 0x4004f35	      3274	normal.c	FUNCTION_12	IF_4	CALL_4
0x4ef5	          0x4885c0	                           test rax, rax	      3274	normal.c	FUNCTION_12	IF_4	CALL_4
0x4ef8	            0x7407	                            je 0x4004f41	      3274	normal.c	FUNCTION_12	IF_4	CALL_4
0x4efa	      0xb801000000	                              mov eax, 1	      3275	normal.c	FUNCTION_12	IF_4
0x4eff	            0xeb03	                           jmp 0x4004f44	      3275	normal.c	FUNCTION_12	IF_4
0x4f01	          0x8b45fc	                mov eax, dword [rbp - 4]	      3276	normal.c	FUNCTION_12
0x4f04	              0xc9	                                   leave	      3277	normal.c	FUNCTION_12
0x4f05	              0xc3	                                     ret	      3277	normal.c	FUNCTION_12
nv_pcmark	CALL,14:ELSE,6:DO,0:FOR,0:functions,0:IF,8:WHILE,0:SWITCH,0	96
0xcee8	              0x55	                                push rbp	      7588	normal.c	FUNCTION_99
0xcee9	          0x4889e5	                            mov rbp, rsp	      7588	normal.c	FUNCTION_99
0xceec	        0x4883ec30	                           sub rsp, 0x30	      7588	normal.c	FUNCTION_99
0xcef0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      7588	normal.c	FUNCTION_99
0xcef4	    0x488b05000000	            mov rax, qword [0x0400cf3b] 	      7592	normal.c	FUNCTION_99
0xcefb	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7592	normal.c	FUNCTION_99
0xceff	        0x488945f8	                mov qword [rbp - 8], rax	      7592	normal.c	FUNCTION_99
0xcf03	    0x8b0500000000	            mov eax, dword [0x0400cf49] 	      7593	normal.c	FUNCTION_99
0xcf09	          0x8945ec	             mov dword [rbp - 0x14], eax	      7593	normal.c	FUNCTION_99
0xcf0c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7596	normal.c	FUNCTION_99	IF_1	CALL_1
0xcf10	          0x488b00	                    mov rax, qword [rax]	      7596	normal.c	FUNCTION_99	IF_1	CALL_1
0xcf13	          0x4889c7	                            mov rdi, rax	      7596	normal.c	FUNCTION_99	IF_1	CALL_1
0xcf16	      0xe85d8affff	                  call sym.checkclearopq	      7596	normal.c	FUNCTION_99	IF_1	CALL_1
0xcf1b	            0x85c0	                           test eax, eax	      7596	normal.c	FUNCTION_99	IF_1	CALL_1
0xcf1d	     0xf8523010000	                           jne 0x400d086	      7596	normal.c	FUNCTION_99	IF_1	CALL_1
0xcf23	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7598	normal.c	FUNCTION_99	IF_1	IF_2
0xcf27	          0x8b400c	              mov eax, dword [rax + 0xc]	      7598	normal.c	FUNCTION_99	IF_1	IF_2
0xcf2a	          0x83f867	                           cmp eax, 0x67	      7598	normal.c	FUNCTION_99	IF_1	IF_2
0xcf2d	            0x7515	                           jne 0x400cf84	      7598	normal.c	FUNCTION_99	IF_1	IF_2
0xcf2f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7599	normal.c	FUNCTION_99	IF_1	CALL_2
0xcf33	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7599	normal.c	FUNCTION_99	IF_1	CALL_2
0xcf37	            0x89c7	                            mov edi, eax	      7599	normal.c	FUNCTION_99	IF_1	CALL_2
0xcf39	      0xe800000000	                          call 0x400cf7e	      7599	normal.c	FUNCTION_99	IF_1	CALL_2
0xcf3e	        0x488945f0	             mov qword [rbp - 0x10], rax	      7599	normal.c	FUNCTION_99	IF_1	CALL_2
0xcf42	            0xeb13	                           jmp 0x400cf97	      7599	normal.c	FUNCTION_99	IF_1	CALL_2
0xcf44	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7601	normal.c	FUNCTION_99	IF_1	CALL_3
0xcf48	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7601	normal.c	FUNCTION_99	IF_1	CALL_3
0xcf4c	            0x89c7	                            mov edi, eax	      7601	normal.c	FUNCTION_99	IF_1	CALL_3
0xcf4e	      0xe800000000	                          call 0x400cf93	      7601	normal.c	FUNCTION_99	IF_1	CALL_3
0xcf53	        0x488945f0	             mov qword [rbp - 0x10], rax	      7601	normal.c	FUNCTION_99	IF_1	CALL_3
0xcf57	      0x48837df0ff	cmp qword [rbp - 0x10], 0xffffffffffffffff	      7602	normal.c	FUNCTION_99	IF_1	IF_3
0xcf5c	            0x7518	                           jne 0x400cfb6	      7602	normal.c	FUNCTION_99	IF_1	IF_3
0xcf5e	    0x488b05000000	            mov rax, qword [0x0400cfa5] 	      7604	normal.c	FUNCTION_99	IF_1	IF_3
0xcf65	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7604	normal.c	FUNCTION_99	IF_1	IF_3
0xcf6c	      0xe800000000	                          call 0x400cfb1	      7605	normal.c	FUNCTION_99	IF_1	IF_3	CALL_4
0xcf71	      0xe993000000	                           jmp 0x400d049	      7605	normal.c	FUNCTION_99	IF_1	IF_3	CALL_4
0xcf76	      0x48837df000	               cmp qword [rbp - 0x10], 0	      7607	normal.c	FUNCTION_99	IF_1	ELSE_2	IF_4
0xcf7b	            0x7417	                            je 0x400cfd4	      7607	normal.c	FUNCTION_99	IF_1	ELSE_2	IF_4
0xcf7d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      7608	normal.c	FUNCTION_99	IF_1	ELSE_2	IF_4
0xcf81	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7608	normal.c	FUNCTION_99	IF_1	ELSE_2	IF_4
0xcf85	      0xbe00000000	                              mov esi, 0	      7608	normal.c	FUNCTION_99	IF_1	ELSE_2	IF_4
0xcf8a	          0x4889c7	                            mov rdi, rax	      7608	normal.c	FUNCTION_99	IF_1	ELSE_2	IF_4
0xcf8d	      0xe8bdfaffff	                  call sym.nv_cursormark	      7608	normal.c	FUNCTION_99	IF_1	ELSE_2	IF_4
0xcf92	            0xeb75	                           jmp 0x400d049	      7608	normal.c	FUNCTION_99	IF_1	ELSE_2	IF_4
0xcf94	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7609	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5
0xcf98	          0x8b400c	              mov eax, dword [rax + 0xc]	      7609	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5
0xcf9b	          0x83f867	                           cmp eax, 0x67	      7609	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5
0xcf9e	            0x755a	                           jne 0x400d03a	      7609	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5
0xcfa0	    0x488b05000000	            mov rax, qword [0x0400cfe7] 	      7611	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	IF_6
0xcfa7	    0x8b8088090000	           mov eax, dword [rax + 0x988] 	      7611	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	IF_6
0xcfad	            0x85c0	                           test eax, eax	      7611	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	IF_6
0xcfaf	            0x7514	                           jne 0x400d005	      7611	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	IF_6
0xcfb1	      0xbf00000000	                              mov edi, 0	      7612	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_7
0xcfb6	      0xe800000000	                          call 0x400cffb	      7612	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_7
0xcfbb	          0x4889c7	                            mov rdi, rax	      7612	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_7
0xcfbe	      0xe800000000	                          call 0x400d003	      7612	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_7
0xcfc3	            0xeb44	                           jmp 0x400d049	      7612	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_7
0xcfc5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7613	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0xcfc9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7613	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0xcfcd	          0x4885c0	                           test rax, rax	      7613	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0xcfd0	            0x7914	                           jns 0x400d026	      7613	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0xcfd2	      0xbf00000000	                              mov edi, 0	      7614	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0xcfd7	      0xe800000000	                          call 0x400d01c	      7614	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0xcfdc	          0x4889c7	                            mov rdi, rax	      7614	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0xcfdf	      0xe800000000	                          call 0x400d024	      7614	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0xcfe4	            0xeb23	                           jmp 0x400d049	      7614	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	ELSE_4	IF_7
0xcfe6	      0xbf00000000	                              mov edi, 0	      7616	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_11
0xcfeb	      0xe800000000	                          call 0x400d030	      7616	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_11
0xcff0	          0x4889c7	                            mov rdi, rax	      7616	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_11
0xcff3	      0xe800000000	                          call 0x400d038	      7616	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_11
0xcff8	            0xeb0f	                           jmp 0x400d049	      7616	normal.c	FUNCTION_99	IF_1	ELSE_3	IF_5	CALL_11
0xcffa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7619	normal.c	FUNCTION_99	IF_1	CALL_12
0xcffe	          0x488b00	                    mov rax, qword [rax]	      7619	normal.c	FUNCTION_99	IF_1	CALL_12
0xd001	          0x4889c7	                            mov rdi, rax	      7619	normal.c	FUNCTION_99	IF_1	CALL_12
0xd004	      0xe8df89ffff	                    call sym.clearopbeep	      7619	normal.c	FUNCTION_99	IF_1	CALL_12
0xd009	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7621	normal.c	FUNCTION_99	IF_1	IF_8
0xd00d	          0x488b00	                    mov rax, qword [rax]	      7621	normal.c	FUNCTION_99	IF_1	IF_8
0xd010	            0x8b00	                    mov eax, dword [rax]	      7621	normal.c	FUNCTION_99	IF_1	IF_8
0xd012	            0x85c0	                           test eax, eax	      7621	normal.c	FUNCTION_99	IF_1	IF_8
0xd014	            0x7530	                           jne 0x400d086	      7621	normal.c	FUNCTION_99	IF_1	IF_8
0xd016	      0x48837df0ff	cmp qword [rbp - 0x10], 0xffffffffffffffff	      7622	normal.c	FUNCTION_99	IF_1	IF_8
0xd01b	            0x7411	                            je 0x400d06e	      7622	normal.c	FUNCTION_99	IF_1	IF_8
0xd01d	    0x488b05000000	            mov rax, qword [0x0400d064] 	      7622	normal.c	FUNCTION_99	IF_1	IF_8
0xd024	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7622	normal.c	FUNCTION_99	IF_1	IF_8
0xd028	        0x483b45f8	                cmp rax, qword [rbp - 8]	      7622	normal.c	FUNCTION_99	IF_1	IF_8
0xd02c	            0x7418	                            je 0x400d086	      7622	normal.c	FUNCTION_99	IF_1	IF_8
0xd02e	    0x8b0500000000	            mov eax, dword [0x0400d074] 	      7623	normal.c	FUNCTION_99	IF_1	IF_8
0xd034	          0x83e008	                              and eax, 8	      7623	normal.c	FUNCTION_99	IF_1	IF_8
0xd037	            0x85c0	                           test eax, eax	      7623	normal.c	FUNCTION_99	IF_1	IF_8
0xd039	            0x740b	                            je 0x400d086	      7623	normal.c	FUNCTION_99	IF_1	IF_8
0xd03b	        0x837dec00	               cmp dword [rbp - 0x14], 0	      7624	normal.c	FUNCTION_99	IF_1	IF_8
0xd03f	            0x7405	                            je 0x400d086	      7624	normal.c	FUNCTION_99	IF_1	IF_8
0xd041	      0xe800000000	                          call 0x400d086	      7625	normal.c	FUNCTION_99	IF_1	CALL_13
0xd046	              0x90	                                     nop	      7631	normal.c	FUNCTION_99
0xd047	              0xc9	                                   leave	      7631	normal.c	FUNCTION_99
0xd048	              0xc3	                                     ret	      7631	normal.c	FUNCTION_99
do_pending_operator	CALL,108:ELSE,32:DO,0:FOR,0:functions,0:IF,80:WHILE,0:SWITCH,1	1523
0x1a6a	              0x55	                                push rbp	      1370	normal.c	FUNCTION_6
0x1a6b	          0x4889e5	                            mov rbp, rsp	      1370	normal.c	FUNCTION_6
0x1a6e	            0x4156	                                push r14	      1370	normal.c	FUNCTION_6
0x1a70	            0x4155	                                push r13	      1370	normal.c	FUNCTION_6
0x1a72	            0x4154	                                push r12	      1370	normal.c	FUNCTION_6
0x1a74	              0x53	                                push rbx	      1370	normal.c	FUNCTION_6
0x1a75	        0x4883ec40	                           sub rsp, 0x40	      1370	normal.c	FUNCTION_6
0x1a79	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1370	normal.c	FUNCTION_6
0x1a7d	          0x8975a4	             mov dword [rbp - 0x5c], esi	      1370	normal.c	FUNCTION_6
0x1a80	          0x8955a0	             mov dword [rbp - 0x60], edx	      1370	normal.c	FUNCTION_6
0x1a83	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1371	normal.c	FUNCTION_6
0x1a87	          0x488b00	                    mov rax, qword [rax]	      1371	normal.c	FUNCTION_6
0x1a8a	        0x488945c8	             mov qword [rbp - 0x38], rax	      1371	normal.c	FUNCTION_6
0x1a8e	    0x488b05000000	            mov rax, qword [0x04001ad5] 	      1376	normal.c	FUNCTION_6
0x1a95	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      1376	normal.c	FUNCTION_6
0x1a9b	          0x8945bc	             mov dword [rbp - 0x44], eax	      1376	normal.c	FUNCTION_6
0x1a9e	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      1386	normal.c	FUNCTION_6
0x1aa5	    0x8b0500000000	            mov eax, dword [0x04001aeb] 	      1397	normal.c	FUNCTION_6	IF_1
0x1aab	            0x85c0	                           test eax, eax	      1397	normal.c	FUNCTION_6	IF_1
0x1aad	            0x750a	                           jne 0x4001af9	      1397	normal.c	FUNCTION_6	IF_1
0x1aaf	    0x8b0500000000	            mov eax, dword [0x04001af5] 	      1397	normal.c	FUNCTION_6	IF_1
0x1ab5	            0x85c0	                           test eax, eax	      1397	normal.c	FUNCTION_6	IF_1
0x1ab7	            0x7434	                            je 0x4001b2d	      1397	normal.c	FUNCTION_6	IF_1
0x1ab9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1398	normal.c	FUNCTION_6	IF_1
0x1abd	            0x8b00	                    mov eax, dword [rax]	      1398	normal.c	FUNCTION_6	IF_1
0x1abf	            0x85c0	                           test eax, eax	      1398	normal.c	FUNCTION_6	IF_1
0x1ac1	            0x742a	                            je 0x4001b2d	      1398	normal.c	FUNCTION_6	IF_1
0x1ac3	        0x837da000	               cmp dword [rbp - 0x60], 0	      1399	normal.c	FUNCTION_6	IF_1
0x1ac7	            0x7524	                           jne 0x4001b2d	      1399	normal.c	FUNCTION_6	IF_1
0x1ac9	    0x8b0500000000	            mov eax, dword [0x04001b0f] 	      1400	normal.c	FUNCTION_6	IF_1
0x1acf	            0x85c0	                           test eax, eax	      1400	normal.c	FUNCTION_6	IF_1
0x1ad1	            0x741a	                            je 0x4001b2d	      1400	normal.c	FUNCTION_6	IF_1
0x1ad3	    0x8b0500000000	            mov eax, dword [0x04001b19] 	      1401	normal.c	FUNCTION_6	IF_1
0x1ad9	            0x85c0	                           test eax, eax	      1401	normal.c	FUNCTION_6	IF_1
0x1adb	            0x7510	                           jne 0x4001b2d	      1401	normal.c	FUNCTION_6	IF_1
0x1add	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1402	normal.c	FUNCTION_6	IF_1
0x1ae1	          0x8b4004	                mov eax, dword [rax + 4]	      1402	normal.c	FUNCTION_6	IF_1
0x1ae4	            0x85c0	                           test eax, eax	      1402	normal.c	FUNCTION_6	IF_1
0x1ae6	            0x7505	                           jne 0x4001b2d	      1402	normal.c	FUNCTION_6	IF_1
0x1ae8	      0xe800000000	                          call 0x4001b2d	      1403	normal.c	FUNCTION_6	CALL_1
0x1aed	    0x488b05000000	            mov rax, qword [0x04001b34] 	      1405	normal.c	FUNCTION_6
0x1af4	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1405	normal.c	FUNCTION_6
0x1af8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1405	normal.c	FUNCTION_6
0x1afc	        0x488945d0	             mov qword [rbp - 0x30], rax	      1405	normal.c	FUNCTION_6
0x1b00	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1405	normal.c	FUNCTION_6
0x1b04	    0x8b0500000000	            mov eax, dword [0x04001b4a] 	      1410	normal.c	FUNCTION_6	IF_2
0x1b0a	            0x85c0	                           test eax, eax	      1410	normal.c	FUNCTION_6	IF_2
0x1b0c	            0x750e	                           jne 0x4001b5c	      1410	normal.c	FUNCTION_6	IF_2
0x1b0e	    0x8b0500000000	            mov eax, dword [0x04001b54] 	      1410	normal.c	FUNCTION_6	IF_2
0x1b14	            0x85c0	                           test eax, eax	      1410	normal.c	FUNCTION_6	IF_2
0x1b16	     0xf8457170000	                            je 0x40032b3	      1410	normal.c	FUNCTION_6	IF_2
0x1b1c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1410	normal.c	FUNCTION_6	IF_2
0x1b20	            0x8b00	                    mov eax, dword [rax]	      1410	normal.c	FUNCTION_6	IF_2
0x1b22	            0x85c0	                           test eax, eax	      1410	normal.c	FUNCTION_6	IF_2
0x1b24	     0xf8449170000	                            je 0x40032b3	      1410	normal.c	FUNCTION_6	IF_2
0x1b2a	    0x488b05000000	            mov rax, qword [0x04001b71] 	      1414	normal.c	FUNCTION_6	IF_2	IF_3
0x1b31	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      1414	normal.c	FUNCTION_6	IF_2	IF_3
0x1b37	            0x85c0	                           test eax, eax	      1414	normal.c	FUNCTION_6	IF_2	IF_3
0x1b39	            0x741d	                            je 0x4001b98	      1414	normal.c	FUNCTION_6	IF_2	IF_3
0x1b3b	    0x488b05000000	            mov rax, qword [0x04001b82] 	      1415	normal.c	FUNCTION_6	IF_2	IF_3
0x1b42	    0x488b15000000	            mov rdx, qword [0x04001b89] 	      1415	normal.c	FUNCTION_6	IF_2	IF_3
0x1b49	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1415	normal.c	FUNCTION_6	IF_2	IF_3
0x1b4f	          0x83e2fb	                     and edx, 0xfffffffb	      1415	normal.c	FUNCTION_6	IF_2	IF_3
0x1b52	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1415	normal.c	FUNCTION_6	IF_2	IF_3
0x1b58	    0x488b05000000	            mov rax, qword [0x04001b9f] 	      1416	normal.c	FUNCTION_6	IF_2
0x1b5f	    0xc78030020000	              mov dword [rax + 0x230], 0	      1416	normal.c	FUNCTION_6	IF_2
0x1b69	    0x8b1500000000	            mov edx, dword [0x04001baf] 	      1418	normal.c	FUNCTION_6	IF_2
0x1b6f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1418	normal.c	FUNCTION_6	IF_2
0x1b73	          0x89505c	             mov dword [rax + 0x5c], edx	      1418	normal.c	FUNCTION_6	IF_2
0x1b76	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1419	normal.c	FUNCTION_6	IF_2	IF_4
0x1b7a	          0x8b400c	              mov eax, dword [rax + 0xc]	      1419	normal.c	FUNCTION_6	IF_2	IF_4
0x1b7d	          0x83f856	                           cmp eax, 0x56	      1419	normal.c	FUNCTION_6	IF_2	IF_4
0x1b80	            0x7510	                           jne 0x4001bd2	      1419	normal.c	FUNCTION_6	IF_2	IF_4
0x1b82	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1420	normal.c	FUNCTION_6	IF_2	IF_4
0x1b86	    0xc74008010000	                  mov dword [rax + 8], 1	      1420	normal.c	FUNCTION_6	IF_2	IF_4
0x1b8d	      0xe9a1000000	                           jmp 0x4001c73	      1420	normal.c	FUNCTION_6	IF_2	IF_4
0x1b92	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1421	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5
0x1b96	          0x8b400c	              mov eax, dword [rax + 0xc]	      1421	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5
0x1b99	          0x83f876	                           cmp eax, 0x76	      1421	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5
0x1b9c	            0x7547	                           jne 0x4001c25	      1421	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5
0x1b9e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1425	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	IF_6
0x1ba2	          0x8b4008	                mov eax, dword [rax + 8]	      1425	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	IF_6
0x1ba5	          0x83f801	                              cmp eax, 1	      1425	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	IF_6
0x1ba8	            0x750d	                           jne 0x4001bf7	      1425	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	IF_6
0x1baa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1426	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	IF_6
0x1bae	    0xc74014000000	               mov dword [rax + 0x14], 0	      1426	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	IF_6
0x1bb5	            0xeb21	                           jmp 0x4001c18	      1426	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	IF_6
0x1bb7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1428	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x1bbb	          0x8b4008	                mov eax, dword [rax + 8]	      1428	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x1bbe	            0x85c0	                           test eax, eax	      1428	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x1bc0	            0x7516	                           jne 0x4001c18	      1428	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x1bc2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1429	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x1bc6	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1429	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x1bc9	            0x85c0	                           test eax, eax	      1429	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x1bcb	           0xf94c0	                                 sete al	      1429	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x1bce	           0xfb6d0	                           movzx edx, al	      1429	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x1bd1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1429	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x1bd5	          0x895014	             mov dword [rax + 0x14], edx	      1429	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5	ELSE_2	IF_7
0x1bd8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1430	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5
0x1bdc	    0xc74008000000	                  mov dword [rax + 8], 0	      1430	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5
0x1be3	            0xeb4e	                           jmp 0x4001c73	      1430	normal.c	FUNCTION_6	IF_2	ELSE_1	IF_5
0x1be5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1432	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x1be9	          0x8b400c	              mov eax, dword [rax + 0xc]	      1432	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x1bec	          0x83f816	                           cmp eax, 0x16	      1432	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x1bef	            0x7542	                           jne 0x4001c73	      1432	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x1bf1	    0xc70500000000	               mov dword [0x04001c3b], 1	      1435	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x1bfb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1436	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x1bff	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1436	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x1c03	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1436	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x1c07	    0x488905000000	            mov qword [0x04001c4e], rax 	      1436	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x1c0e	    0x488915000000	            mov qword [0x04001c55], rdx 	      1436	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x1c15	    0xc70500000000	           mov dword [0x04001c5f], 0x16 	      1437	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x1c1f	    0xc70500000000	               mov dword [0x04001c69], 0	      1438	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x1c29	    0xc70500000000	               mov dword [0x04001c73], 0	      1439	normal.c	FUNCTION_6	IF_2	ELSE_3	IF_8
0x1c33	    0x488b05000000	            mov rax, qword [0x04001c7a] 	      1444	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x1c3a	      0xbe79000000	                           mov esi, 0x79	      1444	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x1c3f	          0x4889c7	                            mov rdi, rax	      1444	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x1c42	      0xe800000000	                          call 0x4001c87	      1444	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x1c47	          0x4885c0	                           test rax, rax	      1444	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x1c4a	            0x750f	                           jne 0x4001c9b	      1444	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x1c4c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1444	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x1c50	            0x8b00	                    mov eax, dword [rax]	      1444	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x1c52	          0x83f802	                              cmp eax, 2	      1444	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x1c55	     0xf84c2010000	                            je 0x4001e5d	      1444	normal.c	FUNCTION_6	IF_2	IF_9	CALL_2
0x1c5b	    0x8b0500000000	            mov eax, dword [0x04001ca1] 	      1445	normal.c	FUNCTION_6	IF_2	IF_9
0x1c61	            0x85c0	                           test eax, eax	      1445	normal.c	FUNCTION_6	IF_2	IF_9
0x1c63	            0x7438	                            je 0x4001cdd	      1445	normal.c	FUNCTION_6	IF_2	IF_9
0x1c65	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1445	normal.c	FUNCTION_6	IF_2	IF_9
0x1c69	          0x8b400c	              mov eax, dword [rax + 0xc]	      1445	normal.c	FUNCTION_6	IF_2	IF_9
0x1c6c	            0x85c0	                           test eax, eax	      1445	normal.c	FUNCTION_6	IF_2	IF_9
0x1c6e	            0x752d	                           jne 0x4001cdd	      1445	normal.c	FUNCTION_6	IF_2	IF_9
0x1c70	    0x8b0500000000	            mov eax, dword [0x04001cb6] 	      1447	normal.c	FUNCTION_6	IF_2	IF_9
0x1c76	            0x85c0	                           test eax, eax	      1447	normal.c	FUNCTION_6	IF_2	IF_9
0x1c78	     0xf849f010000	                            je 0x4001e5d	      1447	normal.c	FUNCTION_6	IF_2	IF_9
0x1c7e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1447	normal.c	FUNCTION_6	IF_2	IF_9
0x1c82	          0x8b400c	              mov eax, dword [rax + 0xc]	      1447	normal.c	FUNCTION_6	IF_2	IF_9
0x1c85	          0x83f83a	                           cmp eax, 0x3a	      1447	normal.c	FUNCTION_6	IF_2	IF_9
0x1c88	     0xf858f010000	                           jne 0x4001e5d	      1447	normal.c	FUNCTION_6	IF_2	IF_9
0x1c8e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1448	normal.c	FUNCTION_6	IF_2	IF_9
0x1c92	            0x8b00	                    mov eax, dword [rax]	      1448	normal.c	FUNCTION_6	IF_2	IF_9
0x1c94	          0x83f80a	                            cmp eax, 0xa	      1448	normal.c	FUNCTION_6	IF_2	IF_9
0x1c97	     0xf8480010000	                            je 0x4001e5d	      1448	normal.c	FUNCTION_6	IF_2	IF_9
0x1c9d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1449	normal.c	FUNCTION_6	IF_2	IF_9
0x1ca1	          0x8b400c	              mov eax, dword [rax + 0xc]	      1449	normal.c	FUNCTION_6	IF_2	IF_9
0x1ca4	          0x83f844	                           cmp eax, 0x44	      1449	normal.c	FUNCTION_6	IF_2	IF_9
0x1ca7	     0xf8470010000	                            je 0x4001e5d	      1449	normal.c	FUNCTION_6	IF_2	IF_9
0x1cad	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1451	normal.c	FUNCTION_6	IF_2	IF_9
0x1cb1	            0x8b00	                    mov eax, dword [rax]	      1451	normal.c	FUNCTION_6	IF_2	IF_9
0x1cb3	          0x83f813	                           cmp eax, 0x13	      1451	normal.c	FUNCTION_6	IF_2	IF_9
0x1cb6	     0xf8461010000	                            je 0x4001e5d	      1451	normal.c	FUNCTION_6	IF_2	IF_9
0x1cbc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1452	normal.c	FUNCTION_6	IF_2	IF_9
0x1cc0	            0x8b00	                    mov eax, dword [rax]	      1452	normal.c	FUNCTION_6	IF_2	IF_9
0x1cc2	          0x83f814	                           cmp eax, 0x14	      1452	normal.c	FUNCTION_6	IF_2	IF_9
0x1cc5	     0xf8452010000	                            je 0x4001e5d	      1452	normal.c	FUNCTION_6	IF_2	IF_9
0x1ccb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1453	normal.c	FUNCTION_6	IF_2	IF_9
0x1ccf	            0x8b00	                    mov eax, dword [rax]	      1453	normal.c	FUNCTION_6	IF_2	IF_9
0x1cd1	          0x83f815	                           cmp eax, 0x15	      1453	normal.c	FUNCTION_6	IF_2	IF_9
0x1cd4	     0xf8443010000	                            je 0x4001e5d	      1453	normal.c	FUNCTION_6	IF_2	IF_9
0x1cda	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1454	normal.c	FUNCTION_6	IF_2	IF_9
0x1cde	            0x8b00	                    mov eax, dword [rax]	      1454	normal.c	FUNCTION_6	IF_2	IF_9
0x1ce0	          0x83f816	                           cmp eax, 0x16	      1454	normal.c	FUNCTION_6	IF_2	IF_9
0x1ce3	     0xf8434010000	                            je 0x4001e5d	      1454	normal.c	FUNCTION_6	IF_2	IF_9
0x1ce9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1455	normal.c	FUNCTION_6	IF_2	IF_9
0x1ced	            0x8b00	                    mov eax, dword [rax]	      1455	normal.c	FUNCTION_6	IF_2	IF_9
0x1cef	          0x83f817	                           cmp eax, 0x17	      1455	normal.c	FUNCTION_6	IF_2	IF_9
0x1cf2	     0xf8425010000	                            je 0x4001e5d	      1455	normal.c	FUNCTION_6	IF_2	IF_9
0x1cf8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1456	normal.c	FUNCTION_6	IF_2	IF_9
0x1cfc	            0x8b00	                    mov eax, dword [rax]	      1456	normal.c	FUNCTION_6	IF_2	IF_9
0x1cfe	          0x83f818	                           cmp eax, 0x18	      1456	normal.c	FUNCTION_6	IF_2	IF_9
0x1d01	     0xf8416010000	                            je 0x4001e5d	      1456	normal.c	FUNCTION_6	IF_2	IF_9
0x1d07	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1457	normal.c	FUNCTION_6	IF_2	IF_9
0x1d0b	            0x8b00	                    mov eax, dword [rax]	      1457	normal.c	FUNCTION_6	IF_2	IF_9
0x1d0d	          0x83f819	                           cmp eax, 0x19	      1457	normal.c	FUNCTION_6	IF_2	IF_9
0x1d10	     0xf8407010000	                            je 0x4001e5d	      1457	normal.c	FUNCTION_6	IF_2	IF_9
0x1d16	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d1a	          0x8b5810	            mov ebx, dword [rax + 0x10] 	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d1d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d21	        0x448b680c	            mov r13d, dword [rax + 0xc] 	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d25	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d29	        0x448b600c	            mov r12d, dword [rax + 0xc] 	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d2d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d31	            0x8b00	                    mov eax, dword [rax]	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d33	            0x89c7	                            mov edi, eax	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d35	      0xe800000000	                          call 0x4001d7a	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d3a	          0x4189c6	                           mov r14d, eax	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d3d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d41	            0x8b00	                    mov eax, dword [rax]	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d43	            0x89c7	                            mov edi, eax	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d45	      0xe800000000	                          call 0x4001d8a	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d4a	            0x89c2	                            mov edx, eax	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d4c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d50	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d54	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d58	          0x8b4004	                mov eax, dword [rax + 4]	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d5b	        0x4883ec08	                              sub rsp, 8	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d5f	              0x53	                                push rbx	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d60	          0x4589e9	                           mov r9d, r13d	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d63	          0x4589e0	                           mov r8d, r12d	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d66	          0x4489f1	                           mov ecx, r14d	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d69	            0x89c7	                            mov edi, eax	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d6b	      0xe8383b0000	                      call sym.prep_redo	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d70	        0x4883c410	                           add rsp, 0x10	      1461	normal.c	FUNCTION_6	IF_2	IF_9	CALL_3
0x1d74	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1464	normal.c	FUNCTION_6	IF_2	IF_9	IF_10
0x1d78	          0x8b400c	              mov eax, dword [rax + 0xc]	      1464	normal.c	FUNCTION_6	IF_2	IF_9	IF_10
0x1d7b	          0x83f82f	                           cmp eax, 0x2f	      1464	normal.c	FUNCTION_6	IF_2	IF_9	IF_10
0x1d7e	            0x740c	                            je 0x4001dcc	      1464	normal.c	FUNCTION_6	IF_2	IF_9	IF_10
0x1d80	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1464	normal.c	FUNCTION_6	IF_2	IF_9	IF_10
0x1d84	          0x8b400c	              mov eax, dword [rax + 0xc]	      1464	normal.c	FUNCTION_6	IF_2	IF_9	IF_10
0x1d87	          0x83f83f	                           cmp eax, 0x3f	      1464	normal.c	FUNCTION_6	IF_2	IF_9	IF_10
0x1d8a	            0x753a	                           jne 0x4001e06	      1464	normal.c	FUNCTION_6	IF_2	IF_9	IF_10
0x1d8c	    0x488b05000000	            mov rax, qword [0x04001dd3] 	      1470	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	IF_11	CALL_6
0x1d93	      0xbe72000000	                           mov esi, 0x72	      1470	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	IF_11	CALL_6
0x1d98	          0x4889c7	                            mov rdi, rax	      1470	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	IF_11	CALL_6
0x1d9b	      0xe800000000	                          call 0x4001de0	      1470	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	IF_11	CALL_6
0x1da0	          0x4885c0	                           test rax, rax	      1470	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	IF_11	CALL_6
0x1da3	            0x7515	                           jne 0x4001dfa	      1470	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	IF_11	CALL_6
0x1da5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1471	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	CALL_7
0x1da9	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1471	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	CALL_7
0x1dad	      0xbeffffffff	                     mov esi, 0xffffffff	      1471	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	CALL_7
0x1db2	          0x4889c7	                            mov rdi, rax	      1471	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	CALL_7
0x1db5	      0xe800000000	                          call 0x4001dfa	      1471	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	CALL_7
0x1dba	      0xbf00000000	                              mov edi, 0	      1472	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	CALL_8
0x1dbf	      0xe800000000	                          call 0x4001e04	      1472	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	CALL_8
0x1dc4	            0xeb57	                           jmp 0x4001e5d	      1472	normal.c	FUNCTION_6	IF_2	IF_9	IF_10	CALL_8
0x1dc6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1474	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12
0x1dca	          0x8b400c	              mov eax, dword [rax + 0xc]	      1474	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12
0x1dcd	          0x83f83a	                           cmp eax, 0x3a	      1474	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12
0x1dd0	            0x754b	                           jne 0x4001e5d	      1474	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12
0x1dd2	    0x488b05000000	            mov rax, qword [0x04001e19] 	      1479	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	IF_13
0x1dd9	          0x4885c0	                           test rax, rax	      1479	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	IF_13
0x1ddc	            0x7507	                           jne 0x4001e25	      1479	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	IF_13
0x1dde	      0xe800000000	                          call 0x4001e23	      1480	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	CALL_9
0x1de3	            0xeb38	                           jmp 0x4001e5d	      1480	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	CALL_9
0x1de5	    0x488b05000000	            mov rax, qword [0x04001e2c] 	      1483	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_10
0x1dec	      0xbeffffffff	                     mov esi, 0xffffffff	      1483	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_10
0x1df1	          0x4889c7	                            mov rdi, rax	      1483	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_10
0x1df4	      0xe800000000	                          call 0x4001e39	      1483	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_10
0x1df9	      0xbf00000000	                              mov edi, 0	      1484	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_11
0x1dfe	      0xe800000000	                          call 0x4001e43	      1484	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_11
0x1e03	    0x488b05000000	            mov rax, qword [0x04001e4a] 	      1485	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_12
0x1e0a	          0x4889c7	                            mov rdi, rax	      1485	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_12
0x1e0d	      0xe800000000	                          call 0x4001e52	      1485	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5	CALL_12
0x1e12	    0x48c705000000	               mov qword [0x04001e5d], 0	      1486	normal.c	FUNCTION_6	IF_2	IF_9	ELSE_4	IF_12	ELSE_5
0x1e1d	    0x8b0500000000	            mov eax, dword [0x04001e63] 	      1491	normal.c	FUNCTION_6	IF_2	IF_14
0x1e23	            0x85c0	                           test eax, eax	      1491	normal.c	FUNCTION_6	IF_2	IF_14
0x1e25	     0xf8444010000	                            je 0x4001faf	      1491	normal.c	FUNCTION_6	IF_2	IF_14
0x1e2b	    0x488b05000000	            mov rax, qword [0x04001e72] 	      1495	normal.c	FUNCTION_6	IF_2	IF_14
0x1e32	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1495	normal.c	FUNCTION_6	IF_2	IF_14
0x1e36	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1495	normal.c	FUNCTION_6	IF_2	IF_14
0x1e3a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1495	normal.c	FUNCTION_6	IF_2	IF_14
0x1e3e	        0x48894120	             mov qword [rcx + 0x20], rax	      1495	normal.c	FUNCTION_6	IF_2	IF_14
0x1e42	        0x48895128	             mov qword [rcx + 0x28], rdx	      1495	normal.c	FUNCTION_6	IF_2	IF_14
0x1e46	    0x488b05000000	            mov rax, qword [0x04001e8d] 	      1496	normal.c	FUNCTION_6	IF_2	IF_14
0x1e4d	    0x488b15000000	            mov rdx, qword [0x04001e94] 	      1496	normal.c	FUNCTION_6	IF_2	IF_14
0x1e54	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      1496	normal.c	FUNCTION_6	IF_2	IF_14
0x1e58	    0x488b0d000000	            mov rcx, qword [0x04001e9f] 	      1496	normal.c	FUNCTION_6	IF_2	IF_14
0x1e5f	        0x4883e901	                              sub rcx, 1	      1496	normal.c	FUNCTION_6	IF_2	IF_14
0x1e63	          0x4801ca	                            add rdx, rcx	      1496	normal.c	FUNCTION_6	IF_2	IF_14
0x1e66	        0x48895038	             mov qword [rax + 0x38], rdx	      1496	normal.c	FUNCTION_6	IF_2	IF_14
0x1e6a	    0x488b05000000	            mov rax, qword [0x04001eb1] 	      1497	normal.c	FUNCTION_6	IF_2	IF_14	IF_15
0x1e71	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1497	normal.c	FUNCTION_6	IF_2	IF_14	IF_15
0x1e75	    0x488b05000000	            mov rax, qword [0x04001ebc] 	      1497	normal.c	FUNCTION_6	IF_2	IF_14	IF_15
0x1e7c	          0x488b00	                    mov rax, qword [rax]	      1497	normal.c	FUNCTION_6	IF_2	IF_14	IF_15
0x1e7f	          0x4839c2	                            cmp rdx, rax	      1497	normal.c	FUNCTION_6	IF_2	IF_14	IF_15
0x1e82	            0x7e15	                           jle 0x4001ed9	      1497	normal.c	FUNCTION_6	IF_2	IF_14	IF_15
0x1e84	    0x488b05000000	            mov rax, qword [0x04001ecb] 	      1498	normal.c	FUNCTION_6	IF_2	IF_14	IF_15
0x1e8b	    0x488b15000000	            mov rdx, qword [0x04001ed2] 	      1498	normal.c	FUNCTION_6	IF_2	IF_14	IF_15
0x1e92	          0x488b12	                    mov rdx, qword [rdx]	      1498	normal.c	FUNCTION_6	IF_2	IF_14	IF_15
0x1e95	        0x48895038	             mov qword [rax + 0x38], rdx	      1498	normal.c	FUNCTION_6	IF_2	IF_14	IF_15
0x1e99	    0x8b0500000000	            mov eax, dword [0x04001edf] 	      1499	normal.c	FUNCTION_6	IF_2	IF_14
0x1e9f	    0x890500000000	            mov dword [0x04001ee5], eax 	      1499	normal.c	FUNCTION_6	IF_2	IF_14
0x1ea5	    0x8b0500000000	            mov eax, dword [0x04001eeb] 	      1500	normal.c	FUNCTION_6	IF_2	IF_14	IF_16
0x1eab	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1500	normal.c	FUNCTION_6	IF_2	IF_14	IF_16
0x1eb0	            0x740b	                            je 0x4001efd	      1500	normal.c	FUNCTION_6	IF_2	IF_14	IF_16
0x1eb2	    0x8b0500000000	            mov eax, dword [0x04001ef8] 	      1500	normal.c	FUNCTION_6	IF_2	IF_14	IF_16
0x1eb8	          0x83f876	                           cmp eax, 0x76	      1500	normal.c	FUNCTION_6	IF_2	IF_14	IF_16
0x1ebb	            0x7572	                           jne 0x4001f6f	      1500	normal.c	FUNCTION_6	IF_2	IF_14	IF_16
0x1ebd	    0x8b0500000000	            mov eax, dword [0x04001f03] 	      1502	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17
0x1ec3	          0x83f876	                           cmp eax, 0x76	      1502	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17
0x1ec6	            0x7548	                           jne 0x4001f50	      1502	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17
0x1ec8	    0x488b05000000	            mov rax, qword [0x04001f0f] 	      1504	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x1ecf	        0x4883f801	                              cmp rax, 1	      1504	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x1ed3	            0x7f29	                            jg 0x4001f3e	      1504	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x1ed5	      0xe800000000	                          call 0x4001f1a	      1506	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18	CALL_13
0x1eda	    0x488b05000000	            mov rax, qword [0x04001f21] 	      1507	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x1ee1	    0x488b15000000	            mov rdx, qword [0x04001f28] 	      1508	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x1ee8	    0x8b8ad8000000	            mov ecx, dword [rdx + 0xd8] 	      1508	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x1eee	    0x8b1500000000	            mov edx, dword [0x04001f34] 	      1508	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x1ef4	             0x1ca	                            add edx, ecx	      1508	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x1ef6	          0x83ea01	                              sub edx, 1	      1508	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x1ef9	          0x895048	             mov dword [rax + 0x48], edx	      1507	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x1efc	            0xeb20	                           jmp 0x4001f5e	      1507	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	IF_18
0x1efe	    0x488b05000000	            mov rax, qword [0x04001f45] 	      1511	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	ELSE_6
0x1f05	    0x8b1500000000	            mov edx, dword [0x04001f4b] 	      1511	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	ELSE_6
0x1f0b	          0x895048	             mov dword [rax + 0x48], edx	      1511	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	ELSE_6
0x1f0e	            0xeb0e	                           jmp 0x4001f5e	      1511	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	IF_17	ELSE_6
0x1f10	    0x488b05000000	            mov rax, qword [0x04001f57] 	      1515	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	ELSE_7
0x1f17	    0xc74048ffffff	     mov dword [rax + 0x48], 0x7fffffff 	      1515	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	ELSE_7
0x1f1e	    0x488b05000000	            mov rax, qword [0x04001f65] 	      1517	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	CALL_14
0x1f25	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1517	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	CALL_14
0x1f28	            0x89c7	                            mov edi, eax	      1517	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	CALL_14
0x1f2a	      0xe800000000	                          call 0x4001f6f	      1517	normal.c	FUNCTION_6	IF_2	IF_14	IF_16	CALL_14
0x1f2f	    0x488b15000000	            mov rdx, qword [0x04001f76] 	      1519	normal.c	FUNCTION_6	IF_2	IF_14
0x1f36	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1519	normal.c	FUNCTION_6	IF_2	IF_14
0x1f3a	        0x48895028	             mov qword [rax + 0x28], rdx	      1519	normal.c	FUNCTION_6	IF_2	IF_14
0x1f3e	    0x488b05000000	            mov rax, qword [0x04001f85] 	      1520	normal.c	FUNCTION_6	IF_2	IF_14	IF_19
0x1f45	          0x4885c0	                           test rax, rax	      1520	normal.c	FUNCTION_6	IF_2	IF_14	IF_19
0x1f48	            0x7414	                            je 0x4001f9e	      1520	normal.c	FUNCTION_6	IF_2	IF_14	IF_19
0x1f4a	    0x488b15000000	            mov rdx, qword [0x04001f91] 	      1521	normal.c	FUNCTION_6	IF_2	IF_14	IF_19
0x1f51	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1521	normal.c	FUNCTION_6	IF_2	IF_14	IF_19
0x1f55	        0x48895030	             mov qword [rax + 0x30], rdx	      1521	normal.c	FUNCTION_6	IF_2	IF_14	IF_19
0x1f59	      0xe92e020000	                           jmp 0x40021cc	      1521	normal.c	FUNCTION_6	IF_2	IF_14	IF_19
0x1f5e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1523	normal.c	FUNCTION_6	IF_2	IF_14	ELSE_8
0x1f62	    0x48c740300100	               mov qword [rax + 0x30], 1	      1523	normal.c	FUNCTION_6	IF_2	IF_14	ELSE_8
0x1f6a	      0xe91d020000	                           jmp 0x40021cc	      1523	normal.c	FUNCTION_6	IF_2	IF_14	ELSE_8
0x1f6f	    0x8b0500000000	            mov eax, dword [0x04001fb5] 	      1525	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20
0x1f75	            0x85c0	                           test eax, eax	      1525	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20
0x1f77	     0xf840f020000	                            je 0x40021cc	      1525	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20
0x1f7d	        0x837da000	               cmp dword [rbp - 0x60], 0	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1f81	     0xf85ab000000	                           jne 0x4002072	      1527	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1f87	    0x488b0d000000	            mov rcx, qword [0x04001fce] 	      1530	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1f8e	    0x488b05000000	            mov rax, qword [0x04001fd5] 	      1530	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1f95	    0x488b15000000	            mov rdx, qword [0x04001fdc] 	      1530	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1f9c	    0x488981e80200	            mov qword [rcx + 0x2e8], rax	      1530	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1fa3	    0x488991f00200	            mov qword [rcx + 0x2f0], rdx	      1530	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1faa	    0x488b0d000000	            mov rcx, qword [0x04001ff1] 	      1531	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1fb1	    0x488b05000000	            mov rax, qword [0x04001ff8] 	      1531	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1fb8	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1531	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1fbc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1531	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1fc0	    0x488981f80200	            mov qword [rcx + 0x2f8], rax	      1531	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1fc7	    0x488991000300	            mov qword [rcx + 0x300], rdx	      1531	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1fce	    0x488b05000000	            mov rax, qword [0x04002015] 	      1532	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1fd5	    0x8b1500000000	            mov edx, dword [0x0400201b] 	      1532	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1fdb	    0x899008030000	            mov dword [rax + 0x308], edx	      1532	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x1fe1	    0x8b0500000000	            mov eax, dword [0x04002027] 	      1533	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21	IF_22
0x1fe7	            0x85c0	                           test eax, eax	      1533	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21	IF_22
0x1fe9	            0x741d	                            je 0x4002048	      1533	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21	IF_22
0x1feb	    0x488b05000000	            mov rax, qword [0x04002032] 	      1535	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21	IF_22
0x1ff2	    0x8b1500000000	            mov edx, dword [0x04002038] 	      1535	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21	IF_22
0x1ff8	    0x899008030000	            mov dword [rax + 0x308], edx	      1535	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21	IF_22
0x1ffe	    0xc70500000000	               mov dword [0x04002048], 0	      1536	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21	IF_22
0x2008	    0x488b05000000	            mov rax, qword [0x0400204f] 	      1538	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x200f	    0x488b15000000	            mov rdx, qword [0x04002056] 	      1538	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x2016	          0x8b5248	            mov edx, dword [rdx + 0x48] 	      1538	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x2019	    0x89900c030000	            mov dword [rax + 0x30c], edx	      1538	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x201f	    0x488b05000000	            mov rax, qword [0x04002066] 	      1540	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x2026	    0x8b1500000000	            mov edx, dword [0x0400206c] 	      1540	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x202c	    0x899010030000	            mov dword [rax + 0x310], edx	      1540	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_21
0x2032	    0x8b0500000000	            mov eax, dword [0x04002078] 	      1547	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x2038	            0x85c0	                           test eax, eax	      1547	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x203a	     0xf84fe000000	                            je 0x400217e	      1547	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x2040	    0x8b0500000000	            mov eax, dword [0x04002086] 	      1547	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x2046	          0x83f856	                           cmp eax, 0x56	      1547	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x2049	     0xf85ef000000	                           jne 0x400217e	      1547	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x204f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1548	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x2053	          0x488b00	                    mov rax, qword [rax]	      1548	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x2056	            0x8b00	                    mov eax, dword [rax]	      1548	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x2058	          0x83f801	                              cmp eax, 1	      1548	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x205b	     0xf84dd000000	                            je 0x400217e	      1548	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x2061	    0x488b15000000	            mov rdx, qword [0x040020a8] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x2068	    0x488b05000000	            mov rax, qword [0x040020af] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x206f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x2073	          0x4839c2	                            cmp rdx, rax	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x2076	            0x741a	                            je 0x40020d2	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x2078	    0x488b15000000	            mov rdx, qword [0x040020bf] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x207f	    0x488b05000000	            mov rax, qword [0x040020c6] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x2086	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x208a	          0x4839c2	                            cmp rdx, rax	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x208d	           0xf9cc0	                                 setl al	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x2090	            0xeb40	                           jmp 0x4002112	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x2092	    0x8b1500000000	            mov edx, dword [0x040020d8] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x2098	    0x488b05000000	            mov rax, qword [0x040020df] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x209f	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20a2	            0x39c2	                            cmp edx, eax	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20a4	            0x7417	                            je 0x40020fd	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20a6	    0x8b1500000000	            mov edx, dword [0x040020ec] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20ac	    0x488b05000000	            mov rax, qword [0x040020f3] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20b3	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20b6	            0x39c2	                            cmp edx, eax	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20b8	           0xf9cc0	                                 setl al	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20bb	            0xeb15	                           jmp 0x4002112	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20bd	    0x8b1500000000	            mov edx, dword [0x04002103] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20c3	    0x488b05000000	            mov rax, qword [0x0400210a] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20ca	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20cd	            0x39c2	                            cmp edx, eax	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20cf	           0xf9cc0	                                 setl al	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20d2	            0x84c0	                             test al, al	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20d4	            0x7431	                            je 0x4002147	      1550	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_15
0x20d6	    0xc70500000000	               mov dword [0x04002120], 0	      1552	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24
0x20e0	    0x488b1d000000	            mov rbx, qword [0x04002127] 	      1553	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24
0x20e7	    0x488b05000000	            mov rax, qword [0x0400212e] 	      1554	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_17
0x20ee	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1554	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_17
0x20f2	          0x4889c7	                            mov rdi, rax	      1554	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_17
0x20f5	      0xe800000000	                          call 0x400213a	      1554	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_17
0x20fa	          0x4889c7	                            mov rdi, rax	      1554	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_17
0x20fd	      0xe800000000	                          call 0x4002142	      1554	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24	CALL_17
0x2102	          0x894340	             mov dword [rbx + 0x40], eax	      1553	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24
0x2105	            0xeb2b	                           jmp 0x4002172	      1553	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	IF_24
0x2107	    0x488b05000000	            mov rax, qword [0x0400214e] 	      1558	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10
0x210e	    0xc74040000000	               mov dword [rax + 0x40], 0	      1558	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10
0x2115	    0x488b05000000	            mov rax, qword [0x0400215c] 	      1559	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x211c	          0x4889c7	                            mov rdi, rax	      1559	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x211f	      0xe800000000	                          call 0x4002164	      1559	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x2124	          0x4889c7	                            mov rdi, rax	      1559	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x2127	      0xe800000000	                          call 0x400216c	      1559	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x212c	    0x890500000000	            mov dword [0x04002172], eax 	      1559	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23	ELSE_10	CALL_19
0x2132	    0xc70500000000	           mov dword [0x0400217c], 0x76 	      1561	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x213c	            0xeb13	                           jmp 0x4002191	      1561	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_23
0x213e	    0x8b0500000000	            mov eax, dword [0x04002184] 	      1565	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	ELSE_11	IF_25
0x2144	          0x83f876	                           cmp eax, 0x76	      1565	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	ELSE_11	IF_25
0x2147	            0x7508	                           jne 0x4002191	      1565	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	ELSE_11	IF_25
0x2149	      0xe83ad10000	               call sym.unadjust_for_sel	      1568	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	ELSE_11	IF_25
0x214e	          0x8945b8	             mov dword [rbp - 0x48], eax	      1568	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	ELSE_11	IF_25
0x2151	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1573	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20
0x2155	    0x488b05000000	            mov rax, qword [0x0400219c] 	      1573	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20
0x215c	    0x488b15000000	            mov rdx, qword [0x040021a3] 	      1573	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20
0x2163	        0x48894120	             mov qword [rcx + 0x20], rax	      1573	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20
0x2167	        0x48895128	             mov qword [rcx + 0x28], rdx	      1573	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20
0x216b	    0x8b0500000000	            mov eax, dword [0x040021b1] 	      1574	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_26
0x2171	          0x83f856	                           cmp eax, 0x56	      1574	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_26
0x2174	            0x7516	                           jne 0x40021cc	      1574	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_26
0x2176	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1576	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_26
0x217a	    0xc74028000000	               mov dword [rax + 0x28], 0	      1576	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_26
0x2181	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1578	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_26
0x2185	    0xc7402c000000	               mov dword [rax + 0x2c], 0	      1578	normal.c	FUNCTION_6	IF_2	ELSE_8	ELSE_9	IF_20	IF_26
0x218c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x2190	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x2194	    0x488b05000000	            mov rax, qword [0x040021db] 	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x219b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x219f	          0x4839c2	                            cmp rdx, rax	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21a2	            0x741b	                            je 0x40021ff	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21a8	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21ac	    0x488b05000000	            mov rax, qword [0x040021f3] 	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21b3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21b7	          0x4839c2	                            cmp rdx, rax	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21ba	           0xf9cc0	                                 setl al	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21bd	            0xeb43	                           jmp 0x4002242	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21c3	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21c6	    0x488b05000000	            mov rax, qword [0x0400220d] 	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21cd	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21d0	            0x39c2	                            cmp edx, eax	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21d2	            0x7418	                            je 0x400222c	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21d8	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21db	    0x488b05000000	            mov rax, qword [0x04002222] 	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21e2	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21e5	            0x39c2	                            cmp edx, eax	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21e7	           0xf9cc0	                                 setl al	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21ea	            0xeb16	                           jmp 0x4002242	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21ec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21f0	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21f3	    0x488b05000000	            mov rax, qword [0x0400223a] 	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21fa	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21fd	            0x39c2	                            cmp edx, eax	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x21ff	           0xf9cc0	                                 setl al	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x2202	            0x84c0	                             test al, al	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x2204	     0xf84cf000000	                            je 0x4002319	      1587	normal.c	FUNCTION_6	IF_2	IF_27	CALL_21
0x220a	    0x8b0500000000	            mov eax, dword [0x04002250] 	      1591	normal.c	FUNCTION_6	IF_2	IF_27	IF_28
0x2210	            0x85c0	                           test eax, eax	      1591	normal.c	FUNCTION_6	IF_2	IF_27	IF_28
0x2212	            0x756d	                           jne 0x40022c1	      1591	normal.c	FUNCTION_6	IF_2	IF_27	IF_28
0x2214	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1593	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29	CALL_22
0x2218	        0x488d4820	                   lea rcx, [rax + 0x20]	      1593	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29	CALL_22
0x221c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1593	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29	CALL_22
0x2220	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1593	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29	CALL_22
0x2224	      0xba00000000	                              mov edx, 0	      1593	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29	CALL_22
0x2229	          0x4889ce	                            mov rsi, rcx	      1593	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29	CALL_22
0x222c	          0x4889c7	                            mov rdi, rax	      1593	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29	CALL_22
0x222f	      0xe800000000	                          call 0x4002274	      1593	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29	CALL_22
0x2234	            0x85c0	                           test eax, eax	      1593	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29	CALL_22
0x2236	            0x740b	                            je 0x4002283	      1593	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29	CALL_22
0x2238	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1594	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29
0x223c	    0xc74028000000	               mov dword [rax + 0x28], 0	      1594	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_29
0x2243	    0x488b05000000	            mov rax, qword [0x0400228a] 	      1596	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30
0x224a	        0x488d5038	                   lea rdx, [rax + 0x38]	      1595	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30	CALL_23
0x224e	    0x488b05000000	            mov rax, qword [0x04002295] 	      1595	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30	CALL_23
0x2255	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1595	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30	CALL_23
0x2259	      0xbe00000000	                              mov esi, 0	      1595	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30	CALL_23
0x225e	          0x4889c7	                            mov rdi, rax	      1595	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30	CALL_23
0x2261	      0xe800000000	                          call 0x40022a6	      1595	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30	CALL_23
0x2266	            0x85c0	                           test eax, eax	      1595	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30	CALL_23
0x2268	            0x7417	                            je 0x40022c1	      1595	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	IF_30	CALL_23
0x226a	    0x488b1d000000	            mov rbx, qword [0x040022b1] 	      1597	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	CALL_25
0x2271	      0xe800000000	                          call 0x40022b6	      1597	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	CALL_25
0x2276	          0x4889c7	                            mov rdi, rax	      1597	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	CALL_25
0x2279	      0xe800000000	                          call 0x40022be	      1597	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	CALL_25
0x227e	          0x894340	             mov dword [rbx + 0x40], eax	      1597	normal.c	FUNCTION_6	IF_2	IF_27	IF_28	CALL_25
0x2281	    0x488b05000000	            mov rax, qword [0x040022c8] 	      1600	normal.c	FUNCTION_6	IF_2	IF_27
0x2288	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1600	normal.c	FUNCTION_6	IF_2	IF_27
0x228c	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1600	normal.c	FUNCTION_6	IF_2	IF_27
0x2290	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1600	normal.c	FUNCTION_6	IF_2	IF_27
0x2294	        0x48894130	             mov qword [rcx + 0x30], rax	      1600	normal.c	FUNCTION_6	IF_2	IF_27
0x2298	        0x48895138	             mov qword [rcx + 0x38], rdx	      1600	normal.c	FUNCTION_6	IF_2	IF_27
0x229c	    0x488b0d000000	            mov rcx, qword [0x040022e3] 	      1601	normal.c	FUNCTION_6	IF_2	IF_27
0x22a3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1601	normal.c	FUNCTION_6	IF_2	IF_27
0x22a7	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1601	normal.c	FUNCTION_6	IF_2	IF_27
0x22ab	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1601	normal.c	FUNCTION_6	IF_2	IF_27
0x22af	        0x48894138	             mov qword [rcx + 0x38], rax	      1601	normal.c	FUNCTION_6	IF_2	IF_27
0x22b3	        0x48895140	             mov qword [rcx + 0x40], rdx	      1601	normal.c	FUNCTION_6	IF_2	IF_27
0x22b7	    0x488b05000000	            mov rax, qword [0x040022fe] 	      1606	normal.c	FUNCTION_6	IF_2	IF_27
0x22be	    0x488b15000000	            mov rdx, qword [0x04002305] 	      1606	normal.c	FUNCTION_6	IF_2	IF_27
0x22c5	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1606	normal.c	FUNCTION_6	IF_2	IF_27
0x22cb	          0x83e2fb	                     and edx, 0xfffffffb	      1606	normal.c	FUNCTION_6	IF_2	IF_27
0x22ce	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1606	normal.c	FUNCTION_6	IF_2	IF_27
0x22d4	      0xe9c7000000	                           jmp 0x40023e0	      1606	normal.c	FUNCTION_6	IF_2	IF_27
0x22d9	    0x8b0500000000	            mov eax, dword [0x0400231f] 	      1612	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31
0x22df	            0x85c0	                           test eax, eax	      1612	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31
0x22e1	     0xf8586000000	                           jne 0x40023ad	      1612	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31
0x22e7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1612	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31
0x22eb	          0x8b4008	                mov eax, dword [rax + 8]	      1612	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31
0x22ee	          0x83f801	                              cmp eax, 1	      1612	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31
0x22f1	            0x757a	                           jne 0x40023ad	      1612	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31
0x22f3	    0x488b05000000	            mov rax, qword [0x0400233a] 	      1614	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x22fa	        0x488d4838	                   lea rcx, [rax + 0x38]	      1614	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x22fe	    0x488b05000000	            mov rax, qword [0x04002345] 	      1614	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x2305	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1614	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x2309	      0xba00000000	                              mov edx, 0	      1614	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x230e	          0x4889ce	                            mov rsi, rcx	      1614	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x2311	          0x4889c7	                            mov rdi, rax	      1614	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x2314	      0xe800000000	                          call 0x4002359	      1614	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x2319	            0x85c0	                           test eax, eax	      1614	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x231b	            0x740e	                            je 0x400236b	      1614	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32	CALL_26
0x231d	    0x488b05000000	            mov rax, qword [0x04002364] 	      1616	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32
0x2324	    0xc74040000000	               mov dword [rax + 0x40], 0	      1616	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_32
0x232b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1617	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_33	CALL_27
0x232f	        0x488d5020	                   lea rdx, [rax + 0x20]	      1617	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_33	CALL_27
0x2333	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1617	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_33	CALL_27
0x2337	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1617	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_33	CALL_27
0x233b	      0xbe00000000	                              mov esi, 0	      1617	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_33	CALL_27
0x2340	          0x4889c7	                            mov rdi, rax	      1617	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_33	CALL_27
0x2343	      0xe800000000	                          call 0x4002388	      1617	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_33	CALL_27
0x2348	            0x85c0	                           test eax, eax	      1617	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_33	CALL_27
0x234a	            0x7421	                            je 0x40023ad	      1617	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	IF_33	CALL_27
0x234c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1618	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x2350	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1618	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x2354	          0x4889c7	                            mov rdi, rax	      1618	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x2357	      0xe800000000	                          call 0x400239c	      1618	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x235c	          0x4889c7	                            mov rdi, rax	      1618	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x235f	      0xe800000000	                          call 0x40023a4	      1618	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x2364	            0x89c2	                            mov edx, eax	      1618	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x2366	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1618	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x236a	          0x895028	             mov dword [rax + 0x28], edx	      1618	normal.c	FUNCTION_6	IF_2	ELSE_12	IF_31	CALL_29
0x236d	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1621	normal.c	FUNCTION_6	IF_2	ELSE_12
0x2371	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1621	normal.c	FUNCTION_6	IF_2	ELSE_12
0x2375	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1621	normal.c	FUNCTION_6	IF_2	ELSE_12
0x2379	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1621	normal.c	FUNCTION_6	IF_2	ELSE_12
0x237d	        0x48894130	             mov qword [rcx + 0x30], rax	      1621	normal.c	FUNCTION_6	IF_2	ELSE_12
0x2381	        0x48895138	             mov qword [rcx + 0x38], rdx	      1621	normal.c	FUNCTION_6	IF_2	ELSE_12
0x2385	    0x488b05000000	            mov rax, qword [0x040023cc] 	      1622	normal.c	FUNCTION_6	IF_2	ELSE_12
0x238c	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1622	normal.c	FUNCTION_6	IF_2	ELSE_12
0x2390	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1622	normal.c	FUNCTION_6	IF_2	ELSE_12
0x2394	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1622	normal.c	FUNCTION_6	IF_2	ELSE_12
0x2398	        0x48894120	             mov qword [rcx + 0x20], rax	      1622	normal.c	FUNCTION_6	IF_2	ELSE_12
0x239c	        0x48895128	             mov qword [rcx + 0x28], rdx	      1622	normal.c	FUNCTION_6	IF_2	ELSE_12
0x23a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1626	normal.c	FUNCTION_6	IF_2	CALL_30
0x23a4	        0x488d5030	                   lea rdx, [rax + 0x30]	      1626	normal.c	FUNCTION_6	IF_2	CALL_30
0x23a8	    0x488b05000000	            mov rax, qword [0x040023ef] 	      1626	normal.c	FUNCTION_6	IF_2	CALL_30
0x23af	        0x488b4008	                mov rax, qword [rax + 8]	      1626	normal.c	FUNCTION_6	IF_2	CALL_30
0x23b3	          0x4889d6	                            mov rsi, rdx	      1626	normal.c	FUNCTION_6	IF_2	CALL_30
0x23b6	          0x4889c7	                            mov rdi, rax	      1626	normal.c	FUNCTION_6	IF_2	CALL_30
0x23b9	      0xe800000000	                          call 0x40023fe	      1626	normal.c	FUNCTION_6	IF_2	CALL_30
0x23be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1627	normal.c	FUNCTION_6	IF_2
0x23c2	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1627	normal.c	FUNCTION_6	IF_2
0x23c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1627	normal.c	FUNCTION_6	IF_2
0x23ca	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1627	normal.c	FUNCTION_6	IF_2
0x23ce	          0x4829c2	                            sub rdx, rax	      1627	normal.c	FUNCTION_6	IF_2
0x23d1	          0x4889d0	                            mov rax, rdx	      1627	normal.c	FUNCTION_6	IF_2
0x23d4	        0x488d5001	                      lea rdx, [rax + 1]	      1627	normal.c	FUNCTION_6	IF_2
0x23d8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1627	normal.c	FUNCTION_6	IF_2
0x23dc	        0x48895050	             mov qword [rax + 0x50], rdx	      1627	normal.c	FUNCTION_6	IF_2
0x23e0	      0xe800000000	                          call 0x4002425	      1631	normal.c	FUNCTION_6	IF_2	CALL_31
0x23e5	    0x890500000000	            mov dword [0x0400242b], eax 	      1631	normal.c	FUNCTION_6	IF_2	CALL_31
0x23eb	    0x8b0500000000	            mov eax, dword [0x04002431] 	      1634	normal.c	FUNCTION_6	IF_2	IF_34
0x23f1	            0x85c0	                           test eax, eax	      1634	normal.c	FUNCTION_6	IF_2	IF_34
0x23f3	            0x750e	                           jne 0x4002443	      1634	normal.c	FUNCTION_6	IF_2	IF_34
0x23f5	    0x8b0500000000	            mov eax, dword [0x0400243b] 	      1634	normal.c	FUNCTION_6	IF_2	IF_34
0x23fb	            0x85c0	                           test eax, eax	      1634	normal.c	FUNCTION_6	IF_2	IF_34
0x23fd	     0xf848a040000	                            je 0x40028cd	      1634	normal.c	FUNCTION_6	IF_2	IF_34
0x2403	    0x8b0d00000000	            mov ecx, dword [0x04002449] 	      1636	normal.c	FUNCTION_6	IF_2	IF_34	CALL_32
0x2409	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1636	normal.c	FUNCTION_6	IF_2	IF_34	CALL_32
0x240d	      0xba01000000	                              mov edx, 1	      1636	normal.c	FUNCTION_6	IF_2	IF_34	CALL_32
0x2412	            0x89ce	                            mov esi, ecx	      1636	normal.c	FUNCTION_6	IF_2	IF_34	CALL_32
0x2414	          0x4889c7	                            mov rdi, rax	      1636	normal.c	FUNCTION_6	IF_2	IF_34	CALL_32
0x2417	      0xe8f7e20000	                    call sym.get_op_vcol	      1636	normal.c	FUNCTION_6	IF_2	IF_34	CALL_32
0x241c	    0x8b0500000000	            mov eax, dword [0x04002462] 	      1638	normal.c	FUNCTION_6	IF_2	IF_34	IF_35
0x2422	            0x85c0	                           test eax, eax	      1638	normal.c	FUNCTION_6	IF_2	IF_34	IF_35
0x2424	     0xf85f4000000	                           jne 0x400255e	      1638	normal.c	FUNCTION_6	IF_2	IF_34	IF_35
0x242a	        0x837da000	               cmp dword [rbp - 0x60], 0	      1638	normal.c	FUNCTION_6	IF_2	IF_34	IF_35
0x242e	     0xf85ea000000	                           jne 0x400255e	      1638	normal.c	FUNCTION_6	IF_2	IF_34	IF_35
0x2434	    0x8b0500000000	            mov eax, dword [0x0400247a] 	      1644	normal.c	FUNCTION_6	IF_2	IF_34	IF_35
0x243a	    0x890500000000	            mov dword [0x04002480], eax 	      1644	normal.c	FUNCTION_6	IF_2	IF_34	IF_35
0x2440	    0x488b05000000	            mov rax, qword [0x04002487] 	      1645	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	IF_36
0x2447	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1645	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	IF_36
0x244a	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1645	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	IF_36
0x244f	            0x750f	                           jne 0x40024a0	      1645	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	IF_36
0x2451	    0xc70500000000	     mov dword [0x0400249b], 0x7fffffff 	      1646	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	IF_36
0x245b	      0xe9af000000	                           jmp 0x400254f	      1646	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	IF_36
0x2460	    0x8b0500000000	            mov eax, dword [0x040024a6] 	      1649	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37
0x2466	          0x83f816	                           cmp eax, 0x16	      1649	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37
0x2469	            0x742c	                            je 0x40024d7	      1649	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37
0x246b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1650	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37	CALL_33
0x246f	        0x488d5068	                   lea rdx, [rax + 0x68]	      1650	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37	CALL_33
0x2473	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1650	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37	CALL_33
0x2477	        0x488d7030	                   lea rsi, [rax + 0x30]	      1650	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37	CALL_33
0x247b	    0x488b05000000	            mov rax, qword [0x040024c2] 	      1650	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37	CALL_33
0x2482	          0x4989d0	                             mov r8, rdx	      1650	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37	CALL_33
0x2485	      0xb900000000	                              mov ecx, 0	      1650	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37	CALL_33
0x248a	      0xba00000000	                              mov edx, 0	      1650	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37	CALL_33
0x248f	          0x4889c7	                            mov rdi, rax	      1650	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37	CALL_33
0x2492	      0xe800000000	                          call 0x40024d7	      1650	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_37	CALL_33
0x2497	    0x8b0500000000	            mov eax, dword [0x040024dd] 	      1652	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x249d	          0x83f816	                           cmp eax, 0x16	      1652	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x24a0	            0x740e	                            je 0x40024f0	      1652	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x24a2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1652	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x24a6	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1652	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x24aa	        0x4883f801	                              cmp rax, 1	      1652	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x24ae	            0x7f52	                            jg 0x4002542	      1652	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x24b0	    0x8b0500000000	            mov eax, dword [0x040024f6] 	      1654	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39
0x24b6	          0x83f816	                           cmp eax, 0x16	      1654	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39
0x24b9	            0x742a	                            je 0x4002525	      1654	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39
0x24bb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1655	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39	CALL_34
0x24bf	        0x488d5064	                   lea rdx, [rax + 0x64]	      1655	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39	CALL_34
0x24c3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1655	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39	CALL_34
0x24c7	        0x488d7020	                   lea rsi, [rax + 0x20]	      1655	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39	CALL_34
0x24cb	    0x488b05000000	            mov rax, qword [0x04002512] 	      1655	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39	CALL_34
0x24d2	    0x41b800000000	                              mov r8d, 0	      1655	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39	CALL_34
0x24d8	      0xb900000000	                              mov ecx, 0	      1655	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39	CALL_34
0x24dd	          0x4889c7	                            mov rdi, rax	      1655	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39	CALL_34
0x24e0	      0xe800000000	                          call 0x4002525	      1655	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38	IF_39	CALL_34
0x24e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1657	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x24e9	          0x8b5068	            mov edx, dword [rax + 0x68] 	      1657	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x24ec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1657	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x24f0	          0x8b4064	            mov eax, dword [rax + 0x64] 	      1657	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x24f3	            0x29c2	                            sub edx, eax	      1657	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x24f5	            0x89d0	                            mov eax, edx	      1657	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x24f7	          0x83c001	                              add eax, 1	      1657	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x24fa	    0x890500000000	            mov dword [0x04002540], eax 	      1657	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x2500	            0xeb0d	                           jmp 0x400254f	      1657	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	IF_38
0x2502	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1660	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	ELSE_14
0x2506	          0x8b4068	            mov eax, dword [rax + 0x68] 	      1660	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	ELSE_14
0x2509	    0x890500000000	            mov dword [0x0400254f], eax 	      1660	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_13	ELSE_14
0x250f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1662	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_14
0x2513	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1662	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_14
0x2517	    0x488905000000	            mov qword [0x0400255e], rax 	      1662	normal.c	FUNCTION_6	IF_2	IF_34	IF_35	ELSE_14
0x251e	    0x488b05000000	            mov rax, qword [0x04002565] 	      1666	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x2525	      0xbe79000000	                           mov esi, 0x79	      1666	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x252a	          0x4889c7	                            mov rdi, rax	      1666	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x252d	      0xe800000000	                          call 0x4002572	      1666	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x2532	          0x4885c0	                           test rax, rax	      1666	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x2535	            0x750f	                           jne 0x4002586	      1666	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x2537	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1666	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x253b	            0x8b00	                    mov eax, dword [rax]	      1666	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x253d	          0x83f802	                              cmp eax, 2	      1666	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x2540	     0xf84c7010000	                            je 0x400274d	      1666	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	CALL_35
0x2546	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1667	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x254a	            0x8b00	                    mov eax, dword [rax]	      1667	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x254c	          0x83f80a	                            cmp eax, 0xa	      1667	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x254f	     0xf84b8010000	                            je 0x400274d	      1667	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x2555	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1669	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x2559	            0x8b00	                    mov eax, dword [rax]	      1669	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x255b	          0x83f813	                           cmp eax, 0x13	      1669	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x255e	     0xf84a9010000	                            je 0x400274d	      1669	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x2564	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1670	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x2568	            0x8b00	                    mov eax, dword [rax]	      1670	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x256a	          0x83f814	                           cmp eax, 0x14	      1670	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x256d	     0xf849a010000	                            je 0x400274d	      1670	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x2573	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1671	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x2577	            0x8b00	                    mov eax, dword [rax]	      1671	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x2579	          0x83f815	                           cmp eax, 0x15	      1671	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x257c	     0xf848b010000	                            je 0x400274d	      1671	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x2582	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1672	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x2586	            0x8b00	                    mov eax, dword [rax]	      1672	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x2588	          0x83f816	                           cmp eax, 0x16	      1672	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x258b	     0xf847c010000	                            je 0x400274d	      1672	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x2591	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x2595	            0x8b00	                    mov eax, dword [rax]	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x2597	          0x83f817	                           cmp eax, 0x17	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x259a	     0xf846d010000	                            je 0x400274d	      1673	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x25a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1674	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x25a4	            0x8b00	                    mov eax, dword [rax]	      1674	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x25a6	          0x83f818	                           cmp eax, 0x18	      1674	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x25a9	     0xf845e010000	                            je 0x400274d	      1674	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x25af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1675	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x25b3	            0x8b00	                    mov eax, dword [rax]	      1675	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x25b5	          0x83f819	                           cmp eax, 0x19	      1675	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x25b8	     0xf844f010000	                            je 0x400274d	      1675	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x25be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1677	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x25c2	          0x8b400c	              mov eax, dword [rax + 0xc]	      1677	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x25c5	            0x85c0	                           test eax, eax	      1677	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x25c7	     0xf8540010000	                           jne 0x400274d	      1677	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40
0x25cd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1682	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x25d1	          0x8b400c	              mov eax, dword [rax + 0xc]	      1682	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x25d4	          0x83f867	                           cmp eax, 0x67	      1682	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x25d7	            0x7578	                           jne 0x4002691	      1682	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x25d9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1682	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x25dd	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1682	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x25e0	          0x83f86e	                           cmp eax, 0x6e	      1682	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x25e3	            0x740c	                            je 0x4002631	      1682	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x25e5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1683	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x25e9	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1683	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x25ec	          0x83f84e	                           cmp eax, 0x4e	      1683	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x25ef	            0x7560	                           jne 0x4002691	      1683	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41
0x25f1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x25f5	          0x8b5810	            mov ebx, dword [rax + 0x10] 	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x25f8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x25fc	        0x448b680c	            mov r13d, dword [rax + 0xc] 	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x2600	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x2604	        0x448b600c	            mov r12d, dword [rax + 0xc] 	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x2608	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x260c	            0x8b00	                    mov eax, dword [rax]	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x260e	            0x89c7	                            mov edi, eax	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x2610	      0xe800000000	                          call 0x4002655	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x2615	          0x4189c6	                           mov r14d, eax	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x2618	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x261c	            0x8b00	                    mov eax, dword [rax]	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x261e	            0x89c7	                            mov edi, eax	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x2620	      0xe800000000	                          call 0x4002665	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x2625	            0x89c2	                            mov edx, eax	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x2627	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x262b	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x262f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x2633	          0x8b4004	                mov eax, dword [rax + 4]	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x2636	        0x4883ec08	                              sub rsp, 8	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x263a	              0x53	                                push rbx	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x263b	          0x4589e9	                           mov r9d, r13d	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x263e	          0x4589e0	                           mov r8d, r12d	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x2641	          0x4489f1	                           mov ecx, r14d	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x2644	            0x89c7	                            mov edi, eax	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x2646	      0xe85d320000	                      call sym.prep_redo	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x264b	        0x4883c410	                           add rsp, 0x10	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x264f	            0xeb70	                           jmp 0x4002701	      1684	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_41	CALL_36
0x2651	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1687	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42
0x2655	          0x8b400c	              mov eax, dword [rax + 0xc]	      1687	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42
0x2658	          0x83f83a	                           cmp eax, 0x3a	      1687	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42
0x265b	            0x7464	                            je 0x4002701	      1687	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42
0x265d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1691	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42
0x2661	            0x8b00	                    mov eax, dword [rax]	      1691	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42
0x2663	          0x83f810	                           cmp eax, 0x10	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x2666	            0x7509	                           jne 0x40026b1	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x2668	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x266c	          0x8b5810	            mov ebx, dword [rax + 0x10] 	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x266f	            0xeb05	                           jmp 0x40026b6	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x2671	      0xbb00000000	                              mov ebx, 0	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x2676	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x267a	            0x8b00	                    mov eax, dword [rax]	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x267c	            0x89c7	                            mov edi, eax	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x267e	      0xe800000000	                          call 0x40026c3	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x2683	          0x4189c4	                           mov r12d, eax	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x2686	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x268a	            0x8b00	                    mov eax, dword [rax]	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x268c	            0x89c7	                            mov edi, eax	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x268e	      0xe800000000	                          call 0x40026d3	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x2693	            0x89c2	                            mov edx, eax	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x2695	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x2699	          0x8b4004	                mov eax, dword [rax + 4]	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x269c	        0x4883ec08	                              sub rsp, 8	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x26a0	              0x53	                                push rbx	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x26a1	          0x4589e1	                           mov r9d, r12d	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x26a4	          0x4189d0	                            mov r8d, edx	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x26a7	      0xb976000000	                           mov ecx, 0x76	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x26ac	      0xba00000000	                              mov edx, 0	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x26b1	      0xbe00000000	                              mov esi, 0	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x26b6	            0x89c7	                            mov edi, eax	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x26b8	      0xe8eb310000	                      call sym.prep_redo	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x26bd	        0x4883c410	                           add rsp, 0x10	      1688	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	ELSE_15	IF_42	CALL_39
0x26c1	    0x8b0500000000	            mov eax, dword [0x04002707] 	      1693	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_43
0x26c7	            0x85c0	                           test eax, eax	      1693	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_43
0x26c9	            0x7542	                           jne 0x400274d	      1693	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_43
0x26cb	    0x8b0500000000	            mov eax, dword [0x04002711] 	      1695	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_43
0x26d1	    0x890500000000	            mov dword [0x04002717], eax 	      1695	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_43
0x26d7	    0x8b0500000000	            mov eax, dword [0x0400271d] 	      1696	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_43
0x26dd	    0x890500000000	            mov dword [0x04002723], eax 	      1696	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_43
0x26e3	    0x488b05000000	            mov rax, qword [0x0400272a] 	      1697	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_43
0x26ea	    0x488905000000	            mov qword [0x04002731], rax 	      1697	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_43
0x26f1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1698	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_43
0x26f5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1698	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_43
0x26f9	    0x488905000000	            mov qword [0x04002740], rax 	      1698	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_43
0x2700	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1699	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_43
0x2704	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1699	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_43
0x2707	    0x890500000000	            mov dword [0x0400274d], eax 	      1699	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_14	IF_40	IF_43
0x270d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1708	normal.c	FUNCTION_6	IF_2	IF_34	IF_44
0x2711	          0x8b400c	              mov eax, dword [rax + 0xc]	      1708	normal.c	FUNCTION_6	IF_2	IF_34	IF_44
0x2714	            0x85c0	                           test eax, eax	      1708	normal.c	FUNCTION_6	IF_2	IF_34	IF_44
0x2716	            0x740c	                            je 0x4002764	      1708	normal.c	FUNCTION_6	IF_2	IF_34	IF_44
0x2718	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1708	normal.c	FUNCTION_6	IF_2	IF_34	IF_44
0x271c	          0x8b4008	                mov eax, dword [rax + 8]	      1708	normal.c	FUNCTION_6	IF_2	IF_34	IF_44
0x271f	          0x83f801	                              cmp eax, 1	      1708	normal.c	FUNCTION_6	IF_2	IF_34	IF_44
0x2722	            0x750b	                           jne 0x400276f	      1708	normal.c	FUNCTION_6	IF_2	IF_34	IF_44
0x2724	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1709	normal.c	FUNCTION_6	IF_2	IF_34	IF_44
0x2728	    0xc74014010000	               mov dword [rax + 0x14], 1	      1709	normal.c	FUNCTION_6	IF_2	IF_34	IF_44
0x272f	    0x8b0500000000	            mov eax, dword [0x04002775] 	      1710	normal.c	FUNCTION_6	IF_2	IF_34	IF_45
0x2735	          0x83f856	                           cmp eax, 0x56	      1710	normal.c	FUNCTION_6	IF_2	IF_34	IF_45
0x2738	            0x7510	                           jne 0x400278a	      1710	normal.c	FUNCTION_6	IF_2	IF_34	IF_45
0x273a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1711	normal.c	FUNCTION_6	IF_2	IF_34	IF_45
0x273e	    0xc74008010000	                  mov dword [rax + 8], 1	      1711	normal.c	FUNCTION_6	IF_2	IF_34	IF_45
0x2745	      0xe9c4000000	                           jmp 0x400284e	      1711	normal.c	FUNCTION_6	IF_2	IF_34	IF_45
0x274a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1714	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16
0x274e	    0xc74008000000	                  mov dword [rax + 8], 0	      1714	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16
0x2755	    0x8b0500000000	            mov eax, dword [0x0400279b] 	      1715	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	CALL_42
0x275b	          0x83f816	                           cmp eax, 0x16	      1715	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	CALL_42
0x275e	     0xf84aa000000	                            je 0x400284e	      1715	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	CALL_42
0x2764	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1715	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	CALL_42
0x2768	        0x4883c030	                           add rax, 0x30	      1715	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	CALL_42
0x276c	          0x4889c7	                            mov rdi, rax	      1715	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	CALL_42
0x276f	      0xe800000000	                          call 0x40027b4	      1715	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	CALL_42
0x2774	           0xfb600	                   movzx eax, byte [rax]	      1715	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	CALL_42
0x2777	            0x84c0	                             test al, al	      1715	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	CALL_42
0x2779	     0xf858f000000	                           jne 0x400284e	      1715	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	CALL_42
0x277f	        0x837db800	               cmp dword [rbp - 0x48], 0	      1717	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46
0x2783	            0x750a	                           jne 0x40027cf	      1717	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46
0x2785	    0x8b0500000000	            mov eax, dword [0x040027cb] 	      1717	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46
0x278b	            0x85c0	                           test eax, eax	      1717	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46
0x278d	            0x757f	                           jne 0x400284e	      1717	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46
0x278f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1721	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46
0x2793	    0xc74014000000	               mov dword [rax + 0x14], 0	      1721	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46
0x279a	    0x488b05000000	            mov rax, qword [0x040027e1] 	      1724	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27a1	           0xfb600	                   movzx eax, byte [rax]	      1724	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27a4	            0x3c6f	                            cmp al, 0x6f	      1724	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27a6	            0x7466	                            je 0x400284e	      1724	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27a8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1725	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47	CALL_43
0x27ac	            0x8b00	                    mov eax, dword [rax]	      1725	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47	CALL_43
0x27ae	            0x89c7	                            mov edi, eax	      1725	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47	CALL_43
0x27b0	      0xe800000000	                          call 0x40027f5	      1725	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47	CALL_43
0x27b5	            0x85c0	                           test eax, eax	      1725	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47	CALL_43
0x27b7	            0x7555	                           jne 0x400284e	      1725	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47	CALL_43
0x27b9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1726	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27bd	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      1726	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27c1	    0x488b05000000	            mov rax, qword [0x04002808] 	      1726	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27c8	          0x488b00	                    mov rax, qword [rax]	      1726	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27cb	          0x4839c2	                            cmp rdx, rax	      1726	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27ce	            0x7d3e	                           jge 0x400284e	      1726	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1728	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27d4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1728	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27d8	        0x488d5001	                      lea rdx, [rax + 1]	      1728	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27dc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1728	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27e0	        0x48895030	             mov qword [rax + 0x30], rdx	      1728	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1729	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27e8	    0xc74038000000	               mov dword [rax + 0x38], 0	      1729	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1731	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27f3	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      1731	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1733	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x27fe	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1733	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x2802	        0x488d5001	                      lea rdx, [rax + 1]	      1733	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x2806	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1733	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x280a	        0x48895050	             mov qword [rax + 0x50], rdx	      1733	normal.c	FUNCTION_6	IF_2	IF_34	ELSE_16	IF_46	IF_47
0x280e	    0xc70500000000	               mov dword [0x04002858], 0	      1738	normal.c	FUNCTION_6	IF_2	IF_34
0x2818	        0x837da000	               cmp dword [rbp - 0x60], 0	      1747	normal.c	FUNCTION_6	IF_2	IF_34	IF_48
0x281c	            0x756f	                           jne 0x40028cd	      1747	normal.c	FUNCTION_6	IF_2	IF_34	IF_48
0x281e	    0xc70500000000	               mov dword [0x04002868], 0	      1749	normal.c	FUNCTION_6	IF_2	IF_34	IF_48
0x2828	      0xe800000000	                          call 0x400286d	      1751	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	CALL_44
0x282d	    0xc70500000000	               mov dword [0x04002877], 0	      1752	normal.c	FUNCTION_6	IF_2	IF_34	IF_48
0x2837	      0xe880320000	              call sym.may_clear_cmdline	      1754	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	CALL_45
0x283c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1755	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x2840	            0x8b00	                    mov eax, dword [rax]	      1755	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x2842	          0x83f802	                              cmp eax, 2	      1755	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x2845	            0x7421	                            je 0x40028a8	      1755	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x2847	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1756	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x284b	            0x8b00	                    mov eax, dword [rax]	      1756	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x284d	          0x83f80a	                            cmp eax, 0xa	      1756	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x2850	            0x7416	                            je 0x40028a8	      1756	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x2852	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1757	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x2856	            0x8b00	                    mov eax, dword [rax]	      1757	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x2858	          0x83f81b	                           cmp eax, 0x1b	      1757	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x285b	            0x740b	                            je 0x40028a8	      1757	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x285d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1758	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x2861	            0x8b00	                    mov eax, dword [rax]	      1758	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x2863	          0x83f806	                              cmp eax, 6	      1758	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x2866	            0x7525	                           jne 0x40028cd	      1758	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x2868	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1759	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x286c	          0x8b400c	              mov eax, dword [rax + 0xc]	      1759	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x286f	            0x85c0	                           test eax, eax	      1759	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x2871	            0x751a	                           jne 0x40028cd	      1759	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x2873	    0x488b05000000	            mov rax, qword [0x040028ba] 	      1763	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x287a	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      1763	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x287d	    0x899030020000	            mov dword [rax + 0x230], edx	      1763	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49
0x2883	      0xbf14000000	                           mov edi, 0x14	      1765	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49	CALL_46
0x2888	      0xe800000000	                          call 0x40028cd	      1765	normal.c	FUNCTION_6	IF_2	IF_34	IF_48	IF_49	CALL_46
0x288d	    0x8b0500000000	            mov eax, dword [0x040028d3] 	      1772	normal.c	FUNCTION_6	IF_2	IF_50
0x2893	            0x85c0	                           test eax, eax	      1772	normal.c	FUNCTION_6	IF_2	IF_50
0x2895	            0x7446	                            je 0x400291d	      1772	normal.c	FUNCTION_6	IF_2	IF_50
0x2897	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1772	normal.c	FUNCTION_6	IF_2	IF_50
0x289b	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1772	normal.c	FUNCTION_6	IF_2	IF_50
0x289e	            0x85c0	                           test eax, eax	      1772	normal.c	FUNCTION_6	IF_2	IF_50
0x28a0	            0x743b	                            je 0x400291d	      1772	normal.c	FUNCTION_6	IF_2	IF_50
0x28a2	    0x488b1d000000	            mov rbx, qword [0x040028e9] 	      1776	normal.c	FUNCTION_6	IF_2	IF_50	CALL_47
0x28a9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1776	normal.c	FUNCTION_6	IF_2	IF_50	CALL_47
0x28ad	        0x4883c030	                           add rax, 0x30	      1776	normal.c	FUNCTION_6	IF_2	IF_50	CALL_47
0x28b1	          0x4889c7	                            mov rdi, rax	      1776	normal.c	FUNCTION_6	IF_2	IF_50	CALL_47
0x28b4	      0xe800000000	                          call 0x40028f9	      1776	normal.c	FUNCTION_6	IF_2	IF_50	CALL_47
0x28b9	          0x4889c7	                            mov rdi, rax	      1776	normal.c	FUNCTION_6	IF_2	IF_50	CALL_47
0x28bc	            0xffd3	                                call rbx	      1776	normal.c	FUNCTION_6	IF_2	IF_50	CALL_47
0x28be	          0x8945c0	             mov dword [rbp - 0x40], eax	      1776	normal.c	FUNCTION_6	IF_2	IF_50	CALL_47
0x28c1	        0x837dc001	               cmp dword [rbp - 0x40], 1	      1777	normal.c	FUNCTION_6	IF_2	IF_50	IF_51
0x28c5	            0x7e16	                           jle 0x400291d	      1777	normal.c	FUNCTION_6	IF_2	IF_50	IF_51
0x28c7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1778	normal.c	FUNCTION_6	IF_2	IF_50	IF_51
0x28cb	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1778	normal.c	FUNCTION_6	IF_2	IF_50	IF_51
0x28ce	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      1778	normal.c	FUNCTION_6	IF_2	IF_50	IF_51
0x28d1	          0x83ea01	                              sub edx, 1	      1778	normal.c	FUNCTION_6	IF_2	IF_50	IF_51
0x28d4	             0x1c2	                            add edx, eax	      1778	normal.c	FUNCTION_6	IF_2	IF_50	IF_51
0x28d6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1778	normal.c	FUNCTION_6	IF_2	IF_50	IF_51
0x28da	          0x895038	             mov dword [rax + 0x38], edx	      1778	normal.c	FUNCTION_6	IF_2	IF_50	IF_51
0x28dd	    0x488b05000000	            mov rax, qword [0x04002924] 	      1781	normal.c	FUNCTION_6	IF_2
0x28e4	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      1781	normal.c	FUNCTION_6	IF_2
0x28eb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1787	normal.c	FUNCTION_6	IF_2
0x28ef	          0x8b4008	                mov eax, dword [rax + 8]	      1787	normal.c	FUNCTION_6	IF_2
0x28f2	            0x85c0	                           test eax, eax	      1793	normal.c	FUNCTION_6	IF_2
0x28f4	     0xf8586000000	                           jne 0x40029c0	      1793	normal.c	FUNCTION_6	IF_2
0x28fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1788	normal.c	FUNCTION_6	IF_2
0x28fe	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1788	normal.c	FUNCTION_6	IF_2
0x2901	            0x85c0	                           test eax, eax	      1788	normal.c	FUNCTION_6	IF_2
0x2903	            0x741f	                            je 0x4002964	      1788	normal.c	FUNCTION_6	IF_2
0x2905	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1789	normal.c	FUNCTION_6	IF_2
0x2909	            0x8b00	                    mov eax, dword [rax]	      1789	normal.c	FUNCTION_6	IF_2
0x290b	          0x83f802	                              cmp eax, 2	      1789	normal.c	FUNCTION_6	IF_2
0x290e	            0x7570	                           jne 0x40029c0	      1789	normal.c	FUNCTION_6	IF_2
0x2910	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1790	normal.c	FUNCTION_6	IF_2	CALL_48
0x2914	        0x4883c030	                           add rax, 0x30	      1790	normal.c	FUNCTION_6	IF_2	CALL_48
0x2918	          0x4889c7	                            mov rdi, rax	      1790	normal.c	FUNCTION_6	IF_2	CALL_48
0x291b	      0xe800000000	                          call 0x4002960	      1790	normal.c	FUNCTION_6	IF_2	CALL_48
0x2920	            0x85c0	                           test eax, eax	      1790	normal.c	FUNCTION_6	IF_2	CALL_48
0x2922	            0x755c	                           jne 0x40029c0	      1790	normal.c	FUNCTION_6	IF_2	CALL_48
0x2924	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x2928	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x292c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x2930	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x2934	          0x4839c2	                            cmp rdx, rax	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x2937	            0x7547	                           jne 0x40029c0	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x2939	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x293d	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x2940	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x2944	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x2947	            0x39c2	                            cmp edx, eax	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x2949	            0x7535	                           jne 0x40029c0	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x294b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x294f	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x2952	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x2956	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x2959	            0x39c2	                            cmp edx, eax	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x295b	            0x7523	                           jne 0x40029c0	      1791	normal.c	FUNCTION_6	IF_2	CALL_49
0x295d	    0x8b0500000000	            mov eax, dword [0x040029a3] 	      1793	normal.c	FUNCTION_6	IF_2
0x2963	            0x85c0	                           test eax, eax	      1793	normal.c	FUNCTION_6	IF_2
0x2965	            0x7412	                            je 0x40029b9	      1793	normal.c	FUNCTION_6	IF_2
0x2967	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1793	normal.c	FUNCTION_6	IF_2
0x296b	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      1793	normal.c	FUNCTION_6	IF_2
0x296e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1793	normal.c	FUNCTION_6	IF_2
0x2972	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1793	normal.c	FUNCTION_6	IF_2
0x2975	            0x39c2	                            cmp edx, eax	      1793	normal.c	FUNCTION_6	IF_2
0x2977	            0x7507	                           jne 0x40029c0	      1793	normal.c	FUNCTION_6	IF_2
0x2979	      0xba01000000	                              mov edx, 1	      1793	normal.c	FUNCTION_6	IF_2
0x297e	            0xeb05	                           jmp 0x40029c5	      1793	normal.c	FUNCTION_6	IF_2
0x2980	      0xba00000000	                              mov edx, 0	      1793	normal.c	FUNCTION_6	IF_2
0x2985	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1787	normal.c	FUNCTION_6	IF_2
0x2989	          0x895058	             mov dword [rax + 0x58], edx	      1787	normal.c	FUNCTION_6	IF_2
0x298c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1800	normal.c	FUNCTION_6	IF_2
0x2990	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1800	normal.c	FUNCTION_6	IF_2
0x2993	            0x85c0	                           test eax, eax	      1801	normal.c	FUNCTION_6	IF_2	CALL_50
0x2995	            0x7420	                            je 0x40029f7	      1801	normal.c	FUNCTION_6	IF_2	CALL_50
0x2997	    0x488b05000000	            mov rax, qword [0x040029de] 	      1801	normal.c	FUNCTION_6	IF_2	CALL_50
0x299e	      0xbe45000000	                           mov esi, 0x45	      1801	normal.c	FUNCTION_6	IF_2	CALL_50
0x29a3	          0x4889c7	                            mov rdi, rax	      1801	normal.c	FUNCTION_6	IF_2	CALL_50
0x29a6	      0xe800000000	                          call 0x40029eb	      1801	normal.c	FUNCTION_6	IF_2	CALL_50
0x29ab	          0x4885c0	                           test rax, rax	      1801	normal.c	FUNCTION_6	IF_2	CALL_50
0x29ae	            0x7407	                            je 0x40029f7	      1801	normal.c	FUNCTION_6	IF_2	CALL_50
0x29b0	      0xb801000000	                              mov eax, 1	      1801	normal.c	FUNCTION_6	IF_2	CALL_50
0x29b5	            0xeb05	                           jmp 0x40029fc	      1801	normal.c	FUNCTION_6	IF_2	CALL_50
0x29b7	      0xb800000000	                              mov eax, 0	      1801	normal.c	FUNCTION_6	IF_2	CALL_50
0x29bc	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1800	normal.c	FUNCTION_6	IF_2
0x29bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1805	normal.c	FUNCTION_6	IF_2	IF_52
0x29c3	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1805	normal.c	FUNCTION_6	IF_2	IF_52
0x29c6	            0x85c0	                           test eax, eax	      1805	normal.c	FUNCTION_6	IF_2	IF_52
0x29c8	            0x7441	                            je 0x4002a4b	      1805	normal.c	FUNCTION_6	IF_2	IF_52
0x29ca	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1805	normal.c	FUNCTION_6	IF_2	IF_52
0x29ce	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1805	normal.c	FUNCTION_6	IF_2	IF_52
0x29d1	            0x85c0	                           test eax, eax	      1805	normal.c	FUNCTION_6	IF_2	IF_52
0x29d3	            0x751c	                           jne 0x4002a31	      1805	normal.c	FUNCTION_6	IF_2	IF_52
0x29d5	    0x488b05000000	            mov rax, qword [0x04002a1c] 	      1805	normal.c	FUNCTION_6	IF_2	IF_52
0x29dc	    0x8b8028150000	          mov eax, dword [rax + 0x1528] 	      1805	normal.c	FUNCTION_6	IF_2	IF_52
0x29e2	            0x85c0	                           test eax, eax	      1805	normal.c	FUNCTION_6	IF_2	IF_52
0x29e4	            0x740b	                            je 0x4002a31	      1805	normal.c	FUNCTION_6	IF_2	IF_52
0x29e6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1807	normal.c	FUNCTION_6	IF_2	IF_52
0x29ea	            0x8b00	                    mov eax, dword [rax]	      1807	normal.c	FUNCTION_6	IF_2	IF_52
0x29ec	          0x83f813	                           cmp eax, 0x13	      1807	normal.c	FUNCTION_6	IF_2	IF_52
0x29ef	            0x751a	                           jne 0x4002a4b	      1807	normal.c	FUNCTION_6	IF_2	IF_52
0x29f1	    0x488b05000000	            mov rax, qword [0x04002a38] 	      1812	normal.c	FUNCTION_6	IF_2	IF_52
0x29f8	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      1812	normal.c	FUNCTION_6	IF_2	IF_52
0x29fb	    0x899030020000	            mov dword [rax + 0x230], edx	      1812	normal.c	FUNCTION_6	IF_2	IF_52
0x2a01	      0xbf14000000	                           mov edi, 0x14	      1814	normal.c	FUNCTION_6	IF_2	IF_52	CALL_51
0x2a06	      0xe800000000	                          call 0x4002a4b	      1814	normal.c	FUNCTION_6	IF_2	IF_52	CALL_51
0x2a0b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1824	normal.c	FUNCTION_6	IF_2	IF_53
0x2a0f	          0x8b4008	                mov eax, dword [rax + 8]	      1824	normal.c	FUNCTION_6	IF_2	IF_53
0x2a12	            0x85c0	                           test eax, eax	      1824	normal.c	FUNCTION_6	IF_2	IF_53
0x2a14	     0xf8506010000	                           jne 0x4002b60	      1824	normal.c	FUNCTION_6	IF_2	IF_53
0x2a1a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1825	normal.c	FUNCTION_6	IF_2	IF_53
0x2a1e	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1825	normal.c	FUNCTION_6	IF_2	IF_53
0x2a21	            0x85c0	                           test eax, eax	      1825	normal.c	FUNCTION_6	IF_2	IF_53
0x2a23	     0xf85f7000000	                           jne 0x4002b60	      1825	normal.c	FUNCTION_6	IF_2	IF_53
0x2a29	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1826	normal.c	FUNCTION_6	IF_2	IF_53
0x2a2d	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1826	normal.c	FUNCTION_6	IF_2	IF_53
0x2a30	          0x83e002	                              and eax, 2	      1826	normal.c	FUNCTION_6	IF_2	IF_53
0x2a33	            0x85c0	                           test eax, eax	      1826	normal.c	FUNCTION_6	IF_2	IF_53
0x2a35	     0xf85e5000000	                           jne 0x4002b60	      1826	normal.c	FUNCTION_6	IF_2	IF_53
0x2a3b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1827	normal.c	FUNCTION_6	IF_2	IF_53
0x2a3f	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1827	normal.c	FUNCTION_6	IF_2	IF_53
0x2a42	            0x85c0	                           test eax, eax	      1827	normal.c	FUNCTION_6	IF_2	IF_53
0x2a44	     0xf85d6000000	                           jne 0x4002b60	      1827	normal.c	FUNCTION_6	IF_2	IF_53
0x2a4a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1828	normal.c	FUNCTION_6	IF_2	IF_53
0x2a4e	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1828	normal.c	FUNCTION_6	IF_2	IF_53
0x2a51	            0x85c0	                           test eax, eax	      1828	normal.c	FUNCTION_6	IF_2	IF_53
0x2a53	            0x7412	                            je 0x4002aa7	      1828	normal.c	FUNCTION_6	IF_2	IF_53
0x2a55	    0x488b05000000	            mov rax, qword [0x04002a9c] 	      1828	normal.c	FUNCTION_6	IF_2	IF_53
0x2a5c	           0xfb600	                   movzx eax, byte [rax]	      1828	normal.c	FUNCTION_6	IF_2	IF_53
0x2a5f	            0x3c6f	                            cmp al, 0x6f	      1828	normal.c	FUNCTION_6	IF_2	IF_53
0x2a61	     0xf85b9000000	                           jne 0x4002b60	      1828	normal.c	FUNCTION_6	IF_2	IF_53
0x2a67	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1829	normal.c	FUNCTION_6	IF_2	IF_53
0x2a6b	          0x8b4060	            mov eax, dword [rax + 0x60] 	      1829	normal.c	FUNCTION_6	IF_2	IF_53
0x2a6e	            0x85c0	                           test eax, eax	      1829	normal.c	FUNCTION_6	IF_2	IF_53
0x2a70	     0xf85aa000000	                           jne 0x4002b60	      1829	normal.c	FUNCTION_6	IF_2	IF_53
0x2a76	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1830	normal.c	FUNCTION_6	IF_2	IF_53
0x2a7a	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1830	normal.c	FUNCTION_6	IF_2	IF_53
0x2a7e	        0x4883f801	                              cmp rax, 1	      1830	normal.c	FUNCTION_6	IF_2	IF_53
0x2a82	     0xf8e98000000	                           jle 0x4002b60	      1830	normal.c	FUNCTION_6	IF_2	IF_53
0x2a88	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1832	normal.c	FUNCTION_6	IF_2	IF_53
0x2a8c	    0xc74018010000	               mov dword [rax + 0x18], 1	      1832	normal.c	FUNCTION_6	IF_2	IF_53
0x2a93	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1833	normal.c	FUNCTION_6	IF_2	IF_53
0x2a97	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1833	normal.c	FUNCTION_6	IF_2	IF_53
0x2a9b	        0x488d50ff	                      lea rdx, [rax - 1]	      1833	normal.c	FUNCTION_6	IF_2	IF_53
0x2a9f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1833	normal.c	FUNCTION_6	IF_2	IF_53
0x2aa3	        0x48895050	             mov qword [rax + 0x50], rdx	      1833	normal.c	FUNCTION_6	IF_2	IF_53
0x2aa7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1834	normal.c	FUNCTION_6	IF_2	IF_53
0x2aab	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1834	normal.c	FUNCTION_6	IF_2	IF_53
0x2aaf	        0x488d50ff	                      lea rdx, [rax - 1]	      1834	normal.c	FUNCTION_6	IF_2	IF_53
0x2ab3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1834	normal.c	FUNCTION_6	IF_2	IF_53
0x2ab7	        0x48895030	             mov qword [rax + 0x30], rdx	      1834	normal.c	FUNCTION_6	IF_2	IF_53
0x2abb	      0xbf00000000	                              mov edi, 0	      1835	normal.c	FUNCTION_6	IF_2	IF_53	IF_54	CALL_52
0x2ac0	      0xe800000000	                          call 0x4002b05	      1835	normal.c	FUNCTION_6	IF_2	IF_53	IF_54	CALL_52
0x2ac5	            0x85c0	                           test eax, eax	      1835	normal.c	FUNCTION_6	IF_2	IF_53	IF_54	CALL_52
0x2ac7	            0x740d	                            je 0x4002b16	      1835	normal.c	FUNCTION_6	IF_2	IF_53	IF_54	CALL_52
0x2ac9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1836	normal.c	FUNCTION_6	IF_2	IF_53	IF_54
0x2acd	    0xc74008010000	                  mov dword [rax + 8], 1	      1836	normal.c	FUNCTION_6	IF_2	IF_53	IF_54
0x2ad4	            0xeb57	                           jmp 0x4002b6d	      1835	normal.c	FUNCTION_6	IF_2	IF_53	IF_54	CALL_52
0x2ad6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1839	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	CALL_54
0x2ada	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1839	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	CALL_54
0x2ade	          0x4889c7	                            mov rdi, rax	      1839	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	CALL_54
0x2ae1	      0xe800000000	                          call 0x4002b26	      1839	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	CALL_54
0x2ae6	          0x4889c7	                            mov rdi, rax	      1839	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	CALL_54
0x2ae9	      0xe800000000	                          call 0x4002b2e	      1839	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	CALL_54
0x2aee	            0x89c2	                            mov edx, eax	      1839	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	CALL_54
0x2af0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1839	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	CALL_54
0x2af4	          0x895038	             mov dword [rax + 0x38], edx	      1839	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	CALL_54
0x2af7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1840	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	IF_55
0x2afb	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1840	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	IF_55
0x2afe	            0x85c0	                           test eax, eax	      1840	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	IF_55
0x2b00	            0x742b	                            je 0x4002b6d	      1840	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	IF_55
0x2b02	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1842	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	IF_55
0x2b06	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1842	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	IF_55
0x2b09	          0x8d50ff	                      lea edx, [rax - 1]	      1842	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	IF_55
0x2b0c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1842	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	IF_55
0x2b10	          0x895038	             mov dword [rax + 0x38], edx	      1842	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	IF_55
0x2b13	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1843	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	IF_55
0x2b17	    0xc74014010000	               mov dword [rax + 0x14], 1	      1843	normal.c	FUNCTION_6	IF_2	IF_53	ELSE_17	IF_55
0x2b1e	            0xeb0d	                           jmp 0x4002b6d	      1835	normal.c	FUNCTION_6	IF_2	IF_53	IF_54	CALL_52
0x2b20	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1848	normal.c	FUNCTION_6	IF_2	ELSE_18
0x2b24	    0xc74018000000	               mov dword [rax + 0x18], 0	      1848	normal.c	FUNCTION_6	IF_2	ELSE_18
0x2b2b	            0xeb01	                           jmp 0x4002b6e	      1848	normal.c	FUNCTION_6	IF_2	ELSE_18
0x2b2d	              0x90	                                     nop	      1835	normal.c	FUNCTION_6	IF_2	IF_53	IF_54	CALL_52
0x2b2e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1850	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2b32	            0x8b00	                    mov eax, dword [rax]	      1850	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2b34	          0x83f81d	                           cmp eax, 0x1d	      1850	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2b37	     0xf877d060000	                            ja 0x40031fa	      1850	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2b3d	            0x89c0	                            mov eax, eax	      1850	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2b3f	    0x488b04c50000	                  mov rax, qword [rax*8]	      1850	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2b47	            0xffe0	                                 jmp rax	      1850	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2b49	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1854	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_55
0x2b4d	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1854	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_55
0x2b50	            0x85c0	                           test eax, eax	      1854	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_55
0x2b52	            0x740c	                            je 0x4002ba0	      1854	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_55
0x2b54	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1854	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_55
0x2b58	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1854	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_55
0x2b5c	            0x89c2	                            mov edx, eax	      1854	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_55
0x2b5e	            0xeb05	                           jmp 0x4002ba5	      1854	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_55
0x2b60	      0xba01000000	                              mov edx, 1	      1854	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_55
0x2b65	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1854	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_55
0x2b69	      0xbe01000000	                              mov esi, 1	      1854	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_55
0x2b6e	          0x4889c7	                            mov rdi, rax	      1854	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_55
0x2b71	      0xe800000000	                          call 0x4002bb6	      1854	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_55
0x2b76	      0xbe01000000	                              mov esi, 1	      1855	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_56
0x2b7b	      0xbf00000000	                              mov edi, 0	      1855	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_56
0x2b80	      0xe800000000	                          call 0x4002bc5	      1855	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_56
0x2b85	      0xe93f060000	                           jmp 0x4003209	      1856	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2b8a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1860	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_56
0x2b8e	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1860	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_56
0x2b92	        0x4883f801	                              cmp rax, 1	      1860	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_56
0x2b96	            0x7f0c	                            jg 0x4002be4	      1860	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_56
0x2b98	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1861	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_56
0x2b9c	    0x48c740500200	               mov qword [rax + 0x50], 2	      1861	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_56
0x2ba4	    0x488b05000000	            mov rax, qword [0x04002beb] 	      1862	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_57
0x2bab	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1862	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_57
0x2baf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1862	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_57
0x2bb3	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1862	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_57
0x2bb7	          0x4801d0	                            add rax, rdx	      1862	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_57
0x2bba	        0x488d50ff	                      lea rdx, [rax - 1]	      1862	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_57
0x2bbe	    0x488b05000000	            mov rax, qword [0x04002c05] 	      1863	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_57
0x2bc5	          0x488b00	                    mov rax, qword [rax]	      1863	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_57
0x2bc8	          0x4839c2	                            cmp rdx, rax	      1862	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_57
0x2bcb	            0x7e0a	                           jle 0x4002c17	      1862	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_57
0x2bcd	      0xe800000000	                          call 0x4002c12	      1864	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_57
0x2bd2	      0xe9f2050000	                           jmp 0x4003209	      1871	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2bd7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1867	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_19	CALL_58
0x2bdb	            0x8b00	                    mov eax, dword [rax]	      1867	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_19	CALL_58
0x2bdd	          0x83f80d	                            cmp eax, 0xd	      1867	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_19	CALL_58
0x2be0	           0xf94c0	                                 sete al	      1867	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_19	CALL_58
0x2be3	           0xfb6f0	                           movzx esi, al	      1867	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_19	CALL_58
0x2be6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1867	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_19	CALL_58
0x2bea	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1867	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_19	CALL_58
0x2bee	    0x41b801000000	                              mov r8d, 1	      1867	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_19	CALL_58
0x2bf4	      0xb901000000	                              mov ecx, 1	      1867	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_19	CALL_58
0x2bf9	      0xba01000000	                              mov edx, 1	      1867	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_19	CALL_58
0x2bfe	          0x4889c7	                            mov rdi, rax	      1867	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_19	CALL_58
0x2c01	      0xe800000000	                          call 0x4002c46	      1867	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_19	CALL_58
0x2c06	      0xbe01000000	                              mov esi, 1	      1869	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_19	CALL_59
0x2c0b	      0xbf00000000	                              mov edi, 0	      1869	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_19	CALL_59
0x2c10	      0xe800000000	                          call 0x4002c55	      1869	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_19	CALL_59
0x2c15	      0xe9af050000	                           jmp 0x4003209	      1871	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2c1a	    0xc70500000000	               mov dword [0x04002c64], 0	      1874	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2c24	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1875	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_58
0x2c28	            0x7414	                            je 0x4002c7e	      1875	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_58
0x2c2a	      0xbf00400000	                         mov edi, 0x4000	      1877	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_58	CALL_60
0x2c2f	      0xe800000000	                          call 0x4002c74	      1877	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_58	CALL_60
0x2c34	      0xe800000000	                          call 0x4002c79	      1878	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_58	CALL_61
0x2c39	      0xe98b050000	                           jmp 0x4003209	      1887	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2c3e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1882	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_20	CALL_62
0x2c42	          0x4889c7	                            mov rdi, rax	      1882	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_20	CALL_62
0x2c45	      0xe800000000	                          call 0x4002c8a	      1882	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_20	CALL_62
0x2c4a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1883	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_20	IF_59	CALL_63
0x2c4e	          0x8b4008	                mov eax, dword [rax + 8]	      1883	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_20	IF_59	CALL_63
0x2c51	          0x83f801	                              cmp eax, 1	      1883	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_20	IF_59	CALL_63
0x2c54	            0x7513	                           jne 0x4002ca9	      1883	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_20	IF_59	CALL_63
0x2c56	      0xbf61000000	                           mov edi, 0x61	      1883	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_20	IF_59	CALL_63
0x2c5b	      0xe800000000	                          call 0x4002ca0	      1883	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_20	IF_59	CALL_63
0x2c60	            0x85c0	                           test eax, eax	      1883	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_20	IF_59	CALL_63
0x2c62	            0x7405	                            je 0x4002ca9	      1883	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_20	IF_59	CALL_63
0x2c64	      0xe800000000	                          call 0x4002ca9	      1884	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_20	CALL_64
0x2c69	      0xbe01000000	                              mov esi, 1	      1885	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_20	CALL_65
0x2c6e	      0xbf00000000	                              mov edi, 0	      1885	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_20	CALL_65
0x2c73	      0xe800000000	                          call 0x4002cb8	      1885	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_20	CALL_65
0x2c78	      0xe94c050000	                           jmp 0x4003209	      1887	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2c7d	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1890	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_60
0x2c81	            0x7417	                            je 0x4002cda	      1890	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_60
0x2c83	        0x837da000	               cmp dword [rbp - 0x60], 0	      1892	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_60	IF_61
0x2c87	            0x753c	                           jne 0x4002d05	      1892	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_60	IF_61
0x2c89	      0xbf00400000	                         mov edi, 0x4000	      1894	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_60	IF_61	CALL_66
0x2c8e	      0xe800000000	                          call 0x4002cd3	      1894	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_60	IF_61	CALL_66
0x2c93	      0xe800000000	                          call 0x4002cd8	      1895	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_60	IF_61	CALL_67
0x2c98	            0xeb2b	                           jmp 0x4002d05	      1895	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_60	IF_61	CALL_67
0x2c9a	    0x488b05000000	            mov rax, qword [0x04002ce1] 	      1901	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_21
0x2ca1	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      1901	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_21
0x2ca4	    0x899030020000	            mov dword [rax + 0x230], edx	      1901	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_21
0x2caa	        0x837da000	               cmp dword [rbp - 0x60], 0	      1903	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_21	CALL_68
0x2cae	           0xf94c0	                                 sete al	      1903	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_21	CALL_68
0x2cb1	           0xfb6d0	                           movzx edx, al	      1903	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_21	CALL_68
0x2cb4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1903	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_21	CALL_68
0x2cb8	      0xbe00000000	                              mov esi, 0	      1903	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_21	CALL_68
0x2cbd	          0x4889c7	                            mov rdi, rax	      1903	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_21	CALL_68
0x2cc0	      0xe800000000	                          call 0x4002d05	      1903	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_21	CALL_68
0x2cc5	      0xe800000000	                          call 0x4002d0a	      1905	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_69
0x2cca	      0xe9fa040000	                           jmp 0x4003209	      1906	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2ccf	    0xc70500000000	               mov dword [0x04002d19], 0	      1909	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2cd9	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1910	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_62
0x2cdd	            0x7414	                            je 0x4002d33	      1910	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_62
0x2cdf	      0xbf00400000	                         mov edi, 0x4000	      1912	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_62	CALL_70
0x2ce4	      0xe800000000	                          call 0x4002d29	      1912	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_62	CALL_70
0x2ce9	      0xe800000000	                          call 0x4002d2e	      1913	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_62	CALL_71
0x2cee	      0xe9d5040000	                           jmp 0x4003208	      1942	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2cf3	    0x8b0500000000	            mov eax, dword [0x04002d39] 	      1921	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_63
0x2cf9	            0x85c0	                           test eax, eax	      1921	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_63
0x2cfb	            0x750a	                           jne 0x4002d47	      1921	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_63
0x2cfd	    0x8b0500000000	            mov eax, dword [0x04002d43] 	      1921	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_63
0x2d03	            0x85c0	                           test eax, eax	      1921	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_63
0x2d05	            0x750b	                           jne 0x4002d52	      1921	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_63
0x2d07	    0x8b0500000000	            mov eax, dword [0x04002d4d] 	      1922	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_63
0x2d0d	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1922	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_63
0x2d10	            0xeb07	                           jmp 0x4002d59	      1922	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_63
0x2d12	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      1924	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	ELSE_23
0x2d19	    0xc70500000000	               mov dword [0x04002d63], 0	      1925	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	ELSE_23
0x2d23	    0x488b05000000	            mov rax, qword [0x04002d6a] 	      1929	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	ELSE_23	IF_64
0x2d2a	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      1929	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	ELSE_23	IF_64
0x2d30	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      1929	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	ELSE_23	IF_64
0x2d33	            0x7429	                            je 0x4002d9e	      1929	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	ELSE_23	IF_64
0x2d35	    0x488b05000000	            mov rax, qword [0x04002d7c] 	      1931	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	ELSE_23	IF_64
0x2d3c	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      1931	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	ELSE_23	IF_64
0x2d3f	    0x899030020000	            mov dword [rax + 0x230], edx	      1931	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	ELSE_23	IF_64
0x2d45	    0x8b0d00000000	            mov ecx, dword [0x04002d8b] 	      1932	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	ELSE_23	IF_64	CALL_72
0x2d4b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1932	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	ELSE_23	IF_64	CALL_72
0x2d4f	      0xba00000000	                              mov edx, 0	      1932	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	ELSE_23	IF_64	CALL_72
0x2d54	            0x89ce	                            mov esi, ecx	      1932	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	ELSE_23	IF_64	CALL_72
0x2d56	          0x4889c7	                            mov rdi, rax	      1932	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	ELSE_23	IF_64	CALL_72
0x2d59	      0xe8b5d90000	                    call sym.get_op_vcol	      1932	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	ELSE_23	IF_64	CALL_72
0x2d5e	    0xc70500000000	               mov dword [0x04002da8], 0	      1936	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22
0x2d68	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1937	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_65	CALL_73
0x2d6c	          0x4889c7	                            mov rdi, rax	      1937	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_65	CALL_73
0x2d6f	      0xe800000000	                          call 0x4002db4	      1937	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_65	CALL_73
0x2d74	            0x85c0	                           test eax, eax	      1937	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_65	CALL_73
0x2d76	            0x7413	                            je 0x4002dcb	      1937	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_65	CALL_73
0x2d78	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1938	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_65
0x2d7c	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1938	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_65
0x2d7f	          0x83c801	                               or eax, 1	      1938	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_65
0x2d82	            0x89c2	                            mov edx, eax	      1938	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_65
0x2d84	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1938	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_65
0x2d88	          0x89503c	             mov dword [rax + 0x3c], edx	      1938	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_65
0x2d8b	    0x8b0500000000	            mov eax, dword [0x04002dd1] 	      1939	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_66
0x2d91	            0x85c0	                           test eax, eax	      1939	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_66
0x2d93	     0xf852f040000	                           jne 0x4003208	      1939	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_66
0x2d99	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1940	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_66
0x2d9c	    0x890500000000	            mov dword [0x04002de2], eax 	      1940	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_22	IF_66
0x2da2	      0xe921040000	                           jmp 0x4003208	      1942	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2da7	    0x488b05000000	            mov rax, qword [0x04002dee] 	      1945	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_67	CALL_74
0x2dae	      0xbe21000000	                           mov esi, 0x21	      1945	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_67	CALL_74
0x2db3	          0x4889c7	                            mov rdi, rax	      1945	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_67	CALL_74
0x2db6	      0xe800000000	                          call 0x4002dfb	      1945	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_67	CALL_74
0x2dbb	          0x4885c0	                           test rax, rax	      1945	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_67	CALL_74
0x2dbe	            0x740c	                            je 0x4002e0c	      1945	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_67	CALL_74
0x2dc0	      0xbf00000000	                              mov edi, 0	      1946	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_75
0x2dc5	      0xe800000000	                          call 0x4002e0a	      1946	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_75
0x2dca	            0xeb0a	                           jmp 0x4002e16	      1946	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_75
0x2dcc	    0xc70500000000	               mov dword [0x04002e16], 1	      1948	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24
0x2dd6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1958	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_76
0x2dda	            0x8b00	                    mov eax, dword [rax]	      1958	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_76
0x2ddc	          0x83f808	                              cmp eax, 8	      1958	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_76
0x2ddf	            0x7568	                           jne 0x4002e89	      1958	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_76
0x2de1	      0xe800000000	                          call 0x4002e26	      1958	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_76
0x2de6	           0xfb600	                   movzx eax, byte [rax]	      1958	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_76
0x2de9	            0x84c0	                             test al, al	      1958	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_76
0x2deb	            0x755c	                           jne 0x4002e89	      1958	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_76
0x2ded	    0x488b05000000	            mov rax, qword [0x04002e34] 	      1961	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	IF_69
0x2df4	    0x8b8008150000	          mov eax, dword [rax + 0x1508] 	      1961	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	IF_69
0x2dfa	            0x85c0	                           test eax, eax	      1961	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	IF_69
0x2dfc	            0x7416	                            je 0x4002e54	      1961	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	IF_69
0x2dfe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1963	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	IF_69	CALL_77
0x2e02	      0xbe00000000	                              mov esi, 0	      1963	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	IF_69	CALL_77
0x2e07	          0x4889c7	                            mov rdi, rax	      1963	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	IF_69	CALL_77
0x2e0a	      0xe800000000	                          call 0x4002e4f	      1963	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	IF_69	CALL_77
0x2e0f	      0xe9b5030000	                           jmp 0x4003209	      1964	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	IF_69
0x2e14	    0x488b05000000	            mov rax, qword [0x04002e5b] 	      1970	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68
0x2e1b	    0x488b80c81400	          mov rax, qword [rax + 0x14c8] 	      1970	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68
0x2e22	           0xfb600	                   movzx eax, byte [rax]	      1970	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68
0x2e25	            0x84c0	                             test al, al	      1968	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_78
0x2e27	            0x7407	                            je 0x4002e70	      1968	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_78
0x2e29	      0xba00000000	                              mov edx, 0	      1968	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_78
0x2e2e	            0xeb05	                           jmp 0x4002e75	      1968	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_78
0x2e30	      0xba00000000	                              mov edx, 0	      1968	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_78
0x2e35	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1968	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_78
0x2e39	          0x4889d6	                            mov rsi, rdx	      1968	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_78
0x2e3c	          0x4889c7	                            mov rdi, rax	      1968	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_78
0x2e3f	      0xe800000000	                          call 0x4002e84	      1968	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68	CALL_78
0x2e44	      0xe980030000	                           jmp 0x4003209	      1973	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_24	IF_68
0x2e49	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1978	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_79
0x2e4d	          0x4889c7	                            mov rdi, rax	      1978	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_79
0x2e50	      0xe83c040000	                       call sym.op_colon	      1978	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_79
0x2e55	      0xe96f030000	                           jmp 0x4003209	      1979	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2e5a	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1985	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_70
0x2e5e	            0x7411	                            je 0x4002eb1	      1985	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_70
0x2e60	      0xbf00400000	                         mov edi, 0x4000	      1987	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_70	CALL_80
0x2e65	      0xe800000000	                          call 0x4002eaa	      1987	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_70	CALL_80
0x2e6a	      0xe800000000	                          call 0x4002eaf	      1988	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_70	CALL_81
0x2e6f	            0xeb0c	                           jmp 0x4002ebd	      1988	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_70	CALL_81
0x2e71	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1991	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_82
0x2e75	          0x4889c7	                            mov rdi, rax	      1991	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_82
0x2e78	      0xe800000000	                          call 0x4002ebd	      1991	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_82
0x2e7d	      0xe800000000	                          call 0x4002ec2	      1992	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_83
0x2e82	      0xe942030000	                           jmp 0x4003209	      1993	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2e87	    0x488b05000000	            mov rax, qword [0x04002ece] 	      1997	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_71
0x2e8e	    0x488b80e81400	          mov rax, qword [rax + 0x14e8] 	      1997	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_71
0x2e95	           0xfb600	                   movzx eax, byte [rax]	      1997	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_71
0x2e98	            0x84c0	                             test al, al	      1997	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_71
0x2e9a	            0x7411	                            je 0x4002eed	      1997	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_71
0x2e9c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1998	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_84
0x2ea0	          0x4889c7	                            mov rdi, rax	      1998	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_84
0x2ea3	      0xe800000000	                          call 0x4002ee8	      1998	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_84
0x2ea8	      0xe91c030000	                           jmp 0x4003209	      2005	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2ead	    0x488b05000000	            mov rax, qword [0x04002ef4] 	      2001	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_26	IF_72
0x2eb4	           0xfb600	                   movzx eax, byte [rax]	      2001	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_26	IF_72
0x2eb7	            0x84c0	                             test al, al	      2001	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_26	IF_72
0x2eb9	            0x7515	                           jne 0x4002f10	      2001	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_26	IF_72
0x2ebb	    0x488b05000000	            mov rax, qword [0x04002f02] 	      2001	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_26	IF_72
0x2ec2	    0x488b80e01400	          mov rax, qword [rax + 0x14e0] 	      2001	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_26	IF_72
0x2ec9	           0xfb600	                   movzx eax, byte [rax]	      2001	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_26	IF_72
0x2ecc	            0x84c0	                             test al, al	      2001	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_26	IF_72
0x2ece	            0x7411	                            je 0x4002f21	      2001	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_26	IF_72
0x2ed0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2002	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_26	IF_72
0x2ed4	          0x4889c7	                            mov rdi, rax	      2002	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_26	IF_72
0x2ed7	      0xe8b5030000	                       call sym.op_colon	      2002	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_26	IF_72
0x2edc	      0xe9e8020000	                           jmp 0x4003209	      2005	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2ee1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2004	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_86
0x2ee5	      0xbe00000000	                              mov esi, 0	      2004	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_86
0x2eea	          0x4889c7	                            mov rdi, rax	      2004	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_86
0x2eed	      0xe800000000	                          call 0x4002f32	      2004	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_86
0x2ef2	      0xe9d2020000	                           jmp 0x4003209	      2005	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2ef7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2008	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_87
0x2efb	      0xbe01000000	                              mov esi, 1	      2008	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_87
0x2f00	          0x4889c7	                            mov rdi, rax	      2008	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_87
0x2f03	      0xe800000000	                          call 0x4002f48	      2008	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_87
0x2f08	      0xe9bc020000	                           jmp 0x4003209	      2009	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2f0d	    0x488b05000000	            mov rax, qword [0x04002f54] 	      2015	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2f14	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2015	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2f17	    0x899030020000	            mov dword [rax + 0x230], edx	      2015	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2f1d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2017	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_88
0x2f21	          0x4889c7	                            mov rdi, rax	      2017	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_88
0x2f24	      0xe825050000	                    call sym.op_function	      2017	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_88
0x2f29	      0xe99b020000	                           jmp 0x4003209	      2018	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2f2e	    0xc70500000000	               mov dword [0x04002f78], 0	      2022	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2f38	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      2024	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_73
0x2f3c	            0x7414	                            je 0x4002f92	      2024	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_73
0x2f3e	      0xbf00400000	                         mov edi, 0x4000	      2026	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_73	CALL_89
0x2f43	      0xe800000000	                          call 0x4002f88	      2026	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_73	CALL_89
0x2f48	      0xe800000000	                          call 0x4002f8d	      2027	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_73	CALL_90
0x2f4d	      0xe977020000	                           jmp 0x4003209	      2063	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2f52	    0x8b0500000000	            mov eax, dword [0x04002f98] 	      2034	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28
0x2f58	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2034	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28
0x2f5b	    0xc70500000000	               mov dword [0x04002fa5], 0	      2035	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28
0x2f65	    0x488b05000000	            mov rax, qword [0x04002fac] 	      2039	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_74
0x2f6c	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      2039	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_74
0x2f72	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2039	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_74
0x2f75	            0x7429	                            je 0x4002fe0	      2039	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_74
0x2f77	    0x488b05000000	            mov rax, qword [0x04002fbe] 	      2041	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_74
0x2f7e	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2041	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_74
0x2f81	    0x899030020000	            mov dword [rax + 0x230], edx	      2041	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_74
0x2f87	    0x8b0d00000000	            mov ecx, dword [0x04002fcd] 	      2042	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_74	CALL_91
0x2f8d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2042	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_74	CALL_91
0x2f91	      0xba00000000	                              mov edx, 0	      2042	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_74	CALL_91
0x2f96	            0x89ce	                            mov esi, ecx	      2042	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_74	CALL_91
0x2f98	          0x4889c7	                            mov rdi, rax	      2042	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_74	CALL_91
0x2f9b	      0xe873d70000	                    call sym.get_op_vcol	      2042	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_74	CALL_91
0x2fa0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2045	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	CALL_92
0x2fa4	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2045	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	CALL_92
0x2fa8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2045	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	CALL_92
0x2fac	          0x4889d6	                            mov rsi, rdx	      2045	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	CALL_92
0x2faf	          0x4889c7	                            mov rdi, rax	      2045	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	CALL_92
0x2fb2	      0xe800000000	                          call 0x4002ff7	      2045	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	CALL_92
0x2fb7	    0x488b05000000	            mov rax, qword [0x04002ffe] 	      2048	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28
0x2fbe	    0xc78030020000	              mov dword [rax + 0x230], 0	      2048	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28
0x2fc8	      0xbe01000000	                              mov esi, 1	      2053	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	CALL_93
0x2fcd	      0xbf00000000	                              mov edi, 0	      2053	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	CALL_93
0x2fd2	      0xe800000000	                          call 0x4003017	      2053	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	CALL_93
0x2fd7	    0x8b0500000000	            mov eax, dword [0x0400301d] 	      2055	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_75
0x2fdd	            0x85c0	                           test eax, eax	      2055	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_75
0x2fdf	            0x750e	                           jne 0x400302f	      2055	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_75
0x2fe1	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2056	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_75
0x2fe4	    0x890500000000	            mov dword [0x0400302a], eax 	      2056	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	IF_75
0x2fea	      0xe9da010000	                           jmp 0x4003209	      2063	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x2fef	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2058	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	ELSE_29
0x2ff3	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      2058	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	ELSE_29
0x2ff6	          0x83c801	                               or eax, 1	      2058	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	ELSE_29
0x2ff9	            0x89c2	                            mov edx, eax	      2058	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	ELSE_29
0x2ffb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2058	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	ELSE_29
0x2fff	          0x89503c	             mov dword [rax + 0x3c], edx	      2058	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_28	ELSE_29
0x3002	      0xe9c2010000	                           jmp 0x4003209	      2063	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x3007	    0xc70500000000	               mov dword [0x04003051], 0	      2066	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x3011	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      2068	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_76
0x3015	            0x7414	                            je 0x400306b	      2068	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_76
0x3017	      0xbf00400000	                         mov edi, 0x4000	      2071	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_76	CALL_95
0x301c	      0xe800000000	                          call 0x4003061	      2071	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_76	CALL_95
0x3021	      0xe800000000	                          call 0x4003066	      2072	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_76	CALL_96
0x3026	      0xe99e010000	                           jmp 0x4003209	      2089	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x302b	    0x488b05000000	            mov rax, qword [0x04003072] 	      2080	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	IF_77
0x3032	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      2080	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	IF_77
0x3038	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2080	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	IF_77
0x303b	            0x7429	                            je 0x40030a6	      2080	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	IF_77
0x303d	    0x488b05000000	            mov rax, qword [0x04003084] 	      2082	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	IF_77
0x3044	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2082	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	IF_77
0x3047	    0x899030020000	            mov dword [rax + 0x230], edx	      2082	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	IF_77
0x304d	    0x8b0d00000000	            mov ecx, dword [0x04003093] 	      2083	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	IF_77	CALL_97
0x3053	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2083	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	IF_77	CALL_97
0x3057	      0xba00000000	                              mov edx, 0	      2083	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	IF_77	CALL_97
0x305c	            0x89ce	                            mov esi, ecx	      2083	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	IF_77	CALL_97
0x305e	          0x4889c7	                            mov rdi, rax	      2083	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	IF_77	CALL_97
0x3061	      0xe8add60000	                    call sym.get_op_vcol	      2083	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	IF_77	CALL_97
0x3066	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2086	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	CALL_98
0x306a	          0x8b5010	            mov edx, dword [rax + 0x10] 	      2086	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	CALL_98
0x306d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2086	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	CALL_98
0x3071	            0x89d6	                            mov esi, edx	      2086	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	CALL_98
0x3073	          0x4889c7	                            mov rdi, rax	      2086	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	CALL_98
0x3076	      0xe800000000	                          call 0x40030bb	      2086	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_30	CALL_98
0x307b	      0xe949010000	                           jmp 0x4003209	      2089	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x3080	    0xc70500000000	               mov dword [0x040030ca], 0	      2093	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x308a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2094	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_99
0x308e	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2094	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_99
0x3092	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2094	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_99
0x3096	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2094	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_99
0x309a	          0x4889d6	                            mov rsi, rdx	      2094	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_99
0x309d	          0x4889c7	                            mov rdi, rax	      2094	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_99
0x30a0	      0xe800000000	                          call 0x40030e5	      2094	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_99
0x30a5	      0xe91f010000	                           jmp 0x4003209	      2095	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x30aa	    0xc70500000000	               mov dword [0x040030f4], 0	      2101	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x30b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30b8	          0x8b505c	            mov edx, dword [rax + 0x5c] 	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30bb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2105	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x30bf	            0x8b00	                    mov eax, dword [rax]	      2105	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x30c1	          0x83f815	                           cmp eax, 0x15	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30c4	            0x740b	                            je 0x4003111	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2106	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x30ca	            0x8b00	                    mov eax, dword [rax]	      2106	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x30cc	          0x83f817	                           cmp eax, 0x17	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30cf	            0x7507	                           jne 0x4003118	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30d1	      0xb901000000	                              mov ecx, 1	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30d6	            0xeb05	                           jmp 0x400311d	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30d8	      0xb900000000	                              mov ecx, 0	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30dd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2103	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x30e1	            0x8b00	                    mov eax, dword [rax]	      2103	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x30e3	          0x83f814	                           cmp eax, 0x14	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30e6	            0x740b	                            je 0x4003133	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30e8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2104	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x30ec	            0x8b00	                    mov eax, dword [rax]	      2104	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x30ee	          0x83f815	                           cmp eax, 0x15	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30f1	            0x7507	                           jne 0x400313a	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30f3	      0xbf01000000	                              mov edi, 1	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30f8	            0xeb05	                           jmp 0x400313f	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30fa	      0xbf00000000	                              mov edi, 0	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x30ff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x3103	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x3107	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x310b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x310f	          0x4189d0	                            mov r8d, edx	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x3112	            0x89fa	                            mov edx, edi	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x3114	          0x4889c7	                            mov rdi, rax	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x3117	      0xe800000000	                          call 0x400315c	      2102	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_100
0x311c	      0xe9a8000000	                           jmp 0x4003209	      2108	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x3121	    0xc70500000000	               mov dword [0x0400316b], 0	      2112	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x312b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2113	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_101
0x312f	          0x8b485c	            mov ecx, dword [rax + 0x5c] 	      2113	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_101
0x3132	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2114	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x3136	            0x8b00	                    mov eax, dword [rax]	      2114	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x3138	          0x83f819	                           cmp eax, 0x19	      2113	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_101
0x313b	           0xf94c0	                                 sete al	      2113	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_101
0x313e	           0xfb6d0	                           movzx edx, al	      2113	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_101
0x3141	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2113	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_101
0x3145	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      2113	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_101
0x3149	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2113	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_101
0x314d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2113	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_101
0x3151	          0x4889c7	                            mov rdi, rax	      2113	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_101
0x3154	      0xe800000000	                          call 0x4003199	      2113	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_101
0x3159	            0xeb6e	                           jmp 0x4003209	      2115	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x315b	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      2119	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_78
0x315f	            0x7411	                            je 0x40031b2	      2119	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_78
0x3161	      0xbf00400000	                         mov edi, 0x4000	      2121	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_78	CALL_102
0x3166	      0xe800000000	                          call 0x40031ab	      2121	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_78	CALL_102
0x316b	      0xe800000000	                          call 0x40031b0	      2122	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_78	CALL_103
0x3170	            0xeb41	                           jmp 0x40031f3	      2122	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	IF_78	CALL_103
0x3172	    0xc70500000000	               mov dword [0x040031bc], 1	      2126	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_31
0x317c	    0x488b05000000	            mov rax, qword [0x040031c3] 	      2128	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_31
0x3183	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2128	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_31
0x3186	    0x899030020000	            mov dword [rax + 0x230], edx	      2128	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_31
0x318c	    0x8b1500000000	            mov edx, dword [0x040031d2] 	      2130	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_31	CALL_104
0x3192	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2130	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_31	CALL_104
0x3196	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      2130	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_31	CALL_104
0x319a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2130	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_31	CALL_104
0x319e	          0x4889ce	                            mov rsi, rcx	      2130	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_31	CALL_104
0x31a1	          0x4889c7	                            mov rdi, rax	      2130	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_31	CALL_104
0x31a4	      0xe800000000	                          call 0x40031e9	      2130	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_31	CALL_104
0x31a9	    0xc70500000000	               mov dword [0x040031f3], 0	      2131	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	ELSE_31
0x31b3	      0xe800000000	                          call 0x40031f8	      2133	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_105
0x31b8	            0xeb0f	                           jmp 0x4003209	      2134	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x31ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2136	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_106
0x31be	          0x4889c7	                            mov rdi, rax	      2136	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_106
0x31c1	      0xe822280000	                    call sym.clearopbeep	      2136	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_106
0x31c6	            0xeb01	                           jmp 0x4003209	      2136	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1	CALL_106
0x31c8	              0x90	                                     nop	      1942	normal.c	FUNCTION_6	IF_2	ELSE_18	SWITCH_1
0x31c9	    0xc70500000000	               mov dword [0x04003213], 2	      2139	normal.c	FUNCTION_6	IF_2
0x31d3	        0x837da000	               cmp dword [rbp - 0x60], 0	      2141	normal.c	FUNCTION_6	IF_2	IF_79
0x31d7	            0x756c	                           jne 0x4003285	      2141	normal.c	FUNCTION_6	IF_2	IF_79
0x31d9	    0x8b0500000000	            mov eax, dword [0x0400321f] 	      2146	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x31df	            0x85c0	                           test eax, eax	      2146	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x31e1	            0x7579	                           jne 0x400329c	      2146	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x31e3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2146	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x31e7	          0x8b4008	                mov eax, dword [rax + 8]	      2146	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x31ea	          0x83f801	                              cmp eax, 1	      2146	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x31ed	            0x756d	                           jne 0x400329c	      2146	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x31ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2146	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x31f3	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2146	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x31f6	            0x85c0	                           test eax, eax	      2146	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x31f8	            0x7562	                           jne 0x400329c	      2146	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x31fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2147	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x31fe	            0x8b00	                    mov eax, dword [rax]	      2147	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x3200	          0x83f804	                              cmp eax, 4	      2147	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x3203	            0x7416	                            je 0x400325b	      2147	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x3205	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2147	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x3209	            0x8b00	                    mov eax, dword [rax]	      2147	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x320b	          0x83f805	                              cmp eax, 5	      2147	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x320e	            0x740b	                            je 0x400325b	      2147	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x3210	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2148	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x3214	            0x8b00	                    mov eax, dword [rax]	      2148	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x3216	          0x83f801	                              cmp eax, 1	      2148	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x3219	            0x7541	                           jne 0x400329c	      2148	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x321b	    0x488b05000000	            mov rax, qword [0x04003262] 	      2151	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x3222	    0xc78030020000	              mov dword [rax + 0x230], 0	      2151	normal.c	FUNCTION_6	IF_2	IF_79	IF_80
0x322c	    0x488b05000000	            mov rax, qword [0x04003273] 	      2153	normal.c	FUNCTION_6	IF_2	IF_79	IF_80	CALL_107
0x3233	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	      2153	normal.c	FUNCTION_6	IF_2	IF_79	IF_80	CALL_107
0x3236	          0x895048	             mov dword [rax + 0x48], edx	      2153	normal.c	FUNCTION_6	IF_2	IF_79	IF_80	CALL_107
0x3239	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2153	normal.c	FUNCTION_6	IF_2	IF_79	IF_80	CALL_107
0x323c	            0x89c7	                            mov edi, eax	      2153	normal.c	FUNCTION_6	IF_2	IF_79	IF_80	CALL_107
0x323e	      0xe800000000	                          call 0x4003283	      2153	normal.c	FUNCTION_6	IF_2	IF_79	IF_80	CALL_107
0x3243	            0xeb17	                           jmp 0x400329c	      2153	normal.c	FUNCTION_6	IF_2	IF_79	IF_80	CALL_107
0x3245	    0x488b0d000000	            mov rcx, qword [0x0400328c] 	      2158	normal.c	FUNCTION_6	IF_2	ELSE_32
0x324c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2158	normal.c	FUNCTION_6	IF_2	ELSE_32
0x3250	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2158	normal.c	FUNCTION_6	IF_2	ELSE_32
0x3254	        0x48894138	             mov qword [rcx + 0x38], rax	      2158	normal.c	FUNCTION_6	IF_2	ELSE_32
0x3258	        0x48895140	             mov qword [rcx + 0x40], rdx	      2158	normal.c	FUNCTION_6	IF_2	ELSE_32
0x325c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2160	normal.c	FUNCTION_6	IF_2
0x3260	    0xc74060000000	               mov dword [rax + 0x60], 0	      2160	normal.c	FUNCTION_6	IF_2
0x3267	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2161	normal.c	FUNCTION_6	IF_2	CALL_108
0x326b	          0x4889c7	                            mov rdi, rax	      2161	normal.c	FUNCTION_6	IF_2	CALL_108
0x326e	      0xe83f270000	                        call sym.clearop	      2161	normal.c	FUNCTION_6	IF_2	CALL_108
0x3273	    0x488b05000000	            mov rax, qword [0x040032ba] 	      2164	normal.c	FUNCTION_6
0x327a	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2164	normal.c	FUNCTION_6
0x327d	    0x899030020000	            mov dword [rax + 0x230], edx	      2164	normal.c	FUNCTION_6
0x3283	              0x90	                                     nop	      2166	normal.c	FUNCTION_6
0x3284	        0x488d65e0	                   lea rsp, [rbp - 0x20]	      2166	normal.c	FUNCTION_6
0x3288	              0x5b	                                 pop rbx	      2166	normal.c	FUNCTION_6
0x3289	            0x415c	                                 pop r12	      2166	normal.c	FUNCTION_6
0x328b	            0x415d	                                 pop r13	      2166	normal.c	FUNCTION_6
0x328d	            0x415e	                                 pop r14	      2166	normal.c	FUNCTION_6
0x328f	              0x5d	                                 pop rbp	      2166	normal.c	FUNCTION_6
0x3290	              0xc3	                                     ret	      2166	normal.c	FUNCTION_6
v_visop	CALL,3:ELSE,1:DO,0:FOR,0:functions,0:IF,3:WHILE,0:SWITCH,0	49
0xcb36	              0x55	                                push rbp	      7441	normal.c	FUNCTION_94
0xcb37	          0x4889e5	                            mov rbp, rsp	      7441	normal.c	FUNCTION_94
0xcb3a	        0x4883ec10	                           sub rsp, 0x10	      7441	normal.c	FUNCTION_94
0xcb3e	        0x48897df8	                mov qword [rbp - 8], rdi	      7441	normal.c	FUNCTION_94
0xcb42	      0xe800000000	                          call 0x400cb87	      7446	normal.c	FUNCTION_94	IF_1	CALL_1
0xcb47	          0x488b10	                    mov rdx, qword [rax]	      7446	normal.c	FUNCTION_94	IF_1	CALL_1
0xcb4a	        0x488b45f8	                mov rax, qword [rbp - 8]	      7446	normal.c	FUNCTION_94	IF_1	CALL_1
0xcb4e	          0x8b400c	              mov eax, dword [rax + 0xc]	      7446	normal.c	FUNCTION_94	IF_1	CALL_1
0xcb51	            0x4898	                                    cdqe	      7446	normal.c	FUNCTION_94	IF_1	CALL_1
0xcb53	          0x4801c0	                            add rax, rax	      7446	normal.c	FUNCTION_94	IF_1	CALL_1
0xcb56	          0x4801d0	                            add rax, rdx	      7446	normal.c	FUNCTION_94	IF_1	CALL_1
0xcb59	           0xfb700	                   movzx eax, word [rax]	      7446	normal.c	FUNCTION_94	IF_1	CALL_1
0xcb5c	           0xfb7c0	                           movzx eax, ax	      7446	normal.c	FUNCTION_94	IF_1	CALL_1
0xcb5f	      0x2500010000	                          and eax, 0x100	      7446	normal.c	FUNCTION_94	IF_1	CALL_1
0xcb64	            0x85c0	                           test eax, eax	      7446	normal.c	FUNCTION_94	IF_1	CALL_1
0xcb66	            0x7449	                            je 0x400cbf1	      7446	normal.c	FUNCTION_94	IF_1	CALL_1
0xcb68	    0x8b0500000000	            mov eax, dword [0x0400cbae] 	      7448	normal.c	FUNCTION_94	IF_1	IF_2
0xcb6e	          0x83f816	                           cmp eax, 0x16	      7448	normal.c	FUNCTION_94	IF_1	IF_2
0xcb71	            0x7418	                            je 0x400cbcb	      7448	normal.c	FUNCTION_94	IF_1	IF_2
0xcb73	    0x8b0500000000	            mov eax, dword [0x0400cbb9] 	      7450	normal.c	FUNCTION_94	IF_1	IF_2
0xcb79	    0x890500000000	            mov dword [0x0400cbbf], eax 	      7450	normal.c	FUNCTION_94	IF_1	IF_2
0xcb7f	    0xc70500000000	           mov dword [0x0400cbc9], 0x56 	      7451	normal.c	FUNCTION_94	IF_1	IF_2
0xcb89	            0xeb26	                           jmp 0x400cbf1	      7451	normal.c	FUNCTION_94	IF_1	IF_2
0xcb8b	        0x488b45f8	                mov rax, qword [rbp - 8]	      7453	normal.c	FUNCTION_94	IF_1	ELSE_1	IF_3
0xcb8f	          0x8b400c	              mov eax, dword [rax + 0xc]	      7453	normal.c	FUNCTION_94	IF_1	ELSE_1	IF_3
0xcb92	          0x83f843	                           cmp eax, 0x43	      7453	normal.c	FUNCTION_94	IF_1	ELSE_1	IF_3
0xcb95	            0x740c	                            je 0x400cbe3	      7453	normal.c	FUNCTION_94	IF_1	ELSE_1	IF_3
0xcb97	        0x488b45f8	                mov rax, qword [rbp - 8]	      7453	normal.c	FUNCTION_94	IF_1	ELSE_1	IF_3
0xcb9b	          0x8b400c	              mov eax, dword [rax + 0xc]	      7453	normal.c	FUNCTION_94	IF_1	ELSE_1	IF_3
0xcb9e	          0x83f844	                           cmp eax, 0x44	      7453	normal.c	FUNCTION_94	IF_1	ELSE_1	IF_3
0xcba1	            0x750e	                           jne 0x400cbf1	      7453	normal.c	FUNCTION_94	IF_1	ELSE_1	IF_3
0xcba3	    0x488b05000000	            mov rax, qword [0x0400cbea] 	      7454	normal.c	FUNCTION_94	IF_1	ELSE_1	IF_3
0xcbaa	    0xc74048ffffff	     mov dword [rax + 0x48], 0x7fffffff 	      7454	normal.c	FUNCTION_94	IF_1	ELSE_1	IF_3
0xcbb1	        0x488b45f8	                mov rax, qword [rbp - 8]	      7456	normal.c	FUNCTION_94	CALL_2
0xcbb5	          0x8b400c	              mov eax, dword [rax + 0xc]	      7456	normal.c	FUNCTION_94	CALL_2
0xcbb8	            0x89c6	                            mov esi, eax	      7456	normal.c	FUNCTION_94	CALL_2
0xcbba	      0xbf00000000	                              mov edi, 0	      7456	normal.c	FUNCTION_94	CALL_2
0xcbbf	      0xe800000000	                          call 0x400cc04	      7456	normal.c	FUNCTION_94	CALL_2
0xcbc4	        0x4883c001	                              add rax, 1	      7456	normal.c	FUNCTION_94	CALL_2
0xcbc8	           0xfb600	                   movzx eax, byte [rax]	      7456	normal.c	FUNCTION_94	CALL_2
0xcbcb	           0xfb6d0	                           movzx edx, al	      7456	normal.c	FUNCTION_94	CALL_2
0xcbce	        0x488b45f8	                mov rax, qword [rbp - 8]	      7456	normal.c	FUNCTION_94	CALL_2
0xcbd2	          0x89500c	              mov dword [rax + 0xc], edx	      7456	normal.c	FUNCTION_94	CALL_2
0xcbd5	        0x488b45f8	                mov rax, qword [rbp - 8]	      7457	normal.c	FUNCTION_94	CALL_3
0xcbd9	          0x4889c7	                            mov rdi, rax	      7457	normal.c	FUNCTION_94	CALL_3
0xcbdc	      0xe8521f0000	                    call sym.nv_operator	      7457	normal.c	FUNCTION_94	CALL_3
0xcbe1	              0x90	                                     nop	      7458	normal.c	FUNCTION_94
0xcbe2	              0xc9	                                   leave	      7458	normal.c	FUNCTION_94
0xcbe3	              0xc3	                                     ret	      7458	normal.c	FUNCTION_94
nv_scroll	CALL,13:ELSE,4:DO,0:FOR,2:functions,0:IF,11:WHILE,1:SWITCH,0	241
0x97e7	              0x55	                                push rbp	      5883	normal.c	FUNCTION_69
0x97e8	          0x4889e5	                            mov rbp, rsp	      5883	normal.c	FUNCTION_69
0x97eb	        0x4883ec30	                           sub rsp, 0x30	      5883	normal.c	FUNCTION_69
0x97ef	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5883	normal.c	FUNCTION_69
0x97f3	    0x64488b042528	                mov rax, qword fs:[0x28]	      5883	normal.c	FUNCTION_69
0x97fc	        0x488945f8	                mov qword [rbp - 8], rax	      5883	normal.c	FUNCTION_69
0x9800	            0x31c0	                            xor eax, eax	      5883	normal.c	FUNCTION_69
0x9802	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      5884	normal.c	FUNCTION_69
0x9809	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5891	normal.c	FUNCTION_69
0x980d	          0x488b00	                    mov rax, qword [rax]	      5891	normal.c	FUNCTION_69
0x9810	    0xc74008010000	                  mov dword [rax + 8], 1	      5891	normal.c	FUNCTION_69
0x9817	      0xe800000000	                          call 0x400985c	      5892	normal.c	FUNCTION_69	CALL_1
0x981c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5894	normal.c	FUNCTION_69	IF_1
0x9820	          0x8b400c	              mov eax, dword [rax + 0xc]	      5894	normal.c	FUNCTION_69	IF_1
0x9823	          0x83f84c	                           cmp eax, 0x4c	      5894	normal.c	FUNCTION_69	IF_1
0x9826	     0xf850d010000	                           jne 0x4009979	      5894	normal.c	FUNCTION_69	IF_1
0x982c	      0xe800000000	                          call 0x4009871	      5896	normal.c	FUNCTION_69	IF_1	CALL_2
0x9831	    0x488b05000000	            mov rax, qword [0x04009878] 	      5897	normal.c	FUNCTION_69	IF_1
0x9838	    0x488b15000000	            mov rdx, qword [0x0400987f] 	      5897	normal.c	FUNCTION_69	IF_1
0x983f	    0x488b92e80000	            mov rdx, qword [rdx + 0xe8] 	      5897	normal.c	FUNCTION_69	IF_1
0x9846	        0x4883ea01	                              sub rdx, 1	      5897	normal.c	FUNCTION_69	IF_1
0x984a	        0x48895038	             mov qword [rax + 0x38], rdx	      5897	normal.c	FUNCTION_69	IF_1
0x984e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5898	normal.c	FUNCTION_69	IF_1	IF_2
0x9852	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5898	normal.c	FUNCTION_69	IF_1	IF_2
0x9856	        0x488d50ff	                      lea rdx, [rax - 1]	      5898	normal.c	FUNCTION_69	IF_1	IF_2
0x985a	    0x488b05000000	            mov rax, qword [0x040098a1] 	      5898	normal.c	FUNCTION_69	IF_1	IF_2
0x9861	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5898	normal.c	FUNCTION_69	IF_1	IF_2
0x9865	          0x4839c2	                            cmp rdx, rax	      5898	normal.c	FUNCTION_69	IF_1	IF_2
0x9868	            0x7c14	                            jl 0x40098be	      5898	normal.c	FUNCTION_69	IF_1	IF_2
0x986a	    0x488b05000000	            mov rax, qword [0x040098b1] 	      5899	normal.c	FUNCTION_69	IF_1	IF_2
0x9871	    0x48c740380100	               mov qword [rax + 0x38], 1	      5899	normal.c	FUNCTION_69	IF_1	IF_2
0x9879	      0xe92e030000	                           jmp 0x4009bec	      5899	normal.c	FUNCTION_69	IF_1	IF_2
0x987e	    0x488b05000000	            mov rax, qword [0x040098c5] 	      5903	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	CALL_3
0x9885	          0x4889c7	                            mov rdi, rax	      5903	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	CALL_3
0x9888	      0xe800000000	                          call 0x40098cd	      5903	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	CALL_3
0x988d	            0x85c0	                           test eax, eax	      5903	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	CALL_3
0x988f	            0x747b	                            je 0x400994c	      5903	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	CALL_3
0x9891	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5906	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x9895	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5906	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x9899	        0x4883e801	                              sub rax, 1	      5906	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x989d	        0x488945f0	             mov qword [rbp - 0x10], rax	      5906	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x98a1	            0xeb3e	                           jmp 0x4009921	      5906	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x98a3	    0x488b05000000	            mov rax, qword [0x040098ea] 	      5910	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x98aa	        0x488d4838	                   lea rcx, [rax + 0x38]	      5909	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1	CALL_4
0x98ae	    0x488b05000000	            mov rax, qword [0x040098f5] 	      5909	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1	CALL_4
0x98b5	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5909	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1	CALL_4
0x98b9	      0xba00000000	                              mov edx, 0	      5909	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1	CALL_4
0x98be	          0x4889ce	                            mov rsi, rcx	      5909	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1	CALL_4
0x98c1	          0x4889c7	                            mov rdi, rax	      5909	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1	CALL_4
0x98c4	      0xe800000000	                          call 0x4009909	      5909	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1	CALL_4
0x98c9	    0x488b05000000	            mov rax, qword [0x04009910] 	      5911	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x98d0	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5911	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x98d4	        0x4883ea01	                              sub rdx, 1	      5911	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x98d8	        0x48895038	             mov qword [rax + 0x38], rdx	      5911	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x98dc	      0x48836df001	               sub qword [rbp - 0x10], 1	      5907	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x98e1	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5906	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x98e6	     0xf8ec0020000	                           jle 0x4009bec	      5906	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x98ec	    0x488b05000000	            mov rax, qword [0x04009933] 	      5907	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x98f3	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5907	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x98f7	    0x488b05000000	            mov rax, qword [0x0400993e] 	      5907	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x98fe	        0x488b4078	            mov rax, qword [rax + 0x78] 	      5907	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x9902	          0x4839c2	                            cmp rdx, rax	      5907	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x9905	            0x7f9c	                            jg 0x40098e3	      5907	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x9907	      0xe9a0020000	                           jmp 0x4009bec	      5907	normal.c	FUNCTION_69	IF_1	ELSE_1	IF_3	FOR_1
0x990c	    0x488b05000000	            mov rax, qword [0x04009953] 	      5916	normal.c	FUNCTION_69	IF_1	ELSE_1	ELSE_2
0x9913	    0x488b15000000	            mov rdx, qword [0x0400995a] 	      5916	normal.c	FUNCTION_69	IF_1	ELSE_1	ELSE_2
0x991a	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      5916	normal.c	FUNCTION_69	IF_1	ELSE_1	ELSE_2
0x991e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5916	normal.c	FUNCTION_69	IF_1	ELSE_1	ELSE_2
0x9922	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      5916	normal.c	FUNCTION_69	IF_1	ELSE_1	ELSE_2
0x9926	        0x4883ea01	                              sub rdx, 1	      5916	normal.c	FUNCTION_69	IF_1	ELSE_1	ELSE_2
0x992a	          0x4829d1	                            sub rcx, rdx	      5916	normal.c	FUNCTION_69	IF_1	ELSE_1	ELSE_2
0x992d	          0x4889ca	                            mov rdx, rcx	      5916	normal.c	FUNCTION_69	IF_1	ELSE_1	ELSE_2
0x9930	        0x48895038	             mov qword [rax + 0x38], rdx	      5916	normal.c	FUNCTION_69	IF_1	ELSE_1	ELSE_2
0x9934	      0xe973020000	                           jmp 0x4009bec	      5916	normal.c	FUNCTION_69	IF_1	ELSE_1	ELSE_2
0x9939	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5921	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x993d	          0x8b400c	              mov eax, dword [rax + 0xc]	      5921	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x9940	          0x83f84d	                           cmp eax, 0x4d	      5921	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x9943	     0xf857d010000	                           jne 0x4009b06	      5921	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x9949	    0x488b05000000	            mov rax, qword [0x04009990] 	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_5
0x9950	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_5
0x9954	    0x488b05000000	            mov rax, qword [0x0400999b] 	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_5
0x995b	          0x4889d6	                            mov rsi, rdx	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_5
0x995e	          0x4889c7	                            mov rdi, rax	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_5
0x9961	      0xe800000000	                          call 0x40099a6	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_5
0x9966	            0x89c2	                            mov edx, eax	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_5
0x9968	    0x488b05000000	            mov rax, qword [0x040099af] 	      5926	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x996f	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      5926	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x9975	            0x29c2	                            sub edx, eax	      5926	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x9977	            0x89d0	                            mov eax, edx	      5926	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x9979	          0x2945e0	             sub dword [rbp - 0x20], eax	      5925	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_5
0x997c	      0xe800000000	                          call 0x40099c1	      5928	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	CALL_6
0x9981	    0x488b05000000	            mov rax, qword [0x040099c8] 	      5929	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x9988	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      5929	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x998e	    0x488b05000000	            mov rax, qword [0x040099d5] 	      5929	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x9995	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      5929	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x999b	            0x29c2	                            sub edx, eax	      5929	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x999d	            0x89d0	                            mov eax, edx	      5929	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x999f	          0x83c001	                              add eax, 1	      5929	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x99a2	            0x89c2	                            mov edx, eax	      5929	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x99a4	          0xc1ea1f	                           shr edx, 0x1f	      5929	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x99a7	             0x1d0	                            add eax, edx	      5929	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x99a9	            0xd1f8	                              sar eax, 1	      5929	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x99ab	          0x8945e4	             mov dword [rbp - 0x1c], eax	      5929	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4
0x99ae	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x99b6	      0xe9b8000000	                           jmp 0x4009ab3	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x99bb	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5935	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x99c0	            0x7e43	                           jle 0x4009a45	      5935	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x99c2	    0x488b05000000	            mov rax, qword [0x04009a09] 	      5935	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x99c9	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      5935	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x99cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5935	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x99d1	          0x4801c2	                            add rdx, rax	      5935	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x99d4	    0x488b05000000	            mov rax, qword [0x04009a1b] 	      5935	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x99db	          0x4889d6	                            mov rsi, rdx	      5935	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x99de	          0x4889c7	                            mov rdi, rax	      5935	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x99e1	      0xe800000000	                          call 0x4009a26	      5935	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x99e6	            0x89c2	                            mov edx, eax	      5936	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5
0x99e8	          0xc1ea1f	                           shr edx, 0x1f	      5936	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5
0x99eb	             0x1d0	                            add eax, edx	      5936	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5
0x99ed	            0xd1f8	                              sar eax, 1	      5936	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5
0x99ef	            0x89c2	                            mov edx, eax	      5936	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5
0x99f1	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5935	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x99f4	             0x1d0	                            add eax, edx	      5935	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x99f6	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      5935	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x99f9	            0x7c0a	                            jl 0x4009a45	      5935	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5	CALL_7
0x99fb	      0x48836df001	               sub qword [rbp - 0x10], 1	      5938	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5
0x9a00	      0xe996000000	                           jmp 0x4009adb	      5939	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_5
0x9a05	    0x488b05000000	            mov rax, qword [0x04009a4c] 	      5942	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	CALL_8
0x9a0c	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      5942	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	CALL_8
0x9a10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5942	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	CALL_8
0x9a14	          0x4801d0	                            add rax, rdx	      5942	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	CALL_8
0x9a17	          0x4889c7	                            mov rdi, rax	      5942	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	CALL_8
0x9a1a	      0xe800000000	                          call 0x4009a5f	      5942	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	CALL_8
0x9a1f	           0x145e0	             add dword [rbp - 0x20], eax	      5942	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	CALL_8
0x9a22	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5943	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_6
0x9a25	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      5943	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_6
0x9a28	            0x7d70	                           jge 0x4009ada	      5943	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_6
0x9a2a	    0x488b05000000	            mov rax, qword [0x04009a71] 	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x9a31	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x9a35	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x9a39	        0x488d0c02	                    lea rcx, [rdx + rax]	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x9a3d	        0x488d45e8	                   lea rax, [rbp - 0x18]	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x9a41	          0x4889c2	                            mov rdx, rax	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x9a44	      0xbe00000000	                              mov esi, 0	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x9a49	          0x4889cf	                            mov rdi, rcx	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x9a4c	      0xe800000000	                          call 0x4009a91	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x9a51	            0x85c0	                           test eax, eax	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x9a53	            0x7419	                            je 0x4009aae	      5946	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7	CALL_9
0x9a55	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5947	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7
0x9a59	    0x488b05000000	            mov rax, qword [0x04009aa0] 	      5947	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7
0x9a60	        0x488b4078	            mov rax, qword [rax + 0x78] 	      5947	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7
0x9a64	          0x4829c2	                            sub rdx, rax	      5947	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7
0x9a67	          0x4889d0	                            mov rax, rdx	      5947	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7
0x9a6a	        0x488945f0	             mov qword [rbp - 0x10], rax	      5947	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_7
0x9a6e	      0x488345f001	               add qword [rbp - 0x10], 1	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x9a73	    0x488b05000000	            mov rax, qword [0x04009aba] 	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x9a7a	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x9a7e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x9a82	          0x4801c2	                            add rdx, rax	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x9a85	    0x488b05000000	            mov rax, qword [0x04009acc] 	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x9a8c	          0x488b00	                    mov rax, qword [rax]	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x9a8f	          0x4839c2	                            cmp rdx, rax	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x9a92	     0xf8c23ffffff	                            jl 0x40099fb	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x9a98	            0xeb01	                           jmp 0x4009adb	      5930	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2
0x9a9a	              0x90	                                     nop	      5944	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	FOR_2	IF_6
0x9a9b	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5950	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x9aa0	     0xf8eba000000	                           jle 0x4009ba0	      5950	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x9aa6	    0x488b05000000	            mov rax, qword [0x04009aed] 	      5950	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x9aad	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      5950	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x9ab3	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      5950	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x9ab6	     0xf8da4000000	                           jge 0x4009ba0	      5950	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x9abc	      0x48836df001	               sub qword [rbp - 0x10], 1	      5951	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x9ac1	      0xe99a000000	                           jmp 0x4009ba0	      5951	normal.c	FUNCTION_69	ELSE_2	ELSE_3	IF_4	IF_8
0x9ac6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5955	normal.c	FUNCTION_69	ELSE_3	ELSE_4
0x9aca	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5955	normal.c	FUNCTION_69	ELSE_3	ELSE_4
0x9ace	        0x4883e801	                              sub rax, 1	      5955	normal.c	FUNCTION_69	ELSE_3	ELSE_4
0x9ad2	        0x488945f0	             mov qword [rbp - 0x10], rax	      5955	normal.c	FUNCTION_69	ELSE_3	ELSE_4
0x9ad6	    0x488b05000000	            mov rax, qword [0x04009b1d] 	      5957	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	CALL_10
0x9add	          0x4889c7	                            mov rdi, rax	      5957	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	CALL_10
0x9ae0	      0xe800000000	                          call 0x4009b25	      5957	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	CALL_10
0x9ae5	            0x85c0	                           test eax, eax	      5957	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	CALL_10
0x9ae7	            0x7477	                            je 0x4009ba0	      5957	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	CALL_10
0x9ae9	    0x488b05000000	            mov rax, qword [0x04009b30] 	      5960	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9
0x9af0	        0x488b4078	            mov rax, qword [rax + 0x78] 	      5960	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9
0x9af4	        0x488945e8	             mov qword [rbp - 0x18], rax	      5960	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9
0x9af8	            0xeb21	                           jmp 0x4009b5b	      5961	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x9afa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5963	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1	CALL_11
0x9afe	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      5963	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1	CALL_11
0x9b02	      0xbe00000000	                              mov esi, 0	      5963	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1	CALL_11
0x9b07	          0x4889c7	                            mov rdi, rax	      5963	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1	CALL_11
0x9b0a	      0xe800000000	                          call 0x4009b4f	      5963	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1	CALL_11
0x9b0f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5964	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x9b13	        0x4883c001	                              add rax, 1	      5964	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x9b17	        0x488945e8	             mov qword [rbp - 0x18], rax	      5964	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x9b1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5961	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x9b1f	        0x488d50ff	                      lea rdx, [rax - 1]	      5961	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x9b23	        0x488955f0	             mov qword [rbp - 0x10], rdx	      5961	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x9b27	          0x4885c0	                           test rax, rax	      5961	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x9b2a	            0x7e1b	                           jle 0x4009b87	      5961	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x9b2c	    0x488b05000000	            mov rax, qword [0x04009b73] 	      5961	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x9b33	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      5961	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x9b3a	        0x488d50ff	                      lea rdx, [rax - 1]	      5961	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x9b3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5961	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x9b42	          0x4839c2	                            cmp rdx, rax	      5961	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x9b45	            0x7fb3	                            jg 0x4009b3a	      5961	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9	WHILE_1
0x9b47	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5966	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9
0x9b4b	    0x488b05000000	            mov rax, qword [0x04009b92] 	      5966	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9
0x9b52	        0x488b4078	            mov rax, qword [rax + 0x78] 	      5966	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9
0x9b56	          0x4829c2	                            sub rdx, rax	      5966	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9
0x9b59	          0x4889d0	                            mov rax, rdx	      5966	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9
0x9b5c	        0x488945f0	             mov qword [rbp - 0x10], rax	      5966	normal.c	FUNCTION_69	ELSE_3	ELSE_4	IF_9
0x9b60	    0x488b05000000	            mov rax, qword [0x04009ba7] 	      5970	normal.c	FUNCTION_69	ELSE_3
0x9b67	    0x488b15000000	            mov rdx, qword [0x04009bae] 	      5970	normal.c	FUNCTION_69	ELSE_3
0x9b6e	        0x488b4a78	            mov rcx, qword [rdx + 0x78] 	      5970	normal.c	FUNCTION_69	ELSE_3
0x9b72	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5970	normal.c	FUNCTION_69	ELSE_3
0x9b76	          0x4801ca	                            add rdx, rcx	      5970	normal.c	FUNCTION_69	ELSE_3
0x9b79	        0x48895038	             mov qword [rax + 0x38], rdx	      5970	normal.c	FUNCTION_69	ELSE_3
0x9b7d	    0x488b05000000	            mov rax, qword [0x04009bc4] 	      5971	normal.c	FUNCTION_69	ELSE_3	IF_10
0x9b84	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5971	normal.c	FUNCTION_69	ELSE_3	IF_10
0x9b88	    0x488b05000000	            mov rax, qword [0x04009bcf] 	      5971	normal.c	FUNCTION_69	ELSE_3	IF_10
0x9b8f	          0x488b00	                    mov rax, qword [rax]	      5971	normal.c	FUNCTION_69	ELSE_3	IF_10
0x9b92	          0x4839c2	                            cmp rdx, rax	      5971	normal.c	FUNCTION_69	ELSE_3	IF_10
0x9b95	            0x7e15	                           jle 0x4009bec	      5971	normal.c	FUNCTION_69	ELSE_3	IF_10
0x9b97	    0x488b05000000	            mov rax, qword [0x04009bde] 	      5972	normal.c	FUNCTION_69	ELSE_3	IF_10
0x9b9e	    0x488b15000000	            mov rdx, qword [0x04009be5] 	      5972	normal.c	FUNCTION_69	ELSE_3	IF_10
0x9ba5	          0x488b12	                    mov rdx, qword [rdx]	      5972	normal.c	FUNCTION_69	ELSE_3	IF_10
0x9ba8	        0x48895038	             mov qword [rax + 0x38], rdx	      5972	normal.c	FUNCTION_69	ELSE_3	IF_10
0x9bac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5976	normal.c	FUNCTION_69	IF_11
0x9bb0	          0x488b00	                    mov rax, qword [rax]	      5976	normal.c	FUNCTION_69	IF_11
0x9bb3	            0x8b00	                    mov eax, dword [rax]	      5976	normal.c	FUNCTION_69	IF_11
0x9bb5	            0x85c0	                           test eax, eax	      5976	normal.c	FUNCTION_69	IF_11
0x9bb7	            0x7505	                           jne 0x4009bfe	      5976	normal.c	FUNCTION_69	IF_11
0x9bb9	      0xe800000000	                          call 0x4009bfe	      5977	normal.c	FUNCTION_69	CALL_12
0x9bbe	      0xbf06000000	                              mov edi, 6	      5978	normal.c	FUNCTION_69	CALL_13
0x9bc3	      0xe800000000	                          call 0x4009c08	      5978	normal.c	FUNCTION_69	CALL_13
0x9bc8	              0x90	                                     nop	      5979	normal.c	FUNCTION_69
0x9bc9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5979	normal.c	FUNCTION_69
0x9bcd	    0x644833042528	                xor rax, qword fs:[0x28]	      5979	normal.c	FUNCTION_69
0x9bd6	            0x7405	                            je 0x4009c1d	      5979	normal.c	FUNCTION_69
0x9bd8	      0xe800000000	                          call 0x4009c1d	      5979	normal.c	FUNCTION_69
0x9bdd	              0xc9	                                   leave	      5979	normal.c	FUNCTION_69
0x9bde	              0xc3	                                     ret	      5979	normal.c	FUNCTION_69
nv_goto	CALL,3:ELSE,2:DO,0:FOR,0:functions,0:IF,5:WHILE,0:SWITCH,0	56
0xf463	              0x55	                                push rbp	      8918	normal.c	FUNCTION_125
0xf464	          0x4889e5	                            mov rbp, rsp	      8918	normal.c	FUNCTION_125
0xf467	        0x4883ec20	                           sub rsp, 0x20	      8918	normal.c	FUNCTION_125
0xf46b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8918	normal.c	FUNCTION_125
0xf46f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8921	normal.c	FUNCTION_125	IF_1
0xf473	          0x8b4038	            mov eax, dword [rax + 0x38] 	      8921	normal.c	FUNCTION_125	IF_1
0xf476	            0x85c0	                           test eax, eax	      8921	normal.c	FUNCTION_125	IF_1
0xf478	            0x7410	                            je 0x400f4ca	      8921	normal.c	FUNCTION_125	IF_1
0xf47a	    0x488b05000000	            mov rax, qword [0x0400f4c1] 	      8922	normal.c	FUNCTION_125	IF_1
0xf481	          0x488b00	                    mov rax, qword [rax]	      8922	normal.c	FUNCTION_125	IF_1
0xf484	        0x488945f8	                mov qword [rbp - 8], rax	      8922	normal.c	FUNCTION_125	IF_1
0xf488	            0xeb08	                           jmp 0x400f4d2	      8922	normal.c	FUNCTION_125	IF_1
0xf48a	    0x48c745f80100	                  mov qword [rbp - 8], 1	      8924	normal.c	FUNCTION_125	ELSE_1
0xf492	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8925	normal.c	FUNCTION_125
0xf496	          0x488b00	                    mov rax, qword [rax]	      8925	normal.c	FUNCTION_125
0xf499	    0xc74008010000	                  mov dword [rax + 8], 1	      8925	normal.c	FUNCTION_125
0xf4a0	      0xe800000000	                          call 0x400f4e5	      8926	normal.c	FUNCTION_125	CALL_1
0xf4a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8929	normal.c	FUNCTION_125	IF_2
0xf4a9	        0x488b4028	            mov rax, qword [rax + 0x28] 	      8929	normal.c	FUNCTION_125	IF_2
0xf4ad	          0x4885c0	                           test rax, rax	      8929	normal.c	FUNCTION_125	IF_2
0xf4b0	            0x740c	                            je 0x400f4fe	      8929	normal.c	FUNCTION_125	IF_2
0xf4b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8930	normal.c	FUNCTION_125	IF_2
0xf4b6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      8930	normal.c	FUNCTION_125	IF_2
0xf4ba	        0x488945f8	                mov qword [rbp - 8], rax	      8930	normal.c	FUNCTION_125	IF_2
0xf4be	      0x48837df800	                  cmp qword [rbp - 8], 0	      8931	normal.c	FUNCTION_125	IF_3
0xf4c3	            0x7f0a	                            jg 0x400f50f	      8931	normal.c	FUNCTION_125	IF_3
0xf4c5	    0x48c745f80100	                  mov qword [rbp - 8], 1	      8932	normal.c	FUNCTION_125	IF_3
0xf4cd	            0xeb1e	                           jmp 0x400f52d	      8932	normal.c	FUNCTION_125	IF_3
0xf4cf	    0x488b05000000	            mov rax, qword [0x0400f516] 	      8933	normal.c	FUNCTION_125	ELSE_2	IF_4
0xf4d6	          0x488b00	                    mov rax, qword [rax]	      8933	normal.c	FUNCTION_125	ELSE_2	IF_4
0xf4d9	        0x483b45f8	                cmp rax, qword [rbp - 8]	      8933	normal.c	FUNCTION_125	ELSE_2	IF_4
0xf4dd	            0x7d0e	                           jge 0x400f52d	      8933	normal.c	FUNCTION_125	ELSE_2	IF_4
0xf4df	    0x488b05000000	            mov rax, qword [0x0400f526] 	      8934	normal.c	FUNCTION_125	ELSE_2	IF_4
0xf4e6	          0x488b00	                    mov rax, qword [rax]	      8934	normal.c	FUNCTION_125	ELSE_2	IF_4
0xf4e9	        0x488945f8	                mov qword [rbp - 8], rax	      8934	normal.c	FUNCTION_125	ELSE_2	IF_4
0xf4ed	    0x488b05000000	            mov rax, qword [0x0400f534] 	      8935	normal.c	FUNCTION_125
0xf4f4	        0x488b55f8	                mov rdx, qword [rbp - 8]	      8935	normal.c	FUNCTION_125
0xf4f8	        0x48895038	             mov qword [rax + 0x38], rdx	      8935	normal.c	FUNCTION_125
0xf4fc	      0xbf06000000	                              mov edi, 6	      8936	normal.c	FUNCTION_125	CALL_2
0xf501	      0xe800000000	                          call 0x400f546	      8936	normal.c	FUNCTION_125	CALL_2
0xf506	    0x8b0500000000	            mov eax, dword [0x0400f54c] 	      8938	normal.c	FUNCTION_125	IF_5
0xf50c	      0x2500040000	                          and eax, 0x400	      8938	normal.c	FUNCTION_125	IF_5
0xf511	            0x85c0	                           test eax, eax	      8938	normal.c	FUNCTION_125	IF_5
0xf513	            0x741c	                            je 0x400f571	      8938	normal.c	FUNCTION_125	IF_5
0xf515	    0x8b0500000000	            mov eax, dword [0x0400f55b] 	      8938	normal.c	FUNCTION_125	IF_5
0xf51b	            0x85c0	                           test eax, eax	      8938	normal.c	FUNCTION_125	IF_5
0xf51d	            0x7412	                            je 0x400f571	      8938	normal.c	FUNCTION_125	IF_5
0xf51f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8938	normal.c	FUNCTION_125	IF_5
0xf523	          0x488b00	                    mov rax, qword [rax]	      8938	normal.c	FUNCTION_125	IF_5
0xf526	            0x8b00	                    mov eax, dword [rax]	      8938	normal.c	FUNCTION_125	IF_5
0xf528	            0x85c0	                           test eax, eax	      8938	normal.c	FUNCTION_125	IF_5
0xf52a	            0x7505	                           jne 0x400f571	      8938	normal.c	FUNCTION_125	IF_5
0xf52c	      0xe800000000	                          call 0x400f571	      8939	normal.c	FUNCTION_125	CALL_3
0xf531	              0x90	                                     nop	      8941	normal.c	FUNCTION_125
0xf532	              0xc9	                                   leave	      8941	normal.c	FUNCTION_125
0xf533	              0xc3	                                     ret	      8941	normal.c	FUNCTION_125
nv_ctrlo	CALL,2:ELSE,1:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	26
0x8ae4	              0x55	                                push rbp	      5497	normal.c	FUNCTION_62
0x8ae5	          0x4889e5	                            mov rbp, rsp	      5497	normal.c	FUNCTION_62
0x8ae8	        0x4883ec10	                           sub rsp, 0x10	      5497	normal.c	FUNCTION_62
0x8aec	        0x48897df8	                mov qword [rbp - 8], rdi	      5497	normal.c	FUNCTION_62
0x8af0	    0x8b0500000000	            mov eax, dword [0x04008b36] 	      5498	normal.c	FUNCTION_62	IF_1
0x8af6	            0x85c0	                           test eax, eax	      5498	normal.c	FUNCTION_62	IF_1
0x8af8	            0x7425	                            je 0x4008b5f	      5498	normal.c	FUNCTION_62	IF_1
0x8afa	    0x8b0500000000	            mov eax, dword [0x04008b40] 	      5498	normal.c	FUNCTION_62	IF_1
0x8b00	            0x85c0	                           test eax, eax	      5498	normal.c	FUNCTION_62	IF_1
0x8b02	            0x741b	                            je 0x4008b5f	      5498	normal.c	FUNCTION_62	IF_1
0x8b04	    0xc70500000000	               mov dword [0x04008b4e], 0	      5500	normal.c	FUNCTION_62	IF_1
0x8b0e	      0xe800000000	                          call 0x4008b53	      5501	normal.c	FUNCTION_62	IF_1	CALL_1
0x8b13	    0xc70500000000	               mov dword [0x04008b5d], 2	      5502	normal.c	FUNCTION_62	IF_1
0x8b1d	            0xeb22	                           jmp 0x4008b81	      5502	normal.c	FUNCTION_62	IF_1
0x8b1f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5506	normal.c	FUNCTION_62	ELSE_1
0x8b23	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5506	normal.c	FUNCTION_62	ELSE_1
0x8b27	          0x48f7d8	                                 neg rax	      5506	normal.c	FUNCTION_62	ELSE_1
0x8b2a	          0x4889c2	                            mov rdx, rax	      5506	normal.c	FUNCTION_62	ELSE_1
0x8b2d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5506	normal.c	FUNCTION_62	ELSE_1
0x8b31	        0x48895030	             mov qword [rax + 0x30], rdx	      5506	normal.c	FUNCTION_62	ELSE_1
0x8b35	        0x488b45f8	                mov rax, qword [rbp - 8]	      5507	normal.c	FUNCTION_62	ELSE_1	CALL_2
0x8b39	          0x4889c7	                            mov rdi, rax	      5507	normal.c	FUNCTION_62	ELSE_1	CALL_2
0x8b3c	      0xe8a7430000	                      call sym.nv_pcmark	      5507	normal.c	FUNCTION_62	ELSE_1	CALL_2
0x8b41	              0x90	                                     nop	      5509	normal.c	FUNCTION_62
0x8b42	              0xc9	                                   leave	      5509	normal.c	FUNCTION_62
0x8b43	              0xc3	                                     ret	      5509	normal.c	FUNCTION_62
nv_optrans	CALL,9:ELSE,1:DO,0:FOR,0:functions,0:IF,3:WHILE,0:SWITCH,0	69
0xcc9e	              0x55	                                push rbp	      7501	normal.c	FUNCTION_97
0xcc9f	          0x4889e5	                            mov rbp, rsp	      7501	normal.c	FUNCTION_97
0xcca2	        0x4883ec10	                           sub rsp, 0x10	      7501	normal.c	FUNCTION_97
0xcca6	        0x48897df8	                mov qword [rbp - 8], rdi	      7501	normal.c	FUNCTION_97
0xccaa	        0x488b45f8	                mov rax, qword [rbp - 8]	      7508	normal.c	FUNCTION_97	IF_1	CALL_1
0xccae	          0x488b00	                    mov rax, qword [rax]	      7508	normal.c	FUNCTION_97	IF_1	CALL_1
0xccb1	          0x4889c7	                            mov rdi, rax	      7508	normal.c	FUNCTION_97	IF_1	CALL_1
0xccb4	      0xe8bf8cffff	                  call sym.checkclearopq	      7508	normal.c	FUNCTION_97	IF_1	CALL_1
0xccb9	            0x85c0	                           test eax, eax	      7508	normal.c	FUNCTION_97	IF_1	CALL_1
0xccbb	     0xf85e8000000	                           jne 0x400cde9	      7508	normal.c	FUNCTION_97	IF_1	CALL_1
0xccc1	        0x488b45f8	                mov rax, qword [rbp - 8]	      7512	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0xccc5	          0x8b400c	              mov eax, dword [rax + 0xc]	      7512	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0xccc8	          0x83f844	                           cmp eax, 0x44	      7512	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0xcccb	     0xf8581000000	                           jne 0x400cd92	      7512	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0xccd1	    0x488b05000000	            mov rax, qword [0x0400cd18] 	      7512	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0xccd8	      0xbe23000000	                           mov esi, 0x23	      7512	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0xccdd	          0x4889c7	                            mov rdi, rax	      7512	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0xcce0	      0xe800000000	                          call 0x400cd25	      7512	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0xcce5	          0x4885c0	                           test rax, rax	      7512	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0xcce8	            0x7468	                            je 0x400cd92	      7512	normal.c	FUNCTION_97	IF_1	IF_2	CALL_2
0xccea	        0x488b45f8	                mov rax, qword [rbp - 8]	      7514	normal.c	FUNCTION_97	IF_1	IF_2
0xccee	          0x488b08	                    mov rcx, qword [rax]	      7514	normal.c	FUNCTION_97	IF_1	IF_2
0xccf1	    0x488b05000000	            mov rax, qword [0x0400cd38] 	      7514	normal.c	FUNCTION_97	IF_1	IF_2
0xccf8	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7514	normal.c	FUNCTION_97	IF_1	IF_2
0xccfc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7514	normal.c	FUNCTION_97	IF_1	IF_2
0xcd00	        0x48894120	             mov qword [rcx + 0x20], rax	      7514	normal.c	FUNCTION_97	IF_1	IF_2
0xcd04	        0x48895128	             mov qword [rcx + 0x28], rdx	      7514	normal.c	FUNCTION_97	IF_1	IF_2
0xcd08	        0x488b45f8	                mov rax, qword [rbp - 8]	      7515	normal.c	FUNCTION_97	IF_1	IF_2
0xcd0c	          0x488b00	                    mov rax, qword [rax]	      7515	normal.c	FUNCTION_97	IF_1	IF_2
0xcd0f	    0xc70001000000	                      mov dword [rax], 1	      7515	normal.c	FUNCTION_97	IF_1	IF_2
0xcd15	      0xbf01000000	                              mov edi, 1	      7517	normal.c	FUNCTION_97	IF_1	IF_2	CALL_3
0xcd1a	      0xe8a01e0000	                     call sym.set_op_var	      7517	normal.c	FUNCTION_97	IF_1	IF_2	CALL_3
0xcd1f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7519	normal.c	FUNCTION_97	IF_1	IF_2
0xcd23	    0x48c740300100	               mov qword [rax + 0x30], 1	      7519	normal.c	FUNCTION_97	IF_1	IF_2
0xcd2b	        0x488b45f8	                mov rax, qword [rbp - 8]	      7520	normal.c	FUNCTION_97	IF_1	IF_2	CALL_4
0xcd2f	          0x4889c7	                            mov rdi, rax	      7520	normal.c	FUNCTION_97	IF_1	IF_2	CALL_4
0xcd32	      0xe887d7ffff	                      call sym.nv_dollar	      7520	normal.c	FUNCTION_97	IF_1	IF_2	CALL_4
0xcd37	    0xc70500000000	               mov dword [0x0400cd81], 1	      7521	normal.c	FUNCTION_97	IF_1	IF_2
0xcd41	      0xe800000000	                          call 0x400cd86	      7522	normal.c	FUNCTION_97	IF_1	IF_2	CALL_5
0xcd46	      0xbf44000000	                           mov edi, 0x44	      7523	normal.c	FUNCTION_97	IF_1	IF_2	CALL_6
0xcd4b	      0xe800000000	                          call 0x400cd90	      7523	normal.c	FUNCTION_97	IF_1	IF_2	CALL_6
0xcd50	            0xeb57	                           jmp 0x400cde9	      7523	normal.c	FUNCTION_97	IF_1	IF_2	CALL_6
0xcd52	        0x488b45f8	                mov rax, qword [rbp - 8]	      7527	normal.c	FUNCTION_97	IF_1	ELSE_1	IF_3
0xcd56	        0x488b4028	            mov rax, qword [rax + 0x28] 	      7527	normal.c	FUNCTION_97	IF_1	ELSE_1	IF_3
0xcd5a	          0x4885c0	                           test rax, rax	      7527	normal.c	FUNCTION_97	IF_1	ELSE_1	IF_3
0xcd5d	            0x7410	                            je 0x400cdaf	      7527	normal.c	FUNCTION_97	IF_1	ELSE_1	IF_3
0xcd5f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7528	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_7
0xcd63	        0x488b4028	            mov rax, qword [rax + 0x28] 	      7528	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_7
0xcd67	          0x4889c7	                            mov rdi, rax	      7528	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_7
0xcd6a	      0xe800000000	                          call 0x400cdaf	      7528	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_7
0xcd6f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0xcd73	          0x8b500c	              mov edx, dword [rax + 0xc]	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0xcd76	    0x488b05000000	            mov rax, qword [0x0400cdbd] 	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0xcd7d	            0x89d6	                            mov esi, edx	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0xcd7f	          0x4889c7	                            mov rdi, rax	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0xcd82	      0xe800000000	                          call 0x400cdc7	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0xcd87	          0x4889c2	                            mov rdx, rax	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0xcd8a	    0x488b05000000	            mov rax, qword [0x0400cdd1] 	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0xcd91	          0x4829c2	                            sub rdx, rax	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0xcd94	          0x4889d0	                            mov rax, rdx	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0xcd97	            0x4898	                                    cdqe	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0xcd99	    0x488b04c50000	                  mov rax, qword [rax*8]	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0xcda1	          0x4889c7	                            mov rdi, rax	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0xcda4	      0xe800000000	                          call 0x400cde9	      7529	normal.c	FUNCTION_97	IF_1	ELSE_1	CALL_9
0xcda9	        0x488b45f8	                mov rax, qword [rbp - 8]	      7532	normal.c	FUNCTION_97
0xcdad	    0x48c740200000	               mov qword [rax + 0x20], 0	      7532	normal.c	FUNCTION_97
0xcdb5	              0x90	                                     nop	      7533	normal.c	FUNCTION_97
0xcdb6	              0xc9	                                   leave	      7533	normal.c	FUNCTION_97
0xcdb7	              0xc3	                                     ret	      7533	normal.c	FUNCTION_97
nv_tagpop	CALL,2:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	21
0x97a1	              0x55	                                push rbp	      5873	normal.c	FUNCTION_68
0x97a2	          0x4889e5	                            mov rbp, rsp	      5873	normal.c	FUNCTION_68
0x97a5	        0x4883ec10	                           sub rsp, 0x10	      5873	normal.c	FUNCTION_68
0x97a9	        0x48897df8	                mov qword [rbp - 8], rdi	      5873	normal.c	FUNCTION_68
0x97ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      5874	normal.c	FUNCTION_68	IF_1	CALL_1
0x97b1	          0x488b00	                    mov rax, qword [rax]	      5874	normal.c	FUNCTION_68	IF_1	CALL_1
0x97b4	          0x4889c7	                            mov rdi, rax	      5874	normal.c	FUNCTION_68	IF_1	CALL_1
0x97b7	      0xe8bcc1ffff	                  call sym.checkclearopq	      5874	normal.c	FUNCTION_68	IF_1	CALL_1
0x97bc	            0x85c0	                           test eax, eax	      5874	normal.c	FUNCTION_68	IF_1	CALL_1
0x97be	            0x7524	                           jne 0x4009824	      5874	normal.c	FUNCTION_68	IF_1	CALL_1
0x97c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      5875	normal.c	FUNCTION_68	CALL_2
0x97c4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5875	normal.c	FUNCTION_68	CALL_2
0x97c8	    0x41b801000000	                              mov r8d, 1	      5875	normal.c	FUNCTION_68	CALL_2
0x97ce	      0xb900000000	                              mov ecx, 0	      5875	normal.c	FUNCTION_68	CALL_2
0x97d3	            0x89c2	                            mov edx, eax	      5875	normal.c	FUNCTION_68	CALL_2
0x97d5	      0xbe02000000	                              mov esi, 2	      5875	normal.c	FUNCTION_68	CALL_2
0x97da	      0xbf00000000	                              mov edi, 0	      5875	normal.c	FUNCTION_68	CALL_2
0x97df	      0xe800000000	                          call 0x4009824	      5875	normal.c	FUNCTION_68	CALL_2
0x97e4	              0x90	                                     nop	      5876	normal.c	FUNCTION_68
0x97e5	              0xc9	                                   leave	      5876	normal.c	FUNCTION_68
0x97e6	              0xc3	                                     ret	      5876	normal.c	FUNCTION_68
nv_edit	CALL,38:ELSE,10:DO,0:FOR,0:functions,0:IF,18:WHILE,0:SWITCH,1	331
0xf73c	              0x55	                                push rbp	      9034	normal.c	FUNCTION_128
0xf73d	          0x4889e5	                            mov rbp, rsp	      9034	normal.c	FUNCTION_128
0xf740	        0x4883ec40	                           sub rsp, 0x40	      9034	normal.c	FUNCTION_128
0xf744	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      9034	normal.c	FUNCTION_128
0xf748	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9036	normal.c	FUNCTION_128	IF_1
0xf74c	          0x8b400c	              mov eax, dword [rax + 0xc]	      9036	normal.c	FUNCTION_128	IF_1
0xf74f	      0x3d95b6ffff	                     cmp eax, 0xffffb695	      9036	normal.c	FUNCTION_128	IF_1
0xf754	            0x740e	                            je 0x400f7a4	      9036	normal.c	FUNCTION_128	IF_1
0xf756	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9036	normal.c	FUNCTION_128	IF_1
0xf75a	          0x8b400c	              mov eax, dword [rax + 0xc]	      9036	normal.c	FUNCTION_128	IF_1
0xf75d	      0x3d03b0ffff	                     cmp eax, 0xffffb003	      9036	normal.c	FUNCTION_128	IF_1
0xf762	            0x750b	                           jne 0x400f7af	      9036	normal.c	FUNCTION_128	IF_1
0xf764	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9037	normal.c	FUNCTION_128	IF_1
0xf768	    0xc7400c690000	            mov dword [rax + 0xc], 0x69 	      9037	normal.c	FUNCTION_128	IF_1
0xf76f	    0x8b0500000000	            mov eax, dword [0x0400f7b5] 	      9040	normal.c	FUNCTION_128	IF_2
0xf775	            0x85c0	                           test eax, eax	      9040	normal.c	FUNCTION_128	IF_2
0xf777	            0x7450	                            je 0x400f809	      9040	normal.c	FUNCTION_128	IF_2
0xf779	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9040	normal.c	FUNCTION_128	IF_2
0xf77d	          0x8b400c	              mov eax, dword [rax + 0xc]	      9040	normal.c	FUNCTION_128	IF_2
0xf780	          0x83f841	                           cmp eax, 0x41	      9040	normal.c	FUNCTION_128	IF_2
0xf783	            0x740c	                            je 0x400f7d1	      9040	normal.c	FUNCTION_128	IF_2
0xf785	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9040	normal.c	FUNCTION_128	IF_2
0xf789	          0x8b400c	              mov eax, dword [rax + 0xc]	      9040	normal.c	FUNCTION_128	IF_2
0xf78c	          0x83f849	                           cmp eax, 0x49	      9040	normal.c	FUNCTION_128	IF_2
0xf78f	            0x7538	                           jne 0x400f809	      9040	normal.c	FUNCTION_128	IF_2
0xf791	      0xe800000000	                          call 0x400f7d6	      9043	normal.c	FUNCTION_128	IF_2	IF_3	CALL_1
0xf796	            0x85c0	                           test eax, eax	      9043	normal.c	FUNCTION_128	IF_2	IF_3	CALL_1
0xf798	            0x741e	                            je 0x400f7f8	      9043	normal.c	FUNCTION_128	IF_2	IF_3	CALL_1
0xf79a	      0xe800000000	                          call 0x400f7df	      9045	normal.c	FUNCTION_128	IF_2	IF_3	CALL_2
0xf79f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9046	normal.c	FUNCTION_128	IF_2	IF_3	CALL_3
0xf7a3	          0x488b00	                    mov rax, qword [rax]	      9046	normal.c	FUNCTION_128	IF_2	IF_3	CALL_3
0xf7a6	          0x4889c7	                            mov rdi, rax	      9046	normal.c	FUNCTION_128	IF_2	IF_3	CALL_3
0xf7a9	      0xe80462ffff	                        call sym.clearop	      9046	normal.c	FUNCTION_128	IF_2	IF_3	CALL_3
0xf7ae	      0xe800000000	                          call 0x400f7f3	      9047	normal.c	FUNCTION_128	IF_2	IF_3	CALL_4
0xf7b3	      0xe985040000	                           jmp 0x400fc7d	      9048	normal.c	FUNCTION_128	IF_2	IF_3
0xf7b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9051	normal.c	FUNCTION_128	IF_2	CALL_5
0xf7bc	          0x4889c7	                            mov rdi, rax	      9051	normal.c	FUNCTION_128	IF_2	CALL_5
0xf7bf	      0xe872d3ffff	                        call sym.v_visop	      9051	normal.c	FUNCTION_128	IF_2	CALL_5
0xf7c4	      0xe974040000	                           jmp 0x400fc7d	      9051	normal.c	FUNCTION_128	IF_2	CALL_5
0xf7c9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9055	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7cd	          0x8b400c	              mov eax, dword [rax + 0xc]	      9055	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7d0	          0x83f861	                           cmp eax, 0x61	      9055	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7d3	            0x740c	                            je 0x400f821	      9055	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7d5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9055	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7d9	          0x8b400c	              mov eax, dword [rax + 0xc]	      9055	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7dc	          0x83f869	                           cmp eax, 0x69	      9055	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7df	            0x7528	                           jne 0x400f849	      9055	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7e1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9056	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7e5	          0x488b00	                    mov rax, qword [rax]	      9056	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7e8	            0x8b00	                    mov eax, dword [rax]	      9056	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7ea	            0x85c0	                           test eax, eax	      9056	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7ec	            0x750a	                           jne 0x400f838	      9056	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7ee	    0x8b0500000000	            mov eax, dword [0x0400f834] 	      9056	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7f4	            0x85c0	                           test eax, eax	      9056	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7f6	            0x7411	                            je 0x400f849	      9056	normal.c	FUNCTION_128	ELSE_1	IF_4
0xf7f8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9059	normal.c	FUNCTION_128	ELSE_1	IF_4	CALL_6
0xf7fc	          0x4889c7	                            mov rdi, rax	      9059	normal.c	FUNCTION_128	ELSE_1	IF_4	CALL_6
0xf7ff	      0xe8c6040000	                      call sym.nv_object	      9059	normal.c	FUNCTION_128	ELSE_1	IF_4	CALL_6
0xf804	      0xe934040000	                           jmp 0x400fc7d	      9059	normal.c	FUNCTION_128	ELSE_1	IF_4	CALL_6
0xf809	      0xe800000000	                          call 0x400f84e	      9065	normal.c	FUNCTION_128	ELSE_2	IF_5	CALL_8
0xf80e	            0x85c0	                           test eax, eax	      9065	normal.c	FUNCTION_128	ELSE_2	IF_5	CALL_8
0xf810	            0x7419	                            je 0x400f86b	      9065	normal.c	FUNCTION_128	ELSE_2	IF_5	CALL_8
0xf812	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9067	normal.c	FUNCTION_128	ELSE_2	IF_5	CALL_9
0xf816	          0x488b00	                    mov rax, qword [rax]	      9067	normal.c	FUNCTION_128	ELSE_2	IF_5	CALL_9
0xf819	          0x4889c7	                            mov rdi, rax	      9067	normal.c	FUNCTION_128	ELSE_2	IF_5	CALL_9
0xf81c	      0xe89161ffff	                        call sym.clearop	      9067	normal.c	FUNCTION_128	ELSE_2	IF_5	CALL_9
0xf821	      0xe800000000	                          call 0x400f866	      9068	normal.c	FUNCTION_128	ELSE_2	IF_5	CALL_10
0xf826	      0xe912040000	                           jmp 0x400fc7d	      9069	normal.c	FUNCTION_128	ELSE_2	IF_5
0xf82b	    0x488b05000000	            mov rax, qword [0x0400f872] 	      9072	normal.c	FUNCTION_128	ELSE_3	IF_6
0xf832	    0x8b8028150000	          mov eax, dword [rax + 0x1528] 	      9072	normal.c	FUNCTION_128	ELSE_3	IF_6
0xf838	            0x85c0	                           test eax, eax	      9072	normal.c	FUNCTION_128	ELSE_3	IF_6
0xf83a	            0x7556	                           jne 0x400f8d2	      9072	normal.c	FUNCTION_128	ELSE_3	IF_6
0xf83c	    0x8b0500000000	            mov eax, dword [0x0400f882] 	      9072	normal.c	FUNCTION_128	ELSE_3	IF_6
0xf842	            0x85c0	                           test eax, eax	      9072	normal.c	FUNCTION_128	ELSE_3	IF_6
0xf844	            0x754c	                           jne 0x400f8d2	      9072	normal.c	FUNCTION_128	ELSE_3	IF_6
0xf846	      0xbf00000000	                              mov edi, 0	      9075	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_12
0xf84b	      0xe800000000	                          call 0x400f890	      9075	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_12
0xf850	          0x4889c7	                            mov rdi, rax	      9075	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_12
0xf853	      0xe800000000	                          call 0x400f898	      9075	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_12
0xf858	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9076	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_13
0xf85c	          0x488b00	                    mov rax, qword [rax]	      9076	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_13
0xf85f	          0x4889c7	                            mov rdi, rax	      9076	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_13
0xf862	      0xe84b61ffff	                        call sym.clearop	      9076	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_13
0xf867	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9077	normal.c	FUNCTION_128	ELSE_3	IF_6	IF_7
0xf86b	          0x8b400c	              mov eax, dword [rax + 0xc]	      9077	normal.c	FUNCTION_128	ELSE_3	IF_6	IF_7
0xf86e	      0x3db0acffff	                     cmp eax, 0xffffacb0	      9077	normal.c	FUNCTION_128	ELSE_3	IF_6	IF_7
0xf873	     0xf85c4030000	                           jne 0x400fc7d	      9077	normal.c	FUNCTION_128	ELSE_3	IF_6	IF_7
0xf879	      0xba00000000	                              mov edx, 0	      9079	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_14
0xf87e	      0xbe01000000	                              mov esi, 1	      9079	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_14
0xf883	      0xbf00000000	                              mov edi, 0	      9079	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_14
0xf888	      0xe800000000	                          call 0x400f8cd	      9079	normal.c	FUNCTION_128	ELSE_3	IF_6	CALL_14
0xf88d	      0xe9ab030000	                           jmp 0x400fc7d	      9077	normal.c	FUNCTION_128	ELSE_3	IF_6	IF_7
0xf892	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9081	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf896	          0x8b400c	              mov eax, dword [rax + 0xc]	      9081	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf899	      0x3db0acffff	                     cmp eax, 0xffffacb0	      9081	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf89e	     0xf85c6010000	                           jne 0x400faaa	      9081	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf8a4	    0x8b0500000000	            mov eax, dword [0x0400f8ea] 	      9081	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf8aa	            0x85c0	                           test eax, eax	      9081	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf8ac	     0xf84b8010000	                            je 0x400faaa	      9081	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf8b2	    0x488b05000000	            mov rax, qword [0x0400f8f9] 	      9083	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf8b9	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      9083	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf8bd	        0x488b4038	            mov rax, qword [rax + 0x38] 	      9083	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf8c1	        0x488945e0	             mov qword [rbp - 0x20], rax	      9083	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf8c5	        0x488955e8	             mov qword [rbp - 0x18], rdx	      9083	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf8c9	    0x488b05000000	            mov rax, qword [0x0400f910] 	      9084	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf8d0	    0x488b15000000	            mov rdx, qword [0x0400f917] 	      9084	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf8d7	        0x488945f0	             mov qword [rbp - 0x10], rax	      9084	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf8db	        0x488955f8	                mov qword [rbp - 8], rdx	      9084	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf8df	    0x8b0500000000	            mov eax, dword [0x0400f925] 	      9087	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0xf8e5	          0x83f856	                           cmp eax, 0x56	      9087	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0xf8e8	            0x7417	                            je 0x400f941	      9087	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0xf8ea	    0x488b05000000	            mov rax, qword [0x0400f931] 	      9087	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0xf8f1	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      9087	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0xf8f5	    0x488b05000000	            mov rax, qword [0x0400f93c] 	      9087	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0xf8fc	          0x4839c2	                            cmp rdx, rax	      9087	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0xf8ff	            0x7415	                            je 0x400f956	      9087	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0xf901	      0xe800000000	                          call 0x400f946	      9089	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9	CALL_15
0xf906	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9090	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0xf90a	          0x488b00	                    mov rax, qword [rax]	      9090	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0xf90d	    0xc74004310000	               mov dword [rax + 4], 0x31	      9090	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0xf914	            0xeb0e	                           jmp 0x400f964	      9090	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_9
0xf916	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9093	normal.c	FUNCTION_128	ELSE_4	IF_8	ELSE_5
0xf91a	          0x488b00	                    mov rax, qword [rax]	      9093	normal.c	FUNCTION_128	ELSE_4	IF_8	ELSE_5
0xf91d	    0xc740042d0000	               mov dword [rax + 4], 0x2d	      9093	normal.c	FUNCTION_128	ELSE_4	IF_8	ELSE_5
0xf924	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9094	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf928	    0xc7400c640000	            mov dword [rax + 0xc], 0x64 	      9094	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf92f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9095	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf933	    0xc74010000000	               mov dword [rax + 0x10], 0	      9095	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf93a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9096	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_16
0xf93e	          0x4889c7	                            mov rdi, rax	      9096	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_16
0xf941	      0xe8edf1ffff	                    call sym.nv_operator	      9096	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_16
0xf946	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9097	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_17
0xf94a	      0xba00000000	                              mov edx, 0	      9097	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_17
0xf94f	      0xbe00000000	                              mov esi, 0	      9097	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_17
0xf954	          0x4889c7	                            mov rdi, rax	      9097	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_17
0xf957	      0xe800000000	                          call 0x400f99c	      9097	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_17
0xf95c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9098	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf960	    0xc7400cb0acff	      mov dword [rax + 0xc], 0xffffacb0 	      9098	normal.c	FUNCTION_128	ELSE_4	IF_8
0xf967	      0xe800000000	                          call 0x400f9ac	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf96c	           0xfb600	                   movzx eax, byte [rax]	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf96f	            0x84c0	                             test al, al	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf971	     0xf84d1000000	                            je 0x400fa88	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf977	    0x488b05000000	            mov rax, qword [0x0400f9be] 	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf97e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf982	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf986	          0x4839c2	                            cmp rdx, rax	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf989	            0x7417	                            je 0x400f9e2	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf98b	    0x488b05000000	            mov rax, qword [0x0400f9d2] 	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf992	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf996	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf99a	          0x4839c2	                            cmp rdx, rax	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf99d	           0xf9cc0	                                 setl al	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9a0	            0xeb37	                           jmp 0x400fa19	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9a2	    0x488b05000000	            mov rax, qword [0x0400f9e9] 	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9a9	          0x8b5040	            mov edx, dword [rax + 0x40] 	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9ac	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9af	            0x39c2	                            cmp edx, eax	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9b1	            0x7414	                            je 0x400fa07	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9b3	    0x488b05000000	            mov rax, qword [0x0400f9fa] 	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9ba	          0x8b5040	            mov edx, dword [rax + 0x40] 	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9bd	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9c0	            0x39c2	                            cmp edx, eax	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9c2	           0xf9cc0	                                 setl al	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9c5	            0xeb12	                           jmp 0x400fa19	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9c7	    0x488b05000000	            mov rax, qword [0x0400fa0e] 	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9ce	          0x8b5044	            mov edx, dword [rax + 0x44] 	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9d1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9d4	            0x39c2	                            cmp edx, eax	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9d6	           0xf9cc0	                                 setl al	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9d9	            0x84c0	                             test al, al	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9db	            0x746b	                            je 0x400fa88	      9102	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_19
0xf9dd	    0x488b05000000	            mov rax, qword [0x0400fa24] 	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xf9e4	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xf9e8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xf9ec	          0x4839c2	                            cmp rdx, rax	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xf9ef	            0x7417	                            je 0x400fa48	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xf9f1	    0x488b05000000	            mov rax, qword [0x0400fa38] 	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xf9f8	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xf9fc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa00	          0x4839c2	                            cmp rdx, rax	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa03	           0xf9cc0	                                 setl al	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa06	            0xeb37	                           jmp 0x400fa7f	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa08	    0x488b05000000	            mov rax, qword [0x0400fa4f] 	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa0f	          0x8b5040	            mov edx, dword [rax + 0x40] 	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa12	          0x8b45f8	                mov eax, dword [rbp - 8]	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa15	            0x39c2	                            cmp edx, eax	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa17	            0x7414	                            je 0x400fa6d	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa19	    0x488b05000000	            mov rax, qword [0x0400fa60] 	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa20	          0x8b5040	            mov edx, dword [rax + 0x40] 	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa23	          0x8b45f8	                mov eax, dword [rbp - 8]	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa26	            0x39c2	                            cmp edx, eax	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa28	           0xf9cc0	                                 setl al	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa2b	            0xeb12	                           jmp 0x400fa7f	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa2d	    0x488b05000000	            mov rax, qword [0x0400fa74] 	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa34	          0x8b5044	            mov edx, dword [rax + 0x44] 	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa37	          0x8b45fc	                mov eax, dword [rbp - 4]	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa3a	            0x39c2	                            cmp edx, eax	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa3c	           0xf9cc0	                                 setl al	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa3f	            0x84c0	                             test al, al	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa41	            0x7405	                            je 0x400fa88	      9103	normal.c	FUNCTION_128	ELSE_4	IF_8	IF_10	CALL_20
0xfa43	      0xe800000000	                          call 0x400fa88	      9104	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_21
0xfa48	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9107	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_22
0xfa4c	          0x8b500c	              mov edx, dword [rax + 0xc]	      9107	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_22
0xfa4f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9107	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_22
0xfa53	      0xb900000000	                              mov ecx, 0	      9107	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_22
0xfa58	      0xbe00000000	                              mov esi, 0	      9107	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_22
0xfa5d	          0x4889c7	                            mov rdi, rax	      9107	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_22
0xfa60	      0xe8da010000	                    call sym.invoke_edit	      9107	normal.c	FUNCTION_128	ELSE_4	IF_8	CALL_22
0xfa65	      0xe9d3010000	                           jmp 0x400fc7d	      9082	normal.c	FUNCTION_128	ELSE_4	IF_8
0xfa6a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9109	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_23
0xfa6e	          0x488b00	                    mov rax, qword [rax]	      9109	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_23
0xfa71	          0x4889c7	                            mov rdi, rax	      9109	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_23
0xfa74	      0xe8ff5effff	                  call sym.checkclearopq	      9109	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_23
0xfa79	            0x85c0	                           test eax, eax	      9109	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_23
0xfa7b	     0xf859a010000	                           jne 0x400fc5b	      9109	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_23
0xfa81	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfa85	          0x8b400c	              mov eax, dword [rax + 0xc]	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfa88	          0x83f841	                           cmp eax, 0x41	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfa8b	            0x7428	                            je 0x400faf5	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfa8d	          0x83f841	                           cmp eax, 0x41	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfa90	            0x7f10	                            jg 0x400fae2	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfa92	      0x3db0acffff	                     cmp eax, 0xffffacb0	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfa97	     0xf84b7000000	                            je 0x400fb94	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfa9d	      0xe918010000	                           jmp 0x400fbfa	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfaa2	          0x83f849	                           cmp eax, 0x49	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfaa5	            0x747c	                            je 0x400fb63	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfaa7	          0x83f861	                           cmp eax, 0x61	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfaaa	     0xf84b2000000	                            je 0x400fba2	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfab0	      0xe905010000	                           jmp 0x400fbfa	      9111	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfab5	    0x488b05000000	            mov rax, qword [0x0400fafc] 	      9114	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfabc	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      9114	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfac3	    0x8b0500000000	            mov eax, dword [0x0400fb09] 	      9116	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12
0xfac9	          0x83f804	                              cmp eax, 4	      9116	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12
0xfacc	            0x752b	                           jne 0x400fb39	      9116	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12
0xface	    0x8b0500000000	            mov eax, dword [0x0400fb14] 	      9118	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12
0xfad4	          0x8945d8	             mov dword [rbp - 0x28], eax	      9118	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12
0xfad7	    0xc70500000000	           mov dword [0x0400fb21], 0x10 	      9122	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12
0xfae1	      0xbfffffff7f	                     mov edi, 0x7fffffff	      9123	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12	CALL_24
0xfae6	      0xe800000000	                          call 0x400fb2b	      9123	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12	CALL_24
0xfaeb	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9124	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12
0xfaee	    0x890500000000	            mov dword [0x0400fb34], eax 	      9124	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_12
0xfaf4	      0xe9c1000000	                           jmp 0x400fbfa	      9129	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfaf9	      0xe800000000	                          call 0x400fb3e	      9128	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0xfafe	          0x4889c7	                            mov rdi, rax	      9128	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0xfb01	      0xe800000000	                          call 0x400fb46	      9128	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0xfb06	            0x89c1	                            mov ecx, eax	      9128	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0xfb08	    0x488b05000000	            mov rax, qword [0x0400fb4f] 	      9128	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0xfb0f	    0x488b15000000	            mov rdx, qword [0x0400fb56] 	      9128	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0xfb16	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      9128	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0xfb19	             0x1ca	                            add edx, ecx	      9128	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0xfb1b	          0x895040	             mov dword [rax + 0x40], edx	      9128	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_26
0xfb1e	      0xe997000000	                           jmp 0x400fbfa	      9129	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfb23	    0x488b05000000	            mov rax, qword [0x0400fb6a] 	      9132	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_13	CALL_27
0xfb2a	      0xbe48000000	                           mov esi, 0x48	      9132	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_13	CALL_27
0xfb2f	          0x4889c7	                            mov rdi, rax	      9132	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_13	CALL_27
0xfb32	      0xe800000000	                          call 0x400fb77	      9132	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_13	CALL_27
0xfb37	          0x4885c0	                           test rax, rax	      9132	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_13	CALL_27
0xfb3a	            0x750c	                           jne 0x400fb88	      9132	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_13	CALL_27
0xfb3c	      0xbf01000000	                              mov edi, 1	      9133	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_28
0xfb41	      0xe800000000	                          call 0x400fb86	      9133	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_28
0xfb46	            0xeb72	                           jmp 0x400fbfa	      9136	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfb48	      0xbf05000000	                              mov edi, 5	      9135	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_29
0xfb4d	      0xe800000000	                          call 0x400fb92	      9135	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	CALL_29
0xfb52	            0xeb66	                           jmp 0x400fbfa	      9136	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfb54	    0x488b05000000	            mov rax, qword [0x0400fb9b] 	      9141	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_14
0xfb5b	          0x8b4040	            mov eax, dword [rax + 0x40] 	      9141	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_14
0xfb5e	            0x85c0	                           test eax, eax	      9141	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_14
0xfb60	            0x7454	                            je 0x400fbf6	      9141	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_14
0xfb62	      0xe800000000	                          call 0x400fba7	      9149	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_30
0xfb67	            0x85c0	                           test eax, eax	      9149	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_30
0xfb69	            0x7438	                            je 0x400fbe3	      9149	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_30
0xfb6b	    0x488b05000000	            mov rax, qword [0x0400fbb2] 	      9150	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15
0xfb72	          0x8b4044	            mov eax, dword [rax + 0x44] 	      9150	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15
0xfb75	            0x85c0	                           test eax, eax	      9150	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15
0xfb77	            0x7f18	                            jg 0x400fbd1	      9150	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15
0xfb79	      0xe800000000	                          call 0x400fbbe	      9151	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_31
0xfb7e	           0xfb600	                   movzx eax, byte [rax]	      9151	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_31
0xfb81	            0x84c0	                             test al, al	      9151	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_31
0xfb83	            0x740c	                            je 0x400fbd1	      9151	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_31
0xfb85	      0xe800000000	                          call 0x400fbca	      9152	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_32
0xfb8a	           0xfb600	                   movzx eax, byte [rax]	      9152	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_32
0xfb8d	            0x3c09	                               cmp al, 9	      9152	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_32
0xfb8f	            0x7512	                           jne 0x400fbe3	      9152	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15	CALL_32
0xfb91	    0x488b05000000	            mov rax, qword [0x0400fbd8] 	      9153	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15
0xfb98	          0x8b5044	            mov edx, dword [rax + 0x44] 	      9153	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15
0xfb9b	          0x83c201	                              add edx, 1	      9153	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15
0xfb9e	          0x895044	             mov dword [rax + 0x44], edx	      9153	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_15
0xfba1	            0xeb16	                           jmp 0x400fbf9	      9158	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfba3	      0xe800000000	                          call 0x400fbe8	      9156	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	ELSE_9	IF_16	CALL_33
0xfba8	           0xfb600	                   movzx eax, byte [rax]	      9156	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	ELSE_9	IF_16	CALL_33
0xfbab	            0x84c0	                             test al, al	      9156	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	ELSE_9	IF_16	CALL_33
0xfbad	            0x740a	                            je 0x400fbf9	      9156	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	ELSE_9	IF_16	CALL_33
0xfbaf	      0xe800000000	                          call 0x400fbf4	      9157	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	ELSE_9	IF_16
0xfbb4	            0xeb03	                           jmp 0x400fbf9	      9158	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfbb6	              0x90	                                     nop	      9142	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_14
0xfbb7	            0xeb01	                           jmp 0x400fbfa	      9142	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1	IF_14
0xfbb9	              0x90	                                     nop	      9158	normal.c	FUNCTION_128	ELSE_6	IF_11	SWITCH_1
0xfbba	    0x488b05000000	            mov rax, qword [0x0400fc01] 	      9162	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0xfbc1	          0x8b4044	            mov eax, dword [rax + 0x44] 	      9162	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0xfbc4	            0x85c0	                           test eax, eax	      9162	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0xfbc6	            0x7434	                            je 0x400fc3c	      9162	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0xfbc8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9162	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0xfbcc	          0x8b400c	              mov eax, dword [rax + 0xc]	      9162	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0xfbcf	          0x83f841	                           cmp eax, 0x41	      9162	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0xfbd2	            0x7428	                            je 0x400fc3c	      9162	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0xfbd4	    0x8b0500000000	            mov eax, dword [0x0400fc1a] 	      9164	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0xfbda	          0x8945dc	             mov dword [rbp - 0x24], eax	      9164	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0xfbdd	    0xc70500000000	           mov dword [0x0400fc27], 0x10 	      9168	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0xfbe7	      0xe800000000	                          call 0x400fc2c	      9169	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17	CALL_36
0xfbec	            0x89c7	                            mov edi, eax	      9169	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17	CALL_36
0xfbee	      0xe800000000	                          call 0x400fc33	      9169	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17	CALL_36
0xfbf3	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9170	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0xfbf6	    0x890500000000	            mov dword [0x0400fc3c], eax 	      9170	normal.c	FUNCTION_128	ELSE_6	IF_11	IF_17
0xfbfc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9174	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_37
0xfc00	          0x8b500c	              mov edx, dword [rax + 0xc]	      9174	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_37
0xfc03	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9174	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_37
0xfc07	      0xb900000000	                              mov ecx, 0	      9174	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_37
0xfc0c	      0xbe00000000	                              mov esi, 0	      9174	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_37
0xfc11	          0x4889c7	                            mov rdi, rax	      9174	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_37
0xfc14	      0xe826000000	                    call sym.invoke_edit	      9174	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_37
0xfc19	            0xeb22	                           jmp 0x400fc7d	      9174	normal.c	FUNCTION_128	ELSE_6	IF_11	CALL_37
0xfc1b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9176	normal.c	FUNCTION_128	ELSE_10	IF_18
0xfc1f	          0x8b400c	              mov eax, dword [rax + 0xc]	      9176	normal.c	FUNCTION_128	ELSE_10	IF_18
0xfc22	      0x3db0acffff	                     cmp eax, 0xffffacb0	      9176	normal.c	FUNCTION_128	ELSE_10	IF_18
0xfc27	            0x7514	                           jne 0x400fc7d	      9176	normal.c	FUNCTION_128	ELSE_10	IF_18
0xfc29	      0xba00000000	                              mov edx, 0	      9178	normal.c	FUNCTION_128	ELSE_10	IF_18
0xfc2e	      0xbe01000000	                              mov esi, 1	      9178	normal.c	FUNCTION_128	ELSE_10	IF_18
0xfc33	      0xbf00000000	                              mov edi, 0	      9178	normal.c	FUNCTION_128	ELSE_10	IF_18
0xfc38	      0xe800000000	                          call 0x400fc7d	      9178	normal.c	FUNCTION_128	ELSE_10	IF_18
0xfc3d	              0xc9	                                   leave	      9179	normal.c	FUNCTION_128
0xfc3e	              0xc3	                                     ret	      9179	normal.c	FUNCTION_128
unadjust_for_sel	CALL,5:ELSE,3:DO,0:FOR,0:functions,0:IF,5:WHILE,0:SWITCH,0	104
0xf288	              0x55	                                push rbp	      8864	normal.c	ELSE_1	FUNCTION_123
0xf289	          0x4889e5	                            mov rbp, rsp	      8864	normal.c	ELSE_1	FUNCTION_123
0xf28c	        0x4883ec10	                           sub rsp, 0x10	      8864	normal.c	ELSE_1	FUNCTION_123
0xf290	    0x488b05000000	            mov rax, qword [0x0400f2d7] 	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf297	           0xfb600	                   movzx eax, byte [rax]	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf29a	            0x3c65	                            cmp al, 0x65	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf29c	     0xf8569010000	                           jne 0x400f44b	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2a2	    0x488b15000000	            mov rdx, qword [0x0400f2e9] 	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2a9	    0x488b05000000	            mov rax, qword [0x0400f2f0] 	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2b0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2b4	          0x4839c2	                            cmp rdx, rax	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2b7	            0x752c	                           jne 0x400f325	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2b9	    0x8b1500000000	            mov edx, dword [0x0400f2ff] 	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2bf	    0x488b05000000	            mov rax, qword [0x0400f306] 	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2c6	          0x8b4040	            mov eax, dword [rax + 0x40] 	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2c9	            0x39c2	                            cmp edx, eax	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2cb	            0x7518	                           jne 0x400f325	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2cd	    0x8b1500000000	            mov edx, dword [0x0400f313] 	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2d3	    0x488b05000000	            mov rax, qword [0x0400f31a] 	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2da	          0x8b4044	            mov eax, dword [rax + 0x44] 	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2dd	            0x39c2	                            cmp edx, eax	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2df	     0xf8426010000	                            je 0x400f44b	      8867	normal.c	ELSE_1	FUNCTION_123	IF_1	CALL_1
0xf2e5	    0x488b15000000	            mov rdx, qword [0x0400f32c] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf2ec	    0x488b05000000	            mov rax, qword [0x0400f333] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf2f3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf2f7	          0x4839c2	                            cmp rdx, rax	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf2fa	            0x741a	                            je 0x400f356	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf2fc	    0x488b15000000	            mov rdx, qword [0x0400f343] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf303	    0x488b05000000	            mov rax, qword [0x0400f34a] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf30a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf30e	          0x4839c2	                            cmp rdx, rax	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf311	           0xf9cc0	                                 setl al	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf314	            0xeb40	                           jmp 0x400f396	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf316	    0x8b1500000000	            mov edx, dword [0x0400f35c] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf31c	    0x488b05000000	            mov rax, qword [0x0400f363] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf323	          0x8b4040	            mov eax, dword [rax + 0x40] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf326	            0x39c2	                            cmp edx, eax	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf328	            0x7417	                            je 0x400f381	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf32a	    0x8b1500000000	            mov edx, dword [0x0400f370] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf330	    0x488b05000000	            mov rax, qword [0x0400f377] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf337	          0x8b4040	            mov eax, dword [rax + 0x40] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf33a	            0x39c2	                            cmp edx, eax	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf33c	           0xf9cc0	                                 setl al	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf33f	            0xeb15	                           jmp 0x400f396	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf341	    0x8b1500000000	            mov edx, dword [0x0400f387] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf347	    0x488b05000000	            mov rax, qword [0x0400f38e] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf34e	          0x8b4044	            mov eax, dword [rax + 0x44] 	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf351	            0x39c2	                            cmp edx, eax	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf353	           0xf9cc0	                                 setl al	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf356	            0x84c0	                             test al, al	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf358	            0x7411	                            je 0x400f3ab	      8869	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2	CALL_2
0xf35a	    0x488b05000000	            mov rax, qword [0x0400f3a1] 	      8870	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2
0xf361	        0x4883c038	                           add rax, 0x38	      8870	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2
0xf365	        0x488945f8	                mov qword [rbp - 8], rax	      8870	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2
0xf369	            0xeb08	                           jmp 0x400f3b3	      8870	normal.c	ELSE_1	FUNCTION_123	IF_1	IF_2
0xf36b	    0x48c745f80000	                  mov qword [rbp - 8], 0	      8872	normal.c	FUNCTION_123	IF_1	ELSE_1
0xf373	        0x488b45f8	                mov rax, qword [rbp - 8]	      8874	normal.c	FUNCTION_123	IF_1	ELSE_1	IF_3
0xf377	          0x8b400c	              mov eax, dword [rax + 0xc]	      8874	normal.c	FUNCTION_123	IF_1	ELSE_1	IF_3
0xf37a	            0x85c0	                           test eax, eax	      8874	normal.c	FUNCTION_123	IF_1	ELSE_1	IF_3
0xf37c	            0x7e13	                           jle 0x400f3d1	      8874	normal.c	FUNCTION_123	IF_1	ELSE_1	IF_3
0xf37e	        0x488b45f8	                mov rax, qword [rbp - 8]	      8875	normal.c	FUNCTION_123	IF_1	ELSE_1	IF_3
0xf382	          0x8b400c	              mov eax, dword [rax + 0xc]	      8875	normal.c	FUNCTION_123	IF_1	ELSE_1	IF_3
0xf385	          0x8d50ff	                      lea edx, [rax - 1]	      8875	normal.c	FUNCTION_123	IF_1	ELSE_1	IF_3
0xf388	        0x488b45f8	                mov rax, qword [rbp - 8]	      8875	normal.c	FUNCTION_123	IF_1	ELSE_1	IF_3
0xf38c	          0x89500c	              mov dword [rax + 0xc], edx	      8875	normal.c	FUNCTION_123	IF_1	ELSE_1	IF_3
0xf38f	            0xeb7a	                           jmp 0x400f44b	      8875	normal.c	FUNCTION_123	IF_1	ELSE_1	IF_3
0xf391	        0x488b45f8	                mov rax, qword [rbp - 8]	      8878	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4
0xf395	          0x8b4008	                mov eax, dword [rax + 8]	      8878	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4
0xf398	            0x85c0	                           test eax, eax	      8878	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4
0xf39a	            0x7e29	                           jle 0x400f405	      8878	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4
0xf39c	        0x488b45f8	                mov rax, qword [rbp - 8]	      8880	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4
0xf3a0	          0x8b4008	                mov eax, dword [rax + 8]	      8880	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4
0xf3a3	          0x8d50ff	                      lea edx, [rax - 1]	      8880	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4
0xf3a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      8880	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4
0xf3aa	          0x895008	                mov dword [rax + 8], edx	      8880	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4
0xf3ad	    0x488b05000000	            mov rax, qword [0x0400f3f4] 	      8882	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4	CALL_3
0xf3b4	        0x488b55f8	                mov rdx, qword [rbp - 8]	      8882	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4	CALL_3
0xf3b8	          0x4889d6	                            mov rsi, rdx	      8882	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4	CALL_3
0xf3bb	          0x4889c7	                            mov rdi, rax	      8882	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4	CALL_3
0xf3be	      0xe800000000	                          call 0x400f403	      8882	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4	CALL_3
0xf3c3	            0xeb46	                           jmp 0x400f44b	      8882	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_2	IF_4	CALL_3
0xf3c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      8885	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0xf3c9	          0x488b00	                    mov rax, qword [rax]	      8885	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0xf3cc	        0x4883f801	                              cmp rax, 1	      8885	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0xf3d0	            0x7e39	                           jle 0x400f44b	      8885	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0xf3d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      8887	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0xf3d6	          0x488b00	                    mov rax, qword [rax]	      8887	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0xf3d9	        0x488d50ff	                      lea rdx, [rax - 1]	      8887	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0xf3dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      8887	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0xf3e1	          0x488910	                    mov qword [rax], rdx	      8887	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0xf3e4	        0x488b45f8	                mov rax, qword [rbp - 8]	      8888	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0xf3e8	          0x488b00	                    mov rax, qword [rax]	      8888	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0xf3eb	          0x4889c7	                            mov rdi, rax	      8888	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0xf3ee	      0xe800000000	                          call 0x400f433	      8888	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0xf3f3	          0x4889c7	                            mov rdi, rax	      8888	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0xf3f6	      0xe800000000	                          call 0x400f43b	      8888	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0xf3fb	            0x89c2	                            mov edx, eax	      8888	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0xf3fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      8888	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0xf401	          0x895008	                mov dword [rax + 8], edx	      8888	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5	CALL_5
0xf404	      0xb801000000	                              mov eax, 1	      8889	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0xf409	            0xeb05	                           jmp 0x400f450	      8889	normal.c	FUNCTION_123	IF_1	ELSE_1	ELSE_3	IF_5
0xf40b	      0xb800000000	                              mov eax, 0	      8892	normal.c	FUNCTION_123	ELSE_1
0xf410	              0xc9	                                   leave	      8893	normal.c	FUNCTION_123	ELSE_1
0xf411	              0xc3	                                     ret	      8893	normal.c	FUNCTION_123	ELSE_1
nv_search	CALL,5:ELSE,0:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	79
0xa57b	              0x55	                                push rbp	      6325	normal.c	FUNCTION_77
0xa57c	          0x4889e5	                            mov rbp, rsp	      6325	normal.c	FUNCTION_77
0xa57f	        0x4883ec30	                           sub rsp, 0x30	      6325	normal.c	FUNCTION_77
0xa583	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6325	normal.c	FUNCTION_77
0xa587	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6326	normal.c	FUNCTION_77
0xa58b	          0x488b00	                    mov rax, qword [rax]	      6326	normal.c	FUNCTION_77
0xa58e	        0x488945e8	             mov qword [rbp - 0x18], rax	      6326	normal.c	FUNCTION_77
0xa592	    0x488b05000000	            mov rax, qword [0x0400a5d9] 	      6327	normal.c	FUNCTION_77
0xa599	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      6327	normal.c	FUNCTION_77
0xa59d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6327	normal.c	FUNCTION_77
0xa5a1	        0x488945f0	             mov qword [rbp - 0x10], rax	      6327	normal.c	FUNCTION_77
0xa5a5	        0x488955f8	                mov qword [rbp - 8], rdx	      6327	normal.c	FUNCTION_77
0xa5a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6329	normal.c	FUNCTION_77	IF_1
0xa5ad	          0x8b400c	              mov eax, dword [rax + 0xc]	      6329	normal.c	FUNCTION_77	IF_1
0xa5b0	          0x83f83f	                           cmp eax, 0x3f	      6329	normal.c	FUNCTION_77	IF_1
0xa5b3	            0x7535	                           jne 0x400a62a	      6329	normal.c	FUNCTION_77	IF_1
0xa5b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6329	normal.c	FUNCTION_77	IF_1
0xa5b9	          0x488b00	                    mov rax, qword [rax]	      6329	normal.c	FUNCTION_77	IF_1
0xa5bc	            0x8b00	                    mov eax, dword [rax]	      6329	normal.c	FUNCTION_77	IF_1
0xa5be	          0x83f80f	                            cmp eax, 0xf	      6329	normal.c	FUNCTION_77	IF_1
0xa5c1	            0x7527	                           jne 0x400a62a	      6329	normal.c	FUNCTION_77	IF_1
0xa5c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6332	normal.c	FUNCTION_77	IF_1
0xa5c7	    0xc7400c670000	            mov dword [rax + 0xc], 0x67 	      6332	normal.c	FUNCTION_77	IF_1
0xa5ce	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6333	normal.c	FUNCTION_77	IF_1
0xa5d2	    0xc740103f0000	           mov dword [rax + 0x10], 0x3f 	      6333	normal.c	FUNCTION_77	IF_1
0xa5d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6334	normal.c	FUNCTION_77	IF_1	CALL_1
0xa5dd	          0x4889c7	                            mov rdi, rax	      6334	normal.c	FUNCTION_77	IF_1	CALL_1
0xa5e0	      0xe84e450000	                    call sym.nv_operator	      6334	normal.c	FUNCTION_77	IF_1	CALL_1
0xa5e5	      0xe9ac000000	                           jmp 0x400a6d6	      6335	normal.c	FUNCTION_77	IF_1
0xa5ea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6340	normal.c	FUNCTION_77	CALL_2
0xa5ee	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      6340	normal.c	FUNCTION_77	CALL_2
0xa5f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6340	normal.c	FUNCTION_77	CALL_2
0xa5f6	          0x8b400c	              mov eax, dword [rax + 0xc]	      6340	normal.c	FUNCTION_77	CALL_2
0xa5f9	      0xba00000000	                              mov edx, 0	      6340	normal.c	FUNCTION_77	CALL_2
0xa5fe	          0x4889ce	                            mov rsi, rcx	      6340	normal.c	FUNCTION_77	CALL_2
0xa601	            0x89c7	                            mov edi, eax	      6340	normal.c	FUNCTION_77	CALL_2
0xa603	      0xe800000000	                          call 0x400a648	      6340	normal.c	FUNCTION_77	CALL_2
0xa608	          0x4889c2	                            mov rdx, rax	      6340	normal.c	FUNCTION_77	CALL_2
0xa60b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6340	normal.c	FUNCTION_77	CALL_2
0xa60f	        0x48895040	             mov qword [rax + 0x40], rdx	      6340	normal.c	FUNCTION_77	CALL_2
0xa613	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6342	normal.c	FUNCTION_77	IF_2
0xa617	        0x488b4040	            mov rax, qword [rax + 0x40] 	      6342	normal.c	FUNCTION_77	IF_2
0xa61b	          0x4885c0	                           test rax, rax	      6342	normal.c	FUNCTION_77	IF_2
0xa61e	            0x750e	                           jne 0x400a66e	      6342	normal.c	FUNCTION_77	IF_2
0xa620	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6344	normal.c	FUNCTION_77	IF_2	CALL_3
0xa624	          0x4889c7	                            mov rdi, rax	      6344	normal.c	FUNCTION_77	IF_2	CALL_3
0xa627	      0xe886b3ffff	                        call sym.clearop	      6344	normal.c	FUNCTION_77	IF_2	CALL_3
0xa62c	            0xeb68	                           jmp 0x400a6d6	      6345	normal.c	FUNCTION_77	IF_2
0xa62e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6349	normal.c	FUNCTION_77	CALL_5
0xa632	          0x8b4038	            mov eax, dword [rax + 0x38] 	      6349	normal.c	FUNCTION_77	CALL_5
0xa635	            0x85c0	                           test eax, eax	      6348	normal.c	FUNCTION_77	CALL_4
0xa637	            0x7536	                           jne 0x400a6af	      6348	normal.c	FUNCTION_77	CALL_4
0xa639	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      6349	normal.c	FUNCTION_77	CALL_5
0xa63d	    0x488b05000000	            mov rax, qword [0x0400a684] 	      6349	normal.c	FUNCTION_77	CALL_5
0xa644	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6349	normal.c	FUNCTION_77	CALL_5
0xa648	          0x4839c2	                            cmp rdx, rax	      6349	normal.c	FUNCTION_77	CALL_5
0xa64b	            0x7522	                           jne 0x400a6af	      6349	normal.c	FUNCTION_77	CALL_5
0xa64d	          0x8b55f8	                mov edx, dword [rbp - 8]	      6349	normal.c	FUNCTION_77	CALL_5
0xa650	    0x488b05000000	            mov rax, qword [0x0400a697] 	      6349	normal.c	FUNCTION_77	CALL_5
0xa657	          0x8b4040	            mov eax, dword [rax + 0x40] 	      6349	normal.c	FUNCTION_77	CALL_5
0xa65a	            0x39c2	                            cmp edx, eax	      6349	normal.c	FUNCTION_77	CALL_5
0xa65c	            0x7511	                           jne 0x400a6af	      6349	normal.c	FUNCTION_77	CALL_5
0xa65e	          0x8b55fc	                mov edx, dword [rbp - 4]	      6349	normal.c	FUNCTION_77	CALL_5
0xa661	    0x488b05000000	            mov rax, qword [0x0400a6a8] 	      6349	normal.c	FUNCTION_77	CALL_5
0xa668	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6349	normal.c	FUNCTION_77	CALL_5
0xa66b	            0x39c2	                            cmp edx, eax	      6349	normal.c	FUNCTION_77	CALL_5
0xa66d	            0x7407	                            je 0x400a6b6	      6349	normal.c	FUNCTION_77	CALL_5
0xa66f	      0xb900000000	                              mov ecx, 0	      6348	normal.c	FUNCTION_77	CALL_4
0xa674	            0xeb05	                           jmp 0x400a6bb	      6348	normal.c	FUNCTION_77	CALL_4
0xa676	      0xb900020000	                          mov ecx, 0x200	      6348	normal.c	FUNCTION_77	CALL_4
0xa67b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6348	normal.c	FUNCTION_77	CALL_4
0xa67f	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      6348	normal.c	FUNCTION_77	CALL_4
0xa683	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6348	normal.c	FUNCTION_77	CALL_4
0xa687	          0x8b700c	              mov esi, dword [rax + 0xc]	      6348	normal.c	FUNCTION_77	CALL_4
0xa68a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6348	normal.c	FUNCTION_77	CALL_4
0xa68e	          0x4889c7	                            mov rdi, rax	      6348	normal.c	FUNCTION_77	CALL_4
0xa691	      0xe8db000000	                  call sym.normal_search	      6348	normal.c	FUNCTION_77	CALL_4
0xa696	              0xc9	                                   leave	      6351	normal.c	FUNCTION_77
0xa697	              0xc3	                                     ret	      6351	normal.c	FUNCTION_77
push_showcmd	CALL,1:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	11
0x5fc6	              0x55	                                push rbp	      3940	normal.c	FUNCTION_32
0x5fc7	          0x4889e5	                            mov rbp, rsp	      3940	normal.c	FUNCTION_32
0x5fca	    0x8b0500000000	            mov eax, dword [0x04006010] 	      3941	normal.c	FUNCTION_32	IF_1
0x5fd0	            0x85c0	                           test eax, eax	      3941	normal.c	FUNCTION_32	IF_1
0x5fd2	            0x740f	                            je 0x4006023	      3941	normal.c	FUNCTION_32	IF_1
0x5fd4	      0xbe00000000	                              mov esi, 0	      3942	normal.c	FUNCTION_32	CALL_1
0x5fd9	      0xbf00000000	                              mov edi, 0	      3942	normal.c	FUNCTION_32	CALL_1
0x5fde	      0xe800000000	                          call 0x4006023	      3942	normal.c	FUNCTION_32	CALL_1
0x5fe3	              0x90	                                     nop	      3943	normal.c	FUNCTION_32
0x5fe4	              0x5d	                                 pop rbp	      3943	normal.c	FUNCTION_32
0x5fe5	              0xc3	                                     ret	      3943	normal.c	FUNCTION_32
checkclearopq	CALL,1:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	19
0x5978	              0x55	                                push rbp	      3669	normal.c	FUNCTION_23
0x5979	          0x4889e5	                            mov rbp, rsp	      3669	normal.c	FUNCTION_23
0x597c	        0x4883ec10	                           sub rsp, 0x10	      3669	normal.c	FUNCTION_23
0x5980	        0x48897df8	                mov qword [rbp - 8], rdi	      3669	normal.c	FUNCTION_23
0x5984	        0x488b45f8	                mov rax, qword [rbp - 8]	      3670	normal.c	FUNCTION_23	IF_1
0x5988	            0x8b00	                    mov eax, dword [rax]	      3670	normal.c	FUNCTION_23	IF_1
0x598a	            0x85c0	                           test eax, eax	      3670	normal.c	FUNCTION_23	IF_1
0x598c	            0x7511	                           jne 0x40059df	      3670	normal.c	FUNCTION_23	IF_1
0x598e	    0x8b0500000000	            mov eax, dword [0x040059d4] 	      3670	normal.c	FUNCTION_23	IF_1
0x5994	            0x85c0	                           test eax, eax	      3670	normal.c	FUNCTION_23	IF_1
0x5996	            0x7507	                           jne 0x40059df	      3670	normal.c	FUNCTION_23	IF_1
0x5998	      0xb800000000	                              mov eax, 0	      3671	normal.c	FUNCTION_23	IF_1
0x599d	            0xeb11	                           jmp 0x40059f0	      3671	normal.c	FUNCTION_23	IF_1
0x599f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3672	normal.c	FUNCTION_23	CALL_1
0x59a3	          0x4889c7	                            mov rdi, rax	      3672	normal.c	FUNCTION_23	CALL_1
0x59a6	      0xe83d000000	                    call sym.clearopbeep	      3672	normal.c	FUNCTION_23	CALL_1
0x59ab	      0xb801000000	                              mov eax, 1	      3673	normal.c	FUNCTION_23
0x59b0	              0xc9	                                   leave	      3674	normal.c	FUNCTION_23
0x59b1	              0xc3	                                     ret	      3674	normal.c	FUNCTION_23
adjust_cursor	CALL,3:ELSE,0:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	38
0xf0ac	              0x55	                                push rbp	      8797	normal.c	FUNCTION_120
0xf0ad	          0x4889e5	                            mov rbp, rsp	      8797	normal.c	FUNCTION_120
0xf0b0	        0x4883ec10	                           sub rsp, 0x10	      8797	normal.c	FUNCTION_120
0xf0b4	        0x48897df8	                mov qword [rbp - 8], rdi	      8797	normal.c	FUNCTION_120
0xf0b8	    0x488b05000000	            mov rax, qword [0x0400f0ff] 	      8803	normal.c	FUNCTION_120	IF_1	CALL_1
0xf0bf	          0x8b4040	            mov eax, dword [rax + 0x40] 	      8803	normal.c	FUNCTION_120	IF_1	CALL_1
0xf0c2	            0x85c0	                           test eax, eax	      8803	normal.c	FUNCTION_120	IF_1	CALL_1
0xf0c4	            0x7e61	                           jle 0x400f167	      8803	normal.c	FUNCTION_120	IF_1	CALL_1
0xf0c6	      0xe800000000	                          call 0x400f10b	      8803	normal.c	FUNCTION_120	IF_1	CALL_1
0xf0cb	            0x85c0	                           test eax, eax	      8803	normal.c	FUNCTION_120	IF_1	CALL_1
0xf0cd	            0x7558	                           jne 0x400f167	      8803	normal.c	FUNCTION_120	IF_1	CALL_1
0xf0cf	    0x8b0500000000	            mov eax, dword [0x0400f115] 	      8804	normal.c	FUNCTION_120	IF_1
0xf0d5	            0x85c0	                           test eax, eax	      8804	normal.c	FUNCTION_120	IF_1
0xf0d7	            0x740e	                            je 0x400f127	      8804	normal.c	FUNCTION_120	IF_1
0xf0d9	    0x488b05000000	            mov rax, qword [0x0400f120] 	      8804	normal.c	FUNCTION_120	IF_1
0xf0e0	           0xfb600	                   movzx eax, byte [rax]	      8804	normal.c	FUNCTION_120	IF_1
0xf0e3	            0x3c6f	                            cmp al, 0x6f	      8804	normal.c	FUNCTION_120	IF_1
0xf0e5	            0x7540	                           jne 0x400f167	      8804	normal.c	FUNCTION_120	IF_1
0xf0e7	      0xe800000000	                          call 0x400f12c	      8806	normal.c	FUNCTION_120	IF_1	CALL_2
0xf0ec	            0x85c0	                           test eax, eax	      8806	normal.c	FUNCTION_120	IF_1	CALL_2
0xf0ee	            0x7537	                           jne 0x400f167	      8806	normal.c	FUNCTION_120	IF_1	CALL_2
0xf0f0	    0x8b0500000000	            mov eax, dword [0x0400f136] 	      8806	normal.c	FUNCTION_120	IF_1	CALL_2
0xf0f6	          0x83e008	                              and eax, 8	      8806	normal.c	FUNCTION_120	IF_1	CALL_2
0xf0f9	            0x85c0	                           test eax, eax	      8806	normal.c	FUNCTION_120	IF_1	CALL_2
0xf0fb	            0x752a	                           jne 0x400f167	      8806	normal.c	FUNCTION_120	IF_1	CALL_2
0xf0fd	    0x488b05000000	            mov rax, qword [0x0400f144] 	      8810	normal.c	FUNCTION_120	IF_1
0xf104	          0x8b5040	            mov edx, dword [rax + 0x40] 	      8810	normal.c	FUNCTION_120	IF_1
0xf107	          0x83ea01	                              sub edx, 1	      8810	normal.c	FUNCTION_120	IF_1
0xf10a	          0x895040	             mov dword [rax + 0x40], edx	      8810	normal.c	FUNCTION_120	IF_1
0xf10d	    0x8b0500000000	            mov eax, dword [0x0400f153] 	      8813	normal.c	FUNCTION_120	IF_1	IF_2
0xf113	            0x85c0	                           test eax, eax	      8813	normal.c	FUNCTION_120	IF_1	IF_2
0xf115	            0x7405	                            je 0x400f15c	      8813	normal.c	FUNCTION_120	IF_1	IF_2
0xf117	      0xe800000000	                          call 0x400f15c	      8814	normal.c	FUNCTION_120	IF_1	CALL_3
0xf11c	        0x488b45f8	                mov rax, qword [rbp - 8]	      8816	normal.c	FUNCTION_120	IF_1
0xf120	    0xc74014010000	               mov dword [rax + 0x14], 1	      8816	normal.c	FUNCTION_120	IF_1
0xf127	              0x90	                                     nop	      8818	normal.c	FUNCTION_120
0xf128	              0xc9	                                   leave	      8818	normal.c	FUNCTION_120
0xf129	              0xc3	                                     ret	      8818	normal.c	FUNCTION_120
nv_ctrlh	CALL,2:ELSE,1:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	22
0x8a2b	              0x55	                                push rbp	      5449	normal.c	FUNCTION_60
0x8a2c	          0x4889e5	                            mov rbp, rsp	      5449	normal.c	FUNCTION_60
0x8a2f	        0x4883ec10	                           sub rsp, 0x10	      5449	normal.c	FUNCTION_60
0x8a33	        0x48897df8	                mov qword [rbp - 8], rdi	      5449	normal.c	FUNCTION_60
0x8a37	    0x8b0500000000	            mov eax, dword [0x04008a7d] 	      5450	normal.c	FUNCTION_60	IF_1
0x8a3d	            0x85c0	                           test eax, eax	      5450	normal.c	FUNCTION_60	IF_1
0x8a3f	            0x7423	                            je 0x4008aa4	      5450	normal.c	FUNCTION_60	IF_1
0x8a41	    0x8b0500000000	            mov eax, dword [0x04008a87] 	      5450	normal.c	FUNCTION_60	IF_1
0x8a47	            0x85c0	                           test eax, eax	      5450	normal.c	FUNCTION_60	IF_1
0x8a49	            0x7419	                            je 0x4008aa4	      5450	normal.c	FUNCTION_60	IF_1
0x8a4b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5452	normal.c	FUNCTION_60	IF_1
0x8a4f	    0xc7400c780000	            mov dword [rax + 0xc], 0x78 	      5452	normal.c	FUNCTION_60	IF_1
0x8a56	        0x488b45f8	                mov rax, qword [rbp - 8]	      5453	normal.c	FUNCTION_60	IF_1	CALL_1
0x8a5a	          0x4889c7	                            mov rdi, rax	      5453	normal.c	FUNCTION_60	IF_1	CALL_1
0x8a5d	      0xe8d4400000	                        call sym.v_visop	      5453	normal.c	FUNCTION_60	IF_1	CALL_1
0x8a62	            0xeb0c	                           jmp 0x4008ab0	      5453	normal.c	FUNCTION_60	IF_1	CALL_1
0x8a64	        0x488b45f8	                mov rax, qword [rbp - 8]	      5456	normal.c	FUNCTION_60	CALL_2
0x8a68	          0x4889c7	                            mov rdi, rax	      5456	normal.c	FUNCTION_60	CALL_2
0x8a6b	      0xe87f140000	                        call sym.nv_left	      5456	normal.c	FUNCTION_60	CALL_2
0x8a70	              0x90	                                     nop	      5457	normal.c	FUNCTION_60
0x8a71	              0xc9	                                   leave	      5457	normal.c	FUNCTION_60
0x8a72	              0xc3	                                     ret	      5457	normal.c	FUNCTION_60
nv_at	CALL,5:ELSE,0:DO,0:FOR,0:functions,0:IF,4:WHILE,1:SWITCH,0	49
0xffda	              0x55	                                push rbp	      9335	normal.c	FUNCTION_132
0xffdb	          0x4889e5	                            mov rbp, rsp	      9335	normal.c	FUNCTION_132
0xffde	        0x4883ec10	                           sub rsp, 0x10	      9335	normal.c	FUNCTION_132
0xffe2	        0x48897df8	                mov qword [rbp - 8], rdi	      9335	normal.c	FUNCTION_132
0xffe6	        0x488b45f8	                mov rax, qword [rbp - 8]	      9336	normal.c	FUNCTION_132	IF_1	CALL_1
0xffea	          0x488b00	                    mov rax, qword [rax]	      9336	normal.c	FUNCTION_132	IF_1	CALL_1
0xffed	          0x4889c7	                            mov rdi, rax	      9336	normal.c	FUNCTION_132	IF_1	CALL_1
0xfff0	      0xe85359ffff	                   call sym.checkclearop	      9336	normal.c	FUNCTION_132	IF_1	CALL_1
0xfff5	            0x85c0	                           test eax, eax	      9336	normal.c	FUNCTION_132	IF_1	CALL_1
0xfff7	            0x7573	                           jne 0x40100ac	      9336	normal.c	FUNCTION_132	IF_1	CALL_1
0xfff9	        0x488b45f8	                mov rax, qword [rbp - 8]	      9339	normal.c	FUNCTION_132	IF_2
0xfffd	          0x8b4010	            mov eax, dword [rax + 0x10] 	      9339	normal.c	FUNCTION_132	IF_2
0x10000	          0x83f83d	                           cmp eax, 0x3d	      9339	normal.c	FUNCTION_132	IF_2
0x10003	            0x7542	                           jne 0x4010087	      9339	normal.c	FUNCTION_132	IF_2
0x10005	      0xe800000000	                          call 0x401004a	      9341	normal.c	FUNCTION_132	IF_2	IF_3	CALL_2
0x1000a	            0x85c0	                           test eax, eax	      9341	normal.c	FUNCTION_132	IF_2	IF_3	CALL_2
0x1000c	            0x7461	                            je 0x40100af	      9341	normal.c	FUNCTION_132	IF_2	IF_3	CALL_2
0x1000e	            0xeb37	                           jmp 0x4010087	      9345	normal.c	FUNCTION_132	WHILE_1
0x10010	        0x488b45f8	                mov rax, qword [rbp - 8]	      9347	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x10014	          0x8b4010	            mov eax, dword [rax + 0x10] 	      9347	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x10017	      0xb900000000	                              mov ecx, 0	      9347	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x1001c	      0xba00000000	                              mov edx, 0	      9347	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x10021	      0xbe00000000	                              mov esi, 0	      9347	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x10026	            0x89c7	                            mov edi, eax	      9347	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x10028	      0xe800000000	                          call 0x401006d	      9347	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x1002d	            0x85c0	                           test eax, eax	      9347	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x1002f	            0x7511	                           jne 0x4010082	      9347	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_3
0x10031	        0x488b45f8	                mov rax, qword [rbp - 8]	      9349	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_4
0x10035	          0x488b00	                    mov rax, qword [rax]	      9349	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_4
0x10038	          0x4889c7	                            mov rdi, rax	      9349	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_4
0x1003b	      0xe8a859ffff	                    call sym.clearopbeep	      9349	normal.c	FUNCTION_132	WHILE_1	IF_4	CALL_4
0x10040	            0xeb2e	                           jmp 0x40100b0	      9350	normal.c	FUNCTION_132	WHILE_1	IF_4
0x10042	      0xe800000000	                          call 0x4010087	      9352	normal.c	FUNCTION_132	WHILE_1	CALL_5
0x10047	        0x488b45f8	                mov rax, qword [rbp - 8]	      9345	normal.c	FUNCTION_132	WHILE_1
0x1004b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      9345	normal.c	FUNCTION_132	WHILE_1
0x1004f	        0x488d48ff	                      lea rcx, [rax - 1]	      9345	normal.c	FUNCTION_132	WHILE_1
0x10053	        0x488b55f8	                mov rdx, qword [rbp - 8]	      9345	normal.c	FUNCTION_132	WHILE_1
0x10057	        0x48894a30	             mov qword [rdx + 0x30], rcx	      9345	normal.c	FUNCTION_132	WHILE_1
0x1005b	          0x4885c0	                           test rax, rax	      9345	normal.c	FUNCTION_132	WHILE_1
0x1005e	            0x7410	                            je 0x40100b0	      9345	normal.c	FUNCTION_132	WHILE_1
0x10060	    0x8b0500000000	            mov eax, dword [0x040100a6] 	      9345	normal.c	FUNCTION_132	WHILE_1
0x10066	            0x85c0	                           test eax, eax	      9345	normal.c	FUNCTION_132	WHILE_1
0x10068	            0x74a6	                            je 0x4010050	      9345	normal.c	FUNCTION_132	WHILE_1
0x1006a	            0xeb04	                           jmp 0x40100b0	      9345	normal.c	FUNCTION_132	WHILE_1
0x1006c	              0x90	                                     nop	      9337	normal.c	FUNCTION_132	IF_1
0x1006d	            0xeb01	                           jmp 0x40100b0	      9337	normal.c	FUNCTION_132	IF_1
0x1006f	              0x90	                                     nop	      9342	normal.c	FUNCTION_132	IF_2	IF_3
0x10070	              0xc9	                                   leave	      9354	normal.c	FUNCTION_132
0x10071	              0xc3	                                     ret	      9354	normal.c	FUNCTION_132
nv_redo	CALL,2:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	19
0xea38	              0x55	                                push rbp	      8534	normal.c	FUNCTION_110
0xea39	          0x4889e5	                            mov rbp, rsp	      8534	normal.c	FUNCTION_110
0xea3c	        0x4883ec10	                           sub rsp, 0x10	      8534	normal.c	FUNCTION_110
0xea40	        0x48897df8	                mov qword [rbp - 8], rdi	      8534	normal.c	FUNCTION_110
0xea44	        0x488b45f8	                mov rax, qword [rbp - 8]	      8535	normal.c	FUNCTION_110	IF_1	CALL_1
0xea48	          0x488b00	                    mov rax, qword [rax]	      8535	normal.c	FUNCTION_110	IF_1	CALL_1
0xea4b	          0x4889c7	                            mov rdi, rax	      8535	normal.c	FUNCTION_110	IF_1	CALL_1
0xea4e	      0xe8256fffff	                  call sym.checkclearopq	      8535	normal.c	FUNCTION_110	IF_1	CALL_1
0xea53	            0x85c0	                           test eax, eax	      8535	normal.c	FUNCTION_110	IF_1	CALL_1
0xea55	            0x751d	                           jne 0x400eab4	      8535	normal.c	FUNCTION_110	IF_1	CALL_1
0xea57	        0x488b45f8	                mov rax, qword [rbp - 8]	      8537	normal.c	FUNCTION_110	IF_1	CALL_2
0xea5b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8537	normal.c	FUNCTION_110	IF_1	CALL_2
0xea5f	            0x89c7	                            mov edi, eax	      8537	normal.c	FUNCTION_110	IF_1	CALL_2
0xea61	      0xe800000000	                          call 0x400eaa6	      8537	normal.c	FUNCTION_110	IF_1	CALL_2
0xea66	    0x488b05000000	            mov rax, qword [0x0400eaad] 	      8538	normal.c	FUNCTION_110	IF_1
0xea6d	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8538	normal.c	FUNCTION_110	IF_1
0xea74	              0x90	                                     nop	      8540	normal.c	FUNCTION_110
0xea75	              0xc9	                                   leave	      8540	normal.c	FUNCTION_110
0xea76	              0xc3	                                     ret	      8540	normal.c	FUNCTION_110
n_opencmd	CALL,9:ELSE,1:DO,0:FOR,0:functions,0:IF,6:WHILE,0:SWITCH,0	119
0xe7f0	              0x55	                                push rbp	      8466	normal.c	FUNCTION_108
0xe7f1	          0x4889e5	                            mov rbp, rsp	      8466	normal.c	FUNCTION_108
0xe7f4	        0x4883ec20	                           sub rsp, 0x20	      8466	normal.c	FUNCTION_108
0xe7f8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8466	normal.c	FUNCTION_108
0xe7fc	    0x488b05000000	            mov rax, qword [0x0400e843] 	      8468	normal.c	FUNCTION_108
0xe803	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8468	normal.c	FUNCTION_108
0xe807	        0x488945f8	                mov qword [rbp - 8], rax	      8468	normal.c	FUNCTION_108
0xe80b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8471	normal.c	FUNCTION_108	IF_1	CALL_1
0xe80f	          0x488b00	                    mov rax, qword [rax]	      8471	normal.c	FUNCTION_108	IF_1	CALL_1
0xe812	          0x4889c7	                            mov rdi, rax	      8471	normal.c	FUNCTION_108	IF_1	CALL_1
0xe815	      0xe85e71ffff	                  call sym.checkclearopq	      8471	normal.c	FUNCTION_108	IF_1	CALL_1
0xe81a	            0x85c0	                           test eax, eax	      8471	normal.c	FUNCTION_108	IF_1	CALL_1
0xe81c	     0xf85ac010000	                           jne 0x400ea0e	      8471	normal.c	FUNCTION_108	IF_1	CALL_1
0xe822	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8474	normal.c	FUNCTION_108	IF_1	IF_2
0xe826	          0x8b400c	              mov eax, dword [rax + 0xc]	      8474	normal.c	FUNCTION_108	IF_1	IF_2
0xe829	          0x83f84f	                           cmp eax, 0x4f	      8474	normal.c	FUNCTION_108	IF_1	IF_2
0xe82c	            0x7528	                           jne 0x400e896	      8474	normal.c	FUNCTION_108	IF_1	IF_2
0xe82e	    0x488b05000000	            mov rax, qword [0x0400e875] 	      8477	normal.c	FUNCTION_108	IF_1	IF_2
0xe835	        0x488d4838	                   lea rcx, [rax + 0x38]	      8476	normal.c	FUNCTION_108	IF_1	IF_2	CALL_2
0xe839	    0x488b05000000	            mov rax, qword [0x0400e880] 	      8476	normal.c	FUNCTION_108	IF_1	IF_2	CALL_2
0xe840	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8476	normal.c	FUNCTION_108	IF_1	IF_2	CALL_2
0xe844	      0xba00000000	                              mov edx, 0	      8476	normal.c	FUNCTION_108	IF_1	IF_2	CALL_2
0xe849	          0x4889ce	                            mov rsi, rcx	      8476	normal.c	FUNCTION_108	IF_1	IF_2	CALL_2
0xe84c	          0x4889c7	                            mov rdi, rax	      8476	normal.c	FUNCTION_108	IF_1	IF_2	CALL_2
0xe84f	      0xe800000000	                          call 0x400e894	      8476	normal.c	FUNCTION_108	IF_1	IF_2	CALL_2
0xe854	            0xeb23	                           jmp 0x400e8b9	      8476	normal.c	FUNCTION_108	IF_1	IF_2	CALL_2
0xe856	    0x488b05000000	            mov rax, qword [0x0400e89d] 	      8481	normal.c	FUNCTION_108	IF_1	ELSE_1
0xe85d	        0x488d5038	                   lea rdx, [rax + 0x38]	      8480	normal.c	FUNCTION_108	IF_1	ELSE_1	CALL_3
0xe861	    0x488b05000000	            mov rax, qword [0x0400e8a8] 	      8480	normal.c	FUNCTION_108	IF_1	ELSE_1	CALL_3
0xe868	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8480	normal.c	FUNCTION_108	IF_1	ELSE_1	CALL_3
0xe86c	      0xbe00000000	                              mov esi, 0	      8480	normal.c	FUNCTION_108	IF_1	ELSE_1	CALL_3
0xe871	          0x4889c7	                            mov rdi, rax	      8480	normal.c	FUNCTION_108	IF_1	ELSE_1	CALL_3
0xe874	      0xe800000000	                          call 0x400e8b9	      8480	normal.c	FUNCTION_108	IF_1	ELSE_1	CALL_3
0xe879	    0x488b05000000	            mov rax, qword [0x0400e8c0] 	      8485	normal.c	FUNCTION_108	IF_1	IF_3
0xe880	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      8485	normal.c	FUNCTION_108	IF_1	IF_3
0xe884	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8486	normal.c	FUNCTION_108	IF_1	IF_3
0xe888	          0x8b400c	              mov eax, dword [rax + 0xc]	      8486	normal.c	FUNCTION_108	IF_1	IF_3
0xe88b	          0x83f86f	                           cmp eax, 0x6f	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe88e	            0x7507	                           jne 0x400e8d7	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe890	      0xb801000000	                              mov eax, 1	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe895	            0xeb05	                           jmp 0x400e8dc	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe897	      0xb800000000	                              mov eax, 0	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe89c	          0x4801c2	                            add rdx, rax	      8485	normal.c	FUNCTION_108	IF_1	IF_3
0xe89f	    0x488b05000000	            mov rax, qword [0x0400e8e6] 	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe8a6	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe8aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8484	normal.c	FUNCTION_108	IF_1	IF_3
0xe8ae	          0x8b400c	              mov eax, dword [rax + 0xc]	      8484	normal.c	FUNCTION_108	IF_1	IF_3
0xe8b1	          0x83f84f	                           cmp eax, 0x4f	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe8b4	            0x7507	                           jne 0x400e8fd	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe8b6	      0xb801000000	                              mov eax, 1	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe8bb	            0xeb05	                           jmp 0x400e902	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe8bd	      0xb800000000	                              mov eax, 0	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe8c2	          0x4829c1	                            sub rcx, rax	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe8c5	          0x4889c8	                            mov rax, rcx	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe8c8	          0x4889d6	                            mov rsi, rdx	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe8cb	          0x4889c7	                            mov rdi, rax	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe8ce	      0xe800000000	                          call 0x400e913	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe8d3	          0x83f801	                              cmp eax, 1	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe8d6	     0xf85f2000000	                           jne 0x400ea0e	      8483	normal.c	FUNCTION_108	IF_1	IF_3	CALL_4
0xe8dc	      0xbf6f000000	                           mov edi, 0x6f	      8490	normal.c	FUNCTION_108	IF_1	IF_3	CALL_6
0xe8e1	      0xe800000000	                          call 0x400e926	      8490	normal.c	FUNCTION_108	IF_1	IF_3	CALL_6
0xe8e6	            0x85c0	                           test eax, eax	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe8e8	            0x7407	                            je 0x400e931	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe8ea	      0xb902000000	                              mov ecx, 2	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe8ef	            0xeb05	                           jmp 0x400e936	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe8f1	      0xb900000000	                              mov ecx, 0	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe8f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe8fa	          0x8b400c	              mov eax, dword [rax + 0xc]	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe8fd	          0x83f84f	                           cmp eax, 0x4f	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe900	            0x7507	                           jne 0x400e949	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe902	      0xb8ffffffff	                     mov eax, 0xffffffff	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe907	            0xeb05	                           jmp 0x400e94e	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe909	      0xb801000000	                              mov eax, 1	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe90e	      0xba00000000	                              mov edx, 0	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe913	            0x89ce	                            mov esi, ecx	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe915	            0x89c7	                            mov edi, eax	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe917	      0xe800000000	                          call 0x400e95c	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe91c	            0x85c0	                           test eax, eax	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe91e	     0xf84aa000000	                            je 0x400ea0e	      8488	normal.c	FUNCTION_108	IF_1	IF_3	CALL_5
0xe924	    0x488b05000000	            mov rax, qword [0x0400e96b] 	      8495	normal.c	FUNCTION_108	IF_1	IF_3	IF_4
0xe92b	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      8495	normal.c	FUNCTION_108	IF_1	IF_3	IF_4
0xe932	          0x4885c0	                           test rax, rax	      8495	normal.c	FUNCTION_108	IF_1	IF_3	IF_4
0xe935	            0x7e27	                           jle 0x400e99e	      8495	normal.c	FUNCTION_108	IF_1	IF_3	IF_4
0xe937	    0x488b05000000	            mov rax, qword [0x0400e97e] 	      8495	normal.c	FUNCTION_108	IF_1	IF_3	IF_4
0xe93e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8495	normal.c	FUNCTION_108	IF_1	IF_3	IF_4
0xe942	        0x483b45f8	                cmp rax, qword [rbp - 8]	      8495	normal.c	FUNCTION_108	IF_1	IF_3	IF_4
0xe946	            0x7416	                            je 0x400e99e	      8495	normal.c	FUNCTION_108	IF_1	IF_3	IF_4
0xe948	    0x488b05000000	            mov rax, qword [0x0400e98f] 	      8496	normal.c	FUNCTION_108	IF_1	IF_3	CALL_7
0xe94f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      8496	normal.c	FUNCTION_108	IF_1	IF_3	CALL_7
0xe953	          0x4889d6	                            mov rsi, rdx	      8496	normal.c	FUNCTION_108	IF_1	IF_3	CALL_7
0xe956	          0x4889c7	                            mov rdi, rax	      8496	normal.c	FUNCTION_108	IF_1	IF_3	CALL_7
0xe959	      0xe800000000	                          call 0x400e99e	      8496	normal.c	FUNCTION_108	IF_1	IF_3	CALL_7
0xe95e	    0x488b05000000	            mov rax, qword [0x0400e9a5] 	      8499	normal.c	FUNCTION_108	IF_1	IF_3	IF_5	CALL_8
0xe965	      0xbe23000000	                           mov esi, 0x23	      8499	normal.c	FUNCTION_108	IF_1	IF_3	IF_5	CALL_8
0xe96a	          0x4889c7	                            mov rdi, rax	      8499	normal.c	FUNCTION_108	IF_1	IF_3	IF_5	CALL_8
0xe96d	      0xe800000000	                          call 0x400e9b2	      8499	normal.c	FUNCTION_108	IF_1	IF_3	IF_5	CALL_8
0xe972	          0x4885c0	                           test rax, rax	      8499	normal.c	FUNCTION_108	IF_1	IF_3	IF_5	CALL_8
0xe975	            0x740c	                            je 0x400e9c3	      8499	normal.c	FUNCTION_108	IF_1	IF_3	IF_5	CALL_8
0xe977	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8500	normal.c	FUNCTION_108	IF_1	IF_3	IF_5
0xe97b	    0x48c740300100	               mov qword [rax + 0x30], 1	      8500	normal.c	FUNCTION_108	IF_1	IF_3	IF_5
0xe983	    0x488b05000000	            mov rax, qword [0x0400e9ca] 	      8502	normal.c	FUNCTION_108	IF_1	IF_3	IF_6
0xe98a	    0x8b8070020000	           mov eax, dword [rax + 0x270] 	      8502	normal.c	FUNCTION_108	IF_1	IF_3	IF_6
0xe990	            0x85c0	                           test eax, eax	      8502	normal.c	FUNCTION_108	IF_1	IF_3	IF_6
0xe992	            0x741d	                            je 0x400e9f1	      8502	normal.c	FUNCTION_108	IF_1	IF_3	IF_6
0xe994	    0x488b05000000	            mov rax, qword [0x0400e9db] 	      8504	normal.c	FUNCTION_108	IF_1	IF_3	IF_6
0xe99b	    0x488b15000000	            mov rdx, qword [0x0400e9e2] 	      8504	normal.c	FUNCTION_108	IF_1	IF_3	IF_6
0xe9a2	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      8504	normal.c	FUNCTION_108	IF_1	IF_3	IF_6
0xe9a8	          0x83e2ef	                     and edx, 0xffffffef	      8504	normal.c	FUNCTION_108	IF_1	IF_3	IF_6
0xe9ab	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      8504	normal.c	FUNCTION_108	IF_1	IF_3	IF_6
0xe9b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8506	normal.c	FUNCTION_108	IF_1	IF_3	CALL_9
0xe9b5	          0x8b500c	              mov edx, dword [rax + 0xc]	      8506	normal.c	FUNCTION_108	IF_1	IF_3	CALL_9
0xe9b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8506	normal.c	FUNCTION_108	IF_1	IF_3	CALL_9
0xe9bc	      0xb901000000	                              mov ecx, 1	      8506	normal.c	FUNCTION_108	IF_1	IF_3	CALL_9
0xe9c1	      0xbe00000000	                              mov esi, 0	      8506	normal.c	FUNCTION_108	IF_1	IF_3	CALL_9
0xe9c6	          0x4889c7	                            mov rdi, rax	      8506	normal.c	FUNCTION_108	IF_1	IF_3	CALL_9
0xe9c9	      0xe871120000	                    call sym.invoke_edit	      8506	normal.c	FUNCTION_108	IF_1	IF_3	CALL_9
0xe9ce	              0x90	                                     nop	      8509	normal.c	FUNCTION_108
0xe9cf	              0xc9	                                   leave	      8509	normal.c	FUNCTION_108
0xe9d0	              0xc3	                                     ret	      8509	normal.c	FUNCTION_108
nv_ctrlg	CALL,3:ELSE,1:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	29
0x89cb	              0x55	                                push rbp	      5433	normal.c	FUNCTION_59
0x89cc	          0x4889e5	                            mov rbp, rsp	      5433	normal.c	FUNCTION_59
0x89cf	        0x4883ec10	                           sub rsp, 0x10	      5433	normal.c	FUNCTION_59
0x89d3	        0x48897df8	                mov qword [rbp - 8], rdi	      5433	normal.c	FUNCTION_59
0x89d7	    0x8b0500000000	            mov eax, dword [0x04008a1d] 	      5434	normal.c	FUNCTION_59	IF_1
0x89dd	            0x85c0	                           test eax, eax	      5434	normal.c	FUNCTION_59	IF_1
0x89df	            0x741b	                            je 0x4008a3c	      5434	normal.c	FUNCTION_59	IF_1
0x89e1	    0x8b0500000000	            mov eax, dword [0x04008a27] 	      5436	normal.c	FUNCTION_59	IF_1
0x89e7	            0x85c0	                           test eax, eax	      5436	normal.c	FUNCTION_59	IF_1
0x89e9	           0xf94c0	                                 sete al	      5436	normal.c	FUNCTION_59	IF_1
0x89ec	           0xfb6c0	                           movzx eax, al	      5436	normal.c	FUNCTION_59	IF_1
0x89ef	    0x890500000000	            mov dword [0x04008a35], eax 	      5436	normal.c	FUNCTION_59	IF_1
0x89f5	      0xe800000000	                          call 0x4008a3a	      5437	normal.c	FUNCTION_59	IF_1	CALL_1
0x89fa	            0xeb2c	                           jmp 0x4008a68	      5442	normal.c	FUNCTION_59
0x89fc	        0x488b45f8	                mov rax, qword [rbp - 8]	      5439	normal.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x8a00	          0x488b00	                    mov rax, qword [rax]	      5439	normal.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x8a03	          0x4889c7	                            mov rdi, rax	      5439	normal.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x8a06	      0xe83dcfffff	                   call sym.checkclearop	      5439	normal.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x8a0b	            0x85c0	                           test eax, eax	      5439	normal.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x8a0d	            0x7519	                           jne 0x4008a68	      5439	normal.c	FUNCTION_59	ELSE_1	IF_2	CALL_2
0x8a0f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5441	normal.c	FUNCTION_59	ELSE_1	IF_2
0x8a13	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5441	normal.c	FUNCTION_59	ELSE_1	IF_2
0x8a17	      0xba01000000	                              mov edx, 1	      5441	normal.c	FUNCTION_59	ELSE_1	IF_2
0x8a1c	      0xbe00000000	                              mov esi, 0	      5441	normal.c	FUNCTION_59	ELSE_1	IF_2
0x8a21	            0x89c7	                            mov edi, eax	      5441	normal.c	FUNCTION_59	ELSE_1	IF_2
0x8a23	      0xe800000000	                          call 0x4008a68	      5441	normal.c	FUNCTION_59	ELSE_1	IF_2
0x8a28	              0x90	                                     nop	      5442	normal.c	FUNCTION_59
0x8a29	              0xc9	                                   leave	      5442	normal.c	FUNCTION_59
0x8a2a	              0xc3	                                     ret	      5442	normal.c	FUNCTION_59
unshift_special	CALL,1:ELSE,0:DO,0:FOR,0:functions,0:IF,0:WHILE,0:SWITCH,1	51
0x5a08	              0x55	                                push rbp	      3697	normal.c	FUNCTION_26
0x5a09	          0x4889e5	                            mov rbp, rsp	      3697	normal.c	FUNCTION_26
0x5a0c	        0x4883ec10	                           sub rsp, 0x10	      3697	normal.c	FUNCTION_26
0x5a10	        0x48897df8	                mov qword [rbp - 8], rdi	      3697	normal.c	FUNCTION_26
0x5a14	        0x488b45f8	                mov rax, qword [rbp - 8]	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a18	          0x8b400c	              mov eax, dword [rax + 0xc]	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a1b	      0x3dddcbffff	                     cmp eax, 0xffffcbdd	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a20	            0x743b	                            je 0x4005a9d	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a22	      0x3dddcbffff	                     cmp eax, 0xffffcbdd	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a27	            0x7f10	                            jg 0x4005a79	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a29	      0x3ddb96ffff	                     cmp eax, 0xffff96db	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a2e	            0x7420	                            je 0x4005a90	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a30	      0x3dd6c8ffff	                     cmp eax, 0xffffc8d6	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a35	            0x745a	                            je 0x4005ad1	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a37	            0xeb64	                           jmp 0x4005add	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a39	      0x3d03faffff	                     cmp eax, 0xfffffa03	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a3e	            0x7437	                            je 0x4005ab7	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a40	      0x3d03fbffff	                     cmp eax, 0xfffffb03	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a45	            0x7423	                            je 0x4005aaa	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a47	      0x3dddcdffff	                     cmp eax, 0xffffcddd	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a4c	            0x7436	                            je 0x4005ac4	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a4e	            0xeb4d	                           jmp 0x4005add	      3698	normal.c	FUNCTION_26	SWITCH_1
0x5a50	        0x488b45f8	                mov rax, qword [rbp - 8]	      3700	normal.c	FUNCTION_26	SWITCH_1
0x5a54	    0xc7400c958dff	      mov dword [rax + 0xc], 0xffff8d95 	      3700	normal.c	FUNCTION_26	SWITCH_1
0x5a5b	            0xeb40	                           jmp 0x4005add	      3700	normal.c	FUNCTION_26	SWITCH_1
0x5a5d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3701	normal.c	FUNCTION_26	SWITCH_1
0x5a61	    0xc7400c9593ff	      mov dword [rax + 0xc], 0xffff9395 	      3701	normal.c	FUNCTION_26	SWITCH_1
0x5a68	            0xeb33	                           jmp 0x4005add	      3701	normal.c	FUNCTION_26	SWITCH_1
0x5a6a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3702	normal.c	FUNCTION_26	SWITCH_1
0x5a6e	    0xc7400c958aff	      mov dword [rax + 0xc], 0xffff8a95 	      3702	normal.c	FUNCTION_26	SWITCH_1
0x5a75	            0xeb26	                           jmp 0x4005add	      3702	normal.c	FUNCTION_26	SWITCH_1
0x5a77	        0x488b45f8	                mov rax, qword [rbp - 8]	      3703	normal.c	FUNCTION_26	SWITCH_1
0x5a7b	    0xc7400c959bff	      mov dword [rax + 0xc], 0xffff9b95 	      3703	normal.c	FUNCTION_26	SWITCH_1
0x5a82	            0xeb19	                           jmp 0x4005add	      3703	normal.c	FUNCTION_26	SWITCH_1
0x5a84	        0x488b45f8	                mov rax, qword [rbp - 8]	      3704	normal.c	FUNCTION_26	SWITCH_1
0x5a88	    0xc7400c9597ff	      mov dword [rax + 0xc], 0xffff9795 	      3704	normal.c	FUNCTION_26	SWITCH_1
0x5a8f	            0xeb0c	                           jmp 0x4005add	      3704	normal.c	FUNCTION_26	SWITCH_1
0x5a91	        0x488b45f8	                mov rax, qword [rbp - 8]	      3705	normal.c	FUNCTION_26	SWITCH_1
0x5a95	    0xc7400cc0c8ff	      mov dword [rax + 0xc], 0xffffc8c0 	      3705	normal.c	FUNCTION_26	SWITCH_1
0x5a9c	              0x90	                                     nop	      3705	normal.c	FUNCTION_26	SWITCH_1
0x5a9d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3707	normal.c	FUNCTION_26	CALL_1
0x5aa1	          0x8b400c	              mov eax, dword [rax + 0xc]	      3707	normal.c	FUNCTION_26	CALL_1
0x5aa4	      0xbe00000000	                              mov esi, 0	      3707	normal.c	FUNCTION_26	CALL_1
0x5aa9	            0x89c7	                            mov edi, eax	      3707	normal.c	FUNCTION_26	CALL_1
0x5aab	      0xe800000000	                          call 0x4005af0	      3707	normal.c	FUNCTION_26	CALL_1
0x5ab0	            0x89c2	                            mov edx, eax	      3707	normal.c	FUNCTION_26	CALL_1
0x5ab2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3707	normal.c	FUNCTION_26	CALL_1
0x5ab6	          0x89500c	              mov dword [rax + 0xc], edx	      3707	normal.c	FUNCTION_26	CALL_1
0x5ab9	              0x90	                                     nop	      3708	normal.c	FUNCTION_26
0x5aba	              0xc9	                                   leave	      3708	normal.c	FUNCTION_26
0x5abb	              0xc3	                                     ret	      3708	normal.c	FUNCTION_26
nv_compare	CALL,0:ELSE,0:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	36
0x0	              0x55	                                push rbp	       452	normal.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	       452	normal.c	FUNCTION_1
0x4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       452	normal.c	FUNCTION_1
0x8	        0x488975e0	             mov qword [rbp - 0x20], rsi	       452	normal.c	FUNCTION_1
0xc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       456	normal.c	FUNCTION_1
0x10	           0xfb700	                   movzx eax, word [rax]	       456	normal.c	FUNCTION_1
0x13	              0x98	                                    cwde	       456	normal.c	FUNCTION_1
0x14	          0x4863d0	                         movsxd rdx, eax	       456	normal.c	FUNCTION_1
0x17	          0x4889d0	                            mov rax, rdx	       456	normal.c	FUNCTION_1
0x1a	          0x4801c0	                            add rax, rax	       456	normal.c	FUNCTION_1
0x1d	          0x4801d0	                            add rax, rdx	       456	normal.c	FUNCTION_1
0x20	        0x48c1e003	                              shl rax, 3	       456	normal.c	FUNCTION_1
0x24	    0x480500000000	                              add rax, 0	       456	normal.c	FUNCTION_1
0x2a	            0x8b00	                    mov eax, dword [rax]	       456	normal.c	FUNCTION_1
0x2c	          0x8945f8	                mov dword [rbp - 8], eax	       456	normal.c	FUNCTION_1
0x2f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       457	normal.c	FUNCTION_1
0x33	           0xfb700	                   movzx eax, word [rax]	       457	normal.c	FUNCTION_1
0x36	              0x98	                                    cwde	       457	normal.c	FUNCTION_1
0x37	          0x4863d0	                         movsxd rdx, eax	       457	normal.c	FUNCTION_1
0x3a	          0x4889d0	                            mov rax, rdx	       457	normal.c	FUNCTION_1
0x3d	          0x4801c0	                            add rax, rax	       457	normal.c	FUNCTION_1
0x40	          0x4801d0	                            add rax, rdx	       457	normal.c	FUNCTION_1
0x43	        0x48c1e003	                              shl rax, 3	       457	normal.c	FUNCTION_1
0x47	    0x480500000000	                              add rax, 0	       457	normal.c	FUNCTION_1
0x4d	            0x8b00	                    mov eax, dword [rax]	       457	normal.c	FUNCTION_1
0x4f	          0x8945fc	                mov dword [rbp - 4], eax	       457	normal.c	FUNCTION_1
0x52	        0x837df800	                  cmp dword [rbp - 8], 0	       458	normal.c	FUNCTION_1	IF_1
0x56	            0x7903	                           jns 0x400009b	       458	normal.c	FUNCTION_1	IF_1
0x58	          0xf75df8	                     neg dword [rbp - 8]	       459	normal.c	FUNCTION_1	IF_1
0x5b	        0x837dfc00	                  cmp dword [rbp - 4], 0	       460	normal.c	FUNCTION_1	IF_2
0x5f	            0x7903	                           jns 0x40000a4	       460	normal.c	FUNCTION_1	IF_2
0x61	          0xf75dfc	                     neg dword [rbp - 4]	       461	normal.c	FUNCTION_1	IF_2
0x64	          0x8b45f8	                mov eax, dword [rbp - 8]	       462	normal.c	FUNCTION_1
0x67	          0x2b45fc	                sub eax, dword [rbp - 4]	       462	normal.c	FUNCTION_1
0x6a	              0x5d	                                 pop rbp	       463	normal.c	FUNCTION_1
0x6b	              0xc3	                                     ret	       463	normal.c	FUNCTION_1
is_ident	CALL,0:ELSE,4:DO,0:FOR,1:functions,0:IF,7:WHILE,0:SWITCH,0	110
0x6742	              0x55	                                push rbp	      4250	normal.c	FUNCTION_44
0x6743	          0x4889e5	                            mov rbp, rsp	      4250	normal.c	FUNCTION_44
0x6746	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4250	normal.c	FUNCTION_44
0x674a	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4250	normal.c	FUNCTION_44
0x674d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      4252	normal.c	FUNCTION_44
0x6754	    0xc745f8000000	                  mov dword [rbp - 8], 0	      4253	normal.c	FUNCTION_44
0x675b	    0xc745fc000000	                  mov dword [rbp - 4], 0	      4254	normal.c	FUNCTION_44
0x6762	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      4256	normal.c	FUNCTION_44	FOR_1
0x6769	      0xe905010000	                           jmp 0x40068b3	      4256	normal.c	FUNCTION_44	FOR_1
0x676e	        0x837df800	                  cmp dword [rbp - 8], 0	      4258	normal.c	FUNCTION_44	FOR_1	IF_1
0x6772	            0x7432	                            je 0x40067e6	      4258	normal.c	FUNCTION_44	FOR_1	IF_1
0x6774	        0x837dfc5c	               cmp dword [rbp - 4], 0x5c	      4260	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x6778	     0xf84db000000	                            je 0x4006899	      4260	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x677e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4260	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x6781	          0x4863d0	                         movsxd rdx, eax	      4260	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x6784	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4260	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x6788	          0x4801d0	                            add rax, rdx	      4260	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x678b	           0xfb600	                   movzx eax, byte [rax]	      4260	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x678e	           0xfb6c0	                           movzx eax, al	      4260	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x6791	          0x3b45f8	                cmp eax, dword [rbp - 8]	      4260	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x6794	     0xf85bf000000	                           jne 0x4006899	      4260	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x679a	    0xc745f8000000	                  mov dword [rbp - 8], 0	      4261	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x67a1	      0xe9b3000000	                           jmp 0x4006899	      4261	normal.c	FUNCTION_44	FOR_1	IF_1	IF_2
0x67a6	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67a9	          0x4863d0	                         movsxd rdx, eax	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67b0	          0x4801d0	                            add rax, rdx	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67b3	           0xfb600	                   movzx eax, byte [rax]	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67b6	            0x3c22	                            cmp al, 0x22	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67b8	            0x7414	                            je 0x400680e	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67ba	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67bd	          0x4863d0	                         movsxd rdx, eax	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67c4	          0x4801d0	                            add rax, rdx	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67c7	           0xfb600	                   movzx eax, byte [rax]	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67ca	            0x3c27	                            cmp al, 0x27	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67cc	            0x751e	                           jne 0x400682c	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67ce	        0x837df400	                cmp dword [rbp - 0xc], 0	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67d2	            0x7518	                           jne 0x400682c	      4263	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67d4	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4265	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67d7	          0x4863d0	                         movsxd rdx, eax	      4265	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4265	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67de	          0x4801d0	                            add rax, rdx	      4265	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67e1	           0xfb600	                   movzx eax, byte [rax]	      4265	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67e4	           0xfb6c0	                           movzx eax, al	      4265	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67e7	          0x8945f8	                mov dword [rbp - 8], eax	      4265	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67ea	            0xeb6d	                           jmp 0x4006899	      4265	normal.c	FUNCTION_44	FOR_1	ELSE_1	IF_3
0x67ec	        0x837df400	                cmp dword [rbp - 0xc], 0	      4269	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4
0x67f0	            0x7423	                            je 0x4006855	      4269	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4
0x67f2	        0x837dfc2a	               cmp dword [rbp - 4], 0x2a	      4271	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x67f6	            0x7561	                           jne 0x4006899	      4271	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x67f8	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4271	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x67fb	          0x4863d0	                         movsxd rdx, eax	      4271	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x67fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4271	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x6802	          0x4801d0	                            add rax, rdx	      4271	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x6805	           0xfb600	                   movzx eax, byte [rax]	      4271	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x6808	            0x3c2f	                            cmp al, 0x2f	      4271	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x680a	            0x754d	                           jne 0x4006899	      4271	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x680c	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      4272	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x6813	            0xeb44	                           jmp 0x4006899	      4272	normal.c	FUNCTION_44	FOR_1	ELSE_2	IF_4	IF_5
0x6815	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	      4274	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x6819	            0x751d	                           jne 0x4006878	      4274	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x681b	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4274	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x681e	          0x4863d0	                         movsxd rdx, eax	      4274	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x6821	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4274	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x6825	          0x4801d0	                            add rax, rdx	      4274	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x6828	           0xfb600	                   movzx eax, byte [rax]	      4274	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x682b	            0x3c2a	                            cmp al, 0x2a	      4274	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x682d	            0x7509	                           jne 0x4006878	      4274	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x682f	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      4276	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x6836	            0xeb21	                           jmp 0x4006899	      4276	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_3	IF_6
0x6838	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	      4278	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x683c	            0x751b	                           jne 0x4006899	      4278	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x683e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4278	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x6841	          0x4863d0	                         movsxd rdx, eax	      4278	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x6844	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4278	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x6848	          0x4801d0	                            add rax, rdx	      4278	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x684b	           0xfb600	                   movzx eax, byte [rax]	      4278	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x684e	            0x3c2f	                            cmp al, 0x2f	      4278	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x6850	            0x7507	                           jne 0x4006899	      4278	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x6852	      0xb800000000	                              mov eax, 0	      4280	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x6857	            0xeb53	                           jmp 0x40068ec	      4280	normal.c	FUNCTION_44	FOR_1	ELSE_2	ELSE_4	IF_7
0x6859	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4284	normal.c	FUNCTION_44	FOR_1
0x685c	          0x4863d0	                         movsxd rdx, eax	      4284	normal.c	FUNCTION_44	FOR_1
0x685f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4284	normal.c	FUNCTION_44	FOR_1
0x6863	          0x4801d0	                            add rax, rdx	      4284	normal.c	FUNCTION_44	FOR_1
0x6866	           0xfb600	                   movzx eax, byte [rax]	      4284	normal.c	FUNCTION_44	FOR_1
0x6869	           0xfb6c0	                           movzx eax, al	      4284	normal.c	FUNCTION_44	FOR_1
0x686c	          0x8945fc	                mov dword [rbp - 4], eax	      4284	normal.c	FUNCTION_44	FOR_1
0x686f	        0x8345f001	               add dword [rbp - 0x10], 1	      4256	normal.c	FUNCTION_44	FOR_1
0x6873	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4256	normal.c	FUNCTION_44	FOR_1
0x6876	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      4256	normal.c	FUNCTION_44	FOR_1
0x6879	            0x7d18	                           jge 0x40068d3	      4256	normal.c	FUNCTION_44	FOR_1
0x687b	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4256	normal.c	FUNCTION_44	FOR_1
0x687e	          0x4863d0	                         movsxd rdx, eax	      4256	normal.c	FUNCTION_44	FOR_1
0x6881	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4256	normal.c	FUNCTION_44	FOR_1
0x6885	          0x4801d0	                            add rax, rdx	      4256	normal.c	FUNCTION_44	FOR_1
0x6888	           0xfb600	                   movzx eax, byte [rax]	      4256	normal.c	FUNCTION_44	FOR_1
0x688b	            0x84c0	                             test al, al	      4256	normal.c	FUNCTION_44	FOR_1
0x688d	     0xf85dbfeffff	                           jne 0x40067ae	      4256	normal.c	FUNCTION_44	FOR_1
0x6893	        0x837df400	                cmp dword [rbp - 0xc], 0	      4287	normal.c	FUNCTION_44
0x6897	            0x750d	                           jne 0x40068e6	      4287	normal.c	FUNCTION_44
0x6899	        0x837df800	                  cmp dword [rbp - 8], 0	      4287	normal.c	FUNCTION_44
0x689d	            0x7507	                           jne 0x40068e6	      4287	normal.c	FUNCTION_44
0x689f	      0xb801000000	                              mov eax, 1	      4287	normal.c	FUNCTION_44
0x68a4	            0xeb05	                           jmp 0x40068eb	      4287	normal.c	FUNCTION_44
0x68a6	      0xb800000000	                              mov eax, 0	      4287	normal.c	FUNCTION_44
0x68ab	              0x90	                                     nop	      4287	normal.c	FUNCTION_44
0x68ac	              0x5d	                                 pop rbp	      4288	normal.c	FUNCTION_44
0x68ad	              0xc3	                                     ret	      4288	normal.c	FUNCTION_44
may_start_select	CALL,3:ELSE,0:DO,0:FOR,0:functions,0:IF,0:WHILE,0:SWITCH,0	24
0xd47f	              0x55	                                push rbp	      7784	normal.c	FUNCTION_103
0xd480	          0x4889e5	                            mov rbp, rsp	      7784	normal.c	FUNCTION_103
0xd483	        0x4883ec10	                           sub rsp, 0x10	      7784	normal.c	FUNCTION_103
0xd487	          0x897dfc	                mov dword [rbp - 4], edi	      7784	normal.c	FUNCTION_103
0xd48a	      0xe800000000	                          call 0x400d4cf	      7785	normal.c	FUNCTION_103	CALL_2
0xd48f	            0x85c0	                           test eax, eax	      7786	normal.c	FUNCTION_103	CALL_3
0xd491	            0x7429	                            je 0x400d4fc	      7786	normal.c	FUNCTION_103	CALL_3
0xd493	      0xe800000000	                          call 0x400d4d8	      7785	normal.c	FUNCTION_103	CALL_2
0xd498	            0x85c0	                           test eax, eax	      7785	normal.c	FUNCTION_103	CALL_2
0xd49a	            0x7420	                            je 0x400d4fc	      7785	normal.c	FUNCTION_103	CALL_2
0xd49c	    0x488b05000000	            mov rax, qword [0x0400d4e3] 	      7786	normal.c	FUNCTION_103	CALL_3
0xd4a3	          0x8b55fc	                mov edx, dword [rbp - 4]	      7786	normal.c	FUNCTION_103	CALL_3
0xd4a6	            0x89d6	                            mov esi, edx	      7786	normal.c	FUNCTION_103	CALL_3
0xd4a8	          0x4889c7	                            mov rdi, rax	      7786	normal.c	FUNCTION_103	CALL_3
0xd4ab	      0xe800000000	                          call 0x400d4f0	      7786	normal.c	FUNCTION_103	CALL_3
0xd4b0	          0x4885c0	                           test rax, rax	      7786	normal.c	FUNCTION_103	CALL_3
0xd4b3	            0x7407	                            je 0x400d4fc	      7786	normal.c	FUNCTION_103	CALL_3
0xd4b5	      0xb801000000	                              mov eax, 1	      7786	normal.c	FUNCTION_103	CALL_3
0xd4ba	            0xeb05	                           jmp 0x400d501	      7786	normal.c	FUNCTION_103	CALL_3
0xd4bc	      0xb800000000	                              mov eax, 0	      7786	normal.c	FUNCTION_103	CALL_3
0xd4c1	    0x890500000000	            mov dword [0x0400d507], eax 	      7785	normal.c	FUNCTION_103	CALL_2
0xd4c7	              0x90	                                     nop	      7787	normal.c	FUNCTION_103
0xd4c8	              0xc9	                                   leave	      7787	normal.c	FUNCTION_103
0xd4c9	              0xc3	                                     ret	      7787	normal.c	FUNCTION_103
nv_select	CALL,1:ELSE,1:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	22
0xf412	              0x55	                                push rbp	      8900	normal.c	FUNCTION_124
0xf413	          0x4889e5	                            mov rbp, rsp	      8900	normal.c	FUNCTION_124
0xf416	        0x4883ec10	                           sub rsp, 0x10	      8900	normal.c	FUNCTION_124
0xf41a	        0x48897df8	                mov qword [rbp - 8], rdi	      8900	normal.c	FUNCTION_124
0xf41e	    0x8b0500000000	            mov eax, dword [0x0400f464] 	      8901	normal.c	FUNCTION_124	IF_1
0xf424	            0x85c0	                           test eax, eax	      8901	normal.c	FUNCTION_124	IF_1
0xf426	            0x740c	                            je 0x400f474	      8901	normal.c	FUNCTION_124	IF_1
0xf428	    0xc70500000000	               mov dword [0x0400f472], 1	      8902	normal.c	FUNCTION_124	IF_1
0xf432	            0xeb2c	                           jmp 0x400f4a0	      8909	normal.c	FUNCTION_124
0xf434	    0x8b0500000000	            mov eax, dword [0x0400f47a] 	      8903	normal.c	FUNCTION_124	ELSE_1	IF_2
0xf43a	            0x85c0	                           test eax, eax	      8903	normal.c	FUNCTION_124	ELSE_1	IF_2
0xf43c	            0x7422	                            je 0x400f4a0	      8903	normal.c	FUNCTION_124	ELSE_1	IF_2
0xf43e	        0x488b45f8	                mov rax, qword [rbp - 8]	      8905	normal.c	FUNCTION_124	ELSE_1	IF_2
0xf442	    0xc74010760000	           mov dword [rax + 0x10], 0x76 	      8905	normal.c	FUNCTION_124	ELSE_1	IF_2
0xf449	        0x488b45f8	                mov rax, qword [rbp - 8]	      8906	normal.c	FUNCTION_124	ELSE_1	IF_2
0xf44d	    0xc74038010000	               mov dword [rax + 0x38], 1	      8906	normal.c	FUNCTION_124	ELSE_1	IF_2
0xf454	        0x488b45f8	                mov rax, qword [rbp - 8]	      8907	normal.c	FUNCTION_124	ELSE_1	IF_2	CALL_1
0xf458	          0x4889c7	                            mov rdi, rax	      8907	normal.c	FUNCTION_124	ELSE_1	IF_2	CALL_1
0xf45b	      0xe809e2ffff	                       call sym.nv_g_cmd	      8907	normal.c	FUNCTION_124	ELSE_1	IF_2	CALL_1
0xf460	              0x90	                                     nop	      8909	normal.c	FUNCTION_124
0xf461	              0xc9	                                   leave	      8909	normal.c	FUNCTION_124
0xf462	              0xc3	                                     ret	      8909	normal.c	FUNCTION_124
nv_screengo	CALL,16:ELSE,8:DO,0:FOR,0:functions,0:IF,20:WHILE,1:SWITCH,0	316
0x6d1c	              0x55	                                push rbp	      4458	normal.c	FUNCTION_46
0x6d1d	          0x4889e5	                            mov rbp, rsp	      4458	normal.c	FUNCTION_46
0x6d20	        0x4883ec50	                           sub rsp, 0x50	      4458	normal.c	FUNCTION_46
0x6d24	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4458	normal.c	FUNCTION_46
0x6d28	          0x8975c4	             mov dword [rbp - 0x3c], esi	      4458	normal.c	FUNCTION_46
0x6d2b	        0x488955b8	             mov qword [rbp - 0x48], rdx	      4458	normal.c	FUNCTION_46
0x6d2f	      0xe800000000	                          call 0x4006d74	      4459	normal.c	FUNCTION_46	CALL_2
0x6d34	          0x4889c7	                            mov rdi, rax	      4459	normal.c	FUNCTION_46	CALL_2
0x6d37	      0xe800000000	                          call 0x4006d7c	      4459	normal.c	FUNCTION_46	CALL_2
0x6d3c	          0x8945dc	             mov dword [rbp - 0x24], eax	      4459	normal.c	FUNCTION_46	CALL_2
0x6d3f	    0xc745e0010000	               mov dword [rbp - 0x20], 1	      4460	normal.c	FUNCTION_46
0x6d46	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      4461	normal.c	FUNCTION_46
0x6d4d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4468	normal.c	FUNCTION_46
0x6d51	    0xc74008000000	                  mov dword [rax + 8], 0	      4468	normal.c	FUNCTION_46
0x6d58	    0x488b05000000	            mov rax, qword [0x04006d9f] 	      4469	normal.c	FUNCTION_46
0x6d5f	          0x8b4048	            mov eax, dword [rax + 0x48] 	      4469	normal.c	FUNCTION_46
0x6d62	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      4469	normal.c	FUNCTION_46
0x6d67	           0xf94c0	                                 sete al	      4469	normal.c	FUNCTION_46
0x6d6a	           0xfb6d0	                           movzx edx, al	      4469	normal.c	FUNCTION_46
0x6d6d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4469	normal.c	FUNCTION_46
0x6d71	          0x895014	             mov dword [rax + 0x14], edx	      4469	normal.c	FUNCTION_46
0x6d74	      0xe800000000	                          call 0x4006db9	      4471	normal.c	FUNCTION_46	CALL_3
0x6d79	          0x8945f4	              mov dword [rbp - 0xc], eax	      4471	normal.c	FUNCTION_46	CALL_3
0x6d7c	      0xe800000000	                          call 0x4006dc1	      4472	normal.c	FUNCTION_46	CALL_4
0x6d81	            0x89c2	                            mov edx, eax	      4472	normal.c	FUNCTION_46	CALL_4
0x6d83	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4472	normal.c	FUNCTION_46	CALL_4
0x6d86	            0x29d0	                            sub eax, edx	      4472	normal.c	FUNCTION_46	CALL_4
0x6d88	          0x8945f8	                mov dword [rbp - 8], eax	      4472	normal.c	FUNCTION_46	CALL_4
0x6d8b	    0x488b05000000	            mov rax, qword [0x04006dd2] 	      4473	normal.c	FUNCTION_46
0x6d92	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4473	normal.c	FUNCTION_46
0x6d98	          0x2b45f4	              sub eax, dword [rbp - 0xc]	      4473	normal.c	FUNCTION_46
0x6d9b	          0x8945fc	                mov dword [rbp - 4], eax	      4473	normal.c	FUNCTION_46
0x6d9e	    0x488b05000000	            mov rax, qword [0x04006de5] 	      4474	normal.c	FUNCTION_46
0x6da5	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4474	normal.c	FUNCTION_46
0x6dab	          0x2b45f8	                sub eax, dword [rbp - 8]	      4474	normal.c	FUNCTION_46
0x6dae	          0x8945ec	             mov dword [rbp - 0x14], eax	      4474	normal.c	FUNCTION_46
0x6db1	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4475	normal.c	FUNCTION_46	IF_1
0x6db5	            0x7507	                           jne 0x4006dfe	      4475	normal.c	FUNCTION_46	IF_1
0x6db7	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      4476	normal.c	FUNCTION_46	IF_1
0x6dbe	    0x488b05000000	            mov rax, qword [0x04006e05] 	      4478	normal.c	FUNCTION_46	IF_2
0x6dc5	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4478	normal.c	FUNCTION_46	IF_2
0x6dcb	            0x85c0	                           test eax, eax	      4478	normal.c	FUNCTION_46	IF_2
0x6dcd	     0xf8403030000	                            je 0x4007116	      4478	normal.c	FUNCTION_46	IF_2
0x6dd3	    0x488b05000000	            mov rax, qword [0x04006e1a] 	      4484	normal.c	FUNCTION_46	IF_2	IF_3
0x6dda	          0x8b4048	            mov eax, dword [rax + 0x48] 	      4484	normal.c	FUNCTION_46	IF_2	IF_3
0x6ddd	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      4484	normal.c	FUNCTION_46	IF_2	IF_3
0x6de2	     0xf8598000000	                           jne 0x4006ec0	      4484	normal.c	FUNCTION_46	IF_2	IF_3
0x6de8	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      4486	normal.c	FUNCTION_46	IF_2	IF_3
0x6def	      0xe800000000	                          call 0x4006e34	      4487	normal.c	FUNCTION_46	IF_2	IF_3	CALL_5
0x6df4	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4488	normal.c	FUNCTION_46	IF_2	IF_3	IF_4
0x6df8	            0x7f13	                            jg 0x4006e4d	      4488	normal.c	FUNCTION_46	IF_2	IF_3	IF_4
0x6dfa	    0x488b05000000	            mov rax, qword [0x04006e41] 	      4489	normal.c	FUNCTION_46	IF_2	IF_3	IF_4
0x6e01	    0xc74048000000	               mov dword [rax + 0x48], 0	      4489	normal.c	FUNCTION_46	IF_2	IF_3	IF_4
0x6e08	      0xe9b4020000	                           jmp 0x4007101	      4489	normal.c	FUNCTION_46	IF_2	IF_3	IF_4
0x6e0d	    0x488b05000000	            mov rax, qword [0x04006e54] 	      4492	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1
0x6e14	          0x8b55fc	                mov edx, dword [rbp - 4]	      4492	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1
0x6e17	          0x83ea01	                              sub edx, 1	      4492	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1
0x6e1a	          0x895048	             mov dword [rax + 0x48], edx	      4492	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1
0x6e1d	    0x488b05000000	            mov rax, qword [0x04006e64] 	      4493	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e24	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	      4493	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e2a	    0x488b05000000	            mov rax, qword [0x04006e71] 	      4493	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e31	          0x8b4048	            mov eax, dword [rax + 0x48] 	      4493	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e34	            0x39c2	                            cmp edx, eax	      4493	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e36	     0xf8e85020000	                           jle 0x4007101	      4493	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e3c	    0x488b0d000000	            mov rcx, qword [0x04006e83] 	      4494	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e43	    0x488b05000000	            mov rax, qword [0x04006e8a] 	      4494	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e4a	          0x8b7048	            mov esi, dword [rax + 0x48] 	      4494	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e4d	    0x488b05000000	            mov rax, qword [0x04006e94] 	      4494	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e54	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	      4494	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e5a	    0x488b05000000	            mov rax, qword [0x04006ea1] 	      4495	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e61	          0x8b4048	            mov eax, dword [rax + 0x48] 	      4495	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e64	            0x29c2	                            sub edx, eax	      4495	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e66	            0x89d0	                            mov eax, edx	      4495	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e68	          0x83e801	                              sub eax, 1	      4495	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e6b	              0x99	                                     cdq	      4495	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e6c	          0xf77dec	                 idiv dword [rbp - 0x14]	      4495	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e6f	          0x83c001	                              add eax, 1	      4495	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e72	         0xfaf45ec	            imul eax, dword [rbp - 0x14]	      4495	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e76	             0x1f0	                            add eax, esi	      4494	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e78	          0x894148	             mov dword [rcx + 0x48], eax	      4494	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e7b	      0xe941020000	                           jmp 0x4007101	      4494	normal.c	FUNCTION_46	IF_2	IF_3	ELSE_1	IF_5
0x6e80	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4500	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x6e83	          0x3b45fc	                cmp eax, dword [rbp - 4]	      4500	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x6e86	            0x7e20	                           jle 0x4006ee8	      4500	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x6e88	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4501	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x6e8b	          0x2b45fc	                sub eax, dword [rbp - 4]	      4501	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x6e8e	          0x83e801	                              sub eax, 1	      4501	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x6e91	              0x99	                                     cdq	      4501	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x6e92	          0xf77dec	                 idiv dword [rbp - 0x14]	      4501	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x6e95	          0x83c001	                              add eax, 1	      4501	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x6e98	         0xfaf45ec	            imul eax, dword [rbp - 0x14]	      4501	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x6e9c	            0x89c2	                            mov edx, eax	      4501	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x6e9e	          0x8b45fc	                mov eax, dword [rbp - 4]	      4501	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x6ea1	             0x1d0	                            add eax, edx	      4501	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x6ea3	          0x8945e8	             mov dword [rbp - 0x18], eax	      4501	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x6ea6	            0xeb06	                           jmp 0x4006eee	      4501	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_6
0x6ea8	          0x8b45fc	                mov eax, dword [rbp - 4]	      4503	normal.c	FUNCTION_46	IF_2	ELSE_2	ELSE_3
0x6eab	          0x8945e8	             mov dword [rbp - 0x18], eax	      4503	normal.c	FUNCTION_46	IF_2	ELSE_2	ELSE_3
0x6eae	    0x488b05000000	            mov rax, qword [0x04006ef5] 	      4504	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6eb5	          0x8b4048	            mov eax, dword [rax + 0x48] 	      4504	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6eb8	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      4504	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6ebb	          0x83c201	                              add edx, 1	      4504	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6ebe	            0x39d0	                            cmp eax, edx	      4504	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6ec0	     0xf8efb010000	                           jle 0x4007101	      4504	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6ec6	    0x488b0d000000	            mov rcx, qword [0x04006f0d] 	      4505	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6ecd	    0x488b05000000	            mov rax, qword [0x04006f14] 	      4505	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6ed4	          0x8b7048	            mov esi, dword [rax + 0x48] 	      4505	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6ed7	    0x488b05000000	            mov rax, qword [0x04006f1e] 	      4505	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6ede	          0x8b4048	            mov eax, dword [rax + 0x48] 	      4505	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6ee1	          0x2b45e8	             sub eax, dword [rbp - 0x18]	      4505	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6ee4	              0x99	                                     cdq	      4505	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6ee5	          0xf77dec	                 idiv dword [rbp - 0x14]	      4505	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6ee8	          0x83c001	                              add eax, 1	      4505	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6eeb	         0xfaf45ec	            imul eax, dword [rbp - 0x14]	      4506	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6eef	            0x29c6	                            sub esi, eax	      4505	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6ef1	            0x89f0	                            mov eax, esi	      4505	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6ef3	          0x894148	             mov dword [rcx + 0x48], eax	      4505	normal.c	FUNCTION_46	IF_2	ELSE_2	IF_7
0x6ef6	      0xe9c6010000	                           jmp 0x4007101	      4509	normal.c	FUNCTION_46	IF_2	WHILE_1
0x6efb	        0x837dc4ff	cmp dword [rbp - 0x3c], 0xffffffffffffffff	      4511	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8
0x6eff	     0xf85d9000000	                           jne 0x400701e	      4511	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8
0x6f05	    0x488b05000000	            mov rax, qword [0x04006f4c] 	      4513	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x6f0c	          0x8b4048	            mov eax, dword [rax + 0x48] 	      4513	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x6f0f	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      4513	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x6f12	            0x7c1c	                            jl 0x4006f70	      4513	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x6f14	    0x488b05000000	            mov rax, qword [0x04006f5b] 	      4515	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x6f1b	    0x488b15000000	            mov rdx, qword [0x04006f62] 	      4515	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x6f22	          0x8b5248	            mov edx, dword [rdx + 0x48] 	      4515	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x6f25	          0x2b55ec	             sub edx, dword [rbp - 0x14]	      4515	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x6f28	          0x895048	             mov dword [rax + 0x48], edx	      4515	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x6f2b	      0xe991010000	                           jmp 0x4007101	      4515	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	IF_9
0x6f30	    0x488b05000000	            mov rax, qword [0x04006f77] 	      4519	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_10
0x6f37	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4519	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_10
0x6f3b	        0x4883f801	                              cmp rax, 1	      4519	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_10
0x6f3f	            0x750c	                           jne 0x4006f8d	      4519	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_10
0x6f41	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      4521	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_10
0x6f48	      0xe989010000	                           jmp 0x4007116	      4522	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_10
0x6f4d	    0x488b05000000	            mov rax, qword [0x04006f94] 	      4524	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4
0x6f54	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4524	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4
0x6f58	        0x4883ea01	                              sub rdx, 1	      4524	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4
0x6f5c	        0x48895038	             mov qword [rax + 0x38], rdx	      4524	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4
0x6f60	    0x8b0500000000	            mov eax, dword [0x04006fa6] 	      4528	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11
0x6f66	          0x83e001	                              and eax, 1	      4528	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11
0x6f69	            0x85c0	                           test eax, eax	      4528	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11
0x6f6b	            0x7526	                           jne 0x4006fd3	      4528	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11
0x6f6d	    0x488b05000000	            mov rax, qword [0x04006fb4] 	      4530	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11
0x6f74	        0x488d4838	                   lea rcx, [rax + 0x38]	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11	CALL_6
0x6f78	    0x488b05000000	            mov rax, qword [0x04006fbf] 	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11	CALL_6
0x6f7f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11	CALL_6
0x6f83	      0xba00000000	                              mov edx, 0	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11	CALL_6
0x6f88	          0x4889ce	                            mov rsi, rcx	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11	CALL_6
0x6f8b	          0x4889c7	                            mov rdi, rax	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11	CALL_6
0x6f8e	      0xe800000000	                          call 0x4006fd3	      4529	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_11	CALL_6
0x6f93	      0xe800000000	                          call 0x4006fd8	      4532	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	CALL_8
0x6f98	          0x4889c7	                            mov rdi, rax	      4532	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	CALL_8
0x6f9b	      0xe800000000	                          call 0x4006fe0	      4532	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	CALL_8
0x6fa0	          0x8945dc	             mov dword [rbp - 0x24], eax	      4532	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	CALL_8
0x6fa3	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4533	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6fa6	          0x3b45fc	                cmp eax, dword [rbp - 4]	      4533	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6fa9	     0xf8e12010000	                           jle 0x4007101	      4533	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6faf	    0x488b0d000000	            mov rcx, qword [0x04006ff6] 	      4534	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6fb6	    0x488b05000000	            mov rax, qword [0x04006ffd] 	      4534	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6fbd	          0x8b7048	            mov esi, dword [rax + 0x48] 	      4534	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6fc0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4534	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6fc3	          0x2b45fc	                sub eax, dword [rbp - 4]	      4534	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6fc6	          0x83e801	                              sub eax, 1	      4534	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6fc9	              0x99	                                     cdq	      4534	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6fca	          0xf77dec	                 idiv dword [rbp - 0x14]	      4534	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6fcd	          0x83c001	                              add eax, 1	      4535	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6fd0	         0xfaf45ec	            imul eax, dword [rbp - 0x14]	      4535	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6fd4	             0x1f0	                            add eax, esi	      4534	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6fd6	          0x894148	             mov dword [rcx + 0x48], eax	      4534	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6fd9	      0xe9e3000000	                           jmp 0x4007101	      4534	normal.c	FUNCTION_46	IF_2	WHILE_1	IF_8	ELSE_4	IF_12
0x6fde	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4540	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x6fe1	          0x3b45fc	                cmp eax, dword [rbp - 4]	      4540	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x6fe4	            0x7e20	                           jle 0x4007046	      4540	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x6fe6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4541	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x6fe9	          0x2b45fc	                sub eax, dword [rbp - 4]	      4541	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x6fec	          0x83e801	                              sub eax, 1	      4541	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x6fef	              0x99	                                     cdq	      4541	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x6ff0	          0xf77dec	                 idiv dword [rbp - 0x14]	      4541	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x6ff3	          0x83c001	                              add eax, 1	      4541	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x6ff6	         0xfaf45ec	            imul eax, dword [rbp - 0x14]	      4541	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x6ffa	            0x89c2	                            mov edx, eax	      4541	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x6ffc	          0x8b45fc	                mov eax, dword [rbp - 4]	      4541	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x6fff	             0x1d0	                            add eax, edx	      4541	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x7001	          0x8945e8	             mov dword [rbp - 0x18], eax	      4541	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x7004	            0xeb06	                           jmp 0x400704c	      4541	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_13
0x7006	          0x8b45fc	                mov eax, dword [rbp - 4]	      4543	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_6
0x7009	          0x8945e8	             mov dword [rbp - 0x18], eax	      4543	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_6
0x700c	    0x488b05000000	            mov rax, qword [0x04007053] 	      4544	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x7013	          0x8b5048	            mov edx, dword [rax + 0x48] 	      4544	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x7016	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4544	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x7019	             0x1d0	                            add eax, edx	      4544	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x701b	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      4544	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x701e	            0x7d1e	                           jge 0x400707e	      4544	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x7020	    0x488b05000000	            mov rax, qword [0x04007067] 	      4546	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x7027	    0x488b15000000	            mov rdx, qword [0x0400706e] 	      4546	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x702e	          0x8b4a48	            mov ecx, dword [rdx + 0x48] 	      4546	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x7031	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      4546	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x7034	             0x1ca	                            add edx, ecx	      4546	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x7036	          0x895048	             mov dword [rax + 0x48], edx	      4546	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x7039	      0xe983000000	                           jmp 0x4007101	      4546	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	IF_14
0x703e	    0x488b05000000	            mov rax, qword [0x04007085] 	      4553	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x7045	        0x488d5038	                   lea rdx, [rax + 0x38]	      4552	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_9
0x7049	    0x488b05000000	            mov rax, qword [0x04007090] 	      4552	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_9
0x7050	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4552	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_9
0x7054	      0xbe00000000	                              mov esi, 0	      4552	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_9
0x7059	          0x4889c7	                            mov rdi, rax	      4552	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_9
0x705c	      0xe800000000	                          call 0x40070a1	      4552	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_9
0x7061	    0x488b05000000	            mov rax, qword [0x040070a8] 	      4555	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	IF_15
0x7068	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4555	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	IF_15
0x706c	    0x488b05000000	            mov rax, qword [0x040070b3] 	      4555	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	IF_15
0x7073	          0x488b00	                    mov rax, qword [rax]	      4555	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	IF_15
0x7076	          0x4839c2	                            cmp rdx, rax	      4555	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	IF_15
0x7079	            0x7509	                           jne 0x40070c4	      4555	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	IF_15
0x707b	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      4557	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	IF_15
0x7082	            0xeb52	                           jmp 0x4007116	      4558	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	IF_15
0x7084	    0x488b05000000	            mov rax, qword [0x040070cb] 	      4560	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x708b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4560	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x708f	        0x4883c201	                              add rdx, 1	      4560	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x7093	        0x48895038	             mov qword [rax + 0x38], rdx	      4560	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x7097	    0x488b0d000000	            mov rcx, qword [0x040070de] 	      4561	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x709e	    0x488b05000000	            mov rax, qword [0x040070e5] 	      4561	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x70a5	          0x8b4048	            mov eax, dword [rax + 0x48] 	      4561	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x70a8	              0x99	                                     cdq	      4561	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x70a9	          0xf77dec	                 idiv dword [rbp - 0x14]	      4561	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x70ac	            0x89d0	                            mov eax, edx	      4561	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x70ae	          0x894148	             mov dword [rcx + 0x48], eax	      4561	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7
0x70b1	      0xe800000000	                          call 0x40070f6	      4562	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_11
0x70b6	          0x4889c7	                            mov rdi, rax	      4562	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_11
0x70b9	      0xe800000000	                          call 0x40070fe	      4562	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_11
0x70be	          0x8945dc	             mov dword [rbp - 0x24], eax	      4562	normal.c	FUNCTION_46	IF_2	WHILE_1	ELSE_5	ELSE_7	CALL_11
0x70c1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4509	normal.c	FUNCTION_46	IF_2	WHILE_1
0x70c5	        0x488d50ff	                      lea rdx, [rax - 1]	      4509	normal.c	FUNCTION_46	IF_2	WHILE_1
0x70c9	        0x488955b8	             mov qword [rbp - 0x48], rdx	      4509	normal.c	FUNCTION_46	IF_2	WHILE_1
0x70cd	          0x4885c0	                           test rax, rax	      4509	normal.c	FUNCTION_46	IF_2	WHILE_1
0x70d0	     0xf8525feffff	                           jne 0x4006f3b	      4509	normal.c	FUNCTION_46	IF_2	WHILE_1
0x70d6	      0xe800000000	                          call 0x400711b	      4568	normal.c	FUNCTION_46	IF_16	CALL_12
0x70db	            0x85c0	                           test eax, eax	      4568	normal.c	FUNCTION_46	IF_16	CALL_12
0x70dd	            0x7412	                            je 0x4007131	      4568	normal.c	FUNCTION_46	IF_16	CALL_12
0x70df	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4568	normal.c	FUNCTION_46	IF_16	CALL_12
0x70e3	            0x740c	                            je 0x4007131	      4568	normal.c	FUNCTION_46	IF_16	CALL_12
0x70e5	      0xbfffffff7f	                     mov edi, 0x7fffffff	      4569	normal.c	FUNCTION_46	CALL_13
0x70ea	      0xe800000000	                          call 0x400712f	      4569	normal.c	FUNCTION_46	CALL_13
0x70ef	            0xeb11	                           jmp 0x4007142	      4569	normal.c	FUNCTION_46	CALL_13
0x70f1	    0x488b05000000	            mov rax, qword [0x04007138] 	      4571	normal.c	FUNCTION_46	CALL_14
0x70f8	          0x8b4048	            mov eax, dword [rax + 0x48] 	      4571	normal.c	FUNCTION_46	CALL_14
0x70fb	            0x89c7	                            mov edi, eax	      4571	normal.c	FUNCTION_46	CALL_14
0x70fd	      0xe800000000	                          call 0x4007142	      4571	normal.c	FUNCTION_46	CALL_14
0x7102	    0x488b05000000	            mov rax, qword [0x04007149] 	      4574	normal.c	FUNCTION_46	IF_17
0x7109	          0x8b4040	            mov eax, dword [rax + 0x40] 	      4574	normal.c	FUNCTION_46	IF_17
0x710c	            0x85c0	                           test eax, eax	      4574	normal.c	FUNCTION_46	IF_17
0x710e	     0xf8ec5000000	                           jle 0x4007219	      4574	normal.c	FUNCTION_46	IF_17
0x7114	    0x488b05000000	            mov rax, qword [0x0400715b] 	      4574	normal.c	FUNCTION_46	IF_17
0x711b	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      4574	normal.c	FUNCTION_46	IF_17
0x7121	            0x85c0	                           test eax, eax	      4574	normal.c	FUNCTION_46	IF_17
0x7123	     0xf84b0000000	                            je 0x4007219	      4574	normal.c	FUNCTION_46	IF_17
0x7129	      0xe800000000	                          call 0x400716e	      4583	normal.c	FUNCTION_46	IF_17	CALL_15
0x712e	    0x488b05000000	            mov rax, qword [0x04007175] 	      4584	normal.c	FUNCTION_46	IF_17
0x7135	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      4584	normal.c	FUNCTION_46	IF_17
0x713b	          0x8945f0	             mov dword [rbp - 0x10], eax	      4584	normal.c	FUNCTION_46	IF_17
0x713e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4586	normal.c	FUNCTION_46	IF_17	IF_18
0x7141	          0x3b45fc	                cmp eax, dword [rbp - 4]	      4586	normal.c	FUNCTION_46	IF_17	IF_18
0x7144	            0x7e20	                           jle 0x40071a6	      4586	normal.c	FUNCTION_46	IF_17	IF_18
0x7146	    0x488b05000000	            mov rax, qword [0x0400718d] 	      4586	normal.c	FUNCTION_46	IF_17	IF_18
0x714d	           0xfb600	                   movzx eax, byte [rax]	      4586	normal.c	FUNCTION_46	IF_17	IF_18
0x7150	            0x84c0	                             test al, al	      4586	normal.c	FUNCTION_46	IF_17	IF_18
0x7152	            0x7412	                            je 0x40071a6	      4586	normal.c	FUNCTION_46	IF_17	IF_18
0x7154	    0x488b05000000	            mov rax, qword [0x0400719b] 	      4587	normal.c	FUNCTION_46	IF_17	CALL_16
0x715b	          0x4889c7	                            mov rdi, rax	      4587	normal.c	FUNCTION_46	IF_17	CALL_16
0x715e	      0xe800000000	                          call 0x40071a3	      4587	normal.c	FUNCTION_46	IF_17	CALL_16
0x7163	          0x2945f0	             sub dword [rbp - 0x10], eax	      4587	normal.c	FUNCTION_46	IF_17	CALL_16
0x7166	    0x488b05000000	            mov rax, qword [0x040071ad] 	      4590	normal.c	FUNCTION_46	IF_17	IF_19
0x716d	          0x8b4048	            mov eax, dword [rax + 0x48] 	      4590	normal.c	FUNCTION_46	IF_17	IF_19
0x7170	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      4590	normal.c	FUNCTION_46	IF_17	IF_19
0x7173	            0x7d64	                           jge 0x4007219	      4590	normal.c	FUNCTION_46	IF_17	IF_19
0x7175	    0x488b05000000	            mov rax, qword [0x040071bc] 	      4591	normal.c	FUNCTION_46	IF_17	IF_19
0x717c	          0x8b4048	            mov eax, dword [rax + 0x48] 	      4591	normal.c	FUNCTION_46	IF_17	IF_19
0x717f	          0x3b45fc	                cmp eax, dword [rbp - 4]	      4591	normal.c	FUNCTION_46	IF_17	IF_19
0x7182	            0x7d1d	                           jge 0x40071e1	      4591	normal.c	FUNCTION_46	IF_17	IF_19
0x7184	    0x488b05000000	            mov rax, qword [0x040071cb] 	      4592	normal.c	FUNCTION_46	IF_17	IF_19
0x718b	          0x8b5048	            mov edx, dword [rax + 0x48] 	      4592	normal.c	FUNCTION_46	IF_17	IF_19
0x718e	          0x8b45fc	                mov eax, dword [rbp - 4]	      4592	normal.c	FUNCTION_46	IF_17	IF_19
0x7191	            0x89c1	                            mov ecx, eax	      4592	normal.c	FUNCTION_46	IF_17	IF_19
0x7193	          0xc1e91f	                           shr ecx, 0x1f	      4592	normal.c	FUNCTION_46	IF_17	IF_19
0x7196	             0x1c8	                            add eax, ecx	      4592	normal.c	FUNCTION_46	IF_17	IF_19
0x7198	            0xd1f8	                              sar eax, 1	      4592	normal.c	FUNCTION_46	IF_17	IF_19
0x719a	            0x39c2	                            cmp edx, eax	      4591	normal.c	FUNCTION_46	IF_17	IF_19
0x719c	           0xf9fc0	                                 setg al	      4591	normal.c	FUNCTION_46	IF_17	IF_19
0x719f	            0xeb24	                           jmp 0x4007205	      4591	normal.c	FUNCTION_46	IF_17	IF_19
0x71a1	    0x488b05000000	            mov rax, qword [0x040071e8] 	      4593	normal.c	FUNCTION_46	IF_17	IF_19
0x71a8	          0x8b4048	            mov eax, dword [rax + 0x48] 	      4593	normal.c	FUNCTION_46	IF_17	IF_19
0x71ab	          0x2b45fc	                sub eax, dword [rbp - 4]	      4593	normal.c	FUNCTION_46	IF_17	IF_19
0x71ae	              0x99	                                     cdq	      4593	normal.c	FUNCTION_46	IF_17	IF_19
0x71af	          0xf77dec	                 idiv dword [rbp - 0x14]	      4593	normal.c	FUNCTION_46	IF_17	IF_19
0x71b2	            0x89d1	                            mov ecx, edx	      4593	normal.c	FUNCTION_46	IF_17	IF_19
0x71b4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4594	normal.c	FUNCTION_46	IF_17	IF_19
0x71b7	            0x89c2	                            mov edx, eax	      4594	normal.c	FUNCTION_46	IF_17	IF_19
0x71b9	          0xc1ea1f	                           shr edx, 0x1f	      4594	normal.c	FUNCTION_46	IF_17	IF_19
0x71bc	             0x1d0	                            add eax, edx	      4594	normal.c	FUNCTION_46	IF_17	IF_19
0x71be	            0xd1f8	                              sar eax, 1	      4594	normal.c	FUNCTION_46	IF_17	IF_19
0x71c0	            0x39c1	                            cmp ecx, eax	      4591	normal.c	FUNCTION_46	IF_17	IF_19
0x71c2	           0xf9fc0	                                 setg al	      4591	normal.c	FUNCTION_46	IF_17	IF_19
0x71c5	            0x84c0	                             test al, al	      4591	normal.c	FUNCTION_46	IF_17	IF_19
0x71c7	            0x7410	                            je 0x4007219	      4591	normal.c	FUNCTION_46	IF_17	IF_19
0x71c9	    0x488b05000000	            mov rax, qword [0x04007210] 	      4595	normal.c	FUNCTION_46	IF_17	IF_19
0x71d0	          0x8b5040	            mov edx, dword [rax + 0x40] 	      4595	normal.c	FUNCTION_46	IF_17	IF_19
0x71d3	          0x83ea01	                              sub edx, 1	      4595	normal.c	FUNCTION_46	IF_17	IF_19
0x71d6	          0x895040	             mov dword [rax + 0x40], edx	      4595	normal.c	FUNCTION_46	IF_17	IF_19
0x71d9	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4599	normal.c	FUNCTION_46	IF_20
0x71dd	            0x740e	                            je 0x400722d	      4599	normal.c	FUNCTION_46	IF_20
0x71df	    0x488b05000000	            mov rax, qword [0x04007226] 	      4600	normal.c	FUNCTION_46	IF_20
0x71e6	    0xc74048ffffff	     mov dword [rax + 0x48], 0x7fffffff 	      4600	normal.c	FUNCTION_46	IF_20
0x71ed	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4602	normal.c	FUNCTION_46
0x71f0	              0xc9	                                   leave	      4603	normal.c	FUNCTION_46
0x71f1	              0xc3	                                     ret	      4603	normal.c	FUNCTION_46
find_start_of_word	CALL,3:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,1:SWITCH,0	52
0x4ca4	              0x55	                                push rbp	      3187	normal.c	FUNCTION_10
0x4ca5	          0x4889e5	                            mov rbp, rsp	      3187	normal.c	FUNCTION_10
0x4ca8	        0x4883ec20	                           sub rsp, 0x20	      3187	normal.c	FUNCTION_10
0x4cac	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3187	normal.c	FUNCTION_10
0x4cb0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3192	normal.c	FUNCTION_10	CALL_1
0x4cb4	          0x488b00	                    mov rax, qword [rax]	      3192	normal.c	FUNCTION_10	CALL_1
0x4cb7	          0x4889c7	                            mov rdi, rax	      3192	normal.c	FUNCTION_10	CALL_1
0x4cba	      0xe800000000	                          call 0x4004cff	      3192	normal.c	FUNCTION_10	CALL_1
0x4cbf	        0x488945f8	                mov qword [rbp - 8], rax	      3192	normal.c	FUNCTION_10	CALL_1
0x4cc3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3193	normal.c	FUNCTION_10	CALL_2
0x4cc7	          0x8b4008	                mov eax, dword [rax + 8]	      3193	normal.c	FUNCTION_10	CALL_2
0x4cca	          0x4863d0	                         movsxd rdx, eax	      3193	normal.c	FUNCTION_10	CALL_2
0x4ccd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3193	normal.c	FUNCTION_10	CALL_2
0x4cd1	          0x4801d0	                            add rax, rdx	      3193	normal.c	FUNCTION_10	CALL_2
0x4cd4	          0x4889c7	                            mov rdi, rax	      3193	normal.c	FUNCTION_10	CALL_2
0x4cd7	      0xe894010000	                call sym.get_mouse_class	      3193	normal.c	FUNCTION_10	CALL_2
0x4cdc	          0x8945f0	             mov dword [rbp - 0x10], eax	      3193	normal.c	FUNCTION_10	CALL_2
0x4cdf	            0xeb54	                           jmp 0x4004d75	      3195	normal.c	FUNCTION_10	WHILE_1
0x4ce1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3197	normal.c	FUNCTION_10	WHILE_1
0x4ce5	          0x8b4008	                mov eax, dword [rax + 8]	      3197	normal.c	FUNCTION_10	WHILE_1
0x4ce8	          0x83e801	                              sub eax, 1	      3197	normal.c	FUNCTION_10	WHILE_1
0x4ceb	          0x8945f4	              mov dword [rbp - 0xc], eax	      3197	normal.c	FUNCTION_10	WHILE_1
0x4cee	    0x488b05000000	            mov rax, qword [0x04004d35] 	      3199	normal.c	FUNCTION_10	WHILE_1
0x4cf5	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3199	normal.c	FUNCTION_10	WHILE_1
0x4cf8	          0x4863ca	                         movsxd rcx, edx	      3199	normal.c	FUNCTION_10	WHILE_1
0x4cfb	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3199	normal.c	FUNCTION_10	WHILE_1
0x4cff	          0x4801d1	                            add rcx, rdx	      3199	normal.c	FUNCTION_10	WHILE_1
0x4d02	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3199	normal.c	FUNCTION_10	WHILE_1
0x4d06	          0x4889ce	                            mov rsi, rcx	      3199	normal.c	FUNCTION_10	WHILE_1
0x4d09	          0x4889d7	                            mov rdi, rdx	      3199	normal.c	FUNCTION_10	WHILE_1
0x4d0c	            0xffd0	                                call rax	      3199	normal.c	FUNCTION_10	WHILE_1
0x4d0e	          0x2945f4	              sub dword [rbp - 0xc], eax	      3199	normal.c	FUNCTION_10	WHILE_1
0x4d11	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3201	normal.c	FUNCTION_10	WHILE_1	IF_1	CALL_3
0x4d14	          0x4863d0	                         movsxd rdx, eax	      3201	normal.c	FUNCTION_10	WHILE_1	IF_1	CALL_3
0x4d17	        0x488b45f8	                mov rax, qword [rbp - 8]	      3201	normal.c	FUNCTION_10	WHILE_1	IF_1	CALL_3
0x4d1b	          0x4801d0	                            add rax, rdx	      3201	normal.c	FUNCTION_10	WHILE_1	IF_1	CALL_3
0x4d1e	          0x4889c7	                            mov rdi, rax	      3201	normal.c	FUNCTION_10	WHILE_1	IF_1	CALL_3
0x4d21	      0xe84a010000	                call sym.get_mouse_class	      3201	normal.c	FUNCTION_10	WHILE_1	IF_1	CALL_3
0x4d26	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      3201	normal.c	FUNCTION_10	WHILE_1	IF_1	CALL_3
0x4d29	            0x7517	                           jne 0x4004d82	      3201	normal.c	FUNCTION_10	WHILE_1	IF_1	CALL_3
0x4d2b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3203	normal.c	FUNCTION_10	WHILE_1
0x4d2f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3203	normal.c	FUNCTION_10	WHILE_1
0x4d32	          0x895008	                mov dword [rax + 8], edx	      3203	normal.c	FUNCTION_10	WHILE_1
0x4d35	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3195	normal.c	FUNCTION_10	WHILE_1
0x4d39	          0x8b4008	                mov eax, dword [rax + 8]	      3195	normal.c	FUNCTION_10	WHILE_1
0x4d3c	            0x85c0	                           test eax, eax	      3195	normal.c	FUNCTION_10	WHILE_1
0x4d3e	            0x7fa1	                            jg 0x4004d21	      3195	normal.c	FUNCTION_10	WHILE_1
0x4d40	            0xeb01	                           jmp 0x4004d83	      3205	normal.c	FUNCTION_10
0x4d42	              0x90	                                     nop	      3202	normal.c	FUNCTION_10	WHILE_1	IF_1
0x4d43	              0x90	                                     nop	      3205	normal.c	FUNCTION_10
0x4d44	              0xc9	                                   leave	      3205	normal.c	FUNCTION_10
0x4d45	              0xc3	                                     ret	      3205	normal.c	FUNCTION_10
nv_findpar	CALL,3:ELSE,1:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	51
0xbb9f	              0x55	                                push rbp	      6936	normal.c	FUNCTION_85
0xbba0	          0x4889e5	                            mov rbp, rsp	      6936	normal.c	FUNCTION_85
0xbba3	        0x4883ec10	                           sub rsp, 0x10	      6936	normal.c	FUNCTION_85
0xbba7	        0x48897df8	                mov qword [rbp - 8], rdi	      6936	normal.c	FUNCTION_85
0xbbab	        0x488b45f8	                mov rax, qword [rbp - 8]	      6937	normal.c	FUNCTION_85
0xbbaf	          0x488b00	                    mov rax, qword [rax]	      6937	normal.c	FUNCTION_85
0xbbb2	    0xc74008000000	                  mov dword [rax + 8], 0	      6937	normal.c	FUNCTION_85
0xbbb9	        0x488b45f8	                mov rax, qword [rbp - 8]	      6938	normal.c	FUNCTION_85
0xbbbd	          0x488b00	                    mov rax, qword [rax]	      6938	normal.c	FUNCTION_85
0xbbc0	    0xc74014000000	               mov dword [rax + 0x14], 0	      6938	normal.c	FUNCTION_85
0xbbc7	        0x488b45f8	                mov rax, qword [rbp - 8]	      6939	normal.c	FUNCTION_85
0xbbcb	          0x488b00	                    mov rax, qword [rax]	      6939	normal.c	FUNCTION_85
0xbbce	    0xc74010010000	               mov dword [rax + 0x10], 1	      6939	normal.c	FUNCTION_85
0xbbd5	    0x488b05000000	            mov rax, qword [0x0400bc1c] 	      6940	normal.c	FUNCTION_85
0xbbdc	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6940	normal.c	FUNCTION_85
0xbbe3	        0x488b45f8	                mov rax, qword [rbp - 8]	      6941	normal.c	FUNCTION_85	IF_1	CALL_1
0xbbe7	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6941	normal.c	FUNCTION_85	IF_1	CALL_1
0xbbeb	        0x488b45f8	                mov rax, qword [rbp - 8]	      6941	normal.c	FUNCTION_85	IF_1	CALL_1
0xbbef	          0x8b4038	            mov eax, dword [rax + 0x38] 	      6941	normal.c	FUNCTION_85	IF_1	CALL_1
0xbbf2	        0x488b4df8	                mov rcx, qword [rbp - 8]	      6941	normal.c	FUNCTION_85	IF_1	CALL_1
0xbbf6	          0x488b09	                    mov rcx, qword [rcx]	      6941	normal.c	FUNCTION_85	IF_1	CALL_1
0xbbf9	        0x488d7914	                   lea rdi, [rcx + 0x14]	      6941	normal.c	FUNCTION_85	IF_1	CALL_1
0xbbfd	    0x41b800000000	                              mov r8d, 0	      6941	normal.c	FUNCTION_85	IF_1	CALL_1
0xbc03	      0xb900000000	                              mov ecx, 0	      6941	normal.c	FUNCTION_85	IF_1	CALL_1
0xbc08	            0x89c6	                            mov esi, eax	      6941	normal.c	FUNCTION_85	IF_1	CALL_1
0xbc0a	      0xe800000000	                          call 0x400bc4f	      6941	normal.c	FUNCTION_85	IF_1	CALL_1
0xbc0f	            0x85c0	                           test eax, eax	      6941	normal.c	FUNCTION_85	IF_1	CALL_1
0xbc11	            0x7511	                           jne 0x400bc64	      6941	normal.c	FUNCTION_85	IF_1	CALL_1
0xbc13	        0x488b45f8	                mov rax, qword [rbp - 8]	      6942	normal.c	FUNCTION_85	CALL_2
0xbc17	          0x488b00	                    mov rax, qword [rax]	      6942	normal.c	FUNCTION_85	CALL_2
0xbc1a	          0x4889c7	                            mov rdi, rax	      6942	normal.c	FUNCTION_85	CALL_2
0xbc1d	      0xe8c69dffff	                    call sym.clearopbeep	      6942	normal.c	FUNCTION_85	CALL_2
0xbc22	            0xeb37	                           jmp 0x400bc9b	      6953	normal.c	FUNCTION_85
0xbc24	    0x488b05000000	            mov rax, qword [0x0400bc6b] 	      6946	normal.c	FUNCTION_85	ELSE_1
0xbc2b	    0xc74044000000	               mov dword [rax + 0x44], 0	      6946	normal.c	FUNCTION_85	ELSE_1
0xbc32	    0x8b0500000000	            mov eax, dword [0x0400bc78] 	      6949	normal.c	FUNCTION_85	ELSE_1	IF_2
0xbc38	          0x83e002	                              and eax, 2	      6949	normal.c	FUNCTION_85	ELSE_1	IF_2
0xbc3b	            0x85c0	                           test eax, eax	      6949	normal.c	FUNCTION_85	ELSE_1	IF_2
0xbc3d	            0x741c	                            je 0x400bc9b	      6949	normal.c	FUNCTION_85	ELSE_1	IF_2
0xbc3f	    0x8b0500000000	            mov eax, dword [0x0400bc85] 	      6949	normal.c	FUNCTION_85	ELSE_1	IF_2
0xbc45	            0x85c0	                           test eax, eax	      6949	normal.c	FUNCTION_85	ELSE_1	IF_2
0xbc47	            0x7412	                            je 0x400bc9b	      6949	normal.c	FUNCTION_85	ELSE_1	IF_2
0xbc49	        0x488b45f8	                mov rax, qword [rbp - 8]	      6949	normal.c	FUNCTION_85	ELSE_1	IF_2
0xbc4d	          0x488b00	                    mov rax, qword [rax]	      6949	normal.c	FUNCTION_85	ELSE_1	IF_2
0xbc50	            0x8b00	                    mov eax, dword [rax]	      6949	normal.c	FUNCTION_85	ELSE_1	IF_2
0xbc52	            0x85c0	                           test eax, eax	      6949	normal.c	FUNCTION_85	ELSE_1	IF_2
0xbc54	            0x7505	                           jne 0x400bc9b	      6949	normal.c	FUNCTION_85	ELSE_1	IF_2
0xbc56	      0xe800000000	                          call 0x400bc9b	      6950	normal.c	FUNCTION_85	ELSE_1	CALL_3
0xbc5b	              0x90	                                     nop	      6953	normal.c	FUNCTION_85
0xbc5c	              0xc9	                                   leave	      6953	normal.c	FUNCTION_85
0xbc5d	              0xc3	                                     ret	      6953	normal.c	FUNCTION_85
nv_nop	CALL,0:ELSE,0:DO,0:FOR,0:functions,0:IF,0:WHILE,0:SWITCH,0	6
0x651f	              0x55	                                push rbp	      4160	normal.c	FUNCTION_38
0x6520	          0x4889e5	                            mov rbp, rsp	      4160	normal.c	FUNCTION_38
0x6523	        0x48897df8	                mov qword [rbp - 8], rdi	      4160	normal.c	FUNCTION_38
0x6527	              0x90	                                     nop	      4161	normal.c	FUNCTION_38
0x6528	              0x5d	                                 pop rbp	      4161	normal.c	FUNCTION_38
0x6529	              0xc3	                                     ret	      4161	normal.c	FUNCTION_38
nv_halfpage	CALL,3:ELSE,1:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	46
0x10072	              0x55	                                push rbp	      9361	normal.c	FUNCTION_133
0x10073	          0x4889e5	                            mov rbp, rsp	      9361	normal.c	FUNCTION_133
0x10076	        0x4883ec10	                           sub rsp, 0x10	      9361	normal.c	FUNCTION_133
0x1007a	        0x48897df8	                mov qword [rbp - 8], rdi	      9361	normal.c	FUNCTION_133
0x1007e	        0x488b45f8	                mov rax, qword [rbp - 8]	      9362	normal.c	FUNCTION_133	IF_1
0x10082	          0x8b400c	              mov eax, dword [rax + 0xc]	      9362	normal.c	FUNCTION_133	IF_1
0x10085	          0x83f815	                           cmp eax, 0x15	      9362	normal.c	FUNCTION_133	IF_1
0x10088	            0x7511	                           jne 0x40100db	      9362	normal.c	FUNCTION_133	IF_1
0x1008a	    0x488b05000000	            mov rax, qword [0x040100d1] 	      9362	normal.c	FUNCTION_133	IF_1
0x10091	        0x488b4038	            mov rax, qword [rax + 0x38] 	      9362	normal.c	FUNCTION_133	IF_1
0x10095	        0x4883f801	                              cmp rax, 1	      9362	normal.c	FUNCTION_133	IF_1
0x10099	            0x7426	                            je 0x4010101	      9362	normal.c	FUNCTION_133	IF_1
0x1009b	        0x488b45f8	                mov rax, qword [rbp - 8]	      9363	normal.c	FUNCTION_133	IF_1
0x1009f	          0x8b400c	              mov eax, dword [rax + 0xc]	      9363	normal.c	FUNCTION_133	IF_1
0x100a2	          0x83f804	                              cmp eax, 4	      9363	normal.c	FUNCTION_133	IF_1
0x100a5	            0x752b	                           jne 0x4010112	      9363	normal.c	FUNCTION_133	IF_1
0x100a7	    0x488b05000000	            mov rax, qword [0x040100ee] 	      9364	normal.c	FUNCTION_133	IF_1
0x100ae	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      9364	normal.c	FUNCTION_133	IF_1
0x100b2	    0x488b05000000	            mov rax, qword [0x040100f9] 	      9364	normal.c	FUNCTION_133	IF_1
0x100b9	          0x488b00	                    mov rax, qword [rax]	      9364	normal.c	FUNCTION_133	IF_1
0x100bc	          0x4839c2	                            cmp rdx, rax	      9364	normal.c	FUNCTION_133	IF_1
0x100bf	            0x7511	                           jne 0x4010112	      9364	normal.c	FUNCTION_133	IF_1
0x100c1	        0x488b45f8	                mov rax, qword [rbp - 8]	      9365	normal.c	FUNCTION_133	CALL_1
0x100c5	          0x488b00	                    mov rax, qword [rax]	      9365	normal.c	FUNCTION_133	CALL_1
0x100c8	          0x4889c7	                            mov rdi, rax	      9365	normal.c	FUNCTION_133	CALL_1
0x100cb	      0xe81859ffff	                    call sym.clearopbeep	      9365	normal.c	FUNCTION_133	CALL_1
0x100d0	            0xeb35	                           jmp 0x4010147	      9368	normal.c	FUNCTION_133
0x100d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      9366	normal.c	FUNCTION_133	ELSE_1	IF_2	CALL_2
0x100d6	          0x488b00	                    mov rax, qword [rax]	      9366	normal.c	FUNCTION_133	ELSE_1	IF_2	CALL_2
0x100d9	          0x4889c7	                            mov rdi, rax	      9366	normal.c	FUNCTION_133	ELSE_1	IF_2	CALL_2
0x100dc	      0xe86758ffff	                   call sym.checkclearop	      9366	normal.c	FUNCTION_133	ELSE_1	IF_2	CALL_2
0x100e1	            0x85c0	                           test eax, eax	      9366	normal.c	FUNCTION_133	ELSE_1	IF_2	CALL_2
0x100e3	            0x7522	                           jne 0x4010147	      9366	normal.c	FUNCTION_133	ELSE_1	IF_2	CALL_2
0x100e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      9367	normal.c	FUNCTION_133	ELSE_1	IF_2
0x100e9	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      9367	normal.c	FUNCTION_133	ELSE_1	IF_2
0x100ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      9367	normal.c	FUNCTION_133	ELSE_1	IF_2
0x100f1	          0x8b400c	              mov eax, dword [rax + 0xc]	      9367	normal.c	FUNCTION_133	ELSE_1	IF_2
0x100f4	          0x83f804	                              cmp eax, 4	      9367	normal.c	FUNCTION_133	ELSE_1	IF_2
0x100f7	           0xf94c0	                                 sete al	      9367	normal.c	FUNCTION_133	ELSE_1	IF_2
0x100fa	           0xfb6c0	                           movzx eax, al	      9367	normal.c	FUNCTION_133	ELSE_1	IF_2
0x100fd	          0x4889d6	                            mov rsi, rdx	      9367	normal.c	FUNCTION_133	ELSE_1	IF_2
0x10100	            0x89c7	                            mov edi, eax	      9367	normal.c	FUNCTION_133	ELSE_1	IF_2
0x10102	      0xe800000000	                          call 0x4010147	      9367	normal.c	FUNCTION_133	ELSE_1	IF_2
0x10107	              0x90	                                     nop	      9368	normal.c	FUNCTION_133
0x10108	              0xc9	                                   leave	      9368	normal.c	FUNCTION_133
0x10109	              0xc3	                                     ret	      9368	normal.c	FUNCTION_133
nv_visual	CALL,16:ELSE,7:DO,0:FOR,0:functions,0:IF,18:WHILE,0:SWITCH,0	213
0xd0f0	              0x55	                                push rbp	      7665	normal.c	FUNCTION_101
0xd0f1	          0x4889e5	                            mov rbp, rsp	      7665	normal.c	FUNCTION_101
0xd0f4	        0x4883ec10	                           sub rsp, 0x10	      7665	normal.c	FUNCTION_101
0xd0f8	        0x48897df8	                mov qword [rbp - 8], rdi	      7665	normal.c	FUNCTION_101
0xd0fc	        0x488b45f8	                mov rax, qword [rbp - 8]	      7666	normal.c	FUNCTION_101	IF_1
0xd100	          0x8b400c	              mov eax, dword [rax + 0xc]	      7666	normal.c	FUNCTION_101	IF_1
0xd103	          0x83f811	                           cmp eax, 0x11	      7666	normal.c	FUNCTION_101	IF_1
0xd106	            0x750b	                           jne 0x400d153	      7666	normal.c	FUNCTION_101	IF_1
0xd108	        0x488b45f8	                mov rax, qword [rbp - 8]	      7667	normal.c	FUNCTION_101	IF_1
0xd10c	    0xc7400c160000	            mov dword [rax + 0xc], 0x16 	      7667	normal.c	FUNCTION_101	IF_1
0xd113	        0x488b45f8	                mov rax, qword [rbp - 8]	      7671	normal.c	FUNCTION_101	IF_2
0xd117	          0x488b00	                    mov rax, qword [rax]	      7671	normal.c	FUNCTION_101	IF_2
0xd11a	            0x8b00	                    mov eax, dword [rax]	      7671	normal.c	FUNCTION_101	IF_2
0xd11c	            0x85c0	                           test eax, eax	      7671	normal.c	FUNCTION_101	IF_2
0xd11e	            0x7420	                            je 0x400d180	      7671	normal.c	FUNCTION_101	IF_2
0xd120	        0x488b45f8	                mov rax, qword [rbp - 8]	      7673	normal.c	FUNCTION_101	IF_2
0xd124	          0x488b00	                    mov rax, qword [rax]	      7673	normal.c	FUNCTION_101	IF_2
0xd127	        0x488b55f8	                mov rdx, qword [rbp - 8]	      7673	normal.c	FUNCTION_101	IF_2
0xd12b	          0x8b520c	              mov edx, dword [rdx + 0xc]	      7673	normal.c	FUNCTION_101	IF_2
0xd12e	          0x89500c	              mov dword [rax + 0xc], edx	      7673	normal.c	FUNCTION_101	IF_2
0xd131	    0xc70500000000	               mov dword [0x0400d17b], 0	      7674	normal.c	FUNCTION_101	IF_2
0xd13b	      0xe922030000	                           jmp 0x400d4a2	      7675	normal.c	FUNCTION_101	IF_2
0xd140	        0x488b45f8	                mov rax, qword [rbp - 8]	      7678	normal.c	FUNCTION_101
0xd144	          0x8b4038	            mov eax, dword [rax + 0x38] 	      7678	normal.c	FUNCTION_101
0xd147	    0x890500000000	            mov dword [0x0400d18d], eax 	      7678	normal.c	FUNCTION_101
0xd14d	    0x8b0500000000	            mov eax, dword [0x0400d193] 	      7679	normal.c	FUNCTION_101	IF_3
0xd153	            0x85c0	                           test eax, eax	      7679	normal.c	FUNCTION_101	IF_3
0xd155	            0x7439	                            je 0x400d1d0	      7679	normal.c	FUNCTION_101	IF_3
0xd157	        0x488b45f8	                mov rax, qword [rbp - 8]	      7681	normal.c	FUNCTION_101	IF_3	IF_4
0xd15b	          0x8b500c	              mov edx, dword [rax + 0xc]	      7681	normal.c	FUNCTION_101	IF_3	IF_4
0xd15e	    0x8b0500000000	            mov eax, dword [0x0400d1a4] 	      7681	normal.c	FUNCTION_101	IF_3	IF_4
0xd164	            0x39c2	                            cmp edx, eax	      7681	normal.c	FUNCTION_101	IF_3	IF_4
0xd166	            0x7507	                           jne 0x400d1af	      7681	normal.c	FUNCTION_101	IF_3	IF_4
0xd168	      0xe800000000	                          call 0x400d1ad	      7682	normal.c	FUNCTION_101	IF_3	CALL_1
0xd16d	            0xeb12	                           jmp 0x400d1c1	      7682	normal.c	FUNCTION_101	IF_3	CALL_1
0xd16f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7685	normal.c	FUNCTION_101	IF_3	ELSE_1
0xd173	          0x8b400c	              mov eax, dword [rax + 0xc]	      7685	normal.c	FUNCTION_101	IF_3	ELSE_1
0xd176	    0x890500000000	            mov dword [0x0400d1bc], eax 	      7685	normal.c	FUNCTION_101	IF_3	ELSE_1
0xd17c	      0xe800000000	                          call 0x400d1c1	      7686	normal.c	FUNCTION_101	IF_3	ELSE_1	CALL_2
0xd181	      0xbf14000000	                           mov edi, 0x14	      7688	normal.c	FUNCTION_101	IF_3	CALL_3
0xd186	      0xe800000000	                          call 0x400d1cb	      7688	normal.c	FUNCTION_101	IF_3	CALL_3
0xd18b	      0xe9d2020000	                           jmp 0x400d4a2	      7688	normal.c	FUNCTION_101	IF_3	CALL_3
0xd190	      0xe800000000	                          call 0x400d1d5	      7692	normal.c	FUNCTION_101	ELSE_2	CALL_4
0xd195	        0x488b45f8	                mov rax, qword [rbp - 8]	      7693	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd199	        0x488b4028	            mov rax, qword [rax + 0x28] 	      7693	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd19d	          0x4885c0	                           test rax, rax	      7693	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd1a0	     0xf8e03020000	                           jle 0x400d3e9	      7693	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd1a6	    0x8b0500000000	            mov eax, dword [0x0400d1ec] 	      7693	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd1ac	            0x85c0	                           test eax, eax	      7693	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd1ae	     0xf84f5010000	                            je 0x400d3e9	      7693	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd1b4	    0x488b05000000	            mov rax, qword [0x0400d1fb] 	      7696	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd1bb	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7696	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd1bf	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7696	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd1c3	    0x488905000000	            mov qword [0x0400d20a], rax 	      7696	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd1ca	    0x488915000000	            mov qword [0x0400d211], rdx 	      7696	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd1d1	    0xc70500000000	               mov dword [0x0400d21b], 1	      7698	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd1db	    0xc70500000000	               mov dword [0x0400d225], 1	      7699	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd1e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      7700	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_6
0xd1e9	          0x8b4038	            mov eax, dword [rax + 0x38] 	      7700	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_6
0xd1ec	            0x85c0	                           test eax, eax	      7700	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_6
0xd1ee	            0x750a	                           jne 0x400d23a	      7700	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_6
0xd1f0	      0xbf63000000	                           mov edi, 0x63	      7702	normal.c	FUNCTION_101	ELSE_2	IF_5	CALL_5
0xd1f5	      0xe800000000	                          call 0x400d23a	      7702	normal.c	FUNCTION_101	ELSE_2	IF_5	CALL_5
0xd1fa	      0xe800000000	                          call 0x400d23f	      7704	normal.c	FUNCTION_101	ELSE_2	IF_5	CALL_6
0xd1ff	    0x8b0500000000	            mov eax, dword [0x0400d245] 	      7706	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_7
0xd205	            0x85c0	                           test eax, eax	      7706	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_7
0xd207	            0x7414	                            je 0x400d25d	      7706	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_7
0xd209	    0x8b0500000000	            mov eax, dword [0x0400d24f] 	      7706	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_7
0xd20f	            0x85c0	                           test eax, eax	      7706	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_7
0xd211	            0x750a	                           jne 0x400d25d	      7706	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_7
0xd213	    0xc70500000000	               mov dword [0x0400d25d], 1	      7707	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_7
0xd21d	    0x8b0500000000	            mov eax, dword [0x0400d263] 	      7712	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd223	          0x83f876	                           cmp eax, 0x76	      7712	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd226	            0x750d	                           jne 0x400d275	      7712	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd228	    0x488b05000000	            mov rax, qword [0x0400d26f] 	      7712	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd22f	        0x4883f801	                              cmp rax, 1	      7712	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd233	            0x7e5f	                           jle 0x400d2d4	      7712	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd235	    0x488b05000000	            mov rax, qword [0x0400d27c] 	      7714	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd23c	    0x488b15000000	            mov rdx, qword [0x0400d283] 	      7714	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd243	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      7714	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd247	        0x488b55f8	                mov rdx, qword [rbp - 8]	      7715	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd24b	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	      7715	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd24f	    0x488b15000000	            mov rdx, qword [0x0400d296] 	      7715	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd256	        0x480fafd6	                           imul rdx, rsi	      7715	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd25a	        0x4883ea01	                              sub rdx, 1	      7715	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd25e	          0x4801ca	                            add rdx, rcx	      7714	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd261	        0x48895038	             mov qword [rax + 0x38], rdx	      7714	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8
0xd265	    0x488b05000000	            mov rax, qword [0x0400d2ac] 	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0xd26c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0xd270	    0x488b05000000	            mov rax, qword [0x0400d2b7] 	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0xd277	          0x488b00	                    mov rax, qword [rax]	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0xd27a	          0x4839c2	                            cmp rdx, rax	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0xd27d	            0x7e15	                           jle 0x400d2d4	      7716	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0xd27f	    0x488b05000000	            mov rax, qword [0x0400d2c6] 	      7717	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0xd286	    0x488b15000000	            mov rdx, qword [0x0400d2cd] 	      7717	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0xd28d	          0x488b12	                    mov rdx, qword [rdx]	      7717	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0xd290	        0x48895038	             mov qword [rax + 0x38], rdx	      7717	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_8	IF_9
0xd294	    0x8b0500000000	            mov eax, dword [0x0400d2da] 	      7719	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd29a	    0x890500000000	            mov dword [0x0400d2e0], eax 	      7719	normal.c	FUNCTION_101	ELSE_2	IF_5
0xd2a0	    0x8b0500000000	            mov eax, dword [0x0400d2e6] 	      7720	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10
0xd2a6	          0x83f876	                           cmp eax, 0x76	      7720	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10
0xd2a9	            0x7566	                           jne 0x400d351	      7720	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10
0xd2ab	    0x488b05000000	            mov rax, qword [0x0400d2f2] 	      7722	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2b2	        0x4883f801	                              cmp rax, 1	      7722	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2b6	            0x7f38	                            jg 0x400d330	      7722	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2b8	      0xe800000000	                          call 0x400d2fd	      7724	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11	CALL_7
0xd2bd	    0x488b05000000	            mov rax, qword [0x0400d304] 	      7725	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2c4	    0x488b15000000	            mov rdx, qword [0x0400d30b] 	      7725	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2cb	    0x8b92d8000000	            mov edx, dword [rdx + 0xd8] 	      7725	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2d1	            0x89d1	                            mov ecx, edx	      7725	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2d3	        0x488b55f8	                mov rdx, qword [rbp - 8]	      7726	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2d7	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      7726	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2db	            0x89d6	                            mov esi, edx	      7725	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2dd	    0x8b1500000000	            mov edx, dword [0x0400d323] 	      7725	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2e3	           0xfafd6	                           imul edx, esi	      7725	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2e6	             0x1ca	                            add edx, ecx	      7725	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2e8	          0x83ea01	                              sub edx, 1	      7725	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2eb	          0x895048	             mov dword [rax + 0x48], edx	      7725	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2ee	            0xeb10	                           jmp 0x400d340	      7725	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	IF_11
0xd2f0	    0x488b05000000	            mov rax, qword [0x0400d337] 	      7729	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	ELSE_3
0xd2f7	    0x8b1500000000	            mov edx, dword [0x0400d33d] 	      7729	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	ELSE_3
0xd2fd	          0x895048	             mov dword [rax + 0x48], edx	      7729	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	ELSE_3
0xd300	    0x488b05000000	            mov rax, qword [0x0400d347] 	      7730	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	CALL_8
0xd307	          0x8b4048	            mov eax, dword [rax + 0x48] 	      7730	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	CALL_8
0xd30a	            0x89c7	                            mov edi, eax	      7730	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	CALL_8
0xd30c	      0xe800000000	                          call 0x400d351	      7730	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_10	CALL_8
0xd311	    0x8b0500000000	            mov eax, dword [0x0400d357] 	      7732	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_12
0xd317	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      7732	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_12
0xd31c	            0x751a	                           jne 0x400d378	      7732	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_12
0xd31e	    0x488b05000000	            mov rax, qword [0x0400d365] 	      7734	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_12
0xd325	    0xc74048ffffff	     mov dword [rax + 0x48], 0x7fffffff 	      7734	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_12
0xd32c	      0xbfffffff7f	                     mov edi, 0x7fffffff	      7735	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_12	CALL_9
0xd331	      0xe800000000	                          call 0x400d376	      7735	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_12	CALL_9
0xd336	            0xeb62	                           jmp 0x400d3da	      7735	normal.c	FUNCTION_101	ELSE_2	IF_5	IF_12	CALL_9
0xd338	    0x8b0500000000	            mov eax, dword [0x0400d37e] 	      7737	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0xd33e	          0x83f816	                           cmp eax, 0x16	      7737	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0xd341	            0x7549	                           jne 0x400d3cc	      7737	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0xd343	      0xe800000000	                          call 0x400d388	      7739	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13	CALL_10
0xd348	    0x488b05000000	            mov rax, qword [0x0400d38f] 	      7740	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0xd34f	    0x488b15000000	            mov rdx, qword [0x0400d396] 	      7740	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0xd356	    0x8b92d8000000	            mov edx, dword [rdx + 0xd8] 	      7740	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0xd35c	            0x89d1	                            mov ecx, edx	      7740	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0xd35e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      7741	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0xd362	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      7741	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0xd366	            0x89d6	                            mov esi, edx	      7740	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0xd368	    0x8b1500000000	            mov edx, dword [0x0400d3ae] 	      7740	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0xd36e	           0xfafd6	                           imul edx, esi	      7740	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0xd371	             0x1ca	                            add edx, ecx	      7740	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0xd373	          0x83ea01	                              sub edx, 1	      7740	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0xd376	          0x895048	             mov dword [rax + 0x48], edx	      7740	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13
0xd379	    0x488b05000000	            mov rax, qword [0x0400d3c0] 	      7742	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13	CALL_11
0xd380	          0x8b4048	            mov eax, dword [rax + 0x48] 	      7742	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13	CALL_11
0xd383	            0x89c7	                            mov edi, eax	      7742	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13	CALL_11
0xd385	      0xe800000000	                          call 0x400d3ca	      7742	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13	CALL_11
0xd38a	            0xeb0e	                           jmp 0x400d3da	      7742	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_4	IF_13	CALL_11
0xd38c	    0x488b05000000	            mov rax, qword [0x0400d3d3] 	      7745	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_5
0xd393	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7745	normal.c	FUNCTION_101	ELSE_2	IF_5	ELSE_5
0xd39a	      0xbf14000000	                           mov edi, 0x14	      7746	normal.c	FUNCTION_101	ELSE_2	IF_5	CALL_12
0xd39f	      0xe800000000	                          call 0x400d3e4	      7746	normal.c	FUNCTION_101	ELSE_2	IF_5	CALL_12
0xd3a4	      0xe9b9000000	                           jmp 0x400d4a2	      7746	normal.c	FUNCTION_101	ELSE_2	IF_5	CALL_12
0xd3a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      7750	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_14
0xd3ad	          0x8b4038	            mov eax, dword [rax + 0x38] 	      7750	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_14
0xd3b0	            0x85c0	                           test eax, eax	      7750	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_14
0xd3b2	            0x750a	                           jne 0x400d3fe	      7750	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_14
0xd3b4	      0xbf63000000	                           mov edi, 0x63	      7752	normal.c	FUNCTION_101	ELSE_2	ELSE_6	CALL_13
0xd3b9	      0xe800000000	                          call 0x400d3fe	      7752	normal.c	FUNCTION_101	ELSE_2	ELSE_6	CALL_13
0xd3be	        0x488b45f8	                mov rax, qword [rbp - 8]	      7753	normal.c	FUNCTION_101	ELSE_2	ELSE_6	CALL_14
0xd3c2	          0x8b400c	              mov eax, dword [rax + 0xc]	      7753	normal.c	FUNCTION_101	ELSE_2	ELSE_6	CALL_14
0xd3c5	            0x89c7	                            mov edi, eax	      7753	normal.c	FUNCTION_101	ELSE_2	ELSE_6	CALL_14
0xd3c7	      0xe8fe000000	            call sym.n_start_visual_mode	      7753	normal.c	FUNCTION_101	ELSE_2	ELSE_6	CALL_14
0xd3cc	    0x8b0500000000	            mov eax, dword [0x0400d412] 	      7754	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0xd3d2	          0x83f856	                           cmp eax, 0x56	      7754	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0xd3d5	            0x7422	                            je 0x400d439	      7754	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0xd3d7	    0x488b05000000	            mov rax, qword [0x0400d41e] 	      7754	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0xd3de	           0xfb600	                   movzx eax, byte [rax]	      7754	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0xd3e1	            0x3c65	                            cmp al, 0x65	      7754	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0xd3e3	            0x7514	                           jne 0x400d439	      7754	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0xd3e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      7755	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0xd3e9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7755	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0xd3ed	        0x488d5001	                      lea rdx, [rax + 1]	      7755	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0xd3f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      7755	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0xd3f5	        0x48895030	             mov qword [rax + 0x30], rdx	      7755	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_15
0xd3f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0xd3fd	        0x488b4028	            mov rax, qword [rax + 0x28] 	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0xd401	          0x4885c0	                           test rax, rax	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0xd404	            0x7e5c	                           jle 0x400d4a2	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0xd406	        0x488b45f8	                mov rax, qword [rbp - 8]	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0xd40a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0xd40e	        0x488d50ff	                      lea rdx, [rax - 1]	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0xd412	        0x488b45f8	                mov rax, qword [rbp - 8]	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0xd416	        0x48895030	             mov qword [rax + 0x30], rdx	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0xd41a	        0x488b45f8	                mov rax, qword [rbp - 8]	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0xd41e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0xd422	          0x4885c0	                           test rax, rax	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0xd425	            0x7e3b	                           jle 0x400d4a2	      7756	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16
0xd427	    0x8b0500000000	            mov eax, dword [0x0400d46d] 	      7759	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	IF_17
0xd42d	          0x83f876	                           cmp eax, 0x76	      7759	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	IF_17
0xd430	            0x740b	                            je 0x400d47d	      7759	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	IF_17
0xd432	    0x8b0500000000	            mov eax, dword [0x0400d478] 	      7759	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	IF_17
0xd438	          0x83f816	                           cmp eax, 0x16	      7759	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	IF_17
0xd43b	            0x750e	                           jne 0x400d48b	      7759	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	IF_17
0xd43d	        0x488b45f8	                mov rax, qword [rbp - 8]	      7760	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	CALL_15
0xd441	          0x4889c7	                            mov rdi, rax	      7760	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	CALL_15
0xd444	      0xe896c7ffff	                       call sym.nv_right	      7760	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	CALL_15
0xd449	            0xeb17	                           jmp 0x400d4a2	      7760	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	CALL_15
0xd44b	    0x8b0500000000	            mov eax, dword [0x0400d491] 	      7761	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	ELSE_7	IF_18
0xd451	          0x83f856	                           cmp eax, 0x56	      7761	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	ELSE_7	IF_18
0xd454	            0x750c	                           jne 0x400d4a2	      7761	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	ELSE_7	IF_18
0xd456	        0x488b45f8	                mov rax, qword [rbp - 8]	      7762	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	ELSE_7	IF_18
0xd45a	          0x4889c7	                            mov rdi, rax	      7762	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	ELSE_7	IF_18
0xd45d	      0xe87acdffff	                        call sym.nv_down	      7762	normal.c	FUNCTION_101	ELSE_2	ELSE_6	IF_16	ELSE_7	IF_18
0xd462	              0xc9	                                   leave	      7766	normal.c	FUNCTION_101
0xd463	              0xc3	                                     ret	      7766	normal.c	FUNCTION_101
nv_normal	CALL,4:ELSE,1:DO,0:FOR,0:functions,0:IF,5:WHILE,0:SWITCH,0	52
0xf534	              0x55	                                push rbp	      8948	normal.c	FUNCTION_126
0xf535	          0x4889e5	                            mov rbp, rsp	      8948	normal.c	FUNCTION_126
0xf538	        0x4883ec10	                           sub rsp, 0x10	      8948	normal.c	FUNCTION_126
0xf53c	        0x48897df8	                mov qword [rbp - 8], rdi	      8948	normal.c	FUNCTION_126
0xf540	        0x488b45f8	                mov rax, qword [rbp - 8]	      8949	normal.c	FUNCTION_126	IF_1
0xf544	          0x8b4010	            mov eax, dword [rax + 0x10] 	      8949	normal.c	FUNCTION_126	IF_1
0xf547	          0x83f80e	                            cmp eax, 0xe	      8949	normal.c	FUNCTION_126	IF_1
0xf54a	            0x7410	                            je 0x400f59c	      8949	normal.c	FUNCTION_126	IF_1
0xf54c	        0x488b45f8	                mov rax, qword [rbp - 8]	      8949	normal.c	FUNCTION_126	IF_1
0xf550	          0x8b4010	            mov eax, dword [rax + 0x10] 	      8949	normal.c	FUNCTION_126	IF_1
0xf553	          0x83f807	                              cmp eax, 7	      8949	normal.c	FUNCTION_126	IF_1
0xf556	     0xf8586000000	                           jne 0x400f622	      8949	normal.c	FUNCTION_126	IF_1
0xf55c	        0x488b45f8	                mov rax, qword [rbp - 8]	      8951	normal.c	FUNCTION_126	IF_1	CALL_1
0xf560	          0x488b00	                    mov rax, qword [rax]	      8951	normal.c	FUNCTION_126	IF_1	CALL_1
0xf563	          0x4889c7	                            mov rdi, rax	      8951	normal.c	FUNCTION_126	IF_1	CALL_1
0xf566	      0xe84764ffff	                        call sym.clearop	      8951	normal.c	FUNCTION_126	IF_1	CALL_1
0xf56b	    0x8b0500000000	            mov eax, dword [0x0400f5b1] 	      8952	normal.c	FUNCTION_126	IF_1	IF_2
0xf571	            0x85c0	                           test eax, eax	      8952	normal.c	FUNCTION_126	IF_1	IF_2
0xf573	            0x7414	                            je 0x400f5c9	      8952	normal.c	FUNCTION_126	IF_1	IF_2
0xf575	    0x8b0500000000	            mov eax, dword [0x0400f5bb] 	      8952	normal.c	FUNCTION_126	IF_1	IF_2
0xf57b	            0x85c0	                           test eax, eax	      8952	normal.c	FUNCTION_126	IF_1	IF_2
0xf57d	            0x740a	                            je 0x400f5c9	      8952	normal.c	FUNCTION_126	IF_1	IF_2
0xf57f	    0xc70500000000	               mov dword [0x0400f5c9], 1	      8953	normal.c	FUNCTION_126	IF_1	IF_2
0xf589	    0xc70500000000	               mov dword [0x0400f5d3], 0	      8954	normal.c	FUNCTION_126	IF_1
0xf593	    0x8b0500000000	            mov eax, dword [0x0400f5d9] 	      8956	normal.c	FUNCTION_126	IF_1	IF_3
0xf599	            0x85c0	                           test eax, eax	      8956	normal.c	FUNCTION_126	IF_1	IF_3
0xf59b	            0x740a	                            je 0x400f5e7	      8956	normal.c	FUNCTION_126	IF_1	IF_3
0xf59d	    0xc70500000000	               mov dword [0x0400f5e7], 3	      8957	normal.c	FUNCTION_126	IF_1	IF_3
0xf5a7	    0x8b0500000000	            mov eax, dword [0x0400f5ed] 	      8959	normal.c	FUNCTION_126	IF_1	IF_4
0xf5ad	            0x85c0	                           test eax, eax	      8959	normal.c	FUNCTION_126	IF_1	IF_4
0xf5af	            0x740f	                            je 0x400f600	      8959	normal.c	FUNCTION_126	IF_1	IF_4
0xf5b1	      0xe800000000	                          call 0x400f5f6	      8961	normal.c	FUNCTION_126	IF_1	IF_4	CALL_2
0xf5b6	      0xbf14000000	                           mov edi, 0x14	      8962	normal.c	FUNCTION_126	IF_1	IF_4	CALL_3
0xf5bb	      0xe800000000	                          call 0x400f600	      8962	normal.c	FUNCTION_126	IF_1	IF_4	CALL_3
0xf5c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      8965	normal.c	FUNCTION_126	IF_1	IF_5
0xf5c4	          0x8b4010	            mov eax, dword [rax + 0x10] 	      8965	normal.c	FUNCTION_126	IF_1	IF_5
0xf5c7	          0x83f807	                              cmp eax, 7	      8965	normal.c	FUNCTION_126	IF_1	IF_5
0xf5ca	            0x7527	                           jne 0x400f633	      8965	normal.c	FUNCTION_126	IF_1	IF_5
0xf5cc	    0x8b0500000000	            mov eax, dword [0x0400f612] 	      8965	normal.c	FUNCTION_126	IF_1	IF_5
0xf5d2	            0x85c0	                           test eax, eax	      8965	normal.c	FUNCTION_126	IF_1	IF_5
0xf5d4	            0x741d	                            je 0x400f633	      8965	normal.c	FUNCTION_126	IF_1	IF_5
0xf5d6	    0xc70500000000	           mov dword [0x0400f620], 0x61 	      8966	normal.c	FUNCTION_126	IF_1	IF_5
0xf5e0	            0xeb11	                           jmp 0x400f633	      8965	normal.c	FUNCTION_126	IF_1	IF_5
0xf5e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      8969	normal.c	FUNCTION_126	CALL_4
0xf5e6	          0x488b00	                    mov rax, qword [rax]	      8969	normal.c	FUNCTION_126	CALL_4
0xf5e9	          0x4889c7	                            mov rdi, rax	      8969	normal.c	FUNCTION_126	CALL_4
0xf5ec	      0xe8f763ffff	                    call sym.clearopbeep	      8969	normal.c	FUNCTION_126	CALL_4
0xf5f1	            0xeb01	                           jmp 0x400f634	      8970	normal.c	FUNCTION_126
0xf5f3	              0x90	                                     nop	      8965	normal.c	FUNCTION_126	IF_1	IF_5
0xf5f4	              0x90	                                     nop	      8970	normal.c	FUNCTION_126
0xf5f5	              0xc9	                                   leave	      8970	normal.c	FUNCTION_126
0xf5f6	              0xc3	                                     ret	      8970	normal.c	FUNCTION_126
del_from_showcmd	CALL,3:ELSE,0:DO,0:FOR,0:functions,0:IF,3:WHILE,0:SWITCH,0	27
0x5f74	              0x55	                                push rbp	      3919	normal.c	FUNCTION_31
0x5f75	          0x4889e5	                            mov rbp, rsp	      3919	normal.c	FUNCTION_31
0x5f78	        0x4883ec20	                           sub rsp, 0x20	      3919	normal.c	FUNCTION_31
0x5f7c	          0x897dec	             mov dword [rbp - 0x14], edi	      3919	normal.c	FUNCTION_31
0x5f7f	    0x8b0500000000	            mov eax, dword [0x04005fc5] 	      3922	normal.c	FUNCTION_31	IF_1
0x5f85	            0x85c0	                           test eax, eax	      3922	normal.c	FUNCTION_31	IF_1
0x5f87	            0x743a	                            je 0x4006003	      3922	normal.c	FUNCTION_31	IF_1
0x5f89	      0xbf00000000	                              mov edi, 0	      3925	normal.c	FUNCTION_31	CALL_1
0x5f8e	      0xe800000000	                          call 0x4005fd3	      3925	normal.c	FUNCTION_31	CALL_1
0x5f93	          0x8945fc	                mov dword [rbp - 4], eax	      3925	normal.c	FUNCTION_31	CALL_1
0x5f96	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3926	normal.c	FUNCTION_31	IF_2
0x5f99	          0x3b45fc	                cmp eax, dword [rbp - 4]	      3926	normal.c	FUNCTION_31	IF_2
0x5f9c	            0x7e06	                           jle 0x4005fe4	      3926	normal.c	FUNCTION_31	IF_2
0x5f9e	          0x8b45fc	                mov eax, dword [rbp - 4]	      3927	normal.c	FUNCTION_31	IF_2
0x5fa1	          0x8945ec	             mov dword [rbp - 0x14], eax	      3927	normal.c	FUNCTION_31	IF_2
0x5fa4	          0x8b45fc	                mov eax, dword [rbp - 4]	      3928	normal.c	FUNCTION_31
0x5fa7	          0x2b45ec	             sub eax, dword [rbp - 0x14]	      3928	normal.c	FUNCTION_31
0x5faa	            0x4898	                                    cdqe	      3928	normal.c	FUNCTION_31
0x5fac	    0xc68000000000	                       mov byte [rax], 0	      3928	normal.c	FUNCTION_31
0x5fb3	      0xe800000000	                          call 0x4005ff8	      3930	normal.c	FUNCTION_31	IF_3	CALL_2
0x5fb8	            0x85c0	                           test eax, eax	      3930	normal.c	FUNCTION_31	IF_3	CALL_2
0x5fba	            0x7508	                           jne 0x4006004	      3930	normal.c	FUNCTION_31	IF_3	CALL_2
0x5fbc	      0xe84c000000	                call sym.display_showcmd	      3931	normal.c	FUNCTION_31	CALL_3
0x5fc1	            0xeb01	                           jmp 0x4006004	      3931	normal.c	FUNCTION_31	CALL_3
0x5fc3	              0x90	                                     nop	      3923	normal.c	FUNCTION_31	IF_1
0x5fc4	              0xc9	                                   leave	      3932	normal.c	FUNCTION_31
0x5fc5	              0xc3	                                     ret	      3932	normal.c	FUNCTION_31
get_op_vcol	CALL,6:ELSE,2:DO,0:FOR,1:functions,0:IF,9:WHILE,0:SWITCH,0	180
0x10713	              0x55	                                push rbp	      9595	normal.c	FUNCTION_140
0x10714	          0x4889e5	                            mov rbp, rsp	      9595	normal.c	FUNCTION_140
0x10717	        0x4883ec20	                           sub rsp, 0x20	      9595	normal.c	FUNCTION_140
0x1071b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9595	normal.c	FUNCTION_140
0x1071f	          0x8975e4	             mov dword [rbp - 0x1c], esi	      9595	normal.c	FUNCTION_140
0x10722	          0x8955e0	             mov dword [rbp - 0x20], edx	      9595	normal.c	FUNCTION_140
0x10725	    0x64488b042528	                mov rax, qword fs:[0x28]	      9595	normal.c	FUNCTION_140
0x1072e	        0x488945f8	                mov qword [rbp - 8], rax	      9595	normal.c	FUNCTION_140
0x10732	            0x31c0	                            xor eax, eax	      9595	normal.c	FUNCTION_140
0x10734	    0x8b0500000000	            mov eax, dword [0x0401077a] 	      9598	normal.c	FUNCTION_140	IF_1
0x1073a	          0x83f816	                           cmp eax, 0x16	      9598	normal.c	FUNCTION_140	IF_1
0x1073d	     0xf8579020000	                           jne 0x40109fc	      9598	normal.c	FUNCTION_140	IF_1
0x10743	        0x837de000	               cmp dword [rbp - 0x20], 0	      9599	normal.c	FUNCTION_140	IF_1
0x10747	            0x751c	                           jne 0x40107a5	      9599	normal.c	FUNCTION_140	IF_1
0x10749	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9599	normal.c	FUNCTION_140	IF_1
0x1074d	          0x8b5038	            mov edx, dword [rax + 0x38] 	      9599	normal.c	FUNCTION_140	IF_1
0x10750	    0x488b05000000	            mov rax, qword [0x04010797] 	      9599	normal.c	FUNCTION_140	IF_1
0x10757	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9599	normal.c	FUNCTION_140	IF_1
0x1075d	            0x39c2	                            cmp edx, eax	      9599	normal.c	FUNCTION_140	IF_1
0x1075f	     0xf8c57020000	                            jl 0x40109fc	      9599	normal.c	FUNCTION_140	IF_1
0x10765	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9602	normal.c	FUNCTION_140
0x10769	    0xc74060010000	               mov dword [rax + 0x60], 1	      9602	normal.c	FUNCTION_140
0x10770	    0x8b0500000000	            mov eax, dword [0x040107b6] 	      9606	normal.c	FUNCTION_140	IF_2
0x10776	            0x85c0	                           test eax, eax	      9606	normal.c	FUNCTION_140	IF_2
0x10778	            0x741e	                            je 0x40107d8	      9606	normal.c	FUNCTION_140	IF_2
0x1077a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9607	normal.c	FUNCTION_140	CALL_1
0x1077e	        0x488d5030	                   lea rdx, [rax + 0x30]	      9607	normal.c	FUNCTION_140	CALL_1
0x10782	    0x488b05000000	            mov rax, qword [0x040107c9] 	      9607	normal.c	FUNCTION_140	CALL_1
0x10789	        0x488b4008	                mov rax, qword [rax + 8]	      9607	normal.c	FUNCTION_140	CALL_1
0x1078d	          0x4889d6	                            mov rsi, rdx	      9607	normal.c	FUNCTION_140	CALL_1
0x10790	          0x4889c7	                            mov rdi, rax	      9607	normal.c	FUNCTION_140	CALL_1
0x10793	      0xe800000000	                          call 0x40107d8	      9607	normal.c	FUNCTION_140	CALL_1
0x10798	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9610	normal.c	FUNCTION_140	CALL_2
0x1079c	        0x488d4868	                   lea rcx, [rax + 0x68]	      9610	normal.c	FUNCTION_140	CALL_2
0x107a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9610	normal.c	FUNCTION_140	CALL_2
0x107a4	        0x488d5064	                   lea rdx, [rax + 0x64]	      9610	normal.c	FUNCTION_140	CALL_2
0x107a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9610	normal.c	FUNCTION_140	CALL_2
0x107ac	        0x488d7020	                   lea rsi, [rax + 0x20]	      9610	normal.c	FUNCTION_140	CALL_2
0x107b0	    0x488b05000000	            mov rax, qword [0x040107f7] 	      9610	normal.c	FUNCTION_140	CALL_2
0x107b7	          0x4989c8	                             mov r8, rcx	      9610	normal.c	FUNCTION_140	CALL_2
0x107ba	      0xb900000000	                              mov ecx, 0	      9610	normal.c	FUNCTION_140	CALL_2
0x107bf	          0x4889c7	                            mov rdi, rax	      9610	normal.c	FUNCTION_140	CALL_2
0x107c2	      0xe800000000	                          call 0x4010807	      9610	normal.c	FUNCTION_140	CALL_2
0x107c7	    0x8b0500000000	            mov eax, dword [0x0401080d] 	      9612	normal.c	FUNCTION_140	IF_3
0x107cd	            0x85c0	                           test eax, eax	      9612	normal.c	FUNCTION_140	IF_3
0x107cf	     0xf8592000000	                           jne 0x40108a7	      9612	normal.c	FUNCTION_140	IF_3
0x107d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9614	normal.c	FUNCTION_140	IF_3	CALL_3
0x107d9	        0x488d7030	                   lea rsi, [rax + 0x30]	      9614	normal.c	FUNCTION_140	IF_3	CALL_3
0x107dd	    0x488b05000000	            mov rax, qword [0x04010824] 	      9614	normal.c	FUNCTION_140	IF_3	CALL_3
0x107e4	        0x488d4df4	                    lea rcx, [rbp - 0xc]	      9614	normal.c	FUNCTION_140	IF_3	CALL_3
0x107e8	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      9614	normal.c	FUNCTION_140	IF_3	CALL_3
0x107ec	          0x4989c8	                             mov r8, rcx	      9614	normal.c	FUNCTION_140	IF_3	CALL_3
0x107ef	      0xb900000000	                              mov ecx, 0	      9614	normal.c	FUNCTION_140	IF_3	CALL_3
0x107f4	          0x4889c7	                            mov rdi, rax	      9614	normal.c	FUNCTION_140	IF_3	CALL_3
0x107f7	      0xe800000000	                          call 0x401083c	      9614	normal.c	FUNCTION_140	IF_3	CALL_3
0x107fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9616	normal.c	FUNCTION_140	IF_3	IF_4
0x10800	          0x8b5064	            mov edx, dword [rax + 0x64] 	      9616	normal.c	FUNCTION_140	IF_3	IF_4
0x10803	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      9616	normal.c	FUNCTION_140	IF_3	IF_4
0x10806	            0x39c2	                            cmp edx, eax	      9616	normal.c	FUNCTION_140	IF_3	IF_4
0x10808	            0x7e0a	                           jle 0x4010854	      9616	normal.c	FUNCTION_140	IF_3	IF_4
0x1080a	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      9617	normal.c	FUNCTION_140	IF_3	IF_4
0x1080d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9617	normal.c	FUNCTION_140	IF_3	IF_4
0x10811	          0x895064	             mov dword [rax + 0x64], edx	      9617	normal.c	FUNCTION_140	IF_3	IF_4
0x10814	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9618	normal.c	FUNCTION_140	IF_3	IF_5
0x10818	          0x8b5068	            mov edx, dword [rax + 0x68] 	      9618	normal.c	FUNCTION_140	IF_3	IF_5
0x1081b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9618	normal.c	FUNCTION_140	IF_3	IF_5
0x1081e	            0x39c2	                            cmp edx, eax	      9618	normal.c	FUNCTION_140	IF_3	IF_5
0x10820	            0x7d45	                           jge 0x40108a7	      9618	normal.c	FUNCTION_140	IF_3	IF_5
0x10822	        0x837de000	               cmp dword [rbp - 0x20], 0	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x10826	            0x7435	                            je 0x401089d	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x10828	    0x488b05000000	            mov rax, qword [0x0401086f] 	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x1082f	           0xfb600	                   movzx eax, byte [rax]	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x10832	            0x3c65	                            cmp al, 0x65	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x10834	            0x7527	                           jne 0x401089d	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x10836	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x10839	            0x85c0	                           test eax, eax	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x1083b	            0x7e20	                           jle 0x401089d	      9620	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x1083d	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      9621	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x10840	          0x8d50ff	                      lea edx, [rax - 1]	      9621	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x10843	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9621	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x10847	          0x8b4068	            mov eax, dword [rax + 0x68] 	      9621	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x1084a	            0x39c2	                            cmp edx, eax	      9621	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x1084c	            0x7c0f	                            jl 0x401089d	      9621	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x1084e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      9622	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x10851	          0x8d50ff	                      lea edx, [rax - 1]	      9622	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x10854	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9622	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x10858	          0x895068	             mov dword [rax + 0x68], edx	      9622	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x1085b	            0xeb0a	                           jmp 0x40108a7	      9622	normal.c	FUNCTION_140	IF_3	IF_5	IF_6
0x1085d	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      9624	normal.c	FUNCTION_140	IF_3	IF_5	ELSE_1
0x10860	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9624	normal.c	FUNCTION_140	IF_3	IF_5	ELSE_1
0x10864	          0x895068	             mov dword [rax + 0x68], edx	      9624	normal.c	FUNCTION_140	IF_3	IF_5	ELSE_1
0x10867	    0x488b05000000	            mov rax, qword [0x040108ae] 	      9629	normal.c	FUNCTION_140	ELSE_1	IF_7
0x1086e	          0x8b4048	            mov eax, dword [rax + 0x48] 	      9629	normal.c	FUNCTION_140	ELSE_1	IF_7
0x10871	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      9629	normal.c	FUNCTION_140	ELSE_1	IF_7
0x10876	     0xf859e000000	                           jne 0x401095a	      9629	normal.c	FUNCTION_140	ELSE_1	IF_7
0x1087c	    0x488b05000000	            mov rax, qword [0x040108c3] 	      9631	normal.c	FUNCTION_140	ELSE_1	IF_7
0x10883	    0xc74040ffffff	     mov dword [rax + 0x40], 0x7fffffff 	      9631	normal.c	FUNCTION_140	ELSE_1	IF_7
0x1088a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9632	normal.c	FUNCTION_140	ELSE_1	IF_7
0x1088e	    0xc74068000000	               mov dword [rax + 0x68], 0	      9632	normal.c	FUNCTION_140	ELSE_1	IF_7
0x10895	    0x488b05000000	            mov rax, qword [0x040108dc] 	      9633	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x1089c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      9633	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x108a0	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      9633	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x108a4	        0x48895038	             mov qword [rax + 0x38], rdx	      9633	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x108a8	            0xeb56	                           jmp 0x4010940	      9633	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x108aa	    0x488b05000000	            mov rax, qword [0x040108f1] 	      9637	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	CALL_4
0x108b1	        0x488d7038	                   lea rsi, [rax + 0x38]	      9637	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	CALL_4
0x108b5	    0x488b05000000	            mov rax, qword [0x040108fc] 	      9637	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	CALL_4
0x108bc	        0x488d55f4	                    lea rdx, [rbp - 0xc]	      9637	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	CALL_4
0x108c0	          0x4989d0	                             mov r8, rdx	      9637	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	CALL_4
0x108c3	      0xb900000000	                              mov ecx, 0	      9637	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	CALL_4
0x108c8	      0xba00000000	                              mov edx, 0	      9637	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	CALL_4
0x108cd	          0x4889c7	                            mov rdi, rax	      9637	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	CALL_4
0x108d0	      0xe800000000	                          call 0x4010915	      9637	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	CALL_4
0x108d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9638	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	IF_8
0x108d9	          0x8b5068	            mov edx, dword [rax + 0x68] 	      9638	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	IF_8
0x108dc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9638	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	IF_8
0x108df	            0x39c2	                            cmp edx, eax	      9638	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	IF_8
0x108e1	            0x7d0a	                           jge 0x401092d	      9638	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	IF_8
0x108e3	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      9639	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	IF_8
0x108e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9639	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	IF_8
0x108ea	          0x895068	             mov dword [rax + 0x68], edx	      9639	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1	IF_8
0x108ed	    0x488b05000000	            mov rax, qword [0x04010934] 	      9635	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x108f4	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      9635	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x108f8	        0x4883c201	                              add rdx, 1	      9635	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x108fc	        0x48895038	             mov qword [rax + 0x38], rdx	      9635	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x10900	    0x488b05000000	            mov rax, qword [0x04010947] 	      9634	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x10907	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      9634	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x1090b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9634	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x1090f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      9634	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x10913	          0x4839c2	                            cmp rdx, rax	      9633	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x10916	            0x7e92	                           jle 0x40108ea	      9633	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x10918	            0xeb20	                           jmp 0x401097a	      9633	normal.c	FUNCTION_140	ELSE_1	IF_7	FOR_1
0x1091a	    0x8b0500000000	            mov eax, dword [0x04010960] 	      9642	normal.c	FUNCTION_140	ELSE_2	IF_9
0x10920	            0x85c0	                           test eax, eax	      9642	normal.c	FUNCTION_140	ELSE_2	IF_9
0x10922	            0x7416	                            je 0x401097a	      9642	normal.c	FUNCTION_140	ELSE_2	IF_9
0x10924	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9643	normal.c	FUNCTION_140	ELSE_2	IF_9
0x10928	          0x8b5064	            mov edx, dword [rax + 0x64] 	      9643	normal.c	FUNCTION_140	ELSE_2	IF_9
0x1092b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      9643	normal.c	FUNCTION_140	ELSE_2	IF_9
0x1092e	             0x1d0	                            add eax, edx	      9643	normal.c	FUNCTION_140	ELSE_2	IF_9
0x10930	          0x8d50ff	                      lea edx, [rax - 1]	      9643	normal.c	FUNCTION_140	ELSE_2	IF_9
0x10933	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9643	normal.c	FUNCTION_140	ELSE_2	IF_9
0x10937	          0x895068	             mov dword [rax + 0x68], edx	      9643	normal.c	FUNCTION_140	ELSE_2	IF_9
0x1093a	    0x488b05000000	            mov rax, qword [0x04010981] 	      9651	normal.c	FUNCTION_140
0x10941	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      9651	normal.c	FUNCTION_140
0x10945	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      9651	normal.c	FUNCTION_140
0x10949	        0x48895038	             mov qword [rax + 0x38], rdx	      9651	normal.c	FUNCTION_140
0x1094d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9652	normal.c	FUNCTION_140	CALL_5
0x10951	          0x8b4068	            mov eax, dword [rax + 0x68] 	      9652	normal.c	FUNCTION_140	CALL_5
0x10954	            0x89c7	                            mov edi, eax	      9652	normal.c	FUNCTION_140	CALL_5
0x10956	      0xe800000000	                          call 0x401099b	      9652	normal.c	FUNCTION_140	CALL_5
0x1095b	    0x488b05000000	            mov rax, qword [0x040109a2] 	      9653	normal.c	FUNCTION_140
0x10962	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      9653	normal.c	FUNCTION_140
0x10966	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      9653	normal.c	FUNCTION_140
0x1096a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      9653	normal.c	FUNCTION_140
0x1096e	        0x48894130	             mov qword [rcx + 0x30], rax	      9653	normal.c	FUNCTION_140
0x10972	        0x48895138	             mov qword [rcx + 0x38], rdx	      9653	normal.c	FUNCTION_140
0x10976	    0x488b0d000000	            mov rcx, qword [0x040109bd] 	      9655	normal.c	FUNCTION_140
0x1097d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9655	normal.c	FUNCTION_140
0x10981	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      9655	normal.c	FUNCTION_140
0x10985	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9655	normal.c	FUNCTION_140
0x10989	        0x48894138	             mov qword [rcx + 0x38], rax	      9655	normal.c	FUNCTION_140
0x1098d	        0x48895140	             mov qword [rcx + 0x40], rdx	      9655	normal.c	FUNCTION_140
0x10991	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9656	normal.c	FUNCTION_140	CALL_6
0x10995	          0x8b4064	            mov eax, dword [rax + 0x64] 	      9656	normal.c	FUNCTION_140	CALL_6
0x10998	            0x89c7	                            mov edi, eax	      9656	normal.c	FUNCTION_140	CALL_6
0x1099a	      0xe800000000	                          call 0x40109df	      9656	normal.c	FUNCTION_140	CALL_6
0x1099f	    0x488b05000000	            mov rax, qword [0x040109e6] 	      9657	normal.c	FUNCTION_140
0x109a6	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      9657	normal.c	FUNCTION_140
0x109aa	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      9657	normal.c	FUNCTION_140
0x109ae	        0x488b4038	            mov rax, qword [rax + 0x38] 	      9657	normal.c	FUNCTION_140
0x109b2	        0x48894120	             mov qword [rcx + 0x20], rax	      9657	normal.c	FUNCTION_140
0x109b6	        0x48895128	             mov qword [rcx + 0x28], rdx	      9657	normal.c	FUNCTION_140
0x109ba	            0xeb01	                           jmp 0x40109fd	      9657	normal.c	FUNCTION_140
0x109bc	              0x90	                                     nop	      9600	normal.c	FUNCTION_140	IF_1
0x109bd	        0x488b45f8	                mov rax, qword [rbp - 8]	      9658	normal.c	FUNCTION_140
0x109c1	    0x644833042528	                xor rax, qword fs:[0x28]	      9658	normal.c	FUNCTION_140
0x109ca	            0x7405	                            je 0x4010a11	      9658	normal.c	FUNCTION_140
0x109cc	      0xe800000000	                          call 0x4010a11	      9658	normal.c	FUNCTION_140
0x109d1	              0xc9	                                   leave	      9658	normal.c	FUNCTION_140
0x109d2	              0xc3	                                     ret	      9658	normal.c	FUNCTION_140
nv_mousescroll	CALL,6:ELSE,3:DO,0:FOR,0:functions,0:IF,8:WHILE,0:SWITCH,0	89
0x71f2	              0x55	                                push rbp	      4614	normal.c	FUNCTION_47
0x71f3	          0x4889e5	                            mov rbp, rsp	      4614	normal.c	FUNCTION_47
0x71f6	        0x4883ec30	                           sub rsp, 0x30	      4614	normal.c	FUNCTION_47
0x71fa	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4614	normal.c	FUNCTION_47
0x71fe	    0x64488b042528	                mov rax, qword fs:[0x28]	      4614	normal.c	FUNCTION_47
0x7207	        0x488945f8	                mov qword [rbp - 8], rax	      4614	normal.c	FUNCTION_47
0x720b	            0x31c0	                            xor eax, eax	      4614	normal.c	FUNCTION_47
0x720d	    0x488b05000000	            mov rax, qword [0x04007254] 	      4615	normal.c	FUNCTION_47
0x7214	        0x488945e8	             mov qword [rbp - 0x18], rax	      4615	normal.c	FUNCTION_47
0x7218	    0x8b0500000000	            mov eax, dword [0x0400725e] 	      4617	normal.c	FUNCTION_47	IF_1
0x721e	            0x85c0	                           test eax, eax	      4617	normal.c	FUNCTION_47	IF_1
0x7220	            0x785b	                            js 0x40072bd	      4617	normal.c	FUNCTION_47	IF_1
0x7222	    0x8b0500000000	            mov eax, dword [0x04007268] 	      4617	normal.c	FUNCTION_47	IF_1
0x7228	            0x85c0	                           test eax, eax	      4617	normal.c	FUNCTION_47	IF_1
0x722a	            0x7851	                            js 0x40072bd	      4617	normal.c	FUNCTION_47	IF_1
0x722c	    0x8b0500000000	            mov eax, dword [0x04007272] 	      4621	normal.c	FUNCTION_47	IF_1
0x7232	          0x8945e0	             mov dword [rbp - 0x20], eax	      4621	normal.c	FUNCTION_47	IF_1
0x7235	    0x8b0500000000	            mov eax, dword [0x0400727b] 	      4622	normal.c	FUNCTION_47	IF_1
0x723b	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4622	normal.c	FUNCTION_47	IF_1
0x723e	        0x488d55e4	                   lea rdx, [rbp - 0x1c]	      4625	normal.c	FUNCTION_47	IF_1	CALL_1
0x7242	        0x488d45e0	                   lea rax, [rbp - 0x20]	      4625	normal.c	FUNCTION_47	IF_1	CALL_1
0x7246	          0x4889d6	                            mov rsi, rdx	      4625	normal.c	FUNCTION_47	IF_1	CALL_1
0x7249	          0x4889c7	                            mov rdi, rax	      4625	normal.c	FUNCTION_47	IF_1	CALL_1
0x724c	      0xe800000000	                          call 0x4007291	      4625	normal.c	FUNCTION_47	IF_1	CALL_1
0x7251	        0x488945f0	             mov qword [rbp - 0x10], rax	      4625	normal.c	FUNCTION_47	IF_1	CALL_1
0x7255	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4626	normal.c	FUNCTION_47	IF_1	IF_2
0x725a	     0xf84ed000000	                            je 0x400738d	      4626	normal.c	FUNCTION_47	IF_1	IF_2
0x7260	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4628	normal.c	FUNCTION_47	IF_1
0x7264	    0x488905000000	            mov qword [0x040072ab], rax 	      4628	normal.c	FUNCTION_47	IF_1
0x726b	    0x488b05000000	            mov rax, qword [0x040072b2] 	      4629	normal.c	FUNCTION_47	IF_1
0x7272	        0x488b4008	                mov rax, qword [rax + 8]	      4629	normal.c	FUNCTION_47	IF_1
0x7276	    0x488905000000	            mov qword [0x040072bd], rax 	      4629	normal.c	FUNCTION_47	IF_1
0x727d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4632	normal.c	FUNCTION_47	IF_3
0x7281	          0x8b4038	            mov eax, dword [rax + 0x38] 	      4632	normal.c	FUNCTION_47	IF_3
0x7284	          0x83f801	                              cmp eax, 1	      4632	normal.c	FUNCTION_47	IF_3
0x7287	            0x740f	                            je 0x40072d8	      4632	normal.c	FUNCTION_47	IF_3
0x7289	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4632	normal.c	FUNCTION_47	IF_3
0x728d	          0x8b4038	            mov eax, dword [rax + 0x38] 	      4632	normal.c	FUNCTION_47	IF_3
0x7290	            0x85c0	                           test eax, eax	      4632	normal.c	FUNCTION_47	IF_3
0x7292	     0xf8585000000	                           jne 0x400735d	      4632	normal.c	FUNCTION_47	IF_3
0x7298	      0xe800000000	                          call 0x40072dd	      4635	normal.c	FUNCTION_47	IF_3	IF_4	CALL_2
0x729d	            0x85c0	                           test eax, eax	      4635	normal.c	FUNCTION_47	IF_3	IF_4	CALL_2
0x729f	            0x7426	                            je 0x4007307	      4635	normal.c	FUNCTION_47	IF_3	IF_4	CALL_2
0x72a1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4638	normal.c	FUNCTION_47	IF_3	CALL_3
0x72a5	          0x8b480c	              mov ecx, dword [rax + 0xc]	      4638	normal.c	FUNCTION_47	IF_3	CALL_3
0x72a8	    0x488b05000000	            mov rax, qword [0x040072ef] 	      4638	normal.c	FUNCTION_47	IF_3	CALL_3
0x72af	    0x488b80281c00	          mov rax, qword [rax + 0x1c28] 	      4638	normal.c	FUNCTION_47	IF_3	CALL_3
0x72b6	      0xba00000000	                              mov edx, 0	      4638	normal.c	FUNCTION_47	IF_3	CALL_3
0x72bb	            0x89ce	                            mov esi, ecx	      4638	normal.c	FUNCTION_47	IF_3	CALL_3
0x72bd	          0x4889c7	                            mov rdi, rax	      4638	normal.c	FUNCTION_47	IF_3	CALL_3
0x72c0	      0xe800000000	                          call 0x4007305	      4638	normal.c	FUNCTION_47	IF_3	CALL_3
0x72c5	            0xeb56	                           jmp 0x400735d	      4638	normal.c	FUNCTION_47	IF_3	CALL_3
0x72c7	    0x8b0500000000	            mov eax, dword [0x0400730d] 	      4641	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5
0x72cd	          0x83e006	                              and eax, 6	      4641	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5
0x72d0	            0x85c0	                           test eax, eax	      4641	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5
0x72d2	            0x7425	                            je 0x4007339	      4641	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5
0x72d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4643	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x72d8	          0x8b4038	            mov eax, dword [rax + 0x38] 	      4643	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x72db	            0x85c0	                           test eax, eax	      4643	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x72dd	            0x7407	                            je 0x4007326	      4643	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x72df	      0xb801000000	                              mov eax, 1	      4643	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x72e4	            0xeb05	                           jmp 0x400732b	      4643	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x72e6	      0xb8ffffffff	                     mov eax, 0xffffffff	      4643	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x72eb	      0xbe01000000	                              mov esi, 1	      4643	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x72f0	            0x89c7	                            mov edi, eax	      4643	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x72f2	      0xe800000000	                          call 0x4007337	      4643	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x72f7	            0xeb24	                           jmp 0x400735d	      4643	normal.c	FUNCTION_47	IF_3	ELSE_1	IF_5	CALL_4
0x72f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4647	normal.c	FUNCTION_47	IF_3	ELSE_2
0x72fd	    0x48c740300300	               mov qword [rax + 0x30], 3	      4647	normal.c	FUNCTION_47	IF_3	ELSE_2
0x7305	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4648	normal.c	FUNCTION_47	IF_3	ELSE_2
0x7309	    0x48c740280300	               mov qword [rax + 0x28], 3	      4648	normal.c	FUNCTION_47	IF_3	ELSE_2
0x7311	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4649	normal.c	FUNCTION_47	IF_3	ELSE_2	CALL_5
0x7315	          0x4889c7	                            mov rdi, rax	      4649	normal.c	FUNCTION_47	IF_3	ELSE_2	CALL_5
0x7318	      0xe882000000	                 call sym.nv_scroll_line	      4649	normal.c	FUNCTION_47	IF_3	ELSE_2	CALL_5
0x731d	    0x488b05000000	            mov rax, qword [0x04007364] 	      4671	normal.c	FUNCTION_47
0x7324	    0xc78040010000	              mov dword [rax + 0x140], 1	      4671	normal.c	FUNCTION_47
0x732e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4673	normal.c	FUNCTION_47
0x7332	    0x488905000000	            mov qword [0x04007379], rax 	      4673	normal.c	FUNCTION_47
0x7339	    0x488b05000000	            mov rax, qword [0x04007380] 	      4674	normal.c	FUNCTION_47
0x7340	        0x488b4008	                mov rax, qword [rax + 8]	      4674	normal.c	FUNCTION_47
0x7344	    0x488905000000	            mov qword [0x0400738b], rax 	      4674	normal.c	FUNCTION_47
0x734b	            0xeb01	                           jmp 0x400738e	      4674	normal.c	FUNCTION_47
0x734d	              0x90	                                     nop	      4627	normal.c	FUNCTION_47	IF_1	IF_2
0x734e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4675	normal.c	FUNCTION_47
0x7352	    0x644833042528	                xor rax, qword fs:[0x28]	      4675	normal.c	FUNCTION_47
0x735b	            0x7405	                            je 0x40073a2	      4675	normal.c	FUNCTION_47
0x735d	      0xe800000000	                          call 0x40073a2	      4675	normal.c	FUNCTION_47
0x7362	              0xc9	                                   leave	      4675	normal.c	FUNCTION_47
0x7363	              0xc3	                                     ret	      4675	normal.c	FUNCTION_47
nv_join	CALL,5:ELSE,1:DO,0:FOR,0:functions,0:IF,5:WHILE,0:SWITCH,0	83
0x1010a	              0x55	                                push rbp	      9375	normal.c	FUNCTION_134
0x1010b	          0x4889e5	                            mov rbp, rsp	      9375	normal.c	FUNCTION_134
0x1010e	        0x4883ec10	                           sub rsp, 0x10	      9375	normal.c	FUNCTION_134
0x10112	        0x48897df8	                mov qword [rbp - 8], rdi	      9375	normal.c	FUNCTION_134
0x10116	    0x8b0500000000	            mov eax, dword [0x0401015c] 	      9376	normal.c	FUNCTION_134	IF_1
0x1011c	            0x85c0	                           test eax, eax	      9376	normal.c	FUNCTION_134	IF_1
0x1011e	            0x7411	                            je 0x4010171	      9376	normal.c	FUNCTION_134	IF_1
0x10120	        0x488b45f8	                mov rax, qword [rbp - 8]	      9377	normal.c	FUNCTION_134	CALL_1
0x10124	          0x4889c7	                            mov rdi, rax	      9377	normal.c	FUNCTION_134	CALL_1
0x10127	      0xe807eaffff	                    call sym.nv_operator	      9377	normal.c	FUNCTION_134	CALL_1
0x1012c	      0xe915010000	                           jmp 0x4010286	      9377	normal.c	FUNCTION_134	CALL_1
0x10131	        0x488b45f8	                mov rax, qword [rbp - 8]	      9378	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_2
0x10135	          0x488b00	                    mov rax, qword [rax]	      9378	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_2
0x10138	          0x4889c7	                            mov rdi, rax	      9378	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_2
0x1013b	      0xe80858ffff	                   call sym.checkclearop	      9378	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_2
0x10140	            0x85c0	                           test eax, eax	      9378	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_2
0x10142	     0xf85fe000000	                           jne 0x4010286	      9378	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_2
0x10148	        0x488b45f8	                mov rax, qword [rbp - 8]	      9380	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_3
0x1014c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      9380	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_3
0x10150	        0x4883f801	                              cmp rax, 1	      9380	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_3
0x10154	            0x7f0c	                            jg 0x40101a2	      9380	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_3
0x10156	        0x488b45f8	                mov rax, qword [rbp - 8]	      9381	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_3
0x1015a	    0x48c740280200	               mov qword [rax + 0x28], 2	      9381	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_3
0x10162	    0x488b05000000	            mov rax, qword [0x040101a9] 	      9382	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x10169	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      9382	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x1016d	        0x488b45f8	                mov rax, qword [rbp - 8]	      9382	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x10171	        0x488b4028	            mov rax, qword [rax + 0x28] 	      9382	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x10175	          0x4801d0	                            add rax, rdx	      9382	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x10178	        0x488d50ff	                      lea rdx, [rax - 1]	      9382	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x1017c	    0x488b05000000	            mov rax, qword [0x040101c3] 	      9383	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x10183	          0x488b00	                    mov rax, qword [rax]	      9383	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x10186	          0x4839c2	                            cmp rdx, rax	      9382	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x10189	            0x7e49	                           jle 0x4010214	      9382	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x1018b	        0x488b45f8	                mov rax, qword [rbp - 8]	      9386	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4	IF_5
0x1018f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      9386	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4	IF_5
0x10193	        0x4883f802	                              cmp rax, 2	      9386	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4	IF_5
0x10197	            0x7f14	                            jg 0x40101ed	      9386	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4	IF_5
0x10199	        0x488b45f8	                mov rax, qword [rbp - 8]	      9388	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4	IF_5	CALL_3
0x1019d	          0x488b00	                    mov rax, qword [rax]	      9388	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4	IF_5	CALL_3
0x101a0	          0x4889c7	                            mov rdi, rax	      9388	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4	IF_5	CALL_3
0x101a3	      0xe84058ffff	                    call sym.clearopbeep	      9388	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4	IF_5	CALL_3
0x101a8	      0xe999000000	                           jmp 0x4010286	      9389	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4	IF_5
0x101ad	    0x488b05000000	            mov rax, qword [0x040101f4] 	      9391	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x101b4	          0x488b10	                    mov rdx, qword [rax]	      9391	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x101b7	    0x488b05000000	            mov rax, qword [0x040101fe] 	      9392	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x101be	        0x488b4038	            mov rax, qword [rax + 0x38] 	      9392	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x101c2	          0x4829c2	                            sub rdx, rax	      9392	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x101c5	          0x4889d0	                            mov rax, rdx	      9392	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x101c8	        0x488d5001	                      lea rdx, [rax + 1]	      9392	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x101cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      9391	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x101d0	        0x48895028	             mov qword [rax + 0x28], rdx	      9391	normal.c	FUNCTION_134	ELSE_1	IF_2	IF_4
0x101d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x101d8	          0x8b4810	            mov ecx, dword [rax + 0x10] 	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x101db	        0x488b45f8	                mov rax, qword [rbp - 8]	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x101df	          0x8b500c	              mov edx, dword [rax + 0xc]	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x101e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x101e6	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x101ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x101ee	          0x488b00	                    mov rax, qword [rax]	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x101f1	          0x8b4004	                mov eax, dword [rax + 4]	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x101f4	        0x4883ec08	                              sub rsp, 8	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x101f8	              0x51	                                push rcx	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x101f9	    0x41b900000000	                              mov r9d, 0	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x101ff	    0x41b800000000	                              mov r8d, 0	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x10205	            0x89d1	                            mov ecx, edx	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x10207	      0xba00000000	                              mov edx, 0	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x1020c	            0x89c7	                            mov edi, eax	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x1020e	      0xe89556ffff	                      call sym.prep_redo	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x10213	        0x4883c410	                           add rsp, 0x10	      9395	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_4
0x10217	        0x488b45f8	                mov rax, qword [rbp - 8]	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x1021b	          0x8b4010	            mov eax, dword [rax + 0x10] 	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x1021e	            0x85c0	                           test eax, eax	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x10220	           0xf94c0	                                 sete al	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x10223	           0xfb6f0	                           movzx esi, al	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x10226	        0x488b45f8	                mov rax, qword [rbp - 8]	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x1022a	        0x488b4028	            mov rax, qword [rax + 0x28] 	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x1022e	    0x41b801000000	                              mov r8d, 1	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x10234	      0xb901000000	                              mov ecx, 1	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x10239	      0xba01000000	                              mov edx, 1	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x1023e	          0x4889c7	                            mov rdi, rax	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x10241	      0xe800000000	                          call 0x4010286	      9397	normal.c	FUNCTION_134	ELSE_1	IF_2	CALL_5
0x10246	              0xc9	                                   leave	      9399	normal.c	FUNCTION_134
0x10247	              0xc3	                                     ret	      9399	normal.c	FUNCTION_134
nv_regname	CALL,5:ELSE,1:DO,0:FOR,0:functions,0:IF,3:WHILE,0:SWITCH,0	52
0xd049	              0x55	                                push rbp	      7638	normal.c	FUNCTION_100
0xd04a	          0x4889e5	                            mov rbp, rsp	      7638	normal.c	FUNCTION_100
0xd04d	        0x4883ec10	                           sub rsp, 0x10	      7638	normal.c	FUNCTION_100
0xd051	        0x48897df8	                mov qword [rbp - 8], rdi	      7638	normal.c	FUNCTION_100
0xd055	        0x488b45f8	                mov rax, qword [rbp - 8]	      7639	normal.c	FUNCTION_100	IF_1	CALL_1
0xd059	          0x488b00	                    mov rax, qword [rax]	      7639	normal.c	FUNCTION_100	IF_1	CALL_1
0xd05c	          0x4889c7	                            mov rdi, rax	      7639	normal.c	FUNCTION_100	IF_1	CALL_1
0xd05f	      0xe8e488ffff	                   call sym.checkclearop	      7639	normal.c	FUNCTION_100	IF_1	CALL_1
0xd064	            0x85c0	                           test eax, eax	      7639	normal.c	FUNCTION_100	IF_1	CALL_1
0xd066	     0xf8581000000	                           jne 0x400d12d	      7639	normal.c	FUNCTION_100	IF_1	CALL_1
0xd06c	        0x488b45f8	                mov rax, qword [rbp - 8]	      7642	normal.c	FUNCTION_100	IF_2
0xd070	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7642	normal.c	FUNCTION_100	IF_2
0xd073	          0x83f83d	                           cmp eax, 0x3d	      7642	normal.c	FUNCTION_100	IF_2
0xd076	            0x750e	                           jne 0x400d0c6	      7642	normal.c	FUNCTION_100	IF_2
0xd078	      0xe800000000	                          call 0x400d0bd	      7643	normal.c	FUNCTION_100	CALL_2
0xd07d	            0x89c2	                            mov edx, eax	      7643	normal.c	FUNCTION_100	CALL_2
0xd07f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7643	normal.c	FUNCTION_100	CALL_2
0xd083	          0x895010	             mov dword [rax + 0x10], edx	      7643	normal.c	FUNCTION_100	CALL_2
0xd086	        0x488b45f8	                mov rax, qword [rbp - 8]	      7645	normal.c	FUNCTION_100	IF_3	CALL_3
0xd08a	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7645	normal.c	FUNCTION_100	IF_3	CALL_3
0xd08d	            0x85c0	                           test eax, eax	      7645	normal.c	FUNCTION_100	IF_3	CALL_3
0xd08f	            0x744b	                            je 0x400d11c	      7645	normal.c	FUNCTION_100	IF_3	CALL_3
0xd091	        0x488b45f8	                mov rax, qword [rbp - 8]	      7645	normal.c	FUNCTION_100	IF_3	CALL_3
0xd095	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7645	normal.c	FUNCTION_100	IF_3	CALL_3
0xd098	      0xbe00000000	                              mov esi, 0	      7645	normal.c	FUNCTION_100	IF_3	CALL_3
0xd09d	            0x89c7	                            mov edi, eax	      7645	normal.c	FUNCTION_100	IF_3	CALL_3
0xd09f	      0xe800000000	                          call 0x400d0e4	      7645	normal.c	FUNCTION_100	IF_3	CALL_3
0xd0a4	            0x85c0	                           test eax, eax	      7645	normal.c	FUNCTION_100	IF_3	CALL_3
0xd0a6	            0x7434	                            je 0x400d11c	      7645	normal.c	FUNCTION_100	IF_3	CALL_3
0xd0a8	        0x488b45f8	                mov rax, qword [rbp - 8]	      7647	normal.c	FUNCTION_100	IF_3
0xd0ac	          0x488b00	                    mov rax, qword [rax]	      7647	normal.c	FUNCTION_100	IF_3
0xd0af	        0x488b55f8	                mov rdx, qword [rbp - 8]	      7647	normal.c	FUNCTION_100	IF_3
0xd0b3	          0x8b5210	            mov edx, dword [rdx + 0x10] 	      7647	normal.c	FUNCTION_100	IF_3
0xd0b6	          0x895004	                mov dword [rax + 4], edx	      7647	normal.c	FUNCTION_100	IF_3
0xd0b9	        0x488b45f8	                mov rax, qword [rbp - 8]	      7648	normal.c	FUNCTION_100	IF_3
0xd0bd	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      7648	normal.c	FUNCTION_100	IF_3
0xd0c1	        0x488b45f8	                mov rax, qword [rbp - 8]	      7648	normal.c	FUNCTION_100	IF_3
0xd0c5	        0x48895020	             mov qword [rax + 0x20], rdx	      7648	normal.c	FUNCTION_100	IF_3
0xd0c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      7650	normal.c	FUNCTION_100	IF_3	CALL_4
0xd0cd	          0x488b00	                    mov rax, qword [rax]	      7650	normal.c	FUNCTION_100	IF_3	CALL_4
0xd0d0	          0x8b4004	                mov eax, dword [rax + 4]	      7650	normal.c	FUNCTION_100	IF_3	CALL_4
0xd0d3	            0x89c7	                            mov edi, eax	      7650	normal.c	FUNCTION_100	IF_3	CALL_4
0xd0d5	      0xe800000000	                          call 0x400d11a	      7650	normal.c	FUNCTION_100	IF_3	CALL_4
0xd0da	            0xeb12	                           jmp 0x400d12e	      7650	normal.c	FUNCTION_100	IF_3	CALL_4
0xd0dc	        0x488b45f8	                mov rax, qword [rbp - 8]	      7654	normal.c	FUNCTION_100	CALL_5
0xd0e0	          0x488b00	                    mov rax, qword [rax]	      7654	normal.c	FUNCTION_100	CALL_5
0xd0e3	          0x4889c7	                            mov rdi, rax	      7654	normal.c	FUNCTION_100	CALL_5
0xd0e6	      0xe8fd88ffff	                    call sym.clearopbeep	      7654	normal.c	FUNCTION_100	CALL_5
0xd0eb	            0xeb01	                           jmp 0x400d12e	      7654	normal.c	FUNCTION_100	CALL_5
0xd0ed	              0x90	                                     nop	      7640	normal.c	FUNCTION_100	IF_1
0xd0ee	              0xc9	                                   leave	      7655	normal.c	FUNCTION_100
0xd0ef	              0xc3	                                     ret	      7655	normal.c	FUNCTION_100
nv_zet	CALL,88:ELSE,23:DO,0:FOR,1:functions,1:IF,50:WHILE,0:SWITCH,1	1119
0x7568	              0x55	                                push rbp	      4760	normal.c	FUNCTION_51
0x7569	          0x4889e5	                            mov rbp, rsp	      4760	normal.c	FUNCTION_51
0x756c	              0x53	                                push rbx	      4760	normal.c	FUNCTION_51
0x756d	        0x4883ec78	                           sub rsp, 0x78	      4760	normal.c	FUNCTION_51
0x7571	        0x48897d88	             mov qword [rbp - 0x78], rdi	      4760	normal.c	FUNCTION_51
0x7575	    0x64488b042528	                mov rax, qword fs:[0x28]	      4760	normal.c	FUNCTION_51
0x757e	        0x488945e8	             mov qword [rbp - 0x18], rax	      4760	normal.c	FUNCTION_51
0x7582	            0x31c0	                            xor eax, eax	      4760	normal.c	FUNCTION_51
0x7584	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4763	normal.c	FUNCTION_51
0x7588	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4763	normal.c	FUNCTION_51
0x758b	          0x8945a0	             mov dword [rbp - 0x60], eax	      4763	normal.c	FUNCTION_51
0x758e	    0x488b05000000	            mov rax, qword [0x040075d5] 	      4765	normal.c	FUNCTION_51
0x7595	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      4765	normal.c	FUNCTION_51
0x759c	        0x488945c0	             mov qword [rbp - 0x40], rax	      4765	normal.c	FUNCTION_51
0x75a0	    0x488b05000000	            mov rax, qword [0x040075e7] 	      4766	normal.c	FUNCTION_51
0x75a7	    0x8b80d4010000	           mov eax, dword [rax + 0x1d4] 	      4766	normal.c	FUNCTION_51
0x75ad	          0x8945a8	             mov dword [rbp - 0x58], eax	      4766	normal.c	FUNCTION_51
0x75b0	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      4769	normal.c	FUNCTION_51
0x75b7	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4772	normal.c	FUNCTION_51	IF_1	CALL_1
0x75ba	          0x83e830	                           sub eax, 0x30	      4772	normal.c	FUNCTION_51	IF_1	CALL_1
0x75bd	          0x83f809	                              cmp eax, 9	      4772	normal.c	FUNCTION_51	IF_1	CALL_1
0x75c0	     0xf87cb010000	                            ja 0x40077d1	      4772	normal.c	FUNCTION_51	IF_1	CALL_1
0x75c6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4777	normal.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x75ca	          0x488b00	                    mov rax, qword [rax]	      4777	normal.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x75cd	          0x4889c7	                            mov rdi, rax	      4777	normal.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x75d0	      0xe873e3ffff	                   call sym.checkclearop	      4777	normal.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x75d5	            0x85c0	                           test eax, eax	      4777	normal.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x75d7	     0xf85f4110000	                           jne 0x4008811	      4777	normal.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x75dd	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4779	normal.c	FUNCTION_51	IF_1
0x75e0	          0x83e830	                           sub eax, 0x30	      4779	normal.c	FUNCTION_51	IF_1
0x75e3	            0x4898	                                    cdqe	      4779	normal.c	FUNCTION_51	IF_1
0x75e5	        0x488945b8	             mov qword [rbp - 0x48], rax	      4779	normal.c	FUNCTION_51	IF_1
0x75e9	    0x8b0500000000	            mov eax, dword [0x0400762f] 	      4785	normal.c	FUNCTION_51	IF_1	FOR_1
0x75ef	          0x83c001	                              add eax, 1	      4785	normal.c	FUNCTION_51	IF_1	FOR_1
0x75f2	    0x890500000000	            mov dword [0x04007638], eax 	      4785	normal.c	FUNCTION_51	IF_1	FOR_1
0x75f8	    0x8b0500000000	            mov eax, dword [0x0400763e] 	      4786	normal.c	FUNCTION_51	IF_1	FOR_1
0x75fe	          0x83c001	                              add eax, 1	      4786	normal.c	FUNCTION_51	IF_1	FOR_1
0x7601	    0x890500000000	            mov dword [0x04007647], eax 	      4786	normal.c	FUNCTION_51	IF_1	FOR_1
0x7607	      0xe800000000	                          call 0x400764c	      4787	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_3
0x760c	          0x8945a0	             mov dword [rbp - 0x60], eax	      4787	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_3
0x760f	    0x488b05000000	            mov rax, qword [0x04007656] 	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7616	           0xfb600	                   movzx eax, byte [rax]	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7619	            0x84c0	                             test al, al	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x761b	            0x7458	                            je 0x40076b5	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x761d	    0x8b0500000000	            mov eax, dword [0x04007663] 	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7623	            0x85c0	                           test eax, eax	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7625	            0x7514	                           jne 0x400767b	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7627	    0x8b0500000000	            mov eax, dword [0x0400766d] 	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x762d	            0x85c0	                           test eax, eax	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x762f	            0x7544	                           jne 0x40076b5	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7631	    0x8b0500000000	            mov eax, dword [0x04007677] 	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7637	            0x85c0	                           test eax, eax	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7639	            0x743a	                            je 0x40076b5	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x763b	    0x8b0500000000	            mov eax, dword [0x04007681] 	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7641	            0x85c0	                           test eax, eax	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7643	            0x7530	                           jne 0x40076b5	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7645	        0x837da000	               cmp dword [rbp - 0x60], 0	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7649	            0x782a	                            js 0x40076b5	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x764b	    0x817da0ff0000	           cmp dword [rbp - 0x60], 0xff 	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7652	            0x7f14	                            jg 0x40076a8	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7654	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7657	            0x4898	                                    cdqe	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7659	     0xfb680000000	                   movzx eax, byte [rax]	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7660	           0xfb6c0	                           movzx eax, al	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7663	          0x8945a0	             mov dword [rbp - 0x60], eax	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7666	            0xeb0d	                           jmp 0x40076b5	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7668	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x766b	            0x89c7	                            mov edi, eax	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x766d	      0xe800000000	                          call 0x40076b2	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7672	          0x8945a0	             mov dword [rbp - 0x60], eax	      4788	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_4
0x7675	    0x8b0500000000	            mov eax, dword [0x040076bb] 	      4789	normal.c	FUNCTION_51	IF_1	FOR_1
0x767b	          0x83e801	                              sub eax, 1	      4789	normal.c	FUNCTION_51	IF_1	FOR_1
0x767e	    0x890500000000	            mov dword [0x040076c4], eax 	      4789	normal.c	FUNCTION_51	IF_1	FOR_1
0x7684	    0x8b0500000000	            mov eax, dword [0x040076ca] 	      4790	normal.c	FUNCTION_51	IF_1	FOR_1
0x768a	          0x83e801	                              sub eax, 1	      4790	normal.c	FUNCTION_51	IF_1	FOR_1
0x768d	    0x890500000000	            mov dword [0x040076d3], eax 	      4790	normal.c	FUNCTION_51	IF_1	FOR_1
0x7693	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4792	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_5
0x7696	            0x89c7	                            mov edi, eax	      4792	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_5
0x7698	      0xe800000000	                          call 0x40076dd	      4792	normal.c	FUNCTION_51	IF_1	FOR_1	CALL_5
0x769d	    0x817da095bbff	     cmp dword [rbp - 0x60], 0xffffbb95 	      4794	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x76a4	            0x7409	                            je 0x40076ef	      4794	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x76a6	    0x817da003afff	     cmp dword [rbp - 0x60], 0xffffaf03 	      4794	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x76ad	            0x752e	                           jne 0x400771d	      4794	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x76af	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      4795	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x76b3	    0x48ba67666666	          movabs rdx, 0x6666666666666667	      4795	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x76bd	          0x4889c8	                            mov rax, rcx	      4795	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x76c0	          0x48f7ea	                                imul rdx	      4795	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x76c3	        0x48c1fa02	                              sar rdx, 2	      4795	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x76c7	          0x4889c8	                            mov rax, rcx	      4795	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x76ca	        0x48c1f83f	                           sar rax, 0x3f	      4795	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x76ce	          0x4829c2	                            sub rdx, rax	      4795	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x76d1	          0x4889d0	                            mov rax, rdx	      4795	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x76d4	        0x488945b8	             mov qword [rbp - 0x48], rax	      4795	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x76d8	      0xe99d000000	                           jmp 0x40077ba	      4795	normal.c	FUNCTION_51	IF_1	FOR_1	IF_3
0x76dd	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4796	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4	CALL_6
0x76e0	          0x83e830	                           sub eax, 0x30	      4796	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4	CALL_6
0x76e3	          0x83f809	                              cmp eax, 9	      4796	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4	CALL_6
0x76e6	            0x7728	                            ja 0x4007750	      4796	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4	CALL_6
0x76e8	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4797	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x76ec	          0x4889d0	                            mov rax, rdx	      4797	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x76ef	        0x48c1e002	                              shl rax, 2	      4797	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x76f3	          0x4801d0	                            add rax, rdx	      4797	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x76f6	          0x4801c0	                            add rax, rax	      4797	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x76f9	          0x4889c2	                            mov rdx, rax	      4797	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x76fc	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4797	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x76ff	          0x83e830	                           sub eax, 0x30	      4797	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x7702	            0x4898	                                    cdqe	      4797	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x7704	          0x4801d0	                            add rax, rdx	      4797	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x7707	        0x488945b8	             mov qword [rbp - 0x48], rax	      4797	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x770b	      0xe9d9feffff	                           jmp 0x4007629	      4797	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_1	IF_4
0x7710	        0x837da00d	            cmp dword [rbp - 0x60], 0xd 	      4798	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_2	IF_5
0x7714	            0x750d	                           jne 0x4007763	      4798	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_2	IF_5
0x7716	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4803	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_2	IF_5	CALL_7
0x771a	            0x89c7	                            mov edi, eax	      4803	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_2	IF_5	CALL_7
0x771c	      0xe800000000	                          call 0x4007761	      4803	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_2	IF_5	CALL_7
0x7721	            0xeb5c	                           jmp 0x40077bf	      4804	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_2	IF_5
0x7723	        0x837da06c	           cmp dword [rbp - 0x60], 0x6c 	      4806	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x7727	            0x7418	                            je 0x4007781	      4806	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x7729	        0x837da068	           cmp dword [rbp - 0x60], 0x68 	      4807	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x772d	            0x7412	                            je 0x4007781	      4807	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x772f	    0x817da09593ff	     cmp dword [rbp - 0x60], 0xffff9395 	      4808	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x7736	            0x7409	                            je 0x4007781	      4808	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x7738	    0x817da0958dff	     cmp dword [rbp - 0x60], 0xffff8d95 	      4809	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x773f	            0x7528	                           jne 0x40077a9	      4809	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x7741	      0x48837db800	               cmp qword [rbp - 0x48], 0	      4811	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x7746	            0x740f	                            je 0x4007797	      4811	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x7748	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4811	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x774c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4811	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x7750	      0x480faf45b8	            imul rax, qword [rbp - 0x48]	      4811	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x7755	            0xeb08	                           jmp 0x400779f	      4811	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x7757	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4811	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x775b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4811	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x775f	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4811	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x7763	        0x48894230	             mov qword [rdx + 0x30], rax	      4811	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x7767	            0xeb28	                           jmp 0x40077d1	      4812	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_3	IF_6
0x7769	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4816	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_4	CALL_8
0x776d	          0x488b00	                    mov rax, qword [rax]	      4816	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_4	CALL_8
0x7770	          0x4889c7	                            mov rdi, rax	      4816	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_4	CALL_8
0x7773	      0xe870e2ffff	                    call sym.clearopbeep	      4816	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_4	CALL_8
0x7778	            0xeb05	                           jmp 0x40077bf	      4817	normal.c	FUNCTION_51	IF_1	FOR_1	ELSE_4
0x777a	      0xe96afeffff	                           jmp 0x4007629	      4819	normal.c	FUNCTION_51	IF_1	FOR_1
0x777f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4820	normal.c	FUNCTION_51	IF_1
0x7783	          0x488b00	                    mov rax, qword [rax]	      4820	normal.c	FUNCTION_51	IF_1
0x7786	    0xc70000000000	                      mov dword [rax], 0	      4820	normal.c	FUNCTION_51	IF_1
0x778c	      0xe94a100000	                           jmp 0x400881b	      4821	normal.c	FUNCTION_51	IF_1
0x7791	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4830	normal.c	FUNCTION_51	IF_7
0x7795	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4830	normal.c	FUNCTION_51	IF_7
0x7798	          0x83f866	                           cmp eax, 0x66	      4825	normal.c	FUNCTION_51	IF_7
0x779b	            0x745d	                            je 0x400783a	      4825	normal.c	FUNCTION_51	IF_7
0x779d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4830	normal.c	FUNCTION_51	IF_7
0x77a1	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4830	normal.c	FUNCTION_51	IF_7
0x77a4	          0x83f846	                           cmp eax, 0x46	      4830	normal.c	FUNCTION_51	IF_7
0x77a7	            0x7451	                            je 0x400783a	      4830	normal.c	FUNCTION_51	IF_7
0x77a9	    0x8b0500000000	            mov eax, dword [0x040077ef] 	      4831	normal.c	FUNCTION_51	IF_7	CALL_9
0x77af	            0x85c0	                           test eax, eax	      4831	normal.c	FUNCTION_51	IF_7	CALL_9
0x77b1	            0x7418	                            je 0x400780b	      4831	normal.c	FUNCTION_51	IF_7	CALL_9
0x77b3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4831	normal.c	FUNCTION_51	IF_7	CALL_9
0x77b7	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4831	normal.c	FUNCTION_51	IF_7	CALL_9
0x77ba	            0x89c6	                            mov esi, eax	      4831	normal.c	FUNCTION_51	IF_7	CALL_9
0x77bc	      0xbf00000000	                              mov edi, 0	      4831	normal.c	FUNCTION_51	IF_7	CALL_9
0x77c1	      0xe800000000	                          call 0x4007806	      4831	normal.c	FUNCTION_51	IF_7	CALL_9
0x77c6	          0x4885c0	                           test rax, rax	      4831	normal.c	FUNCTION_51	IF_7	CALL_9
0x77c9	            0x752f	                           jne 0x400783a	      4831	normal.c	FUNCTION_51	IF_7	CALL_9
0x77cb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4832	normal.c	FUNCTION_51	IF_7
0x77cf	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4832	normal.c	FUNCTION_51	IF_7
0x77d2	          0x83f86a	                           cmp eax, 0x6a	      4832	normal.c	FUNCTION_51	IF_7
0x77d5	            0x7423	                            je 0x400783a	      4832	normal.c	FUNCTION_51	IF_7
0x77d7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4832	normal.c	FUNCTION_51	IF_7
0x77db	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4832	normal.c	FUNCTION_51	IF_7
0x77de	          0x83f86b	                           cmp eax, 0x6b	      4832	normal.c	FUNCTION_51	IF_7
0x77e1	            0x7417	                            je 0x400783a	      4832	normal.c	FUNCTION_51	IF_7
0x77e3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4835	normal.c	FUNCTION_51	IF_7	CALL_10
0x77e7	          0x488b00	                    mov rax, qword [rax]	      4835	normal.c	FUNCTION_51	IF_7	CALL_10
0x77ea	          0x4889c7	                            mov rdi, rax	      4835	normal.c	FUNCTION_51	IF_7	CALL_10
0x77ed	      0xe856e1ffff	                   call sym.checkclearop	      4835	normal.c	FUNCTION_51	IF_7	CALL_10
0x77f2	            0x85c0	                           test eax, eax	      4833	normal.c	FUNCTION_51	IF_7
0x77f4	     0xf85da0f0000	                           jne 0x4008814	      4833	normal.c	FUNCTION_51	IF_7
0x77fa	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4842	normal.c	FUNCTION_51	IF_8	CALL_11
0x77fd	            0x89c6	                            mov esi, eax	      4842	normal.c	FUNCTION_51	IF_8	CALL_11
0x77ff	      0xbf00000000	                              mov edi, 0	      4842	normal.c	FUNCTION_51	IF_8	CALL_11
0x7804	      0xe800000000	                          call 0x4007849	      4842	normal.c	FUNCTION_51	IF_8	CALL_11
0x7809	          0x4885c0	                           test rax, rax	      4842	normal.c	FUNCTION_51	IF_8	CALL_11
0x780c	            0x7470	                            je 0x40078be	      4842	normal.c	FUNCTION_51	IF_8	CALL_11
0x780e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4843	normal.c	FUNCTION_51	IF_8
0x7812	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4843	normal.c	FUNCTION_51	IF_8
0x7816	          0x4885c0	                           test rax, rax	      4843	normal.c	FUNCTION_51	IF_8
0x7819	            0x7463	                            je 0x40078be	      4843	normal.c	FUNCTION_51	IF_8
0x781b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4844	normal.c	FUNCTION_51	IF_8
0x781f	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4844	normal.c	FUNCTION_51	IF_8
0x7823	    0x488b05000000	            mov rax, qword [0x0400786a] 	      4844	normal.c	FUNCTION_51	IF_8
0x782a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4844	normal.c	FUNCTION_51	IF_8
0x782e	          0x4839c2	                            cmp rdx, rax	      4844	normal.c	FUNCTION_51	IF_8
0x7831	            0x744b	                            je 0x40078be	      4844	normal.c	FUNCTION_51	IF_8
0x7833	      0xe800000000	                          call 0x4007878	      4846	normal.c	FUNCTION_51	IF_8	CALL_12
0x7838	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4847	normal.c	FUNCTION_51	IF_8	IF_9
0x783c	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4847	normal.c	FUNCTION_51	IF_8	IF_9
0x7840	    0x488b05000000	            mov rax, qword [0x04007887] 	      4847	normal.c	FUNCTION_51	IF_8	IF_9
0x7847	          0x488b00	                    mov rax, qword [rax]	      4847	normal.c	FUNCTION_51	IF_8	IF_9
0x784a	          0x4839c2	                            cmp rdx, rax	      4847	normal.c	FUNCTION_51	IF_8	IF_9
0x784d	            0x7e17	                           jle 0x40078a6	      4847	normal.c	FUNCTION_51	IF_8	IF_9
0x784f	    0x488b05000000	            mov rax, qword [0x04007896] 	      4848	normal.c	FUNCTION_51	IF_8	IF_9
0x7856	    0x488b15000000	            mov rdx, qword [0x0400789d] 	      4848	normal.c	FUNCTION_51	IF_8	IF_9
0x785d	          0x488b12	                    mov rdx, qword [rdx]	      4848	normal.c	FUNCTION_51	IF_8	IF_9
0x7860	        0x48895038	             mov qword [rax + 0x38], rdx	      4848	normal.c	FUNCTION_51	IF_8	IF_9
0x7864	            0xeb13	                           jmp 0x40078b9	      4848	normal.c	FUNCTION_51	IF_8	IF_9
0x7866	    0x488b05000000	            mov rax, qword [0x040078ad] 	      4850	normal.c	FUNCTION_51	IF_8	ELSE_5
0x786d	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4850	normal.c	FUNCTION_51	IF_8	ELSE_5
0x7871	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      4850	normal.c	FUNCTION_51	IF_8	ELSE_5
0x7875	        0x48895038	             mov qword [rax + 0x38], rdx	      4850	normal.c	FUNCTION_51	IF_8	ELSE_5
0x7879	      0xe800000000	                          call 0x40078be	      4851	normal.c	FUNCTION_51	IF_8	CALL_13
0x787e	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7881	          0x83f85e	                           cmp eax, 0x5e	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7884	     0xf84fe020000	                            je 0x4007bc8	      4854	normal.c	FUNCTION_51	SWITCH_1
0x788a	          0x83f85e	                           cmp eax, 0x5e	      4854	normal.c	FUNCTION_51	SWITCH_1
0x788d	     0xf8f26010000	                            jg 0x40079f9	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7893	          0x83f844	                           cmp eax, 0x44	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7896	     0xf84e7060000	                            je 0x4007fc3	      4854	normal.c	FUNCTION_51	SWITCH_1
0x789c	          0x83f844	                           cmp eax, 0x44	      4854	normal.c	FUNCTION_51	SWITCH_1
0x789f	     0xf8f8e000000	                            jg 0x4007973	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78a5	          0x83f82b	                           cmp eax, 0x2b	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78a8	     0xf8412020000	                            je 0x4007b00	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78ae	          0x83f82b	                           cmp eax, 0x2b	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78b1	            0x7f44	                            jg 0x4007937	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78b3	      0x3db5beffff	                     cmp eax, 0xffffbeb5	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78b8	     0xf8461020000	                            je 0x4007b5f	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78be	      0x3db5beffff	                     cmp eax, 0xffffbeb5	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78c3	            0x7f1b	                            jg 0x4007920	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78c5	      0x3d958dffff	                     cmp eax, 0xffff8d95	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78ca	     0xf842a040000	                            je 0x4007d3a	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78d0	      0x3d9593ffff	                     cmp eax, 0xffff9395	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78d5	     0xf8480030000	                            je 0x4007c9b	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78db	      0xe9fc0d0000	                           jmp 0x400871c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78e0	          0x83f80a	                            cmp eax, 0xa	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78e3	     0xf8436020000	                            je 0x4007b5f	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78e9	          0x83f80d	                            cmp eax, 0xd	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78ec	     0xf842d020000	                            je 0x4007b5f	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78f2	      0xe9e50d0000	                           jmp 0x400871c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78f7	          0x83f83d	                           cmp eax, 0x3d	      4854	normal.c	FUNCTION_51	SWITCH_1
0x78fa	     0xf84b80d0000	                            je 0x40086f8	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7900	          0x83f83d	                           cmp eax, 0x3d	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7903	            0x7f17	                            jg 0x400795c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7905	          0x83f82d	                           cmp eax, 0x2d	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7908	     0xf84ea020000	                            je 0x4007c38	      4854	normal.c	FUNCTION_51	SWITCH_1
0x790e	          0x83f82e	                           cmp eax, 0x2e	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7911	     0xf843f020000	                            je 0x4007b96	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7917	      0xe9c00d0000	                           jmp 0x400871c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x791c	          0x83f841	                           cmp eax, 0x41	      4854	normal.c	FUNCTION_51	SWITCH_1
0x791f	     0xf8404080000	                            je 0x4008169	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7925	          0x83f843	                           cmp eax, 0x43	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7928	     0xf841a090000	                            je 0x4008288	      4854	normal.c	FUNCTION_51	SWITCH_1
0x792e	      0xe9a90d0000	                           jmp 0x400871c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7933	          0x83f84d	                           cmp eax, 0x4d	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7936	     0xf84310a0000	                            je 0x40083ad	      4854	normal.c	FUNCTION_51	SWITCH_1
0x793c	          0x83f84d	                           cmp eax, 0x4d	      4854	normal.c	FUNCTION_51	SWITCH_1
0x793f	            0x7f3c	                            jg 0x40079bd	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7941	          0x83f847	                           cmp eax, 0x47	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7944	     0xf84010c0000	                            je 0x400858b	      4854	normal.c	FUNCTION_51	SWITCH_1
0x794a	          0x83f847	                           cmp eax, 0x47	      4854	normal.c	FUNCTION_51	SWITCH_1
0x794d	            0x7f17	                            jg 0x40079a6	      4854	normal.c	FUNCTION_51	SWITCH_1
0x794f	          0x83f845	                           cmp eax, 0x45	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7952	     0xf848a060000	                            je 0x4008022	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7958	          0x83f846	                           cmp eax, 0x46	      4854	normal.c	FUNCTION_51	SWITCH_1
0x795b	     0xf84a1050000	                            je 0x4007f42	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7961	      0xe9760d0000	                           jmp 0x400871c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7966	          0x83f848	                           cmp eax, 0x48	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7969	     0xf84c0020000	                            je 0x4007c6f	      4854	normal.c	FUNCTION_51	SWITCH_1
0x796f	          0x83f84c	                           cmp eax, 0x4c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7972	     0xf8456030000	                            je 0x4007d0e	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7978	      0xe95f0d0000	                           jmp 0x400871c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x797d	          0x83f852	                           cmp eax, 0x52	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7980	     0xf847b0a0000	                            je 0x4008441	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7986	          0x83f852	                           cmp eax, 0x52	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7989	            0x7f17	                            jg 0x40079e2	      4854	normal.c	FUNCTION_51	SWITCH_1
0x798b	          0x83f84e	                           cmp eax, 0x4e	      4854	normal.c	FUNCTION_51	SWITCH_1
0x798e	     0xf84e0060000	                            je 0x40080b4	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7994	          0x83f84f	                           cmp eax, 0x4f	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7997	     0xf842c080000	                            je 0x4008209	      4854	normal.c	FUNCTION_51	SWITCH_1
0x799d	      0xe93a0d0000	                           jmp 0x400871c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79a2	          0x83f857	                           cmp eax, 0x57	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79a5	     0xf84a00b0000	                            je 0x400858b	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79ab	          0x83f858	                           cmp eax, 0x58	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79ae	     0xf840d090000	                            je 0x4008301	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79b4	      0xe9230d0000	                           jmp 0x400871c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79b9	          0x83f86c	                           cmp eax, 0x6c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79bc	     0xf8438030000	                            je 0x4007d3a	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79c2	          0x83f86c	                           cmp eax, 0x6c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79c5	            0x7f73	                            jg 0x4007a7a	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79c7	          0x83f866	                           cmp eax, 0x66	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79ca	     0xf8432050000	                            je 0x4007f42	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79d0	          0x83f866	                           cmp eax, 0x66	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79d3	            0x7f3c	                            jg 0x4007a51	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79d5	          0x83f863	                           cmp eax, 0x63	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79d8	     0xf841e080000	                            je 0x400823c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79de	          0x83f863	                           cmp eax, 0x63	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79e1	            0x7f17	                            jg 0x4007a3a	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79e3	          0x83f861	                           cmp eax, 0x61	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79e6	     0xf84c5060000	                            je 0x40080f1	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79ec	          0x83f862	                           cmp eax, 0x62	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79ef	     0xf840d020000	                            je 0x4007c42	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79f5	      0xe9e20c0000	                           jmp 0x400871c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79fa	          0x83f864	                           cmp eax, 0x64	      4854	normal.c	FUNCTION_51	SWITCH_1
0x79fd	     0xf8480050000	                            je 0x4007fc3	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a03	          0x83f865	                           cmp eax, 0x65	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a06	     0xf84fe030000	                            je 0x4007e4a	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a0c	      0xe9cb0c0000	                           jmp 0x400871c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a11	          0x83f869	                           cmp eax, 0x69	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a14	     0xf8470060000	                            je 0x40080ca	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a1a	          0x83f869	                           cmp eax, 0x69	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a1d	     0xf8f000a0000	                            jg 0x4008463	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a23	          0x83f867	                           cmp eax, 0x67	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a26	     0xf841f0b0000	                            je 0x400858b	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a2c	          0x83f868	                           cmp eax, 0x68	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a2f	     0xf8426020000	                            je 0x4007c9b	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a35	      0xe9a20c0000	                           jmp 0x400871c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a3a	          0x83f874	                           cmp eax, 0x74	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a3d	     0xf84e6000000	                            je 0x4007b69	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a43	          0x83f874	                           cmp eax, 0x74	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a46	            0x7f3c	                            jg 0x4007ac4	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a48	          0x83f86f	                           cmp eax, 0x6f	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a4b	     0xf843a070000	                            je 0x40081cb	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a51	          0x83f86f	                           cmp eax, 0x6f	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a54	            0x7f17	                            jg 0x4007aad	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a56	          0x83f86d	                           cmp eax, 0x6d	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a59	     0xf848e080000	                            je 0x400832d	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a5f	          0x83f86e	                           cmp eax, 0x6e	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a62	     0xf84f6050000	                            je 0x400809e	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a68	      0xe96f0c0000	                           jmp 0x400871c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a6d	          0x83f872	                           cmp eax, 0x72	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a70	     0xf8427090000	                            je 0x40083dd	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a76	          0x83f873	                           cmp eax, 0x73	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a79	     0xf84be020000	                            je 0x4007d7d	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a7f	      0xe9580c0000	                           jmp 0x400871c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a84	          0x83f877	                           cmp eax, 0x77	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a87	     0xf84be0a0000	                            je 0x400858b	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a8d	          0x83f877	                           cmp eax, 0x77	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a90	            0x7f17	                            jg 0x4007ae9	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a92	          0x83f875	                           cmp eax, 0x75	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a95	     0xf84cd090000	                            je 0x40084a8	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a9b	          0x83f876	                           cmp eax, 0x76	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7a9e	     0xf84e5070000	                            je 0x40082c9	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7aa4	      0xe9330c0000	                           jmp 0x400871c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7aa9	          0x83f878	                           cmp eax, 0x78	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7aac	     0xf84e1070000	                            je 0x40082d3	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7ab2	          0x83f87a	                           cmp eax, 0x7a	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7ab5	     0xf84a5000000	                            je 0x4007ba0	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7abb	      0xe91c0c0000	                           jmp 0x400871c	      4854	normal.c	FUNCTION_51	SWITCH_1
0x7ac0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4858	normal.c	FUNCTION_51	SWITCH_1	IF_10
0x7ac4	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4858	normal.c	FUNCTION_51	SWITCH_1	IF_10
0x7ac8	          0x4885c0	                           test rax, rax	      4858	normal.c	FUNCTION_51	SWITCH_1	IF_10
0x7acb	            0x7552	                           jne 0x4007b5f	      4858	normal.c	FUNCTION_51	SWITCH_1	IF_10
0x7acd	      0xe800000000	                          call 0x4007b12	      4861	normal.c	FUNCTION_51	SWITCH_1	IF_10	CALL_14
0x7ad2	    0x488b05000000	            mov rax, qword [0x04007b19] 	      4862	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x7ad9	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      4862	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x7ae0	    0x488b05000000	            mov rax, qword [0x04007b27] 	      4862	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x7ae7	          0x488b00	                    mov rax, qword [rax]	      4862	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x7aea	          0x4839c2	                            cmp rdx, rax	      4862	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x7aed	            0x7e17	                           jle 0x4007b46	      4862	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x7aef	    0x488b05000000	            mov rax, qword [0x04007b36] 	      4863	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x7af6	    0x488b15000000	            mov rdx, qword [0x04007b3d] 	      4863	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x7afd	          0x488b12	                    mov rdx, qword [rdx]	      4863	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x7b00	        0x48895038	             mov qword [rax + 0x38], rdx	      4863	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x7b04	            0xeb19	                           jmp 0x4007b5f	      4863	normal.c	FUNCTION_51	SWITCH_1	IF_10	IF_11
0x7b06	    0x488b05000000	            mov rax, qword [0x04007b4d] 	      4865	normal.c	FUNCTION_51	SWITCH_1	IF_10	ELSE_6
0x7b0d	    0x488b15000000	            mov rdx, qword [0x04007b54] 	      4865	normal.c	FUNCTION_51	SWITCH_1	IF_10	ELSE_6
0x7b14	    0x488b92e80000	            mov rdx, qword [rdx + 0xe8] 	      4865	normal.c	FUNCTION_51	SWITCH_1	IF_10	ELSE_6
0x7b1b	        0x48895038	             mov qword [rax + 0x38], rdx	      4865	normal.c	FUNCTION_51	SWITCH_1	IF_10	ELSE_6
0x7b1f	      0xbf05000000	                              mov edi, 5	      4871	normal.c	FUNCTION_51	SWITCH_1	CALL_15
0x7b24	      0xe800000000	                          call 0x4007b69	      4871	normal.c	FUNCTION_51	SWITCH_1	CALL_15
0x7b29	      0xbe01000000	                              mov esi, 1	      4874	normal.c	FUNCTION_51	SWITCH_1	CALL_16
0x7b2e	      0xbf00000000	                              mov edi, 0	      4874	normal.c	FUNCTION_51	SWITCH_1	CALL_16
0x7b33	      0xe800000000	                          call 0x4007b78	      4874	normal.c	FUNCTION_51	SWITCH_1	CALL_16
0x7b38	      0xbf0a000000	                            mov edi, 0xa	      4875	normal.c	FUNCTION_51	SWITCH_1	CALL_17
0x7b3d	      0xe800000000	                          call 0x4007b82	      4875	normal.c	FUNCTION_51	SWITCH_1	CALL_17
0x7b42	    0x488b05000000	            mov rax, qword [0x04007b89] 	      4876	normal.c	FUNCTION_51	SWITCH_1	CALL_18
0x7b49	          0x4889c7	                            mov rdi, rax	      4876	normal.c	FUNCTION_51	SWITCH_1	CALL_18
0x7b4c	      0xe800000000	                          call 0x4007b91	      4876	normal.c	FUNCTION_51	SWITCH_1	CALL_18
0x7b51	      0xe9b30b0000	                           jmp 0x4008749	      4877	normal.c	FUNCTION_51	SWITCH_1
0x7b56	      0xbf05000000	                              mov edi, 5	      4880	normal.c	FUNCTION_51	SWITCH_1	CALL_19
0x7b5b	      0xe800000000	                          call 0x4007ba0	      4880	normal.c	FUNCTION_51	SWITCH_1	CALL_19
0x7b60	      0xbf01000000	                              mov edi, 1	      4883	normal.c	FUNCTION_51	SWITCH_1	CALL_20
0x7b65	      0xe800000000	                          call 0x4007baa	      4883	normal.c	FUNCTION_51	SWITCH_1	CALL_20
0x7b6a	      0xbf0a000000	                            mov edi, 0xa	      4884	normal.c	FUNCTION_51	SWITCH_1	CALL_21
0x7b6f	      0xe800000000	                          call 0x4007bb4	      4884	normal.c	FUNCTION_51	SWITCH_1	CALL_21
0x7b74	    0x488b05000000	            mov rax, qword [0x04007bbb] 	      4885	normal.c	FUNCTION_51	SWITCH_1	CALL_22
0x7b7b	          0x4889c7	                            mov rdi, rax	      4885	normal.c	FUNCTION_51	SWITCH_1	CALL_22
0x7b7e	      0xe800000000	                          call 0x4007bc3	      4885	normal.c	FUNCTION_51	SWITCH_1	CALL_22
0x7b83	      0xe9810b0000	                           jmp 0x4008749	      4886	normal.c	FUNCTION_51	SWITCH_1
0x7b88	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4892	normal.c	FUNCTION_51	SWITCH_1	IF_12
0x7b8c	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4892	normal.c	FUNCTION_51	SWITCH_1	IF_12
0x7b90	          0x4885c0	                           test rax, rax	      4892	normal.c	FUNCTION_51	SWITCH_1	IF_12
0x7b93	            0x7427	                            je 0x4007bfc	      4892	normal.c	FUNCTION_51	SWITCH_1	IF_12
0x7b95	      0xbe01000000	                              mov esi, 1	      4894	normal.c	FUNCTION_51	SWITCH_1	IF_12	CALL_23
0x7b9a	      0xbf00000000	                              mov edi, 0	      4894	normal.c	FUNCTION_51	SWITCH_1	IF_12	CALL_23
0x7b9f	      0xe800000000	                          call 0x4007be4	      4894	normal.c	FUNCTION_51	SWITCH_1	IF_12	CALL_23
0x7ba4	    0x488b05000000	            mov rax, qword [0x04007beb] 	      4895	normal.c	FUNCTION_51	SWITCH_1	IF_12
0x7bab	    0x488b15000000	            mov rdx, qword [0x04007bf2] 	      4895	normal.c	FUNCTION_51	SWITCH_1	IF_12
0x7bb2	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      4895	normal.c	FUNCTION_51	SWITCH_1	IF_12
0x7bb6	        0x48895038	             mov qword [rax + 0x38], rdx	      4895	normal.c	FUNCTION_51	SWITCH_1	IF_12
0x7bba	            0xeb3c	                           jmp 0x4007c38	      4895	normal.c	FUNCTION_51	SWITCH_1	IF_12
0x7bbc	    0x488b05000000	            mov rax, qword [0x04007c03] 	      4897	normal.c	FUNCTION_51	SWITCH_1	ELSE_7	IF_13
0x7bc3	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4897	normal.c	FUNCTION_51	SWITCH_1	ELSE_7	IF_13
0x7bc7	        0x4883f801	                              cmp rax, 1	      4897	normal.c	FUNCTION_51	SWITCH_1	ELSE_7	IF_13
0x7bcb	            0x7511	                           jne 0x4007c1e	      4897	normal.c	FUNCTION_51	SWITCH_1	ELSE_7	IF_13
0x7bcd	    0x488b05000000	            mov rax, qword [0x04007c14] 	      4898	normal.c	FUNCTION_51	SWITCH_1	ELSE_7	IF_13
0x7bd4	    0x48c740380100	               mov qword [rax + 0x38], 1	      4898	normal.c	FUNCTION_51	SWITCH_1	ELSE_7	IF_13
0x7bdc	            0xeb1a	                           jmp 0x4007c38	      4898	normal.c	FUNCTION_51	SWITCH_1	ELSE_7	IF_13
0x7bde	    0x488b05000000	            mov rax, qword [0x04007c25] 	      4900	normal.c	FUNCTION_51	SWITCH_1	ELSE_8
0x7be5	    0x488b15000000	            mov rdx, qword [0x04007c2c] 	      4900	normal.c	FUNCTION_51	SWITCH_1	ELSE_8
0x7bec	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      4900	normal.c	FUNCTION_51	SWITCH_1	ELSE_8
0x7bf0	        0x4883ea01	                              sub rdx, 1	      4900	normal.c	FUNCTION_51	SWITCH_1	ELSE_8
0x7bf4	        0x48895038	             mov qword [rax + 0x38], rdx	      4900	normal.c	FUNCTION_51	SWITCH_1	ELSE_8
0x7bf8	      0xbf05000000	                              mov edi, 5	      4903	normal.c	FUNCTION_51	SWITCH_1	CALL_24
0x7bfd	      0xe800000000	                          call 0x4007c42	      4903	normal.c	FUNCTION_51	SWITCH_1	CALL_24
0x7c02	      0xbe01000000	                              mov esi, 1	      4906	normal.c	FUNCTION_51	SWITCH_1	CALL_25
0x7c07	      0xbf00000000	                              mov edi, 0	      4906	normal.c	FUNCTION_51	SWITCH_1	CALL_25
0x7c0c	      0xe800000000	                          call 0x4007c51	      4906	normal.c	FUNCTION_51	SWITCH_1	CALL_25
0x7c11	      0xbf0a000000	                            mov edi, 0xa	      4907	normal.c	FUNCTION_51	SWITCH_1	CALL_26
0x7c16	      0xe800000000	                          call 0x4007c5b	      4907	normal.c	FUNCTION_51	SWITCH_1	CALL_26
0x7c1b	    0x488b05000000	            mov rax, qword [0x04007c62] 	      4908	normal.c	FUNCTION_51	SWITCH_1	CALL_27
0x7c22	          0x4889c7	                            mov rdi, rax	      4908	normal.c	FUNCTION_51	SWITCH_1	CALL_27
0x7c25	      0xe800000000	                          call 0x4007c6a	      4908	normal.c	FUNCTION_51	SWITCH_1	CALL_27
0x7c2a	      0xe9da0a0000	                           jmp 0x4008749	      4909	normal.c	FUNCTION_51	SWITCH_1
0x7c2f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4913	normal.c	FUNCTION_51	SWITCH_1
0x7c33	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4913	normal.c	FUNCTION_51	SWITCH_1
0x7c37	    0x488b05000000	            mov rax, qword [0x04007c7e] 	      4913	normal.c	FUNCTION_51	SWITCH_1
0x7c3e	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4913	normal.c	FUNCTION_51	SWITCH_1
0x7c44	            0x89c1	                            mov ecx, eax	      4913	normal.c	FUNCTION_51	SWITCH_1
0x7c46	          0xc1e91f	                           shr ecx, 0x1f	      4913	normal.c	FUNCTION_51	SWITCH_1
0x7c49	             0x1c8	                            add eax, ecx	      4913	normal.c	FUNCTION_51	SWITCH_1
0x7c4b	            0xd1f8	                              sar eax, 1	      4913	normal.c	FUNCTION_51	SWITCH_1
0x7c4d	            0x4898	                                    cdqe	      4913	normal.c	FUNCTION_51	SWITCH_1
0x7c4f	        0x480fafd0	                           imul rdx, rax	      4913	normal.c	FUNCTION_51	SWITCH_1
0x7c53	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4913	normal.c	FUNCTION_51	SWITCH_1
0x7c57	        0x48895030	             mov qword [rax + 0x30], rdx	      4913	normal.c	FUNCTION_51	SWITCH_1
0x7c5b	    0x488b05000000	            mov rax, qword [0x04007ca2] 	      4919	normal.c	FUNCTION_51	SWITCH_1	IF_14
0x7c62	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      4919	normal.c	FUNCTION_51	SWITCH_1	IF_14
0x7c68	            0x85c0	                           test eax, eax	      4919	normal.c	FUNCTION_51	SWITCH_1	IF_14
0x7c6a	     0xf857d0a0000	                           jne 0x400872d	      4919	normal.c	FUNCTION_51	SWITCH_1	IF_14
0x7c70	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4921	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x7c74	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4921	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x7c78	            0x89c2	                            mov edx, eax	      4921	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x7c7a	    0x488b05000000	            mov rax, qword [0x04007cc1] 	      4921	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x7c81	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      4921	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x7c87	            0x39c2	                            cmp edx, eax	      4921	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x7c89	            0x7e13	                           jle 0x4007cde	      4921	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x7c8b	    0x488b05000000	            mov rax, qword [0x04007cd2] 	      4922	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x7c92	    0xc78094000000	               mov dword [rax + 0x94], 0	      4922	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x7c9c	            0xeb26	                           jmp 0x4007d04	      4922	normal.c	FUNCTION_51	SWITCH_1	IF_14	IF_15
0x7c9e	    0x488b05000000	            mov rax, qword [0x04007ce5] 	      4924	normal.c	FUNCTION_51	SWITCH_1	IF_14	ELSE_9
0x7ca5	    0x488b15000000	            mov rdx, qword [0x04007cec] 	      4924	normal.c	FUNCTION_51	SWITCH_1	IF_14	ELSE_9
0x7cac	    0x8b8a94000000	            mov ecx, dword [rdx + 0x94] 	      4924	normal.c	FUNCTION_51	SWITCH_1	IF_14	ELSE_9
0x7cb2	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4924	normal.c	FUNCTION_51	SWITCH_1	IF_14	ELSE_9
0x7cb6	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      4924	normal.c	FUNCTION_51	SWITCH_1	IF_14	ELSE_9
0x7cba	            0x29d1	                            sub ecx, edx	      4924	normal.c	FUNCTION_51	SWITCH_1	IF_14	ELSE_9
0x7cbc	            0x89ca	                            mov edx, ecx	      4924	normal.c	FUNCTION_51	SWITCH_1	IF_14	ELSE_9
0x7cbe	    0x899094000000	             mov dword [rax + 0x94], edx	      4924	normal.c	FUNCTION_51	SWITCH_1	IF_14	ELSE_9
0x7cc4	      0xe800000000	                          call 0x4007d09	      4925	normal.c	FUNCTION_51	SWITCH_1	IF_14	CALL_28
0x7cc9	      0xe91f0a0000	                           jmp 0x400872d	      4927	normal.c	FUNCTION_51	SWITCH_1
0x7cce	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4930	normal.c	FUNCTION_51	SWITCH_1
0x7cd2	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      4930	normal.c	FUNCTION_51	SWITCH_1
0x7cd6	    0x488b05000000	            mov rax, qword [0x04007d1d] 	      4930	normal.c	FUNCTION_51	SWITCH_1
0x7cdd	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4930	normal.c	FUNCTION_51	SWITCH_1
0x7ce3	            0x89c1	                            mov ecx, eax	      4930	normal.c	FUNCTION_51	SWITCH_1
0x7ce5	          0xc1e91f	                           shr ecx, 0x1f	      4930	normal.c	FUNCTION_51	SWITCH_1
0x7ce8	             0x1c8	                            add eax, ecx	      4930	normal.c	FUNCTION_51	SWITCH_1
0x7cea	            0xd1f8	                              sar eax, 1	      4930	normal.c	FUNCTION_51	SWITCH_1
0x7cec	            0x4898	                                    cdqe	      4930	normal.c	FUNCTION_51	SWITCH_1
0x7cee	        0x480fafd0	                           imul rdx, rax	      4930	normal.c	FUNCTION_51	SWITCH_1
0x7cf2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4930	normal.c	FUNCTION_51	SWITCH_1
0x7cf6	        0x48895030	             mov qword [rax + 0x30], rdx	      4930	normal.c	FUNCTION_51	SWITCH_1
0x7cfa	    0x488b05000000	            mov rax, qword [0x04007d41] 	      4936	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x7d01	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      4936	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x7d07	            0x85c0	                           test eax, eax	      4936	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x7d09	     0xf85e1090000	                           jne 0x4008730	      4936	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x7d0f	    0x488b05000000	            mov rax, qword [0x04007d56] 	      4939	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x7d16	    0x488b15000000	            mov rdx, qword [0x04007d5d] 	      4939	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x7d1d	    0x8b8a94000000	            mov ecx, dword [rdx + 0x94] 	      4939	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x7d23	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4939	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x7d27	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      4939	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x7d2b	             0x1ca	                            add edx, ecx	      4939	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x7d2d	    0x899094000000	             mov dword [rax + 0x94], edx	      4939	normal.c	FUNCTION_51	SWITCH_1	IF_16
0x7d33	      0xe800000000	                          call 0x4007d78	      4940	normal.c	FUNCTION_51	SWITCH_1	IF_16	CALL_29
0x7d38	      0xe9b3090000	                           jmp 0x4008730	      4942	normal.c	FUNCTION_51	SWITCH_1
0x7d3d	    0x488b05000000	            mov rax, qword [0x04007d84] 	      4945	normal.c	FUNCTION_51	SWITCH_1	IF_17
0x7d44	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      4945	normal.c	FUNCTION_51	SWITCH_1	IF_17
0x7d4a	            0x85c0	                           test eax, eax	      4945	normal.c	FUNCTION_51	SWITCH_1	IF_17
0x7d4c	     0xf85a1090000	                           jne 0x4008733	      4945	normal.c	FUNCTION_51	SWITCH_1	IF_17
0x7d52	    0x488b05000000	            mov rax, qword [0x04007d99] 	      4948	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18	CALL_30
0x7d59	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4948	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18	CALL_30
0x7d5d	      0xba00000000	                              mov edx, 0	      4948	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18	CALL_30
0x7d62	      0xbe00000000	                              mov esi, 0	      4948	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18	CALL_30
0x7d67	          0x4889c7	                            mov rdi, rax	      4948	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18	CALL_30
0x7d6a	      0xe800000000	                          call 0x4007daf	      4948	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18	CALL_30
0x7d6f	            0x85c0	                           test eax, eax	      4948	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18	CALL_30
0x7d71	            0x7409	                            je 0x4007dbc	      4948	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18	CALL_30
0x7d73	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4949	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18
0x7d7a	            0xeb29	                           jmp 0x4007de5	      4949	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_18
0x7d7c	    0x488b05000000	            mov rax, qword [0x04007dc3] 	      4952	normal.c	FUNCTION_51	SWITCH_1	IF_17	CALL_31
0x7d83	        0x488d7038	                   lea rsi, [rax + 0x38]	      4952	normal.c	FUNCTION_51	SWITCH_1	IF_17	CALL_31
0x7d87	    0x488b05000000	            mov rax, qword [0x04007dce] 	      4952	normal.c	FUNCTION_51	SWITCH_1	IF_17	CALL_31
0x7d8e	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      4952	normal.c	FUNCTION_51	SWITCH_1	IF_17	CALL_31
0x7d92	    0x41b800000000	                              mov r8d, 0	      4952	normal.c	FUNCTION_51	SWITCH_1	IF_17	CALL_31
0x7d98	      0xb900000000	                              mov ecx, 0	      4952	normal.c	FUNCTION_51	SWITCH_1	IF_17	CALL_31
0x7d9d	          0x4889c7	                            mov rdi, rax	      4952	normal.c	FUNCTION_51	SWITCH_1	IF_17	CALL_31
0x7da0	      0xe800000000	                          call 0x4007de5	      4952	normal.c	FUNCTION_51	SWITCH_1	IF_17	CALL_31
0x7da5	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      4953	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x7da8	          0x4863d0	                         movsxd rdx, eax	      4953	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x7dab	    0x488b05000000	            mov rax, qword [0x04007df2] 	      4953	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x7db2	          0x4839c2	                            cmp rdx, rax	      4953	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x7db5	            0x7e15	                           jle 0x4007e0c	      4953	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x7db7	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      4954	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x7dba	            0x89c2	                            mov edx, eax	      4954	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x7dbc	    0x488b05000000	            mov rax, qword [0x04007e03] 	      4954	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x7dc3	            0x29c2	                            sub edx, eax	      4954	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x7dc5	            0x89d0	                            mov eax, edx	      4954	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x7dc7	          0x8945d0	             mov dword [rbp - 0x30], eax	      4954	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x7dca	            0xeb07	                           jmp 0x4007e13	      4954	normal.c	FUNCTION_51	SWITCH_1	IF_17	IF_19
0x7dcc	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4956	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11
0x7dd3	    0x488b05000000	            mov rax, qword [0x04007e1a] 	      4957	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20
0x7dda	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	      4957	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20
0x7de0	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      4957	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20
0x7de3	            0x39c2	                            cmp edx, eax	      4957	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20
0x7de5	     0xf8408090000	                            je 0x4008733	      4957	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20
0x7deb	    0x488b05000000	            mov rax, qword [0x04007e32] 	      4959	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20
0x7df2	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4959	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20
0x7df5	    0x899094000000	             mov dword [rax + 0x94], edx	      4959	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20
0x7dfb	      0xbf28000000	                           mov edi, 0x28	      4960	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20	CALL_32
0x7e00	      0xe800000000	                          call 0x4007e45	      4960	normal.c	FUNCTION_51	SWITCH_1	IF_17	ELSE_11	IF_20	CALL_32
0x7e05	      0xe9e9080000	                           jmp 0x4008733	      4963	normal.c	FUNCTION_51	SWITCH_1
0x7e0a	    0x488b05000000	            mov rax, qword [0x04007e51] 	      4966	normal.c	FUNCTION_51	SWITCH_1	IF_21
0x7e11	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      4966	normal.c	FUNCTION_51	SWITCH_1	IF_21
0x7e17	            0x85c0	                           test eax, eax	      4966	normal.c	FUNCTION_51	SWITCH_1	IF_21
0x7e19	     0xf85d7080000	                           jne 0x4008736	      4966	normal.c	FUNCTION_51	SWITCH_1	IF_21
0x7e1f	    0x488b05000000	            mov rax, qword [0x04007e66] 	      4969	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22	CALL_33
0x7e26	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4969	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22	CALL_33
0x7e2a	      0xba00000000	                              mov edx, 0	      4969	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22	CALL_33
0x7e2f	      0xbe00000000	                              mov esi, 0	      4969	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22	CALL_33
0x7e34	          0x4889c7	                            mov rdi, rax	      4969	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22	CALL_33
0x7e37	      0xe800000000	                          call 0x4007e7c	      4969	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22	CALL_33
0x7e3c	            0x85c0	                           test eax, eax	      4969	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22	CALL_33
0x7e3e	            0x7409	                            je 0x4007e89	      4969	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22	CALL_33
0x7e40	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4970	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22
0x7e47	            0xeb2b	                           jmp 0x4007eb4	      4970	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_22
0x7e49	    0x488b05000000	            mov rax, qword [0x04007e90] 	      4973	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_34
0x7e50	        0x488d7038	                   lea rsi, [rax + 0x38]	      4973	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_34
0x7e54	    0x488b05000000	            mov rax, qword [0x04007e9b] 	      4973	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_34
0x7e5b	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      4973	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_34
0x7e5f	          0x4989d0	                             mov r8, rdx	      4973	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_34
0x7e62	      0xb900000000	                              mov ecx, 0	      4973	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_34
0x7e67	      0xba00000000	                              mov edx, 0	      4973	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_34
0x7e6c	          0x4889c7	                            mov rdi, rax	      4973	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_34
0x7e6f	      0xe800000000	                          call 0x4007eb4	      4973	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_34
0x7e74	    0x488b05000000	            mov rax, qword [0x04007ebb] 	      4974	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_35
0x7e7b	    0x8b98ac000000	            mov ebx, dword [rax + 0xac] 	      4974	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_35
0x7e81	      0xe800000000	                          call 0x4007ec6	      4974	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_35
0x7e86	            0x29c3	                            sub ebx, eax	      4974	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_35
0x7e88	            0x89d8	                            mov eax, ebx	      4974	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_35
0x7e8a	            0x4898	                                    cdqe	      4974	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_35
0x7e8c	        0x488945b8	             mov qword [rbp - 0x48], rax	      4974	normal.c	FUNCTION_51	SWITCH_1	IF_21	CALL_35
0x7e90	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      4975	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x7e93	          0x4863d0	                         movsxd rdx, eax	      4975	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x7e96	    0x488b05000000	            mov rax, qword [0x04007edd] 	      4975	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x7e9d	          0x4801d0	                            add rax, rdx	      4975	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x7ea0	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      4975	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x7ea4	            0x7d09	                           jge 0x4007eef	      4975	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x7ea6	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4976	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x7ead	            0xeb1c	                           jmp 0x4007f0b	      4976	normal.c	FUNCTION_51	SWITCH_1	IF_21	IF_23
0x7eaf	    0x488b05000000	            mov rax, qword [0x04007ef6] 	      4978	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13
0x7eb6	            0x89c2	                            mov edx, eax	      4978	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13
0x7eb8	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      4978	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13
0x7ebb	             0x1c2	                            add edx, eax	      4978	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13
0x7ebd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4978	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13
0x7ec1	            0x29c2	                            sub edx, eax	      4978	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13
0x7ec3	            0x89d0	                            mov eax, edx	      4978	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13
0x7ec5	          0x83c001	                              add eax, 1	      4978	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13
0x7ec8	          0x8945d0	             mov dword [rbp - 0x30], eax	      4978	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13
0x7ecb	    0x488b05000000	            mov rax, qword [0x04007f12] 	      4979	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24
0x7ed2	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	      4979	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24
0x7ed8	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      4979	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24
0x7edb	            0x39c2	                            cmp edx, eax	      4979	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24
0x7edd	     0xf8413080000	                            je 0x4008736	      4979	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24
0x7ee3	    0x488b05000000	            mov rax, qword [0x04007f2a] 	      4981	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24
0x7eea	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4981	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24
0x7eed	    0x899094000000	             mov dword [rax + 0x94], edx	      4981	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24
0x7ef3	      0xbf28000000	                           mov edi, 0x28	      4982	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24	CALL_36
0x7ef8	      0xe800000000	                          call 0x4007f3d	      4982	normal.c	FUNCTION_51	SWITCH_1	IF_21	ELSE_13	IF_24	CALL_36
0x7efd	      0xe9f4070000	                           jmp 0x4008736	      4985	normal.c	FUNCTION_51	SWITCH_1
0x7f02	      0xbf01000000	                              mov edi, 1	      4991	normal.c	FUNCTION_51	SWITCH_1	IF_25	CALL_37
0x7f07	      0xe800000000	                          call 0x4007f4c	      4991	normal.c	FUNCTION_51	SWITCH_1	IF_25	CALL_37
0x7f0c	            0x85c0	                           test eax, eax	      4991	normal.c	FUNCTION_51	SWITCH_1	IF_25	CALL_37
0x7f0e	            0x745f	                            je 0x4007faf	      4991	normal.c	FUNCTION_51	SWITCH_1	IF_25	CALL_37
0x7f10	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4993	normal.c	FUNCTION_51	SWITCH_1	IF_25
0x7f14	    0xc74010660000	           mov dword [rax + 0x10], 0x66 	      4993	normal.c	FUNCTION_51	SWITCH_1	IF_25
0x7f1b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4994	normal.c	FUNCTION_51	SWITCH_1	IF_25	CALL_38
0x7f1f	          0x4889c7	                            mov rdi, rax	      4994	normal.c	FUNCTION_51	SWITCH_1	IF_25	CALL_38
0x7f22	      0xe80c6c0000	                    call sym.nv_operator	      4994	normal.c	FUNCTION_51	SWITCH_1	IF_25	CALL_38
0x7f27	    0x488b05000000	            mov rax, qword [0x04007f6e] 	      4995	normal.c	FUNCTION_51	SWITCH_1	IF_25
0x7f2e	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      4995	normal.c	FUNCTION_51	SWITCH_1	IF_25
0x7f38	        0x837da046	           cmp dword [rbp - 0x60], 0x46 	      4998	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26
0x7f3c	     0xf85b7070000	                           jne 0x4008739	      4998	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26
0x7f42	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4998	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26
0x7f46	          0x488b00	                    mov rax, qword [rax]	      4998	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26
0x7f49	            0x8b00	                    mov eax, dword [rax]	      4998	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26
0x7f4b	          0x83f813	                           cmp eax, 0x13	      4998	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26
0x7f4e	     0xf85a5070000	                           jne 0x4008739	      4998	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26
0x7f54	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5000	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26	CALL_39
0x7f58	          0x4889c7	                            mov rdi, rax	      5000	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26	CALL_39
0x7f5b	      0xe8d36b0000	                    call sym.nv_operator	      5000	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26	CALL_39
0x7f60	    0xc70500000000	               mov dword [0x04007faa], 1	      5001	normal.c	FUNCTION_51	SWITCH_1	IF_25	IF_26
0x7f6a	      0xe98a070000	                           jmp 0x4008739	      5006	normal.c	FUNCTION_51	SWITCH_1
0x7f6f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5005	normal.c	FUNCTION_51	SWITCH_1	CALL_40
0x7f73	          0x488b00	                    mov rax, qword [rax]	      5005	normal.c	FUNCTION_51	SWITCH_1	CALL_40
0x7f76	          0x4889c7	                            mov rdi, rax	      5005	normal.c	FUNCTION_51	SWITCH_1	CALL_40
0x7f79	      0xe86adaffff	                    call sym.clearopbeep	      5005	normal.c	FUNCTION_51	SWITCH_1	CALL_40
0x7f7e	      0xe976070000	                           jmp 0x4008739	      5006	normal.c	FUNCTION_51	SWITCH_1
0x7f83	      0xbf00000000	                              mov edi, 0	      5011	normal.c	FUNCTION_51	SWITCH_1	IF_27	CALL_41
0x7f88	      0xe800000000	                          call 0x4007fcd	      5011	normal.c	FUNCTION_51	SWITCH_1	IF_27	CALL_41
0x7f8d	            0x85c0	                           test eax, eax	      5011	normal.c	FUNCTION_51	SWITCH_1	IF_27	CALL_41
0x7f8f	     0xf8467070000	                            je 0x400873c	      5011	normal.c	FUNCTION_51	SWITCH_1	IF_27	CALL_41
0x7f95	    0x8b0500000000	            mov eax, dword [0x04007fdb] 	      5013	normal.c	FUNCTION_51	SWITCH_1	IF_27	IF_28
0x7f9b	            0x85c0	                           test eax, eax	      5013	normal.c	FUNCTION_51	SWITCH_1	IF_27	IF_28
0x7f9d	            0x7411	                            je 0x4007ff0	      5013	normal.c	FUNCTION_51	SWITCH_1	IF_27	IF_28
0x7f9f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5014	normal.c	FUNCTION_51	SWITCH_1	IF_27	CALL_42
0x7fa3	          0x4889c7	                            mov rdi, rax	      5014	normal.c	FUNCTION_51	SWITCH_1	IF_27	CALL_42
0x7fa6	      0xe8886b0000	                    call sym.nv_operator	      5014	normal.c	FUNCTION_51	SWITCH_1	IF_27	CALL_42
0x7fab	      0xe94c070000	                           jmp 0x400873c	      5019	normal.c	FUNCTION_51	SWITCH_1
0x7fb0	        0x837da044	           cmp dword [rbp - 0x60], 0x44 	      5016	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x7fb4	           0xf94c0	                                 sete al	      5016	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x7fb7	           0xfb6d0	                           movzx edx, al	      5016	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x7fba	    0x488b05000000	            mov rax, qword [0x04008001] 	      5017	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15
0x7fc1	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      5016	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x7fc5	    0x488b05000000	            mov rax, qword [0x0400800c] 	      5016	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x7fcc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5016	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x7fd0	      0xb900000000	                              mov ecx, 0	      5016	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x7fd5	          0x4889c7	                            mov rdi, rax	      5016	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x7fd8	      0xe800000000	                          call 0x400801d	      5016	normal.c	FUNCTION_51	SWITCH_1	IF_27	ELSE_15	CALL_43
0x7fdd	      0xe91a070000	                           jmp 0x400873c	      5019	normal.c	FUNCTION_51	SWITCH_1
0x7fe2	    0x488b05000000	            mov rax, qword [0x04008029] 	      5022	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_44
0x7fe9	          0x4889c7	                            mov rdi, rax	      5022	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_44
0x7fec	      0xe800000000	                          call 0x4008031	      5022	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_44
0x7ff1	            0x85c0	                           test eax, eax	      5022	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_44
0x7ff3	            0x7419	                            je 0x400804e	      5022	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_44
0x7ff5	    0x488b05000000	            mov rax, qword [0x0400803c] 	      5024	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_45
0x7ffc	          0x4889c7	                            mov rdi, rax	      5024	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_45
0x7fff	      0xe800000000	                          call 0x4008044	      5024	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_45
0x8004	      0xe800000000	                          call 0x4008049	      5025	normal.c	FUNCTION_51	SWITCH_1	IF_29	CALL_46
0x8009	      0xe9fb060000	                           jmp 0x4008749	      5032	normal.c	FUNCTION_51	SWITCH_1
0x800e	    0x488b05000000	            mov rax, qword [0x04008055] 	      5027	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_47
0x8015	          0x4889c7	                            mov rdi, rax	      5027	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_47
0x8018	      0xe800000000	                          call 0x400805d	      5027	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_47
0x801d	            0x85c0	                           test eax, eax	      5027	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_47
0x801f	            0x7426	                            je 0x4008087	      5027	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_47
0x8021	    0x488b05000000	            mov rax, qword [0x04008068] 	      5028	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_48
0x8028	          0x488b00	                    mov rax, qword [rax]	      5028	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_48
0x802b	      0xb900000000	                              mov ecx, 0	      5028	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_48
0x8030	      0xba01000000	                              mov edx, 1	      5028	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_48
0x8035	          0x4889c6	                            mov rsi, rax	      5028	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_48
0x8038	      0xbf01000000	                              mov edi, 1	      5028	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_48
0x803d	      0xe800000000	                          call 0x4008082	      5028	normal.c	FUNCTION_51	SWITCH_1	ELSE_16	IF_30	CALL_48
0x8042	      0xe9c2060000	                           jmp 0x4008749	      5032	normal.c	FUNCTION_51	SWITCH_1
0x8047	      0xbf00000000	                              mov edi, 0	      5031	normal.c	FUNCTION_51	SWITCH_1	CALL_50
0x804c	      0xe800000000	                          call 0x4008091	      5031	normal.c	FUNCTION_51	SWITCH_1	CALL_50
0x8051	          0x4889c7	                            mov rdi, rax	      5031	normal.c	FUNCTION_51	SWITCH_1	CALL_50
0x8054	      0xe800000000	                          call 0x4008099	      5031	normal.c	FUNCTION_51	SWITCH_1	CALL_50
0x8059	      0xe9ab060000	                           jmp 0x4008749	      5032	normal.c	FUNCTION_51	SWITCH_1
0x805e	    0x488b05000000	            mov rax, qword [0x040080a5] 	      5035	normal.c	FUNCTION_51	SWITCH_1
0x8065	    0xc780d4010000	              mov dword [rax + 0x1d4], 0	      5035	normal.c	FUNCTION_51	SWITCH_1
0x806f	      0xe995060000	                           jmp 0x4008749	      5036	normal.c	FUNCTION_51	SWITCH_1
0x8074	    0x488b05000000	            mov rax, qword [0x040080bb] 	      5039	normal.c	FUNCTION_51	SWITCH_1
0x807b	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5039	normal.c	FUNCTION_51	SWITCH_1
0x8085	      0xe97f060000	                           jmp 0x4008749	      5040	normal.c	FUNCTION_51	SWITCH_1
0x808a	    0x488b05000000	            mov rax, qword [0x040080d1] 	      5043	normal.c	FUNCTION_51	SWITCH_1
0x8091	    0x488b15000000	            mov rdx, qword [0x040080d8] 	      5043	normal.c	FUNCTION_51	SWITCH_1
0x8098	    0x8b92d4010000	           mov edx, dword [rdx + 0x1d4] 	      5043	normal.c	FUNCTION_51	SWITCH_1
0x809e	            0x85d2	                           test edx, edx	      5043	normal.c	FUNCTION_51	SWITCH_1
0x80a0	           0xf94c2	                                 sete dl	      5043	normal.c	FUNCTION_51	SWITCH_1
0x80a3	           0xfb6d2	                           movzx edx, dl	      5043	normal.c	FUNCTION_51	SWITCH_1
0x80a6	    0x8990d4010000	            mov dword [rax + 0x1d4], edx	      5043	normal.c	FUNCTION_51	SWITCH_1
0x80ac	      0xe958060000	                           jmp 0x4008749	      5044	normal.c	FUNCTION_51	SWITCH_1
0x80b1	    0x488b05000000	            mov rax, qword [0x040080f8] 	      5047	normal.c	FUNCTION_51	SWITCH_1	IF_31	CALL_51
0x80b8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5047	normal.c	FUNCTION_51	SWITCH_1	IF_31	CALL_51
0x80bc	      0xba00000000	                              mov edx, 0	      5047	normal.c	FUNCTION_51	SWITCH_1	IF_31	CALL_51
0x80c1	      0xbe00000000	                              mov esi, 0	      5047	normal.c	FUNCTION_51	SWITCH_1	IF_31	CALL_51
0x80c6	          0x4889c7	                            mov rdi, rax	      5047	normal.c	FUNCTION_51	SWITCH_1	IF_31	CALL_51
0x80c9	      0xe800000000	                          call 0x400810e	      5047	normal.c	FUNCTION_51	SWITCH_1	IF_31	CALL_51
0x80ce	            0x85c0	                           test eax, eax	      5047	normal.c	FUNCTION_51	SWITCH_1	IF_31	CALL_51
0x80d0	            0x7423	                            je 0x4008135	      5047	normal.c	FUNCTION_51	SWITCH_1	IF_31	CALL_51
0x80d2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5048	normal.c	FUNCTION_51	SWITCH_1	CALL_52
0x80d6	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5048	normal.c	FUNCTION_51	SWITCH_1	CALL_52
0x80da	    0x488b05000000	            mov rax, qword [0x04008121] 	      5048	normal.c	FUNCTION_51	SWITCH_1	CALL_52
0x80e1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5048	normal.c	FUNCTION_51	SWITCH_1	CALL_52
0x80e5	          0x4889d6	                            mov rsi, rdx	      5048	normal.c	FUNCTION_51	SWITCH_1	CALL_52
0x80e8	          0x4889c7	                            mov rdi, rax	      5048	normal.c	FUNCTION_51	SWITCH_1	CALL_52
0x80eb	      0xe800000000	                          call 0x4008130	      5048	normal.c	FUNCTION_51	SWITCH_1	CALL_52
0x80f0	      0xe914060000	                           jmp 0x4008749	      5054	normal.c	FUNCTION_51	SWITCH_1
0x80f5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5051	normal.c	FUNCTION_51	SWITCH_1	ELSE_18	CALL_53
0x80f9	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5051	normal.c	FUNCTION_51	SWITCH_1	ELSE_18	CALL_53
0x80fd	    0x488b05000000	            mov rax, qword [0x04008144] 	      5051	normal.c	FUNCTION_51	SWITCH_1	ELSE_18	CALL_53
0x8104	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5051	normal.c	FUNCTION_51	SWITCH_1	ELSE_18	CALL_53
0x8108	          0x4889d6	                            mov rsi, rdx	      5051	normal.c	FUNCTION_51	SWITCH_1	ELSE_18	CALL_53
0x810b	          0x4889c7	                            mov rdi, rax	      5051	normal.c	FUNCTION_51	SWITCH_1	ELSE_18	CALL_53
0x810e	      0xe800000000	                          call 0x4008153	      5051	normal.c	FUNCTION_51	SWITCH_1	ELSE_18	CALL_53
0x8113	    0x488b05000000	            mov rax, qword [0x0400815a] 	      5052	normal.c	FUNCTION_51	SWITCH_1	ELSE_18
0x811a	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5052	normal.c	FUNCTION_51	SWITCH_1	ELSE_18
0x8124	      0xe9e0050000	                           jmp 0x4008749	      5054	normal.c	FUNCTION_51	SWITCH_1
0x8129	    0x488b05000000	            mov rax, qword [0x04008170] 	      5057	normal.c	FUNCTION_51	SWITCH_1	IF_32	CALL_54
0x8130	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5057	normal.c	FUNCTION_51	SWITCH_1	IF_32	CALL_54
0x8134	      0xba00000000	                              mov edx, 0	      5057	normal.c	FUNCTION_51	SWITCH_1	IF_32	CALL_54
0x8139	      0xbe00000000	                              mov esi, 0	      5057	normal.c	FUNCTION_51	SWITCH_1	IF_32	CALL_54
0x813e	          0x4889c7	                            mov rdi, rax	      5057	normal.c	FUNCTION_51	SWITCH_1	IF_32	CALL_54
0x8141	      0xe800000000	                          call 0x4008186	      5057	normal.c	FUNCTION_51	SWITCH_1	IF_32	CALL_54
0x8146	            0x85c0	                           test eax, eax	      5057	normal.c	FUNCTION_51	SWITCH_1	IF_32	CALL_54
0x8148	            0x7418	                            je 0x40081a2	      5057	normal.c	FUNCTION_51	SWITCH_1	IF_32	CALL_54
0x814a	    0x488b05000000	            mov rax, qword [0x04008191] 	      5058	normal.c	FUNCTION_51	SWITCH_1	CALL_55
0x8151	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5058	normal.c	FUNCTION_51	SWITCH_1	CALL_55
0x8155	          0x4889c7	                            mov rdi, rax	      5058	normal.c	FUNCTION_51	SWITCH_1	CALL_55
0x8158	      0xe800000000	                          call 0x400819d	      5058	normal.c	FUNCTION_51	SWITCH_1	CALL_55
0x815d	      0xe9a7050000	                           jmp 0x4008749	      5064	normal.c	FUNCTION_51	SWITCH_1
0x8162	    0x488b05000000	            mov rax, qword [0x040081a9] 	      5061	normal.c	FUNCTION_51	SWITCH_1	ELSE_19	CALL_56
0x8169	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5061	normal.c	FUNCTION_51	SWITCH_1	ELSE_19	CALL_56
0x816d	          0x4889c7	                            mov rdi, rax	      5061	normal.c	FUNCTION_51	SWITCH_1	ELSE_19	CALL_56
0x8170	      0xe800000000	                          call 0x40081b5	      5061	normal.c	FUNCTION_51	SWITCH_1	ELSE_19	CALL_56
0x8175	    0x488b05000000	            mov rax, qword [0x040081bc] 	      5062	normal.c	FUNCTION_51	SWITCH_1	ELSE_19
0x817c	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5062	normal.c	FUNCTION_51	SWITCH_1	ELSE_19
0x8186	      0xe97e050000	                           jmp 0x4008749	      5064	normal.c	FUNCTION_51	SWITCH_1
0x818b	    0x8b0500000000	            mov eax, dword [0x040081d1] 	      5067	normal.c	FUNCTION_51	SWITCH_1	IF_33
0x8191	            0x85c0	                           test eax, eax	      5067	normal.c	FUNCTION_51	SWITCH_1	IF_33
0x8193	            0x7411	                            je 0x40081e6	      5067	normal.c	FUNCTION_51	SWITCH_1	IF_33
0x8195	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5068	normal.c	FUNCTION_51	SWITCH_1	CALL_57
0x8199	          0x4889c7	                            mov rdi, rax	      5068	normal.c	FUNCTION_51	SWITCH_1	CALL_57
0x819c	      0xe892690000	                    call sym.nv_operator	      5068	normal.c	FUNCTION_51	SWITCH_1	CALL_57
0x81a1	      0xe963050000	                           jmp 0x4008749	      5071	normal.c	FUNCTION_51	SWITCH_1
0x81a6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5070	normal.c	FUNCTION_51	SWITCH_1	CALL_58
0x81aa	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5070	normal.c	FUNCTION_51	SWITCH_1	CALL_58
0x81ae	    0x488b05000000	            mov rax, qword [0x040081f5] 	      5070	normal.c	FUNCTION_51	SWITCH_1	CALL_58
0x81b5	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5070	normal.c	FUNCTION_51	SWITCH_1	CALL_58
0x81b9	          0x4889d6	                            mov rsi, rdx	      5070	normal.c	FUNCTION_51	SWITCH_1	CALL_58
0x81bc	          0x4889c7	                            mov rdi, rax	      5070	normal.c	FUNCTION_51	SWITCH_1	CALL_58
0x81bf	      0xe800000000	                          call 0x4008204	      5070	normal.c	FUNCTION_51	SWITCH_1	CALL_58
0x81c4	      0xe940050000	                           jmp 0x4008749	      5071	normal.c	FUNCTION_51	SWITCH_1
0x81c9	    0x8b0500000000	            mov eax, dword [0x0400820f] 	      5074	normal.c	FUNCTION_51	SWITCH_1	IF_34
0x81cf	            0x85c0	                           test eax, eax	      5074	normal.c	FUNCTION_51	SWITCH_1	IF_34
0x81d1	            0x7411	                            je 0x4008224	      5074	normal.c	FUNCTION_51	SWITCH_1	IF_34
0x81d3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5075	normal.c	FUNCTION_51	SWITCH_1	CALL_59
0x81d7	          0x4889c7	                            mov rdi, rax	      5075	normal.c	FUNCTION_51	SWITCH_1	CALL_59
0x81da	      0xe854690000	                    call sym.nv_operator	      5075	normal.c	FUNCTION_51	SWITCH_1	CALL_59
0x81df	      0xe925050000	                           jmp 0x4008749	      5078	normal.c	FUNCTION_51	SWITCH_1
0x81e4	    0x488b05000000	            mov rax, qword [0x0400822b] 	      5077	normal.c	FUNCTION_51	SWITCH_1	CALL_60
0x81eb	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5077	normal.c	FUNCTION_51	SWITCH_1	CALL_60
0x81ef	          0x4889c7	                            mov rdi, rax	      5077	normal.c	FUNCTION_51	SWITCH_1	CALL_60
0x81f2	      0xe800000000	                          call 0x4008237	      5077	normal.c	FUNCTION_51	SWITCH_1	CALL_60
0x81f7	      0xe90d050000	                           jmp 0x4008749	      5078	normal.c	FUNCTION_51	SWITCH_1
0x81fc	    0x8b0500000000	            mov eax, dword [0x04008242] 	      5081	normal.c	FUNCTION_51	SWITCH_1	IF_35
0x8202	            0x85c0	                           test eax, eax	      5081	normal.c	FUNCTION_51	SWITCH_1	IF_35
0x8204	            0x740e	                            je 0x4008254	      5081	normal.c	FUNCTION_51	SWITCH_1	IF_35
0x8206	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5082	normal.c	FUNCTION_51	SWITCH_1	CALL_61
0x820a	          0x4889c7	                            mov rdi, rax	      5082	normal.c	FUNCTION_51	SWITCH_1	CALL_61
0x820d	      0xe821690000	                    call sym.nv_operator	      5082	normal.c	FUNCTION_51	SWITCH_1	CALL_61
0x8212	            0xeb1e	                           jmp 0x4008272	      5082	normal.c	FUNCTION_51	SWITCH_1	CALL_61
0x8214	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5084	normal.c	FUNCTION_51	SWITCH_1	CALL_62
0x8218	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      5084	normal.c	FUNCTION_51	SWITCH_1	CALL_62
0x821c	    0x488b05000000	            mov rax, qword [0x04008263] 	      5084	normal.c	FUNCTION_51	SWITCH_1	CALL_62
0x8223	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5084	normal.c	FUNCTION_51	SWITCH_1	CALL_62
0x8227	          0x4889d6	                            mov rsi, rdx	      5084	normal.c	FUNCTION_51	SWITCH_1	CALL_62
0x822a	          0x4889c7	                            mov rdi, rax	      5084	normal.c	FUNCTION_51	SWITCH_1	CALL_62
0x822d	      0xe800000000	                          call 0x4008272	      5084	normal.c	FUNCTION_51	SWITCH_1	CALL_62
0x8232	    0x488b05000000	            mov rax, qword [0x04008279] 	      5085	normal.c	FUNCTION_51	SWITCH_1
0x8239	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5085	normal.c	FUNCTION_51	SWITCH_1
0x8243	      0xe9c1040000	                           jmp 0x4008749	      5086	normal.c	FUNCTION_51	SWITCH_1
0x8248	    0x8b0500000000	            mov eax, dword [0x0400828e] 	      5089	normal.c	FUNCTION_51	SWITCH_1	IF_36
0x824e	            0x85c0	                           test eax, eax	      5089	normal.c	FUNCTION_51	SWITCH_1	IF_36
0x8250	            0x740e	                            je 0x40082a0	      5089	normal.c	FUNCTION_51	SWITCH_1	IF_36
0x8252	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5090	normal.c	FUNCTION_51	SWITCH_1	CALL_63
0x8256	          0x4889c7	                            mov rdi, rax	      5090	normal.c	FUNCTION_51	SWITCH_1	CALL_63
0x8259	      0xe8d5680000	                    call sym.nv_operator	      5090	normal.c	FUNCTION_51	SWITCH_1	CALL_63
0x825e	            0xeb13	                           jmp 0x40082b3	      5090	normal.c	FUNCTION_51	SWITCH_1	CALL_63
0x8260	    0x488b05000000	            mov rax, qword [0x040082a7] 	      5092	normal.c	FUNCTION_51	SWITCH_1	CALL_64
0x8267	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5092	normal.c	FUNCTION_51	SWITCH_1	CALL_64
0x826b	          0x4889c7	                            mov rdi, rax	      5092	normal.c	FUNCTION_51	SWITCH_1	CALL_64
0x826e	      0xe800000000	                          call 0x40082b3	      5092	normal.c	FUNCTION_51	SWITCH_1	CALL_64
0x8273	    0x488b05000000	            mov rax, qword [0x040082ba] 	      5093	normal.c	FUNCTION_51	SWITCH_1
0x827a	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5093	normal.c	FUNCTION_51	SWITCH_1
0x8284	      0xe980040000	                           jmp 0x4008749	      5094	normal.c	FUNCTION_51	SWITCH_1
0x8289	      0xe800000000	                          call 0x40082ce	      5097	normal.c	FUNCTION_51	SWITCH_1	CALL_65
0x828e	      0xe976040000	                           jmp 0x4008749	      5098	normal.c	FUNCTION_51	SWITCH_1
0x8293	    0x488b05000000	            mov rax, qword [0x040082da] 	      5101	normal.c	FUNCTION_51	SWITCH_1
0x829a	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5101	normal.c	FUNCTION_51	SWITCH_1
0x82a4	    0x488b05000000	            mov rax, qword [0x040082eb] 	      5102	normal.c	FUNCTION_51	SWITCH_1
0x82ab	    0xc68021010000	               mov byte [rax + 0x121], 1	      5102	normal.c	FUNCTION_51	SWITCH_1
0x82b2	      0xe800000000	                          call 0x40082f7	      5103	normal.c	FUNCTION_51	SWITCH_1	CALL_66
0x82b7	      0xe800000000	                          call 0x40082fc	      5104	normal.c	FUNCTION_51	SWITCH_1	CALL_67
0x82bc	      0xe948040000	                           jmp 0x4008749	      5105	normal.c	FUNCTION_51	SWITCH_1
0x82c1	    0x488b05000000	            mov rax, qword [0x04008308] 	      5108	normal.c	FUNCTION_51	SWITCH_1
0x82c8	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5108	normal.c	FUNCTION_51	SWITCH_1
0x82d2	    0x488b05000000	            mov rax, qword [0x04008319] 	      5109	normal.c	FUNCTION_51	SWITCH_1
0x82d9	    0xc68021010000	               mov byte [rax + 0x121], 1	      5109	normal.c	FUNCTION_51	SWITCH_1
0x82e0	    0x48c745c0ffff	mov qword [rbp - 0x40], 0xffffffffffffffff	      5110	normal.c	FUNCTION_51	SWITCH_1
0x82e8	      0xe91c040000	                           jmp 0x4008749	      5111	normal.c	FUNCTION_51	SWITCH_1
0x82ed	    0x488b05000000	            mov rax, qword [0x04008334] 	      5114	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x82f4	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      5114	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x82fb	          0x4885c0	                           test rax, rax	      5114	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x82fe	            0x7e4f	                           jle 0x400838f	      5114	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x8300	    0x488b05000000	            mov rax, qword [0x04008347] 	      5116	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x8307	    0x488b15000000	            mov rdx, qword [0x0400834e] 	      5116	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x830e	    0x488b8ae80100	           mov rcx, qword [rdx + 0x1e8] 	      5116	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x8315	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      5116	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x8319	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      5116	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x831d	          0x4829d1	                            sub rcx, rdx	      5116	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x8320	          0x4889ca	                            mov rdx, rcx	      5116	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x8323	    0x488990e80100	            mov qword [rax + 0x1e8], rdx	      5116	normal.c	FUNCTION_51	SWITCH_1	IF_37
0x832a	    0x488b05000000	            mov rax, qword [0x04008371] 	      5117	normal.c	FUNCTION_51	SWITCH_1	IF_37	IF_38
0x8331	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      5117	normal.c	FUNCTION_51	SWITCH_1	IF_37	IF_38
0x8338	          0x4885c0	                           test rax, rax	      5117	normal.c	FUNCTION_51	SWITCH_1	IF_37	IF_38
0x833b	            0x7912	                           jns 0x400838f	      5117	normal.c	FUNCTION_51	SWITCH_1	IF_37	IF_38
0x833d	    0x488b05000000	            mov rax, qword [0x04008384] 	      5118	normal.c	FUNCTION_51	SWITCH_1	IF_37	IF_38
0x8344	    0x48c780e80100	              mov qword [rax + 0x1e8], 0	      5118	normal.c	FUNCTION_51	SWITCH_1	IF_37	IF_38
0x834f	    0x48c745c0ffff	mov qword [rbp - 0x40], 0xffffffffffffffff	      5120	normal.c	FUNCTION_51	SWITCH_1
0x8357	    0x488b05000000	            mov rax, qword [0x0400839e] 	      5121	normal.c	FUNCTION_51	SWITCH_1
0x835e	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5121	normal.c	FUNCTION_51	SWITCH_1
0x8368	      0xe99c030000	                           jmp 0x4008749	      5122	normal.c	FUNCTION_51	SWITCH_1
0x836d	    0x488b05000000	            mov rax, qword [0x040083b4] 	      5125	normal.c	FUNCTION_51	SWITCH_1
0x8374	    0x48c780e80100	              mov qword [rax + 0x1e8], 0	      5125	normal.c	FUNCTION_51	SWITCH_1
0x837f	    0x48c745c0ffff	mov qword [rbp - 0x40], 0xffffffffffffffff	      5126	normal.c	FUNCTION_51	SWITCH_1
0x8387	    0x488b05000000	            mov rax, qword [0x040083ce] 	      5127	normal.c	FUNCTION_51	SWITCH_1
0x838e	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      5127	normal.c	FUNCTION_51	SWITCH_1
0x8398	      0xe96c030000	                           jmp 0x4008749	      5128	normal.c	FUNCTION_51	SWITCH_1
0x839d	    0x488b05000000	            mov rax, qword [0x040083e4] 	      5131	normal.c	FUNCTION_51	SWITCH_1
0x83a4	    0x488b15000000	            mov rdx, qword [0x040083eb] 	      5131	normal.c	FUNCTION_51	SWITCH_1
0x83ab	    0x488b8ae80100	           mov rcx, qword [rdx + 0x1e8] 	      5131	normal.c	FUNCTION_51	SWITCH_1
0x83b2	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      5131	normal.c	FUNCTION_51	SWITCH_1
0x83b6	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      5131	normal.c	FUNCTION_51	SWITCH_1
0x83ba	          0x4801ca	                            add rdx, rcx	      5131	normal.c	FUNCTION_51	SWITCH_1
0x83bd	    0x488990e80100	            mov qword [rax + 0x1e8], rdx	      5131	normal.c	FUNCTION_51	SWITCH_1
0x83c4	      0xe800000000	                          call 0x4008409	      5133	normal.c	FUNCTION_51	SWITCH_1	CALL_68
0x83c9	          0x8945ac	             mov dword [rbp - 0x54], eax	      5133	normal.c	FUNCTION_51	SWITCH_1	CALL_68
0x83cc	    0x488b05000000	            mov rax, qword [0x04008413] 	      5135	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x83d3	    0x488b90e80100	           mov rdx, qword [rax + 0x1e8] 	      5135	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x83da	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      5135	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x83dd	            0x4898	                                    cdqe	      5135	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x83df	          0x4839c2	                            cmp rdx, rax	      5135	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x83e2	     0xf8c17030000	                            jl 0x400873f	      5135	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x83e8	    0x488b05000000	            mov rax, qword [0x0400842f] 	      5136	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x83ef	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      5136	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x83f2	          0x4863d2	                         movsxd rdx, edx	      5136	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x83f5	    0x488990e80100	            mov qword [rax + 0x1e8], rdx	      5136	normal.c	FUNCTION_51	SWITCH_1	IF_39
0x83fc	      0xe9fe020000	                           jmp 0x400873f	      5138	normal.c	FUNCTION_51	SWITCH_1
0x8401	    0x488b1d000000	            mov rbx, qword [0x04008448] 	      5141	normal.c	FUNCTION_51	SWITCH_1	CALL_69
0x8408	      0xe800000000	                          call 0x400844d	      5141	normal.c	FUNCTION_51	SWITCH_1	CALL_69
0x840d	            0x4898	                                    cdqe	      5141	normal.c	FUNCTION_51	SWITCH_1	CALL_69
0x840f	    0x488983e80100	            mov qword [rbx + 0x1e8], rax	      5141	normal.c	FUNCTION_51	SWITCH_1	CALL_69
0x8416	    0x48c745c0ffff	mov qword [rbp - 0x40], 0xffffffffffffffff	      5142	normal.c	FUNCTION_51	SWITCH_1
0x841e	      0xe9e6020000	                           jmp 0x4008749	      5143	normal.c	FUNCTION_51	SWITCH_1
0x8423	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5147	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x8427	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5147	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x842b	        0x837da06a	           cmp dword [rbp - 0x60], 0x6a 	      5147	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x842f	            0x7507	                           jne 0x4008478	      5147	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x8431	      0xb901000000	                              mov ecx, 1	      5147	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x8436	            0xeb05	                           jmp 0x400847d	      5147	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x8438	      0xb9ffffffff	                     mov ecx, 0xffffffff	      5147	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x843d	          0x4889c2	                            mov rdx, rax	      5147	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x8440	            0x89ce	                            mov esi, ecx	      5147	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x8442	      0xbf01000000	                              mov edi, 1	      5147	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x8447	      0xe800000000	                          call 0x400848c	      5147	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x844c	            0x85c0	                           test eax, eax	      5147	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x844e	     0xf85ae020000	                           jne 0x4008742	      5147	normal.c	FUNCTION_51	SWITCH_1	IF_40	CALL_70
0x8454	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5149	normal.c	FUNCTION_51	SWITCH_1	CALL_71
0x8458	          0x488b00	                    mov rax, qword [rax]	      5149	normal.c	FUNCTION_51	SWITCH_1	CALL_71
0x845b	          0x4889c7	                            mov rdi, rax	      5149	normal.c	FUNCTION_51	SWITCH_1	CALL_71
0x845e	      0xe885d5ffff	                    call sym.clearopbeep	      5149	normal.c	FUNCTION_51	SWITCH_1	CALL_71
0x8463	      0xe99a020000	                           jmp 0x4008742	      5150	normal.c	FUNCTION_51	SWITCH_1
0x8468	    0x8b0500000000	            mov eax, dword [0x040084ae] 	      5156	normal.c	FUNCTION_51	SWITCH_1
0x846e	          0x83c001	                              add eax, 1	      5156	normal.c	FUNCTION_51	SWITCH_1
0x8471	    0x890500000000	            mov dword [0x040084b7], eax 	      5156	normal.c	FUNCTION_51	SWITCH_1
0x8477	    0x8b0500000000	            mov eax, dword [0x040084bd] 	      5157	normal.c	FUNCTION_51	SWITCH_1
0x847d	          0x83c001	                              add eax, 1	      5157	normal.c	FUNCTION_51	SWITCH_1
0x8480	    0x890500000000	            mov dword [0x040084c6], eax 	      5157	normal.c	FUNCTION_51	SWITCH_1
0x8486	      0xe800000000	                          call 0x40084cb	      5158	normal.c	FUNCTION_51	SWITCH_1	CALL_72
0x848b	          0x8945a0	             mov dword [rbp - 0x60], eax	      5158	normal.c	FUNCTION_51	SWITCH_1	CALL_72
0x848e	    0x488b05000000	            mov rax, qword [0x040084d5] 	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x8495	           0xfb600	                   movzx eax, byte [rax]	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x8498	            0x84c0	                             test al, al	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x849a	            0x7458	                            je 0x4008534	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x849c	    0x8b0500000000	            mov eax, dword [0x040084e2] 	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84a2	            0x85c0	                           test eax, eax	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84a4	            0x7514	                           jne 0x40084fa	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84a6	    0x8b0500000000	            mov eax, dword [0x040084ec] 	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84ac	            0x85c0	                           test eax, eax	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84ae	            0x7544	                           jne 0x4008534	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84b0	    0x8b0500000000	            mov eax, dword [0x040084f6] 	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84b6	            0x85c0	                           test eax, eax	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84b8	            0x743a	                            je 0x4008534	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84ba	    0x8b0500000000	            mov eax, dword [0x04008500] 	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84c0	            0x85c0	                           test eax, eax	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84c2	            0x7530	                           jne 0x4008534	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84c4	        0x837da000	               cmp dword [rbp - 0x60], 0	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84c8	            0x782a	                            js 0x4008534	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84ca	    0x817da0ff0000	           cmp dword [rbp - 0x60], 0xff 	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84d1	            0x7f14	                            jg 0x4008527	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84d3	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84d6	            0x4898	                                    cdqe	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84d8	     0xfb680000000	                   movzx eax, byte [rax]	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84df	           0xfb6c0	                           movzx eax, al	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84e2	          0x8945a0	             mov dword [rbp - 0x60], eax	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84e5	            0xeb0d	                           jmp 0x4008534	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84e7	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84ea	            0x89c7	                            mov edi, eax	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84ec	      0xe800000000	                          call 0x4008531	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84f1	          0x8945a0	             mov dword [rbp - 0x60], eax	      5159	normal.c	FUNCTION_51	SWITCH_1	CALL_73
0x84f4	    0x8b0500000000	            mov eax, dword [0x0400853a] 	      5160	normal.c	FUNCTION_51	SWITCH_1
0x84fa	          0x83e801	                              sub eax, 1	      5160	normal.c	FUNCTION_51	SWITCH_1
0x84fd	    0x890500000000	            mov dword [0x04008543], eax 	      5160	normal.c	FUNCTION_51	SWITCH_1
0x8503	    0x8b0500000000	            mov eax, dword [0x04008549] 	      5161	normal.c	FUNCTION_51	SWITCH_1
0x8509	          0x83e801	                              sub eax, 1	      5161	normal.c	FUNCTION_51	SWITCH_1
0x850c	    0x890500000000	            mov dword [0x04008552], eax 	      5161	normal.c	FUNCTION_51	SWITCH_1
0x8512	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      5163	normal.c	FUNCTION_51	SWITCH_1	CALL_74
0x8515	            0x89c7	                            mov edi, eax	      5163	normal.c	FUNCTION_51	SWITCH_1	CALL_74
0x8517	      0xe800000000	                          call 0x400855c	      5163	normal.c	FUNCTION_51	SWITCH_1	CALL_74
0x851c	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      5165	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_75
0x851f	            0x89c6	                            mov esi, eax	      5165	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_75
0x8521	      0xbf00000000	                              mov edi, 0	      5165	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_75
0x8526	      0xe800000000	                          call 0x400856b	      5165	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_75
0x852b	          0x4885c0	                           test rax, rax	      5165	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_75
0x852e	            0x7514	                           jne 0x4008584	      5165	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_75
0x8530	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5167	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_76
0x8534	          0x488b00	                    mov rax, qword [rax]	      5167	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_76
0x8537	          0x4889c7	                            mov rdi, rax	      5167	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_76
0x853a	      0xe8a9d4ffff	                    call sym.clearopbeep	      5167	normal.c	FUNCTION_51	SWITCH_1	IF_41	CALL_76
0x853f	      0xe9c5010000	                           jmp 0x4008749	      5168	normal.c	FUNCTION_51	SWITCH_1	IF_41
0x8544	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	      5170	normal.c	FUNCTION_51	SWITCH_1
0x854b	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      5178	normal.c	FUNCTION_51	SWITCH_1
0x8553	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5181	normal.c	FUNCTION_51	SWITCH_1	IF_42	CALL_77
0x8557	          0x488b00	                    mov rax, qword [rax]	      5181	normal.c	FUNCTION_51	SWITCH_1	IF_42	CALL_77
0x855a	          0x4889c7	                            mov rdi, rax	      5181	normal.c	FUNCTION_51	SWITCH_1	IF_42	CALL_77
0x855d	      0xe8e6d3ffff	                   call sym.checkclearop	      5181	normal.c	FUNCTION_51	SWITCH_1	IF_42	CALL_77
0x8562	            0x85c0	                           test eax, eax	      5181	normal.c	FUNCTION_51	SWITCH_1	IF_42	CALL_77
0x8564	     0xf859b010000	                           jne 0x4008745	      5181	normal.c	FUNCTION_51	SWITCH_1	IF_42	CALL_77
0x856a	    0x8b0500000000	            mov eax, dword [0x040085b0] 	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x8570	            0x85c0	                           test eax, eax	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x8572	            0x741f	                            je 0x40085d3	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x8574	        0x488d559c	                   lea rdx, [rbp - 0x64]	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x8578	        0x488d4db0	                   lea rcx, [rbp - 0x50]	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x857c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x8580	          0x4889ce	                            mov rsi, rcx	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x8583	          0x4889c7	                            mov rdi, rax	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x8586	      0xe800000000	                          call 0x40085cb	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x858b	            0x85c0	                           test eax, eax	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x858d	     0xf8444020000	                            je 0x4008817	      5183	normal.c	FUNCTION_51	SWITCH_1	IF_43	CALL_78
0x8593	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5186	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x8597	          0x4885c0	                           test rax, rax	      5186	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x859a	     0xf85a2000000	                           jne 0x4008682	      5186	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x85a0	    0x488b05000000	            mov rax, qword [0x040085e7] 	      5188	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x85a7	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5188	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x85ab	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5188	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x85af	        0x488945d0	             mov qword [rbp - 0x30], rax	      5188	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x85b3	        0x488955d8	             mov qword [rbp - 0x28], rdx	      5188	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x85b7	    0x8b0500000000	            mov eax, dword [0x040085fd] 	      5193	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x85bd	          0x83c001	                              add eax, 1	      5193	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x85c0	    0x890500000000	            mov dword [0x04008606], eax 	      5193	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x85c6	    0x488b05000000	            mov rax, qword [0x0400860d] 	      5194	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_79
0x85cd	    0x41b800000000	                              mov r8d, 0	      5194	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_79
0x85d3	      0xb901000000	                              mov ecx, 1	      5194	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_79
0x85d8	      0xba01000000	                              mov edx, 1	      5194	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_79
0x85dd	      0xbe01000000	                              mov esi, 1	      5194	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_79
0x85e2	          0x4889c7	                            mov rdi, rax	      5194	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_79
0x85e5	      0xe800000000	                          call 0x400862a	      5194	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_79
0x85ea	          0x89459c	             mov dword [rbp - 0x64], eax	      5194	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_79
0x85ed	    0x8b0500000000	            mov eax, dword [0x04008633] 	      5195	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x85f3	          0x83e801	                              sub eax, 1	      5195	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x85f6	    0x890500000000	            mov dword [0x0400863c], eax 	      5195	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x85fc	          0x8b459c	             mov eax, dword [rbp - 0x64]	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_44	IF_45
0x85ff	            0x85c0	                           test eax, eax	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_44	IF_45
0x8601	            0x7428	                            je 0x400866b	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_44	IF_45
0x8603	    0x488b05000000	            mov rax, qword [0x0400864a] 	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_44	IF_45
0x860a	          0x8b5040	            mov edx, dword [rax + 0x40] 	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_44	IF_45
0x860d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_44	IF_45
0x8610	            0x39c2	                            cmp edx, eax	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_44	IF_45
0x8612	            0x7f17	                            jg 0x400866b	      5196	normal.c	FUNCTION_51	SWITCH_1	IF_44	IF_45
0x8614	    0x488b05000000	            mov rax, qword [0x0400865b] 	      5197	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_80
0x861b	        0x4883c038	                           add rax, 0x38	      5197	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_80
0x861f	          0x4889c7	                            mov rdi, rax	      5197	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_80
0x8622	      0xe800000000	                          call 0x4008667	      5197	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_80
0x8627	        0x488945b0	             mov qword [rbp - 0x50], rax	      5197	normal.c	FUNCTION_51	SWITCH_1	IF_44	CALL_80
0x862b	    0x488b0d000000	            mov rcx, qword [0x04008672] 	      5198	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x8632	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5198	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x8636	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5198	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x863a	        0x48894138	             mov qword [rcx + 0x38], rax	      5198	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x863e	        0x48895140	             mov qword [rcx + 0x40], rdx	      5198	normal.c	FUNCTION_51	SWITCH_1	IF_44
0x8642	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5201	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x8646	          0x4885c0	                           test rax, rax	      5201	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x8649	            0x751f	                           jne 0x40086aa	      5201	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x864b	        0x488d45b0	                   lea rax, [rbp - 0x50]	      5201	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x864f	      0xbe01000000	                              mov esi, 1	      5201	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x8654	          0x4889c7	                            mov rdi, rax	      5201	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x8657	      0xe800000000	                          call 0x400869c	      5201	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x865c	          0x89459c	             mov dword [rbp - 0x64], eax	      5201	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x865f	          0x8b459c	             mov eax, dword [rbp - 0x64]	      5201	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x8662	            0x85c0	                           test eax, eax	      5201	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x8664	     0xf8470010000	                            je 0x400881a	      5201	normal.c	FUNCTION_51	SWITCH_1	IF_46	CALL_81
0x866a	        0x837da047	           cmp dword [rbp - 0x60], 0x47 	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x866e	            0x7412	                            je 0x40086c2	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x8670	        0x837da057	           cmp dword [rbp - 0x60], 0x57 	      5205	normal.c	FUNCTION_51	SWITCH_1
0x8674	            0x740c	                            je 0x40086c2	      5205	normal.c	FUNCTION_51	SWITCH_1
0x8676	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5206	normal.c	FUNCTION_51	SWITCH_1
0x867a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5206	normal.c	FUNCTION_51	SWITCH_1
0x867e	            0x89c1	                            mov ecx, eax	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x8680	            0xeb05	                           jmp 0x40086c7	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x8682	      0xb900000000	                              mov ecx, 0	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x8687	        0x837da077	           cmp dword [rbp - 0x60], 0x77 	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x868b	            0x7406	                            je 0x40086d3	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x868d	        0x837da057	           cmp dword [rbp - 0x60], 0x57 	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x8691	            0x7507	                           jne 0x40086da	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x8693	      0xbf01000000	                              mov edi, 1	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x8698	            0xeb05	                           jmp 0x40086df	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x869a	      0xbf00000000	                              mov edi, 0	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x869f	          0x8b759c	             mov esi, dword [rbp - 0x64]	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x86a2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x86a6	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x86a9	          0x4189d0	                            mov r8d, edx	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x86ac	            0x89fa	                            mov edx, edi	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x86ae	          0x4889c7	                            mov rdi, rax	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x86b1	      0xe800000000	                          call 0x40086f6	      5204	normal.c	FUNCTION_51	SWITCH_1	CALL_82
0x86b6	            0xeb51	                           jmp 0x4008749	      5209	normal.c	FUNCTION_51	SWITCH_1
0x86b8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5212	normal.c	FUNCTION_51	SWITCH_1	IF_47	CALL_83
0x86bc	          0x488b00	                    mov rax, qword [rax]	      5212	normal.c	FUNCTION_51	SWITCH_1	IF_47	CALL_83
0x86bf	          0x4889c7	                            mov rdi, rax	      5212	normal.c	FUNCTION_51	SWITCH_1	IF_47	CALL_83
0x86c2	      0xe881d2ffff	                   call sym.checkclearop	      5212	normal.c	FUNCTION_51	SWITCH_1	IF_47	CALL_83
0x86c7	            0x85c0	                           test eax, eax	      5212	normal.c	FUNCTION_51	SWITCH_1	IF_47	CALL_83
0x86c9	            0x753d	                           jne 0x4008748	      5212	normal.c	FUNCTION_51	SWITCH_1	IF_47	CALL_83
0x86cb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5213	normal.c	FUNCTION_51	SWITCH_1	CALL_84
0x86cf	        0x488b4028	            mov rax, qword [rax + 0x28] 	      5213	normal.c	FUNCTION_51	SWITCH_1	CALL_84
0x86d3	            0x89c7	                            mov edi, eax	      5213	normal.c	FUNCTION_51	SWITCH_1	CALL_84
0x86d5	      0xe800000000	                          call 0x400871a	      5213	normal.c	FUNCTION_51	SWITCH_1	CALL_84
0x86da	            0xeb2c	                           jmp 0x4008748	      5214	normal.c	FUNCTION_51	SWITCH_1
0x86dc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5217	normal.c	FUNCTION_51	SWITCH_1	CALL_85
0x86e0	          0x488b00	                    mov rax, qword [rax]	      5217	normal.c	FUNCTION_51	SWITCH_1	CALL_85
0x86e3	          0x4889c7	                            mov rdi, rax	      5217	normal.c	FUNCTION_51	SWITCH_1	CALL_85
0x86e6	      0xe8fdd2ffff	                    call sym.clearopbeep	      5217	normal.c	FUNCTION_51	SWITCH_1	CALL_85
0x86eb	            0xeb1c	                           jmp 0x4008749	      5217	normal.c	FUNCTION_51	SWITCH_1	CALL_85
0x86ed	              0x90	                                     nop	      4927	normal.c	FUNCTION_51	SWITCH_1
0x86ee	            0xeb19	                           jmp 0x4008749	      4927	normal.c	FUNCTION_51	SWITCH_1
0x86f0	              0x90	                                     nop	      4942	normal.c	FUNCTION_51	SWITCH_1
0x86f1	            0xeb16	                           jmp 0x4008749	      4942	normal.c	FUNCTION_51	SWITCH_1
0x86f3	              0x90	                                     nop	      4963	normal.c	FUNCTION_51	SWITCH_1
0x86f4	            0xeb13	                           jmp 0x4008749	      4963	normal.c	FUNCTION_51	SWITCH_1
0x86f6	              0x90	                                     nop	      4985	normal.c	FUNCTION_51	SWITCH_1
0x86f7	            0xeb10	                           jmp 0x4008749	      4985	normal.c	FUNCTION_51	SWITCH_1
0x86f9	              0x90	                                     nop	      5006	normal.c	FUNCTION_51	SWITCH_1
0x86fa	            0xeb0d	                           jmp 0x4008749	      5006	normal.c	FUNCTION_51	SWITCH_1
0x86fc	              0x90	                                     nop	      5019	normal.c	FUNCTION_51	SWITCH_1
0x86fd	            0xeb0a	                           jmp 0x4008749	      5019	normal.c	FUNCTION_51	SWITCH_1
0x86ff	              0x90	                                     nop	      5138	normal.c	FUNCTION_51	SWITCH_1
0x8700	            0xeb07	                           jmp 0x4008749	      5138	normal.c	FUNCTION_51	SWITCH_1
0x8702	              0x90	                                     nop	      5150	normal.c	FUNCTION_51	SWITCH_1
0x8703	            0xeb04	                           jmp 0x4008749	      5150	normal.c	FUNCTION_51	SWITCH_1
0x8705	              0x90	                                     nop	      5182	normal.c	FUNCTION_51	SWITCH_1	IF_42
0x8706	            0xeb01	                           jmp 0x4008749	      5182	normal.c	FUNCTION_51	SWITCH_1	IF_42
0x8708	              0x90	                                     nop	      5214	normal.c	FUNCTION_51	SWITCH_1
0x8709	    0x488b05000000	            mov rax, qword [0x04008750] 	      5222	normal.c	FUNCTION_51	IF_48
0x8710	    0x8b80d4010000	           mov eax, dword [rax + 0x1d4] 	      5222	normal.c	FUNCTION_51	IF_48
0x8716	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      5222	normal.c	FUNCTION_51	IF_48
0x8719	     0xf8497000000	                            je 0x40087f6	      5222	normal.c	FUNCTION_51	IF_48
0x871f	    0x488b05000000	            mov rax, qword [0x04008766] 	      5227	normal.c	FUNCTION_51	IF_48	IF_49	CALL_86
0x8726	          0x4889c7	                            mov rdi, rax	      5227	normal.c	FUNCTION_51	IF_48	IF_49	CALL_86
0x8729	      0xe800000000	                          call 0x400876e	      5227	normal.c	FUNCTION_51	IF_48	IF_49	CALL_86
0x872e	            0x85c0	                           test eax, eax	      5227	normal.c	FUNCTION_51	IF_48	IF_49	CALL_86
0x8730	            0x747f	                            je 0x40087f1	      5227	normal.c	FUNCTION_51	IF_48	IF_49	CALL_86
0x8732	    0x488b05000000	            mov rax, qword [0x04008779] 	      5227	normal.c	FUNCTION_51	IF_48	IF_49	CALL_86
0x8739	    0x8b8088020000	           mov eax, dword [rax + 0x288] 	      5227	normal.c	FUNCTION_51	IF_48	IF_49	CALL_86
0x873f	            0x85c0	                           test eax, eax	      5227	normal.c	FUNCTION_51	IF_48	IF_49	CALL_86
0x8741	            0x746e	                            je 0x40087f1	      5227	normal.c	FUNCTION_51	IF_48	IF_49	CALL_86
0x8743	    0x488b05000000	            mov rax, qword [0x0400878a] 	      5230	normal.c	FUNCTION_51	IF_48	IF_49
0x874a	        0x488945c8	             mov qword [rbp - 0x38], rax	      5230	normal.c	FUNCTION_51	IF_48	IF_49
0x874e	            0xeb5a	                           jmp 0x40087ea	      5230	normal.c	FUNCTION_51	IF_48	IF_49
0x8750	    0x488b05000000	            mov rax, qword [0x04008797] 	      5232	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x8757	        0x483945c8	            cmp qword [rbp - 0x38], rax 	      5232	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x875b	            0x7441	                            je 0x40087de	      5232	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x875d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5232	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x8761	          0x4889c7	                            mov rdi, rax	      5232	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x8764	      0xe800000000	                          call 0x40087a9	      5232	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x8769	            0x85c0	                           test eax, eax	      5232	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x876b	            0x7431	                            je 0x40087de	      5232	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x876d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5232	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x8771	    0x8b8088020000	           mov eax, dword [rax + 0x288] 	      5232	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x8777	            0x85c0	                           test eax, eax	      5232	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x8779	            0x7423	                            je 0x40087de	      5232	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_1
0x877b	    0x488b05000000	            mov rax, qword [0x040087c2] 	      5234	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1
0x8782	    0x8b90d4010000	           mov edx, dword [rax + 0x1d4] 	      5234	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1
0x8788	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5234	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1
0x878c	    0x8990d4010000	            mov dword [rax + 0x1d4], edx	      5234	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1
0x8792	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5235	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_2
0x8796	          0x4889c7	                            mov rdi, rax	      5235	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_2
0x8799	      0xe800000000	                          call 0x40087de	      5235	normal.c	FUNCTION_51	IF_48	IF_49	FUNCTION_1	IF_1	CALL_2
0x879e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5230	normal.c	FUNCTION_51	IF_48	IF_49
0x87a2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5230	normal.c	FUNCTION_51	IF_48	IF_49
0x87a6	        0x488945c8	             mov qword [rbp - 0x38], rax	      5230	normal.c	FUNCTION_51	IF_48	IF_49
0x87aa	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      5230	normal.c	FUNCTION_51	IF_48	IF_49
0x87af	            0x759f	                           jne 0x4008790	      5230	normal.c	FUNCTION_51	IF_48	IF_49
0x87b1	      0xe800000000	                          call 0x40087f6	      5240	normal.c	FUNCTION_51	IF_48	CALL_87
0x87b6	    0x488b05000000	            mov rax, qword [0x040087fd] 	      5244	normal.c	FUNCTION_51	IF_50
0x87bd	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      5244	normal.c	FUNCTION_51	IF_50
0x87c4	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      5244	normal.c	FUNCTION_51	IF_50
0x87c8	            0x7411	                            je 0x400881b	      5244	normal.c	FUNCTION_51	IF_50
0x87ca	      0xe800000000	                          call 0x400880f	      5245	normal.c	FUNCTION_51	CALL_88
0x87cf	            0xeb0a	                           jmp 0x400881b	      5245	normal.c	FUNCTION_51	CALL_88
0x87d1	              0x90	                                     nop	      4778	normal.c	FUNCTION_51	IF_1	IF_2
0x87d2	            0xeb07	                           jmp 0x400881b	      4778	normal.c	FUNCTION_51	IF_1	IF_2
0x87d4	              0x90	                                     nop	      4836	normal.c	FUNCTION_51	IF_7
0x87d5	            0xeb04	                           jmp 0x400881b	      4836	normal.c	FUNCTION_51	IF_7
0x87d7	              0x90	                                     nop	      5185	normal.c	FUNCTION_51	SWITCH_1	IF_43
0x87d8	            0xeb01	                           jmp 0x400881b	      5185	normal.c	FUNCTION_51	SWITCH_1	IF_43
0x87da	              0x90	                                     nop	      5203	normal.c	FUNCTION_51	SWITCH_1	IF_46
0x87db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5247	normal.c	FUNCTION_51
0x87df	    0x644833042528	                xor rax, qword fs:[0x28]	      5247	normal.c	FUNCTION_51
0x87e8	            0x7405	                            je 0x400882f	      5247	normal.c	FUNCTION_51
0x87ea	      0xe800000000	                          call 0x400882f	      5247	normal.c	FUNCTION_51
0x87ef	        0x4883c478	                           add rsp, 0x78	      5247	normal.c	FUNCTION_51
0x87f3	              0x5b	                                 pop rbx	      5247	normal.c	FUNCTION_51
0x87f4	              0x5d	                                 pop rbp	      5247	normal.c	FUNCTION_51
0x87f5	              0xc3	                                     ret	      5247	normal.c	FUNCTION_51
pop_showcmd	CALL,2:ELSE,0:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	13
0x5fe6	              0x55	                                push rbp	      3947	normal.c	FUNCTION_33
0x5fe7	          0x4889e5	                            mov rbp, rsp	      3947	normal.c	FUNCTION_33
0x5fea	    0x8b0500000000	            mov eax, dword [0x04006030] 	      3948	normal.c	FUNCTION_33	IF_1
0x5ff0	            0x85c0	                           test eax, eax	      3948	normal.c	FUNCTION_33	IF_1
0x5ff2	            0x7416	                            je 0x400604a	      3948	normal.c	FUNCTION_33	IF_1
0x5ff4	      0xbe00000000	                              mov esi, 0	      3951	normal.c	FUNCTION_33	CALL_1
0x5ff9	      0xbf00000000	                              mov edi, 0	      3951	normal.c	FUNCTION_33	CALL_1
0x5ffe	      0xe800000000	                          call 0x4006043	      3951	normal.c	FUNCTION_33	CALL_1
0x6003	      0xe805000000	                call sym.display_showcmd	      3953	normal.c	FUNCTION_33	CALL_2
0x6008	            0xeb01	                           jmp 0x400604b	      3953	normal.c	FUNCTION_33	CALL_2
0x600a	              0x90	                                     nop	      3949	normal.c	FUNCTION_33	IF_1
0x600b	              0x5d	                                 pop rbp	      3954	normal.c	FUNCTION_33
0x600c	              0xc3	                                     ret	      3954	normal.c	FUNCTION_33
set_op_var	CALL,4:ELSE,1:DO,0:FOR,0:functions,0:IF,1:WHILE,0:SWITCH,0	35
0xebbf	              0x55	                                push rbp	      8605	normal.c	FUNCTION_114
0xebc0	          0x4889e5	                            mov rbp, rsp	      8605	normal.c	FUNCTION_114
0xebc3	        0x4883ec20	                           sub rsp, 0x20	      8605	normal.c	FUNCTION_114
0xebc7	          0x897dec	             mov dword [rbp - 0x14], edi	      8605	normal.c	FUNCTION_114
0xebca	    0x64488b042528	                mov rax, qword fs:[0x28]	      8605	normal.c	FUNCTION_114
0xebd3	        0x488945f8	                mov qword [rbp - 8], rax	      8605	normal.c	FUNCTION_114
0xebd7	            0x31c0	                            xor eax, eax	      8605	normal.c	FUNCTION_114
0xebd9	        0x837dec00	               cmp dword [rbp - 0x14], 0	      8608	normal.c	FUNCTION_114	IF_1
0xebdd	            0x7516	                           jne 0x400ec35	      8608	normal.c	FUNCTION_114	IF_1
0xebdf	      0xba00000000	                              mov edx, 0	      8609	normal.c	FUNCTION_114	CALL_1
0xebe4	      0xbe00000000	                              mov esi, 0	      8609	normal.c	FUNCTION_114	CALL_1
0xebe9	      0xbf36000000	                           mov edi, 0x36	      8609	normal.c	FUNCTION_114	CALL_1
0xebee	      0xe800000000	                          call 0x400ec33	      8609	normal.c	FUNCTION_114	CALL_1
0xebf3	            0xeb34	                           jmp 0x400ec69	      8617	normal.c	FUNCTION_114
0xebf5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8612	normal.c	FUNCTION_114	ELSE_1	CALL_2
0xebf8	            0x89c7	                            mov edi, eax	      8612	normal.c	FUNCTION_114	ELSE_1	CALL_2
0xebfa	      0xe800000000	                          call 0x400ec3f	      8612	normal.c	FUNCTION_114	ELSE_1	CALL_2
0xebff	          0x8845f0	               mov byte [rbp - 0x10], al	      8612	normal.c	FUNCTION_114	ELSE_1	CALL_2
0xec02	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8613	normal.c	FUNCTION_114	ELSE_1	CALL_3
0xec05	            0x89c7	                            mov edi, eax	      8613	normal.c	FUNCTION_114	ELSE_1	CALL_3
0xec07	      0xe800000000	                          call 0x400ec4c	      8613	normal.c	FUNCTION_114	ELSE_1	CALL_3
0xec0c	          0x8845f1	                mov byte [rbp - 0xf], al	      8613	normal.c	FUNCTION_114	ELSE_1	CALL_3
0xec0f	        0xc645f200	                 mov byte [rbp - 0xe], 0	      8614	normal.c	FUNCTION_114	ELSE_1
0xec13	        0x488d45f0	                   lea rax, [rbp - 0x10]	      8615	normal.c	FUNCTION_114	ELSE_1	CALL_4
0xec17	      0xbaffffffff	                     mov edx, 0xffffffff	      8615	normal.c	FUNCTION_114	ELSE_1	CALL_4
0xec1c	          0x4889c6	                            mov rsi, rax	      8615	normal.c	FUNCTION_114	ELSE_1	CALL_4
0xec1f	      0xbf36000000	                           mov edi, 0x36	      8615	normal.c	FUNCTION_114	ELSE_1	CALL_4
0xec24	      0xe800000000	                          call 0x400ec69	      8615	normal.c	FUNCTION_114	ELSE_1	CALL_4
0xec29	              0x90	                                     nop	      8617	normal.c	FUNCTION_114
0xec2a	        0x488b45f8	                mov rax, qword [rbp - 8]	      8617	normal.c	FUNCTION_114
0xec2e	    0x644833042528	                xor rax, qword fs:[0x28]	      8617	normal.c	FUNCTION_114
0xec37	            0x7405	                            je 0x400ec7e	      8617	normal.c	FUNCTION_114
0xec39	      0xe800000000	                          call 0x400ec7e	      8617	normal.c	FUNCTION_114
0xec3e	              0xc9	                                   leave	      8617	normal.c	FUNCTION_114
0xec3f	              0xc3	                                     ret	      8617	normal.c	FUNCTION_114
check_visual_highlight	CALL,3:ELSE,0:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	19
0x4f06	              0x55	                                push rbp	      3286	normal.c	FUNCTION_13
0x4f07	          0x4889e5	                            mov rbp, rsp	      3286	normal.c	FUNCTION_13
0x4f0a	    0x8b0500000000	            mov eax, dword [0x04004f50] 	      3289	normal.c	FUNCTION_13	IF_1
0x4f10	            0x85c0	                           test eax, eax	      3289	normal.c	FUNCTION_13	IF_1
0x4f12	            0x7430	                            je 0x4004f84	      3289	normal.c	FUNCTION_13	IF_1
0x4f14	    0x8b0500000000	            mov eax, dword [0x04004f5a] 	      3291	normal.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4f1a	            0x85c0	                           test eax, eax	      3291	normal.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4f1c	            0x751c	                           jne 0x4004f7a	      3291	normal.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4f1e	    0x8b0500000000	            mov eax, dword [0x04004f64] 	      3291	normal.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4f24	            0x85c0	                           test eax, eax	      3291	normal.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4f26	            0x7512	                           jne 0x4004f7a	      3291	normal.c	FUNCTION_13	IF_1	IF_2	CALL_1
0x4f28	      0xbf00000000	                              mov edi, 0	      3292	normal.c	FUNCTION_13	IF_1	CALL_3
0x4f2d	      0xe800000000	                          call 0x4004f72	      3292	normal.c	FUNCTION_13	IF_1	CALL_3
0x4f32	          0x4889c7	                            mov rdi, rax	      3292	normal.c	FUNCTION_13	IF_1	CALL_3
0x4f35	      0xe800000000	                          call 0x4004f7a	      3292	normal.c	FUNCTION_13	IF_1	CALL_3
0x4f3a	    0xc70500000000	               mov dword [0x04004f84], 1	      3293	normal.c	FUNCTION_13	IF_1
0x4f44	              0x90	                                     nop	      3295	normal.c	FUNCTION_13
0x4f45	              0x5d	                                 pop rbp	      3295	normal.c	FUNCTION_13
0x4f46	              0xc3	                                     ret	      3295	normal.c	FUNCTION_13
nv_open	CALL,4:ELSE,2:DO,0:FOR,0:functions,0:IF,2:WHILE,0:SWITCH,0	37
0x10632	              0x55	                                push rbp	      9540	normal.c	FUNCTION_136
0x10633	          0x4889e5	                            mov rbp, rsp	      9540	normal.c	FUNCTION_136
0x10636	        0x4883ec10	                           sub rsp, 0x10	      9540	normal.c	FUNCTION_136
0x1063a	        0x48897df8	                mov qword [rbp - 8], rdi	      9540	normal.c	FUNCTION_136
0x1063e	        0x488b45f8	                mov rax, qword [rbp - 8]	      9543	normal.c	FUNCTION_136	IF_1
0x10642	          0x488b00	                    mov rax, qword [rax]	      9543	normal.c	FUNCTION_136	IF_1
0x10645	            0x8b00	                    mov eax, dword [rax]	      9543	normal.c	FUNCTION_136	IF_1
0x10647	          0x83f801	                              cmp eax, 1	      9543	normal.c	FUNCTION_136	IF_1
0x1064a	            0x7532	                           jne 0x40106be	      9543	normal.c	FUNCTION_136	IF_1
0x1064c	        0x488b45f8	                mov rax, qword [rbp - 8]	      9543	normal.c	FUNCTION_136	IF_1
0x10650	          0x8b400c	              mov eax, dword [rax + 0xc]	      9543	normal.c	FUNCTION_136	IF_1
0x10653	          0x83f86f	                           cmp eax, 0x6f	      9543	normal.c	FUNCTION_136	IF_1
0x10656	            0x7526	                           jne 0x40106be	      9543	normal.c	FUNCTION_136	IF_1
0x10658	        0x488b45f8	                mov rax, qword [rbp - 8]	      9545	normal.c	FUNCTION_136	IF_1	CALL_1
0x1065c	          0x488b00	                    mov rax, qword [rax]	      9545	normal.c	FUNCTION_136	IF_1	CALL_1
0x1065f	          0x4889c7	                            mov rdi, rax	      9545	normal.c	FUNCTION_136	IF_1	CALL_1
0x10662	      0xe84b53ffff	                        call sym.clearop	      9545	normal.c	FUNCTION_136	IF_1	CALL_1
0x10667	        0x488b45f8	                mov rax, qword [rbp - 8]	      9546	normal.c	FUNCTION_136	IF_1	CALL_2
0x1066b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9546	normal.c	FUNCTION_136	IF_1	CALL_2
0x1066f	          0x4889c6	                            mov rsi, rax	      9546	normal.c	FUNCTION_136	IF_1	CALL_2
0x10672	      0xbf00000000	                              mov edi, 0	      9546	normal.c	FUNCTION_136	IF_1	CALL_2
0x10677	      0xe800000000	                          call 0x40106bc	      9546	normal.c	FUNCTION_136	IF_1	CALL_2
0x1067c	            0xeb26	                           jmp 0x40106e4	      9554	normal.c	FUNCTION_136
0x1067e	    0x8b0500000000	            mov eax, dword [0x040106c4] 	      9550	normal.c	FUNCTION_136	ELSE_1	IF_2
0x10684	            0x85c0	                           test eax, eax	      9550	normal.c	FUNCTION_136	ELSE_1	IF_2
0x10686	            0x7410	                            je 0x40106d8	      9550	normal.c	FUNCTION_136	ELSE_1	IF_2
0x10688	        0x488b45f8	                mov rax, qword [rbp - 8]	      9551	normal.c	FUNCTION_136	ELSE_1	IF_2
0x1068c	          0x8b400c	              mov eax, dword [rax + 0xc]	      9551	normal.c	FUNCTION_136	ELSE_1	IF_2
0x1068f	            0x89c7	                            mov edi, eax	      9551	normal.c	FUNCTION_136	ELSE_1	IF_2
0x10691	      0xe896bcffff	                 call sym.v_swap_corners	      9551	normal.c	FUNCTION_136	ELSE_1	IF_2
0x10696	            0xeb0c	                           jmp 0x40106e4	      9554	normal.c	FUNCTION_136
0x10698	        0x488b45f8	                mov rax, qword [rbp - 8]	      9553	normal.c	FUNCTION_136	CALL_4
0x1069c	          0x4889c7	                            mov rdi, rax	      9553	normal.c	FUNCTION_136	CALL_4
0x1069f	      0xe84ce1ffff	                      call sym.n_opencmd	      9553	normal.c	FUNCTION_136	CALL_4
0x106a4	              0x90	                                     nop	      9554	normal.c	FUNCTION_136
0x106a5	              0xc9	                                   leave	      9554	normal.c	FUNCTION_136
0x106a6	              0xc3	                                     ret	      9554	normal.c	FUNCTION_136
nv_wordcmd	CALL,10:ELSE,4:DO,0:FOR,0:functions,0:IF,9:WHILE,0:SWITCH,0	158
0xee6d	              0x55	                                push rbp	      8708	normal.c	FUNCTION_119
0xee6e	          0x4889e5	                            mov rbp, rsp	      8708	normal.c	FUNCTION_119
0xee71	        0x4883ec30	                           sub rsp, 0x30	      8708	normal.c	FUNCTION_119
0xee75	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      8708	normal.c	FUNCTION_119
0xee79	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      8711	normal.c	FUNCTION_119
0xee80	    0x488b05000000	            mov rax, qword [0x0400eec7] 	      8712	normal.c	FUNCTION_119
0xee87	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      8712	normal.c	FUNCTION_119
0xee8b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8712	normal.c	FUNCTION_119
0xee8f	        0x488945f0	             mov qword [rbp - 0x10], rax	      8712	normal.c	FUNCTION_119
0xee93	        0x488955f8	                mov qword [rbp - 8], rdx	      8712	normal.c	FUNCTION_119
0xee97	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8717	normal.c	FUNCTION_119	IF_1
0xee9b	          0x8b400c	              mov eax, dword [rax + 0xc]	      8717	normal.c	FUNCTION_119	IF_1
0xee9e	          0x83f865	                           cmp eax, 0x65	      8717	normal.c	FUNCTION_119	IF_1
0xeea1	            0x740c	                            je 0x400eeef	      8717	normal.c	FUNCTION_119	IF_1
0xeea3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8717	normal.c	FUNCTION_119	IF_1
0xeea7	          0x8b400c	              mov eax, dword [rax + 0xc]	      8717	normal.c	FUNCTION_119	IF_1
0xeeaa	          0x83f845	                           cmp eax, 0x45	      8717	normal.c	FUNCTION_119	IF_1
0xeead	            0x7509	                           jne 0x400eef8	      8717	normal.c	FUNCTION_119	IF_1
0xeeaf	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      8718	normal.c	FUNCTION_119	IF_1
0xeeb6	            0xeb07	                           jmp 0x400eeff	      8718	normal.c	FUNCTION_119	IF_1
0xeeb8	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      8720	normal.c	FUNCTION_119	ELSE_1
0xeebf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8721	normal.c	FUNCTION_119	ELSE_1
0xeec3	          0x488b00	                    mov rax, qword [rax]	      8721	normal.c	FUNCTION_119	ELSE_1
0xeec6	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      8721	normal.c	FUNCTION_119	ELSE_1
0xeec9	          0x895014	             mov dword [rax + 0x14], edx	      8721	normal.c	FUNCTION_119	ELSE_1
0xeecc	        0x837de800	               cmp dword [rbp - 0x18], 0	      8726	normal.c	FUNCTION_119	ELSE_1	IF_2
0xeed0	     0xf8593000000	                           jne 0x400efa9	      8726	normal.c	FUNCTION_119	ELSE_1	IF_2
0xeed6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8726	normal.c	FUNCTION_119	ELSE_1	IF_2
0xeeda	          0x488b00	                    mov rax, qword [rax]	      8726	normal.c	FUNCTION_119	ELSE_1	IF_2
0xeedd	            0x8b00	                    mov eax, dword [rax]	      8726	normal.c	FUNCTION_119	ELSE_1	IF_2
0xeedf	          0x83f803	                              cmp eax, 3	      8726	normal.c	FUNCTION_119	ELSE_1	IF_2
0xeee2	     0xf8581000000	                           jne 0x400efa9	      8726	normal.c	FUNCTION_119	ELSE_1	IF_2
0xeee8	      0xe800000000	                          call 0x400ef2d	      8728	normal.c	FUNCTION_119	ELSE_1	IF_2	CALL_1
0xeeed	          0x8945e4	             mov dword [rbp - 0x1c], eax	      8728	normal.c	FUNCTION_119	ELSE_1	IF_2	CALL_1
0xeef0	        0x837de400	               cmp dword [rbp - 0x1c], 0	      8729	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3
0xeef4	            0x7473	                            je 0x400efa9	      8729	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3
0xeef6	        0x837de420	           cmp dword [rbp - 0x1c], 0x20 	      8731	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	CALL_2
0xeefa	            0x7406	                            je 0x400ef42	      8731	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	CALL_2
0xeefc	        0x837de409	               cmp dword [rbp - 0x1c], 9	      8731	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	CALL_2
0xef00	            0x7548	                           jne 0x400ef8a	      8731	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	CALL_2
0xef02	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8739	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0xef06	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8739	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0xef0a	        0x4883f801	                              cmp rax, 1	      8739	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0xef0e	            0x7558	                           jne 0x400efa8	      8739	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0xef10	    0x488b05000000	            mov rax, qword [0x0400ef57] 	      8739	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0xef17	      0xbe77000000	                           mov esi, 0x77	      8739	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0xef1c	          0x4889c7	                            mov rdi, rax	      8739	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0xef1f	      0xe800000000	                          call 0x400ef64	      8739	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0xef24	          0x4885c0	                           test rax, rax	      8739	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0xef27	            0x743f	                            je 0x400efa8	      8739	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0xef29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8741	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5
0xef2d	          0x488b00	                    mov rax, qword [rax]	      8741	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5
0xef30	    0xc74014010000	               mov dword [rax + 0x14], 1	      8741	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5
0xef37	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8742	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5
0xef3b	          0x488b00	                    mov rax, qword [rax]	      8742	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5
0xef3e	    0xc74008000000	                  mov dword [rax + 8], 0	      8742	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5
0xef45	      0xe960010000	                           jmp 0x400f0ea	      8742	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5
0xef4a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8759	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	ELSE_2
0xef4e	          0x488b00	                    mov rax, qword [rax]	      8759	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	ELSE_2
0xef51	    0xc74014010000	               mov dword [rax + 0x14], 1	      8759	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	ELSE_2
0xef58	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      8760	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	ELSE_2
0xef5f	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      8761	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	ELSE_2
0xef66	            0xeb01	                           jmp 0x400efa9	      8761	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	ELSE_2
0xef68	              0x90	                                     nop	      8739	normal.c	FUNCTION_119	ELSE_1	IF_2	IF_3	IF_4	IF_5	CALL_3
0xef69	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8766	normal.c	FUNCTION_119
0xef6d	          0x488b00	                    mov rax, qword [rax]	      8766	normal.c	FUNCTION_119
0xef70	    0xc74008000000	                  mov dword [rax + 8], 0	      8766	normal.c	FUNCTION_119
0xef77	    0x488b05000000	            mov rax, qword [0x0400efbe] 	      8767	normal.c	FUNCTION_119
0xef7e	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8767	normal.c	FUNCTION_119
0xef85	        0x837de800	               cmp dword [rbp - 0x18], 0	      8768	normal.c	FUNCTION_119	IF_6
0xef89	            0x7424	                            je 0x400efef	      8768	normal.c	FUNCTION_119	IF_6
0xef8b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8769	normal.c	FUNCTION_119	CALL_4
0xef8f	          0x8b7038	            mov esi, dword [rax + 0x38] 	      8769	normal.c	FUNCTION_119	CALL_4
0xef92	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8769	normal.c	FUNCTION_119	CALL_4
0xef96	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8769	normal.c	FUNCTION_119	CALL_4
0xef9a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      8769	normal.c	FUNCTION_119	CALL_4
0xef9d	      0xb900000000	                              mov ecx, 0	      8769	normal.c	FUNCTION_119	CALL_4
0xefa2	          0x4889c7	                            mov rdi, rax	      8769	normal.c	FUNCTION_119	CALL_4
0xefa5	      0xe800000000	                          call 0x400efea	      8769	normal.c	FUNCTION_119	CALL_4
0xefaa	          0x8945e4	             mov dword [rbp - 0x1c], eax	      8769	normal.c	FUNCTION_119	CALL_4
0xefad	            0xeb2d	                           jmp 0x400f01c	      8769	normal.c	FUNCTION_119	CALL_4
0xefaf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8771	normal.c	FUNCTION_119	CALL_5
0xefb3	          0x488b00	                    mov rax, qword [rax]	      8771	normal.c	FUNCTION_119	CALL_5
0xefb6	            0x8b00	                    mov eax, dword [rax]	      8771	normal.c	FUNCTION_119	CALL_5
0xefb8	            0x85c0	                           test eax, eax	      8771	normal.c	FUNCTION_119	CALL_5
0xefba	           0xf95c0	                                setne al	      8771	normal.c	FUNCTION_119	CALL_5
0xefbd	           0xfb6d0	                           movzx edx, al	      8771	normal.c	FUNCTION_119	CALL_5
0xefc0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8771	normal.c	FUNCTION_119	CALL_5
0xefc4	          0x8b4838	            mov ecx, dword [rax + 0x38] 	      8771	normal.c	FUNCTION_119	CALL_5
0xefc7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8771	normal.c	FUNCTION_119	CALL_5
0xefcb	        0x488b4030	            mov rax, qword [rax + 0x30] 	      8771	normal.c	FUNCTION_119	CALL_5
0xefcf	            0x89ce	                            mov esi, ecx	      8771	normal.c	FUNCTION_119	CALL_5
0xefd1	          0x4889c7	                            mov rdi, rax	      8771	normal.c	FUNCTION_119	CALL_5
0xefd4	      0xe800000000	                          call 0x400f019	      8771	normal.c	FUNCTION_119	CALL_5
0xefd9	          0x8945e4	             mov dword [rbp - 0x1c], eax	      8771	normal.c	FUNCTION_119	CALL_5
0xefdc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xefe0	    0x488b05000000	            mov rax, qword [0x0400f027] 	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xefe7	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xefeb	          0x4839c2	                            cmp rdx, rax	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xefee	            0x7417	                            je 0x400f047	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xeff0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xeff4	    0x488b05000000	            mov rax, qword [0x0400f03b] 	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xeffb	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xefff	          0x4839c2	                            cmp rdx, rax	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf002	           0xf9cc0	                                 setl al	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf005	            0xeb37	                           jmp 0x400f07e	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf007	          0x8b55f8	                mov edx, dword [rbp - 8]	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf00a	    0x488b05000000	            mov rax, qword [0x0400f051] 	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf011	          0x8b4040	            mov eax, dword [rax + 0x40] 	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf014	            0x39c2	                            cmp edx, eax	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf016	            0x7414	                            je 0x400f06c	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf018	          0x8b55f8	                mov edx, dword [rbp - 8]	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf01b	    0x488b05000000	            mov rax, qword [0x0400f062] 	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf022	          0x8b4040	            mov eax, dword [rax + 0x40] 	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf025	            0x39c2	                            cmp edx, eax	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf027	           0xf9cc0	                                 setl al	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf02a	            0xeb12	                           jmp 0x400f07e	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf02c	          0x8b55fc	                mov edx, dword [rbp - 4]	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf02f	    0x488b05000000	            mov rax, qword [0x0400f076] 	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf036	          0x8b4044	            mov eax, dword [rax + 0x44] 	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf039	            0x39c2	                            cmp edx, eax	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf03b	           0xf9cc0	                                 setl al	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf03e	            0x84c0	                             test al, al	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf040	            0x740f	                            je 0x400f091	      8775	normal.c	FUNCTION_119	IF_7	CALL_6
0xf042	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8776	normal.c	FUNCTION_119	CALL_7
0xf046	          0x488b00	                    mov rax, qword [rax]	      8776	normal.c	FUNCTION_119	CALL_7
0xf049	          0x4889c7	                            mov rdi, rax	      8776	normal.c	FUNCTION_119	CALL_7
0xf04c	      0xe85b000000	                  call sym.adjust_cursor	      8776	normal.c	FUNCTION_119	CALL_7
0xf051	        0x837de400	               cmp dword [rbp - 0x1c], 0	      8778	normal.c	FUNCTION_119	IF_8
0xf055	            0x751e	                           jne 0x400f0b5	      8778	normal.c	FUNCTION_119	IF_8
0xf057	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8778	normal.c	FUNCTION_119	IF_8
0xf05b	          0x488b00	                    mov rax, qword [rax]	      8778	normal.c	FUNCTION_119	IF_8
0xf05e	            0x8b00	                    mov eax, dword [rax]	      8778	normal.c	FUNCTION_119	IF_8
0xf060	            0x85c0	                           test eax, eax	      8778	normal.c	FUNCTION_119	IF_8
0xf062	            0x7511	                           jne 0x400f0b5	      8778	normal.c	FUNCTION_119	IF_8
0xf064	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8779	normal.c	FUNCTION_119	CALL_8
0xf068	          0x488b00	                    mov rax, qword [rax]	      8779	normal.c	FUNCTION_119	CALL_8
0xf06b	          0x4889c7	                            mov rdi, rax	      8779	normal.c	FUNCTION_119	CALL_8
0xf06e	      0xe87569ffff	                    call sym.clearopbeep	      8779	normal.c	FUNCTION_119	CALL_8
0xf073	            0xeb35	                           jmp 0x400f0ea	      8779	normal.c	FUNCTION_119	CALL_8
0xf075	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8782	normal.c	FUNCTION_119	ELSE_4	CALL_9
0xf079	          0x4889c7	                            mov rdi, rax	      8782	normal.c	FUNCTION_119	ELSE_4	CALL_9
0xf07c	      0xe815010000	                 call sym.adjust_for_sel	      8782	normal.c	FUNCTION_119	ELSE_4	CALL_9
0xf081	    0x8b0500000000	            mov eax, dword [0x0400f0c7] 	      8784	normal.c	FUNCTION_119	ELSE_4	IF_9
0xf087	          0x83e004	                              and eax, 4	      8784	normal.c	FUNCTION_119	ELSE_4	IF_9
0xf08a	            0x85c0	                           test eax, eax	      8784	normal.c	FUNCTION_119	ELSE_4	IF_9
0xf08c	            0x741c	                            je 0x400f0ea	      8784	normal.c	FUNCTION_119	ELSE_4	IF_9
0xf08e	    0x8b0500000000	            mov eax, dword [0x0400f0d4] 	      8784	normal.c	FUNCTION_119	ELSE_4	IF_9
0xf094	            0x85c0	                           test eax, eax	      8784	normal.c	FUNCTION_119	ELSE_4	IF_9
0xf096	            0x7412	                            je 0x400f0ea	      8784	normal.c	FUNCTION_119	ELSE_4	IF_9
0xf098	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8784	normal.c	FUNCTION_119	ELSE_4	IF_9
0xf09c	          0x488b00	                    mov rax, qword [rax]	      8784	normal.c	FUNCTION_119	ELSE_4	IF_9
0xf09f	            0x8b00	                    mov eax, dword [rax]	      8784	normal.c	FUNCTION_119	ELSE_4	IF_9
0xf0a1	            0x85c0	                           test eax, eax	      8784	normal.c	FUNCTION_119	ELSE_4	IF_9
0xf0a3	            0x7505	                           jne 0x400f0ea	      8784	normal.c	FUNCTION_119	ELSE_4	IF_9
0xf0a5	      0xe800000000	                          call 0x400f0ea	      8785	normal.c	FUNCTION_119	ELSE_4	CALL_10
0xf0aa	              0xc9	                                   leave	      8788	normal.c	FUNCTION_119
0xf0ab	              0xc3	                                     ret	      8788	normal.c	FUNCTION_119
nv_right	CALL,14:ELSE,5:DO,0:FOR,1:functions,0:IF,13:WHILE,0:SWITCH,0	201
0x9bdf	              0x55	                                push rbp	      5986	normal.c	FUNCTION_70
0x9be0	          0x4889e5	                            mov rbp, rsp	      5986	normal.c	FUNCTION_70
0x9be3	              0x53	                                push rbx	      5986	normal.c	FUNCTION_70
0x9be4	        0x4883ec28	                           sub rsp, 0x28	      5986	normal.c	FUNCTION_70
0x9be8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5986	normal.c	FUNCTION_70
0x9bec	    0x8b0500000000	            mov eax, dword [0x04009c32] 	      5990	normal.c	FUNCTION_70	IF_1
0x9bf2	          0x83e006	                              and eax, 6	      5990	normal.c	FUNCTION_70	IF_1
0x9bf5	            0x85c0	                           test eax, eax	      5990	normal.c	FUNCTION_70	IF_1
0x9bf7	            0x7429	                            je 0x4009c62	      5990	normal.c	FUNCTION_70	IF_1
0x9bf9	    0x8b0500000000	            mov eax, dword [0x04009c3f] 	      5993	normal.c	FUNCTION_70	IF_1	IF_2
0x9bff	          0x83e004	                              and eax, 4	      5993	normal.c	FUNCTION_70	IF_1	IF_2
0x9c02	            0x85c0	                           test eax, eax	      5993	normal.c	FUNCTION_70	IF_1	IF_2
0x9c04	            0x740b	                            je 0x4009c51	      5993	normal.c	FUNCTION_70	IF_1	IF_2
0x9c06	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5994	normal.c	FUNCTION_70	IF_1	IF_2
0x9c0a	    0xc74038010000	               mov dword [rax + 0x38], 1	      5994	normal.c	FUNCTION_70	IF_1	IF_2
0x9c11	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5995	normal.c	FUNCTION_70	IF_1	CALL_1
0x9c15	          0x4889c7	                            mov rdi, rax	      5995	normal.c	FUNCTION_70	IF_1	CALL_1
0x9c18	      0xe850520000	                     call sym.nv_wordcmd	      5995	normal.c	FUNCTION_70	IF_1	CALL_1
0x9c1d	      0xe9c6020000	                           jmp 0x4009f28	      5996	normal.c	FUNCTION_70	IF_1
0x9c22	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5999	normal.c	FUNCTION_70
0x9c26	          0x488b00	                    mov rax, qword [rax]	      5999	normal.c	FUNCTION_70
0x9c29	    0xc74008000000	                  mov dword [rax + 8], 0	      5999	normal.c	FUNCTION_70
0x9c30	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6000	normal.c	FUNCTION_70
0x9c34	          0x488b00	                    mov rax, qword [rax]	      6000	normal.c	FUNCTION_70
0x9c37	    0xc74014000000	               mov dword [rax + 0x14], 0	      6000	normal.c	FUNCTION_70
0x9c3e	    0x8b0500000000	            mov eax, dword [0x04009c84] 	      6001	normal.c	FUNCTION_70
0x9c44	            0x85c0	                           test eax, eax	      6001	normal.c	FUNCTION_70
0x9c46	            0x7415	                            je 0x4009c9d	      6001	normal.c	FUNCTION_70
0x9c48	    0x488b05000000	            mov rax, qword [0x04009c8f] 	      6001	normal.c	FUNCTION_70
0x9c4f	           0xfb600	                   movzx eax, byte [rax]	      6001	normal.c	FUNCTION_70
0x9c52	            0x3c6f	                            cmp al, 0x6f	      6001	normal.c	FUNCTION_70
0x9c54	            0x7407	                            je 0x4009c9d	      6001	normal.c	FUNCTION_70
0x9c56	      0xb801000000	                              mov eax, 1	      6001	normal.c	FUNCTION_70
0x9c5b	            0xeb05	                           jmp 0x4009ca2	      6001	normal.c	FUNCTION_70
0x9c5d	      0xb800000000	                              mov eax, 0	      6001	normal.c	FUNCTION_70
0x9c62	          0x8945e4	             mov dword [rbp - 0x1c], eax	      6001	normal.c	FUNCTION_70
0x9c65	      0xe800000000	                          call 0x4009caa	      6008	normal.c	FUNCTION_70	IF_3	CALL_2
0x9c6a	            0x85c0	                           test eax, eax	      6008	normal.c	FUNCTION_70	IF_3	CALL_2
0x9c6c	            0x7407	                            je 0x4009cb5	      6008	normal.c	FUNCTION_70	IF_3	CALL_2
0x9c6e	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      6009	normal.c	FUNCTION_70	IF_3
0x9c75	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6012	normal.c	FUNCTION_70	FOR_1
0x9c79	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6012	normal.c	FUNCTION_70	FOR_1
0x9c7d	        0x488945e8	             mov qword [rbp - 0x18], rax	      6012	normal.c	FUNCTION_70	FOR_1
0x9c81	      0xe91d020000	                           jmp 0x4009ee3	      6012	normal.c	FUNCTION_70	FOR_1
0x9c86	        0x837de400	               cmp dword [rbp - 0x1c], 0	      6014	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_3
0x9c8a	            0x7509	                           jne 0x4009cd5	      6014	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_3
0x9c8c	      0xe800000000	                          call 0x4009cd1	      6014	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_3
0x9c91	            0x85c0	                           test eax, eax	      6014	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_3
0x9c93	            0x741a	                            je 0x4009cef	      6014	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_3
0x9c95	        0x837de400	               cmp dword [rbp - 0x1c], 0	      6015	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_4
0x9c99	     0xf8496010000	                            je 0x4009e75	      6015	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_4
0x9c9f	      0xe800000000	                          call 0x4009ce4	      6015	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_4
0x9ca4	           0xfb600	                   movzx eax, byte [rax]	      6015	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_4
0x9ca7	            0x84c0	                             test al, al	      6015	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_4
0x9ca9	     0xf8586010000	                           jne 0x4009e75	      6015	normal.c	FUNCTION_70	FOR_1	IF_4	CALL_4
0x9caf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6023	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9cb3	          0x8b400c	              mov eax, dword [rax + 0xc]	      6023	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9cb6	          0x83f820	                           cmp eax, 0x20	      6023	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9cb9	            0x7519	                           jne 0x4009d14	      6023	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9cbb	    0x488b05000000	            mov rax, qword [0x04009d02] 	      6024	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_5
0x9cc2	      0xbe73000000	                           mov esi, 0x73	      6024	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_5
0x9cc7	          0x4889c7	                            mov rdi, rax	      6024	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_5
0x9cca	      0xe800000000	                          call 0x4009d0f	      6024	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_5
0x9ccf	          0x4885c0	                           test rax, rax	      6024	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_5
0x9cd2	            0x7554	                           jne 0x4009d68	      6024	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_5
0x9cd4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6025	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9cd8	          0x8b400c	              mov eax, dword [rax + 0xc]	      6025	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9cdb	          0x83f86c	                           cmp eax, 0x6c	      6025	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9cde	            0x7519	                           jne 0x4009d39	      6025	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9ce0	    0x488b05000000	            mov rax, qword [0x04009d27] 	      6026	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_6
0x9ce7	      0xbe6c000000	                           mov esi, 0x6c	      6026	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_6
0x9cec	          0x4889c7	                            mov rdi, rax	      6026	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_6
0x9cef	      0xe800000000	                          call 0x4009d34	      6026	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_6
0x9cf4	          0x4885c0	                           test rax, rax	      6026	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_6
0x9cf7	            0x752f	                           jne 0x4009d68	      6026	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_6
0x9cf9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6027	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9cfd	          0x8b400c	              mov eax, dword [rax + 0xc]	      6027	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9d00	      0x3d958dffff	                     cmp eax, 0xffff8d95	      6027	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9d05	     0xf85d3000000	                           jne 0x4009e1e	      6027	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9d0b	    0x488b05000000	            mov rax, qword [0x04009d52] 	      6028	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_7
0x9d12	      0xbe3e000000	                           mov esi, 0x3e	      6028	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_7
0x9d17	          0x4889c7	                            mov rdi, rax	      6028	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_7
0x9d1a	      0xe800000000	                          call 0x4009d5f	      6028	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_7
0x9d1f	          0x4885c0	                           test rax, rax	      6028	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_7
0x9d22	     0xf84b6000000	                            je 0x4009e1e	      6028	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	CALL_7
0x9d28	    0x488b05000000	            mov rax, qword [0x04009d6f] 	      6029	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9d2f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      6029	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9d33	    0x488b05000000	            mov rax, qword [0x04009d7a] 	      6029	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9d3a	          0x488b00	                    mov rax, qword [rax]	      6029	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9d3d	          0x4839c2	                            cmp rdx, rax	      6029	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9d40	     0xf8d98000000	                           jge 0x4009e1e	      6029	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9d46	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6034	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x9d4a	          0x488b00	                    mov rax, qword [rax]	      6034	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x9d4d	            0x8b00	                    mov eax, dword [rax]	      6034	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x9d4f	            0x85c0	                           test eax, eax	      6034	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x9d51	            0x743b	                            je 0x4009dce	      6034	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x9d53	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6035	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x9d57	          0x488b00	                    mov rax, qword [rax]	      6035	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x9d5a	          0x8b4014	            mov eax, dword [rax + 0x14] 	      6035	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x9d5d	            0x85c0	                           test eax, eax	      6035	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x9d5f	            0x752d	                           jne 0x4009dce	      6035	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x9d61	    0x488b05000000	            mov rax, qword [0x04009da8] 	      6036	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6	CALL_8
0x9d68	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6036	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6	CALL_8
0x9d6c	          0x4889c7	                            mov rdi, rax	      6036	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6	CALL_8
0x9d6f	      0xe800000000	                          call 0x4009db4	      6036	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6	CALL_8
0x9d74	           0xfb600	                   movzx eax, byte [rax]	      6036	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6	CALL_8
0x9d77	            0x84c0	                             test al, al	      6036	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6	CALL_8
0x9d79	            0x7413	                            je 0x4009dce	      6036	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6	CALL_8
0x9d7b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6037	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x9d7f	          0x488b00	                    mov rax, qword [rax]	      6037	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x9d82	    0xc74014010000	               mov dword [rax + 0x14], 1	      6037	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	IF_6
0x9d89	      0xe910010000	                           jmp 0x4009ede	      6048	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9d8e	    0x488b05000000	            mov rax, qword [0x04009dd5] 	      6040	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x9d95	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      6040	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x9d99	        0x4883c201	                              add rdx, 1	      6040	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x9d9d	        0x48895038	             mov qword [rax + 0x38], rdx	      6040	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x9da1	    0x488b05000000	            mov rax, qword [0x04009de8] 	      6041	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x9da8	    0xc74040000000	               mov dword [rax + 0x40], 0	      6041	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x9daf	    0x488b05000000	            mov rax, qword [0x04009df6] 	      6043	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x9db6	    0xc74044000000	               mov dword [rax + 0x44], 0	      6043	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x9dbd	    0x488b05000000	            mov rax, qword [0x04009e04] 	      6045	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x9dc4	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6045	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x9dcb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6046	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x9dcf	          0x488b00	                    mov rax, qword [rax]	      6046	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x9dd2	    0xc74014000000	               mov dword [rax + 0x14], 0	      6046	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5	ELSE_1
0x9dd9	      0xe9c0000000	                           jmp 0x4009ede	      6048	normal.c	FUNCTION_70	FOR_1	IF_4	IF_5
0x9dde	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6050	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7
0x9de2	          0x488b00	                    mov rax, qword [rax]	      6050	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7
0x9de5	            0x8b00	                    mov eax, dword [rax]	      6050	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7
0x9de7	            0x85c0	                           test eax, eax	      6050	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7
0x9de9	            0x751c	                           jne 0x4009e47	      6050	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7
0x9deb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6053	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7	IF_8
0x9def	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6053	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7	IF_8
0x9df3	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      6053	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7	IF_8
0x9df7	     0xf85b3000000	                           jne 0x4009ef0	      6053	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7	IF_8
0x9dfd	      0xe800000000	                          call 0x4009e42	      6054	normal.c	FUNCTION_70	FOR_1	IF_4	IF_7	CALL_9
0x9e02	      0xe9a9000000	                           jmp 0x4009ef0	      6061	normal.c	FUNCTION_70	FOR_1	IF_4
0x9e07	    0x488b05000000	            mov rax, qword [0x04009e4e] 	      6058	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9	CALL_10
0x9e0e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6058	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9	CALL_10
0x9e12	          0x4889c7	                            mov rdi, rax	      6058	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9	CALL_10
0x9e15	      0xe800000000	                          call 0x4009e5a	      6058	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9	CALL_10
0x9e1a	           0xfb600	                   movzx eax, byte [rax]	      6058	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9	CALL_10
0x9e1d	            0x84c0	                             test al, al	      6058	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9	CALL_10
0x9e1f	     0xf848b000000	                            je 0x4009ef0	      6058	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9	CALL_10
0x9e25	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6059	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9
0x9e29	          0x488b00	                    mov rax, qword [rax]	      6059	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9
0x9e2c	    0xc74014010000	               mov dword [rax + 0x14], 1	      6059	normal.c	FUNCTION_70	FOR_1	IF_4	ELSE_2	IF_9
0x9e33	            0xeb7b	                           jmp 0x4009ef0	      6061	normal.c	FUNCTION_70	FOR_1	IF_4
0x9e35	        0x837de400	               cmp dword [rbp - 0x1c], 0	      6063	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10
0x9e39	            0x7463	                            je 0x4009ede	      6063	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10
0x9e3b	    0x488b05000000	            mov rax, qword [0x04009e82] 	      6065	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10
0x9e42	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      6065	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10
0x9e49	      0xe800000000	                          call 0x4009e8e	      6067	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	IF_11	CALL_11
0x9e4e	            0x85c0	                           test eax, eax	      6067	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	IF_11	CALL_11
0x9e50	            0x7407	                            je 0x4009e99	      6067	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	IF_11	CALL_11
0x9e52	      0xe800000000	                          call 0x4009e97	      6068	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	CALL_12
0x9e57	            0xeb45	                           jmp 0x4009ede	      6068	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	CALL_12
0x9e59	    0x8b0500000000	            mov eax, dword [0x04009e9f] 	      6073	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	IF_12
0x9e5f	            0x85c0	                           test eax, eax	      6073	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	IF_12
0x9e61	            0x742b	                            je 0x4009ece	      6073	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	IF_12
0x9e63	    0x488b1d000000	            mov rbx, qword [0x04009eaa] 	      6075	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	CALL_13
0x9e6a	      0xe800000000	                          call 0x4009eaf	      6075	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	CALL_13
0x9e6f	          0x4889c7	                            mov rdi, rax	      6075	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	CALL_13
0x9e72	            0xffd3	                                call rbx	      6075	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	CALL_13
0x9e74	            0x89c1	                            mov ecx, eax	      6075	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	CALL_13
0x9e76	    0x488b05000000	            mov rax, qword [0x04009ebd] 	      6074	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	IF_12
0x9e7d	    0x488b15000000	            mov rdx, qword [0x04009ec4] 	      6074	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	IF_12
0x9e84	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      6074	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	IF_12
0x9e87	             0x1ca	                            add edx, ecx	      6074	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	IF_12
0x9e89	          0x895040	             mov dword [rax + 0x40], edx	      6074	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	IF_12
0x9e8c	            0xeb10	                           jmp 0x4009ede	      6074	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	IF_12
0x9e8e	    0x488b05000000	            mov rax, qword [0x04009ed5] 	      6078	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	ELSE_5
0x9e95	          0x8b5040	            mov edx, dword [rax + 0x40] 	      6078	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	ELSE_5
0x9e98	          0x83c201	                              add edx, 1	      6078	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	ELSE_5
0x9e9b	          0x895040	             mov dword [rax + 0x40], edx	      6078	normal.c	FUNCTION_70	FOR_1	ELSE_3	IF_10	ELSE_4	ELSE_5
0x9e9e	      0x48836de801	               sub qword [rbp - 0x18], 1	      6012	normal.c	FUNCTION_70	FOR_1
0x9ea3	      0x48837de800	               cmp qword [rbp - 0x18], 0	      6012	normal.c	FUNCTION_70	FOR_1
0x9ea8	     0xf8fd8fdffff	                            jg 0x4009cc6	      6012	normal.c	FUNCTION_70	FOR_1
0x9eae	            0xeb01	                           jmp 0x4009ef1	      6012	normal.c	FUNCTION_70	FOR_1
0x9eb0	              0x90	                                     nop	      6061	normal.c	FUNCTION_70	FOR_1	IF_4
0x9eb1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6083	normal.c	FUNCTION_70	IF_13
0x9eb5	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6083	normal.c	FUNCTION_70	IF_13
0x9eb9	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      6083	normal.c	FUNCTION_70	IF_13
0x9ebd	            0x7429	                            je 0x4009f28	      6083	normal.c	FUNCTION_70	IF_13
0x9ebf	    0x8b0500000000	            mov eax, dword [0x04009f05] 	      6083	normal.c	FUNCTION_70	IF_13
0x9ec5	          0x83e004	                              and eax, 4	      6083	normal.c	FUNCTION_70	IF_13
0x9ec8	            0x85c0	                           test eax, eax	      6083	normal.c	FUNCTION_70	IF_13
0x9eca	            0x741c	                            je 0x4009f28	      6083	normal.c	FUNCTION_70	IF_13
0x9ecc	    0x8b0500000000	            mov eax, dword [0x04009f12] 	      6083	normal.c	FUNCTION_70	IF_13
0x9ed2	            0x85c0	                           test eax, eax	      6083	normal.c	FUNCTION_70	IF_13
0x9ed4	            0x7412	                            je 0x4009f28	      6083	normal.c	FUNCTION_70	IF_13
0x9ed6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6084	normal.c	FUNCTION_70	IF_13
0x9eda	          0x488b00	                    mov rax, qword [rax]	      6084	normal.c	FUNCTION_70	IF_13
0x9edd	            0x8b00	                    mov eax, dword [rax]	      6084	normal.c	FUNCTION_70	IF_13
0x9edf	            0x85c0	                           test eax, eax	      6084	normal.c	FUNCTION_70	IF_13
0x9ee1	            0x7505	                           jne 0x4009f28	      6084	normal.c	FUNCTION_70	IF_13
0x9ee3	      0xe800000000	                          call 0x4009f28	      6085	normal.c	FUNCTION_70	CALL_14
0x9ee8	        0x4883c428	                           add rsp, 0x28	      6087	normal.c	FUNCTION_70
0x9eec	              0x5b	                                 pop rbx	      6087	normal.c	FUNCTION_70
0x9eed	              0x5d	                                 pop rbp	      6087	normal.c	FUNCTION_70
0x9eee	              0xc3	                                     ret	      6087	normal.c	FUNCTION_70
start_selection	CALL,2:ELSE,0:DO,0:FOR,0:functions,0:IF,0:WHILE,0:SWITCH,0	9
0xd464	              0x55	                                push rbp	      7773	normal.c	FUNCTION_102
0xd465	          0x4889e5	                            mov rbp, rsp	      7773	normal.c	FUNCTION_102
0xd468	      0xbf6b000000	                           mov edi, 0x6b	      7775	normal.c	FUNCTION_102	CALL_1
0xd46d	      0xe800000000	                          call 0x400d4b2	      7775	normal.c	FUNCTION_102	CALL_1
0xd472	      0xbf76000000	                           mov edi, 0x76	      7776	normal.c	FUNCTION_102	CALL_2
0xd477	      0xe84e000000	            call sym.n_start_visual_mode	      7776	normal.c	FUNCTION_102	CALL_2
0xd47c	              0x90	                                     nop	      7777	normal.c	FUNCTION_102
0xd47d	              0x5d	                                 pop rbp	      7777	normal.c	FUNCTION_102
0xd47e	              0xc3	                                     ret	      7777	normal.c	FUNCTION_102
