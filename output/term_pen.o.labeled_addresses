vterm_state_set_default_colors	SWITCH,0:CALL,0:DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:functions,0	16
0x95c	              0x55	                                push rbp	       214	pen.c	FUNCTION_14
0x95d	          0x4889e5	                            mov rbp, rsp	       214	pen.c	FUNCTION_14
0x960	        0x48897df8	                mov qword [rbp - 8], rdi	       214	pen.c	FUNCTION_14
0x964	        0x488975f0	             mov qword [rbp - 0x10], rsi	       214	pen.c	FUNCTION_14
0x968	        0x488955e8	             mov qword [rbp - 0x18], rdx	       214	pen.c	FUNCTION_14
0x96c	        0x488b45f8	                mov rax, qword [rbp - 8]	       215	pen.c	FUNCTION_14
0x970	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       215	pen.c	FUNCTION_14
0x974	            0x8b12	                    mov edx, dword [rdx]	       215	pen.c	FUNCTION_14
0x976	    0x899028010000	            mov dword [rax + 0x128], edx	       215	pen.c	FUNCTION_14
0x97c	        0x488b45f8	                mov rax, qword [rbp - 8]	       216	pen.c	FUNCTION_14
0x980	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       216	pen.c	FUNCTION_14
0x984	            0x8b12	                    mov edx, dword [rdx]	       216	pen.c	FUNCTION_14
0x986	    0x89902c010000	            mov dword [rax + 0x12c], edx	       216	pen.c	FUNCTION_14
0x98c	              0x90	                                     nop	       217	pen.c	FUNCTION_14
0x98d	              0x5d	                                 pop rbp	       217	pen.c	FUNCTION_14
0x98e	              0xc3	                                     ret	       217	pen.c	FUNCTION_14
setpenattr_int	SWITCH,0:CALL,1:DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:functions,0	25
0x3df	              0x55	                                push rbp	       130	pen.c	FUNCTION_6
0x3e0	          0x4889e5	                            mov rbp, rsp	       130	pen.c	FUNCTION_6
0x3e3	        0x4883ec20	                           sub rsp, 0x20	       130	pen.c	FUNCTION_6
0x3e7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       130	pen.c	FUNCTION_6
0x3eb	          0x8975e4	             mov dword [rbp - 0x1c], esi	       130	pen.c	FUNCTION_6
0x3ee	          0x8955e0	             mov dword [rbp - 0x20], edx	       130	pen.c	FUNCTION_6
0x3f1	    0x64488b042528	                mov rax, qword fs:[0x28]	       130	pen.c	FUNCTION_6
0x3fa	        0x488945f8	                mov qword [rbp - 8], rax	       130	pen.c	FUNCTION_6
0x3fe	            0x31c0	                            xor eax, eax	       130	pen.c	FUNCTION_6
0x400	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       132	pen.c	FUNCTION_6
0x403	          0x8945f0	             mov dword [rbp - 0x10], eax	       132	pen.c	FUNCTION_6
0x406	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       133	pen.c	FUNCTION_6	CALL_1
0x40a	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       133	pen.c	FUNCTION_6	CALL_1
0x40d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       133	pen.c	FUNCTION_6	CALL_1
0x411	          0x4889d1	                            mov rcx, rdx	       133	pen.c	FUNCTION_6	CALL_1
0x414	      0xba02000000	                              mov edx, 2	       133	pen.c	FUNCTION_6	CALL_1
0x419	          0x4889c7	                            mov rdi, rax	       133	pen.c	FUNCTION_6	CALL_1
0x41c	      0xe80fffffff	                     call sym.setpenattr	       133	pen.c	FUNCTION_6	CALL_1
0x421	              0x90	                                     nop	       134	pen.c	FUNCTION_6
0x422	        0x488b45f8	                mov rax, qword [rbp - 8]	       134	pen.c	FUNCTION_6
0x426	    0x644833042528	                xor rax, qword fs:[0x28]	       134	pen.c	FUNCTION_6
0x42f	            0x7405	                            je 0x4000476	       134	pen.c	FUNCTION_6
0x431	      0xe800000000	                          call 0x4000476	       134	pen.c	FUNCTION_6
0x436	              0xc9	                                   leave	       134	pen.c	FUNCTION_6
0x437	              0xc3	                                     ret	       134	pen.c	FUNCTION_6
lookup_colour_ansi	SWITCH,0:CALL,0:DO,0:ELSE,0:IF,1:WHILE,0:FOR,0:functions,0	20
0x0	              0x55	                                push rbp	        38	pen.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	        38	pen.c	FUNCTION_1
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	        38	pen.c	FUNCTION_1
0x8	        0x488975f0	             mov qword [rbp - 0x10], rsi	        38	pen.c	FUNCTION_1
0xc	        0x488955e8	             mov qword [rbp - 0x18], rdx	        38	pen.c	FUNCTION_1
0x10	      0x48837df000	               cmp qword [rbp - 0x10], 0	        39	pen.c	FUNCTION_1	IF_1
0x15	            0x7823	                            js 0x400007a	        39	pen.c	FUNCTION_1	IF_1
0x17	      0x48837df00f	            cmp qword [rbp - 0x10], 0xf 	        39	pen.c	FUNCTION_1	IF_1
0x1c	            0x7f1c	                            jg 0x400007a	        39	pen.c	FUNCTION_1	IF_1
0x1e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	pen.c	FUNCTION_1	IF_1
0x22	        0x488b55f8	                mov rdx, qword [rbp - 8]	        40	pen.c	FUNCTION_1	IF_1
0x26	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        40	pen.c	FUNCTION_1	IF_1
0x2a	        0x4883c14c	                           add rcx, 0x4c	        40	pen.c	FUNCTION_1	IF_1
0x2e	          0x8b148a	            mov edx, dword [rdx + rcx*4]	        40	pen.c	FUNCTION_1	IF_1
0x31	            0x8910	                    mov dword [rax], edx	        40	pen.c	FUNCTION_1	IF_1
0x33	      0xb801000000	                              mov eax, 1	        41	pen.c	FUNCTION_1	IF_1
0x38	            0xeb05	                           jmp 0x400007f	        41	pen.c	FUNCTION_1	IF_1
0x3a	      0xb800000000	                              mov eax, 0	        44	pen.c	FUNCTION_1
0x3f	              0x5d	                                 pop rbp	        45	pen.c	FUNCTION_1
0x40	              0xc3	                                     ret	        45	pen.c	FUNCTION_1
vterm_state_newpen	SWITCH,0:CALL,0:DO,0:ELSE,0:IF,0:WHILE,0:FOR,1:functions,0	43
0x4f5	              0x55	                                push rbp	       153	pen.c	FUNCTION_9
0x4f6	          0x4889e5	                            mov rbp, rsp	       153	pen.c	FUNCTION_9
0x4f9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       153	pen.c	FUNCTION_9
0x4fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	pen.c	FUNCTION_9
0x501	    0xc6802a010000	           mov byte [rax + 0x12a], 0xf0 	       157	pen.c	FUNCTION_9
0x508	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	pen.c	FUNCTION_9
0x50c	     0xfb6902a0100	          movzx edx, byte [rax + 0x12a] 	       157	pen.c	FUNCTION_9
0x513	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	pen.c	FUNCTION_9
0x517	    0x889029010000	              mov byte [rax + 0x129], dl	       157	pen.c	FUNCTION_9
0x51d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	pen.c	FUNCTION_9
0x521	     0xfb690290100	          movzx edx, byte [rax + 0x129] 	       157	pen.c	FUNCTION_9
0x528	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	pen.c	FUNCTION_9
0x52c	    0x889028010000	              mov byte [rax + 0x128], dl	       157	pen.c	FUNCTION_9
0x532	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       158	pen.c	FUNCTION_9
0x536	    0xc6802b010000	               mov byte [rax + 0x12b], 0	       158	pen.c	FUNCTION_9
0x53d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	pen.c	FUNCTION_9
0x541	    0xc6802e010000	               mov byte [rax + 0x12e], 0	       159	pen.c	FUNCTION_9
0x548	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	pen.c	FUNCTION_9
0x54c	     0xfb6902e0100	          movzx edx, byte [rax + 0x12e] 	       159	pen.c	FUNCTION_9
0x553	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	pen.c	FUNCTION_9
0x557	    0x88902d010000	              mov byte [rax + 0x12d], dl	       159	pen.c	FUNCTION_9
0x55d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	pen.c	FUNCTION_9
0x561	     0xfb6902d0100	          movzx edx, byte [rax + 0x12d] 	       159	pen.c	FUNCTION_9
0x568	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	pen.c	FUNCTION_9
0x56c	    0x88902c010000	              mov byte [rax + 0x12c], dl	       159	pen.c	FUNCTION_9
0x572	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       160	pen.c	FUNCTION_9
0x576	    0xc6802f010000	               mov byte [rax + 0x12f], 0	       160	pen.c	FUNCTION_9
0x57d	    0xc745fc000000	                  mov dword [rbp - 4], 0	       162	pen.c	FUNCTION_9	FOR_1
0x584	            0xeb22	                           jmp 0x40005e8	       162	pen.c	FUNCTION_9	FOR_1
0x586	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       163	pen.c	FUNCTION_9	FOR_1
0x58a	          0x8b55fc	                mov edx, dword [rbp - 4]	       163	pen.c	FUNCTION_9	FOR_1
0x58d	          0x4863d2	                         movsxd rdx, edx	       163	pen.c	FUNCTION_9	FOR_1
0x590	        0x488d4a4c	                   lea rcx, [rdx + 0x4c]	       163	pen.c	FUNCTION_9	FOR_1
0x594	          0x8b55fc	                mov edx, dword [rbp - 4]	       163	pen.c	FUNCTION_9	FOR_1
0x597	          0x4863d2	                         movsxd rdx, edx	       163	pen.c	FUNCTION_9	FOR_1
0x59a	    0x8b1495000000	                  mov edx, dword [rdx*4]	       163	pen.c	FUNCTION_9	FOR_1
0x5a1	          0x891488	            mov dword [rax + rcx*4], edx	       163	pen.c	FUNCTION_9	FOR_1
0x5a4	        0x8345fc01	                  add dword [rbp - 4], 1	       162	pen.c	FUNCTION_9	FOR_1
0x5a8	        0x837dfc0f	                cmp dword [rbp - 4], 0xf	       162	pen.c	FUNCTION_9	FOR_1
0x5ac	            0x7ed8	                           jle 0x40005c6	       162	pen.c	FUNCTION_9	FOR_1
0x5ae	              0x90	                                     nop	       164	pen.c	FUNCTION_9
0x5af	              0x5d	                                 pop rbp	       164	pen.c	FUNCTION_9
0x5b0	              0xc3	                                     ret	       164	pen.c	FUNCTION_9
setpenattr	SWITCH,0:CALL,3:DO,0:ELSE,0:IF,2:WHILE,0:FOR,0:functions,0	28
0x330	              0x55	                                push rbp	       110	pen.c	FUNCTION_4
0x331	          0x4889e5	                            mov rbp, rsp	       110	pen.c	FUNCTION_4
0x334	        0x4883ec20	                           sub rsp, 0x20	       110	pen.c	FUNCTION_4
0x338	        0x48897df8	                mov qword [rbp - 8], rdi	       110	pen.c	FUNCTION_4
0x33c	          0x8975f4	              mov dword [rbp - 0xc], esi	       110	pen.c	FUNCTION_4
0x33f	          0x8955f0	             mov dword [rbp - 0x10], edx	       110	pen.c	FUNCTION_4
0x342	        0x48894de8	             mov qword [rbp - 0x18], rcx	       110	pen.c	FUNCTION_4
0x346	        0x488b45f8	                mov rax, qword [rbp - 8]	       118	pen.c	FUNCTION_4	IF_2
0x34a	        0x488b4008	                mov rax, qword [rax + 8]	       118	pen.c	FUNCTION_4	IF_2
0x34e	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x351	            0x7430	                            je 0x40003c3	       118	pen.c	FUNCTION_4	IF_2
0x353	        0x488b45f8	                mov rax, qword [rbp - 8]	       118	pen.c	FUNCTION_4	IF_2
0x357	        0x488b4008	                mov rax, qword [rax + 8]	       118	pen.c	FUNCTION_4	IF_2
0x35b	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x35f	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x362	            0x741f	                            je 0x40003c3	       118	pen.c	FUNCTION_4	IF_2
0x364	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	pen.c	FUNCTION_4	IF_2
0x368	        0x488b4008	                mov rax, qword [rax + 8]	       119	pen.c	FUNCTION_4	IF_2
0x36c	        0x488b4030	            mov rax, qword [rax + 0x30] 	       119	pen.c	FUNCTION_4	IF_2
0x370	        0x488b55f8	                mov rdx, qword [rbp - 8]	       119	pen.c	FUNCTION_4	IF_2
0x374	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x378	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       119	pen.c	FUNCTION_4	IF_2
0x37c	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       119	pen.c	FUNCTION_4	IF_2
0x37f	            0x89cf	                            mov edi, ecx	       119	pen.c	FUNCTION_4	IF_2
0x381	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x383	              0x90	                                     nop	       120	pen.c	FUNCTION_4
0x384	              0xc9	                                   leave	       120	pen.c	FUNCTION_4
0x385	              0xc3	                                     ret	       120	pen.c	FUNCTION_4
vterm_state_resetpen	SWITCH,0:CALL,9:DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:functions,0	94
0x5b1	              0x55	                                push rbp	       167	pen.c	FUNCTION_10
0x5b2	          0x4889e5	                            mov rbp, rsp	       167	pen.c	FUNCTION_10
0x5b5	        0x4883ec10	                           sub rsp, 0x10	       167	pen.c	FUNCTION_10
0x5b9	        0x48897df8	                mov qword [rbp - 8], rdi	       167	pen.c	FUNCTION_10
0x5bd	        0x488b45f8	                mov rax, qword [rbp - 8]	       168	pen.c	FUNCTION_10	CALL_1
0x5c1	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       168	pen.c	FUNCTION_10	CALL_1
0x5c8	          0x83e2fe	                     and edx, 0xfffffffe	       168	pen.c	FUNCTION_10	CALL_1
0x5cb	    0x889024010000	              mov byte [rax + 0x124], dl	       168	pen.c	FUNCTION_10	CALL_1
0x5d1	        0x488b45f8	                mov rax, qword [rbp - 8]	       168	pen.c	FUNCTION_10	CALL_1
0x5d5	      0xba00000000	                              mov edx, 0	       168	pen.c	FUNCTION_10	CALL_1
0x5da	      0xbe01000000	                              mov esi, 1	       168	pen.c	FUNCTION_10	CALL_1
0x5df	          0x4889c7	                            mov rdi, rax	       168	pen.c	FUNCTION_10	CALL_1
0x5e2	      0xe89ffdffff	                call sym.setpenattr_bool	       168	pen.c	FUNCTION_10	CALL_1
0x5e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       169	pen.c	FUNCTION_10	CALL_2
0x5eb	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       169	pen.c	FUNCTION_10	CALL_2
0x5f2	          0x83e2f9	                     and edx, 0xfffffff9	       169	pen.c	FUNCTION_10	CALL_2
0x5f5	    0x889024010000	              mov byte [rax + 0x124], dl	       169	pen.c	FUNCTION_10	CALL_2
0x5fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       169	pen.c	FUNCTION_10	CALL_2
0x5ff	      0xba00000000	                              mov edx, 0	       169	pen.c	FUNCTION_10	CALL_2
0x604	      0xbe02000000	                              mov esi, 2	       169	pen.c	FUNCTION_10	CALL_2
0x609	          0x4889c7	                            mov rdi, rax	       169	pen.c	FUNCTION_10	CALL_2
0x60c	      0xe8cefdffff	                 call sym.setpenattr_int	       169	pen.c	FUNCTION_10	CALL_2
0x611	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	pen.c	FUNCTION_10	CALL_3
0x615	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       170	pen.c	FUNCTION_10	CALL_3
0x61c	          0x83e2f7	                     and edx, 0xfffffff7	       170	pen.c	FUNCTION_10	CALL_3
0x61f	    0x889024010000	              mov byte [rax + 0x124], dl	       170	pen.c	FUNCTION_10	CALL_3
0x625	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	pen.c	FUNCTION_10	CALL_3
0x629	      0xba00000000	                              mov edx, 0	       170	pen.c	FUNCTION_10	CALL_3
0x62e	      0xbe03000000	                              mov esi, 3	       170	pen.c	FUNCTION_10	CALL_3
0x633	          0x4889c7	                            mov rdi, rax	       170	pen.c	FUNCTION_10	CALL_3
0x636	      0xe84bfdffff	                call sym.setpenattr_bool	       170	pen.c	FUNCTION_10	CALL_3
0x63b	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	pen.c	FUNCTION_10	CALL_4
0x63f	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       171	pen.c	FUNCTION_10	CALL_4
0x646	          0x83e2ef	                     and edx, 0xffffffef	       171	pen.c	FUNCTION_10	CALL_4
0x649	    0x889024010000	              mov byte [rax + 0x124], dl	       171	pen.c	FUNCTION_10	CALL_4
0x64f	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	pen.c	FUNCTION_10	CALL_4
0x653	      0xba00000000	                              mov edx, 0	       171	pen.c	FUNCTION_10	CALL_4
0x658	      0xbe04000000	                              mov esi, 4	       171	pen.c	FUNCTION_10	CALL_4
0x65d	          0x4889c7	                            mov rdi, rax	       171	pen.c	FUNCTION_10	CALL_4
0x660	      0xe821fdffff	                call sym.setpenattr_bool	       171	pen.c	FUNCTION_10	CALL_4
0x665	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	pen.c	FUNCTION_10	CALL_5
0x669	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       172	pen.c	FUNCTION_10	CALL_5
0x670	          0x83e2df	                     and edx, 0xffffffdf	       172	pen.c	FUNCTION_10	CALL_5
0x673	    0x889024010000	              mov byte [rax + 0x124], dl	       172	pen.c	FUNCTION_10	CALL_5
0x679	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	pen.c	FUNCTION_10	CALL_5
0x67d	      0xba00000000	                              mov edx, 0	       172	pen.c	FUNCTION_10	CALL_5
0x682	      0xbe05000000	                              mov esi, 5	       172	pen.c	FUNCTION_10	CALL_5
0x687	          0x4889c7	                            mov rdi, rax	       172	pen.c	FUNCTION_10	CALL_5
0x68a	      0xe8f7fcffff	                call sym.setpenattr_bool	       172	pen.c	FUNCTION_10	CALL_5
0x68f	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	pen.c	FUNCTION_10	CALL_6
0x693	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       173	pen.c	FUNCTION_10	CALL_6
0x69a	          0x83e2bf	                     and edx, 0xffffffbf	       173	pen.c	FUNCTION_10	CALL_6
0x69d	    0x889024010000	              mov byte [rax + 0x124], dl	       173	pen.c	FUNCTION_10	CALL_6
0x6a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	pen.c	FUNCTION_10	CALL_6
0x6a7	      0xba00000000	                              mov edx, 0	       173	pen.c	FUNCTION_10	CALL_6
0x6ac	      0xbe06000000	                              mov esi, 6	       173	pen.c	FUNCTION_10	CALL_6
0x6b1	          0x4889c7	                            mov rdi, rax	       173	pen.c	FUNCTION_10	CALL_6
0x6b4	      0xe8cdfcffff	                call sym.setpenattr_bool	       173	pen.c	FUNCTION_10	CALL_6
0x6b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       174	pen.c	FUNCTION_10	CALL_7
0x6bd	     0xfb790240100	          movzx edx, word [rax + 0x124] 	       174	pen.c	FUNCTION_10	CALL_7
0x6c4	      0x6681e27ff8	                          and dx, 0xf87f	       174	pen.c	FUNCTION_10	CALL_7
0x6c9	    0x668990240100	              mov word [rax + 0x124], dx	       174	pen.c	FUNCTION_10	CALL_7
0x6d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       174	pen.c	FUNCTION_10	CALL_7
0x6d4	      0xba00000000	                              mov edx, 0	       174	pen.c	FUNCTION_10	CALL_7
0x6d9	      0xbe07000000	                              mov esi, 7	       174	pen.c	FUNCTION_10	CALL_7
0x6de	          0x4889c7	                            mov rdi, rax	       174	pen.c	FUNCTION_10	CALL_7
0x6e1	      0xe8f9fcffff	                 call sym.setpenattr_int	       174	pen.c	FUNCTION_10	CALL_7
0x6e6	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	pen.c	FUNCTION_10
0x6ea	    0xc78070010000	    mov dword [rax + 0x170], 0xffffffff 	       176	pen.c	FUNCTION_10
0x6f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	pen.c	FUNCTION_10
0x6f8	    0xc78074010000	    mov dword [rax + 0x174], 0xffffffff 	       177	pen.c	FUNCTION_10
0x702	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	pen.c	FUNCTION_10	CALL_8
0x706	        0x488b55f8	                mov rdx, qword [rbp - 8]	       178	pen.c	FUNCTION_10	CALL_8
0x70a	    0x8b9228010000	           mov edx, dword [rdx + 0x128] 	       178	pen.c	FUNCTION_10	CALL_8
0x710	    0x89901c010000	            mov dword [rax + 0x11c], edx	       178	pen.c	FUNCTION_10	CALL_8
0x716	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	pen.c	FUNCTION_10	CALL_8
0x71a	    0x8b9028010000	           mov edx, dword [rax + 0x128] 	       178	pen.c	FUNCTION_10	CALL_8
0x720	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	pen.c	FUNCTION_10	CALL_8
0x724	      0xbe08000000	                              mov esi, 8	       178	pen.c	FUNCTION_10	CALL_8
0x729	          0x4889c7	                            mov rdi, rax	       178	pen.c	FUNCTION_10	CALL_8
0x72c	      0xe807fdffff	                 call sym.setpenattr_col	       178	pen.c	FUNCTION_10	CALL_8
0x731	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	pen.c	FUNCTION_10	CALL_9
0x735	        0x488b55f8	                mov rdx, qword [rbp - 8]	       179	pen.c	FUNCTION_10	CALL_9
0x739	    0x8b922c010000	           mov edx, dword [rdx + 0x12c] 	       179	pen.c	FUNCTION_10	CALL_9
0x73f	    0x899020010000	            mov dword [rax + 0x120], edx	       179	pen.c	FUNCTION_10	CALL_9
0x745	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	pen.c	FUNCTION_10	CALL_9
0x749	    0x8b902c010000	           mov edx, dword [rax + 0x12c] 	       179	pen.c	FUNCTION_10	CALL_9
0x74f	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	pen.c	FUNCTION_10	CALL_9
0x753	      0xbe09000000	                              mov esi, 9	       179	pen.c	FUNCTION_10	CALL_9
0x758	          0x4889c7	                            mov rdi, rax	       179	pen.c	FUNCTION_10	CALL_9
0x75b	      0xe8d8fcffff	                 call sym.setpenattr_col	       179	pen.c	FUNCTION_10	CALL_9
0x760	              0x90	                                     nop	       180	pen.c	FUNCTION_10
0x761	              0xc9	                                   leave	       180	pen.c	FUNCTION_10
0x762	              0xc3	                                     ret	       180	pen.c	FUNCTION_10
vterm_state_savepen	SWITCH,0:CALL,9:DO,0:ELSE,1:IF,1:WHILE,0:FOR,0:functions,0	97
0x763	              0x55	                                push rbp	       183	pen.c	FUNCTION_11
0x764	          0x4889e5	                            mov rbp, rsp	       183	pen.c	FUNCTION_11
0x767	        0x4883ec10	                           sub rsp, 0x10	       183	pen.c	FUNCTION_11
0x76b	        0x48897df8	                mov qword [rbp - 8], rdi	       183	pen.c	FUNCTION_11
0x76f	          0x8975f4	              mov dword [rbp - 0xc], esi	       183	pen.c	FUNCTION_11
0x772	        0x837df400	                cmp dword [rbp - 0xc], 0	       184	pen.c	FUNCTION_11	IF_1
0x776	            0x7427	                            je 0x40007df	       184	pen.c	FUNCTION_11	IF_1
0x778	        0x488b45f8	                mov rax, qword [rbp - 8]	       185	pen.c	FUNCTION_11	IF_1
0x77c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       185	pen.c	FUNCTION_11	IF_1
0x780	    0x488b8a1c0100	           mov rcx, qword [rdx + 0x11c] 	       185	pen.c	FUNCTION_11	IF_1
0x787	    0x488988880100	            mov qword [rax + 0x188], rcx	       185	pen.c	FUNCTION_11	IF_1
0x78e	    0x8b9224010000	           mov edx, dword [rdx + 0x124] 	       185	pen.c	FUNCTION_11	IF_1
0x794	    0x899090010000	            mov dword [rax + 0x190], edx	       185	pen.c	FUNCTION_11	IF_1
0x79a	      0xe958010000	                           jmp 0x4000937	       200	pen.c	FUNCTION_11
0x79f	        0x488b45f8	                mov rax, qword [rbp - 8]	       188	pen.c	FUNCTION_11	ELSE_1
0x7a3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       188	pen.c	FUNCTION_11	ELSE_1
0x7a7	    0x488b8a880100	           mov rcx, qword [rdx + 0x188] 	       188	pen.c	FUNCTION_11	ELSE_1
0x7ae	    0x4889881c0100	            mov qword [rax + 0x11c], rcx	       188	pen.c	FUNCTION_11	ELSE_1
0x7b5	    0x8b9290010000	           mov edx, dword [rdx + 0x190] 	       188	pen.c	FUNCTION_11	ELSE_1
0x7bb	    0x899024010000	            mov dword [rax + 0x124], edx	       188	pen.c	FUNCTION_11	ELSE_1
0x7c1	        0x488b45f8	                mov rax, qword [rbp - 8]	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x7c5	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x7cc	          0x83e001	                              and eax, 1	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x7cf	           0xfb6d0	                           movzx edx, al	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x7d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x7d6	      0xbe01000000	                              mov esi, 1	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x7db	          0x4889c7	                            mov rdi, rax	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x7de	      0xe8a3fbffff	                call sym.setpenattr_bool	       190	pen.c	FUNCTION_11	ELSE_1	CALL_1
0x7e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x7e7	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x7ee	            0xd0e8	                               shr al, 1	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x7f0	          0x83e003	                              and eax, 3	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x7f3	           0xfb6d0	                           movzx edx, al	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x7f6	        0x488b45f8	                mov rax, qword [rbp - 8]	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x7fa	      0xbe02000000	                              mov esi, 2	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x7ff	          0x4889c7	                            mov rdi, rax	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x802	      0xe8d8fbffff	                 call sym.setpenattr_int	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x807	        0x488b45f8	                mov rax, qword [rbp - 8]	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x80b	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x812	          0xc0e803	                               shr al, 3	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x815	          0x83e001	                              and eax, 1	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x818	           0xfb6d0	                           movzx edx, al	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x81b	        0x488b45f8	                mov rax, qword [rbp - 8]	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x81f	      0xbe03000000	                              mov esi, 3	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x824	          0x4889c7	                            mov rdi, rax	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x827	      0xe85afbffff	                call sym.setpenattr_bool	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x82c	        0x488b45f8	                mov rax, qword [rbp - 8]	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x830	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x837	          0xc0e804	                               shr al, 4	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x83a	          0x83e001	                              and eax, 1	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x83d	           0xfb6d0	                           movzx edx, al	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x840	        0x488b45f8	                mov rax, qword [rbp - 8]	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x844	      0xbe04000000	                              mov esi, 4	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x849	          0x4889c7	                            mov rdi, rax	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x84c	      0xe835fbffff	                call sym.setpenattr_bool	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x851	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x855	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x85c	          0xc0e805	                               shr al, 5	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x85f	          0x83e001	                              and eax, 1	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x862	           0xfb6d0	                           movzx edx, al	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x865	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x869	      0xbe05000000	                              mov esi, 5	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x86e	          0x4889c7	                            mov rdi, rax	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x871	      0xe810fbffff	                call sym.setpenattr_bool	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x876	        0x488b45f8	                mov rax, qword [rbp - 8]	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x87a	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x881	          0xc0e806	                               shr al, 6	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x884	          0x83e001	                              and eax, 1	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x887	           0xfb6d0	                           movzx edx, al	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x88a	        0x488b45f8	                mov rax, qword [rbp - 8]	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x88e	      0xbe06000000	                              mov esi, 6	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x893	          0x4889c7	                            mov rdi, rax	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x896	      0xe8ebfaffff	                call sym.setpenattr_bool	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x89b	        0x488b45f8	                mov rax, qword [rbp - 8]	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x89f	     0xfb780240100	          movzx eax, word [rax + 0x124] 	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x8a6	        0x66c1e807	                               shr ax, 7	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x8aa	          0x83e00f	                            and eax, 0xf	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x8ad	           0xfb6d0	                           movzx edx, al	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x8b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x8b4	      0xbe07000000	                              mov esi, 7	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x8b9	          0x4889c7	                            mov rdi, rax	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x8bc	      0xe81efbffff	                 call sym.setpenattr_int	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x8c1	        0x488b45f8	                mov rax, qword [rbp - 8]	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x8c5	    0x8b901c010000	           mov edx, dword [rax + 0x11c] 	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x8cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x8cf	      0xbe08000000	                              mov esi, 8	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x8d4	          0x4889c7	                            mov rdi, rax	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x8d7	      0xe85cfbffff	                 call sym.setpenattr_col	       197	pen.c	FUNCTION_11	ELSE_1	CALL_8
0x8dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x8e0	    0x8b9020010000	           mov edx, dword [rax + 0x120] 	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x8e6	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x8ea	      0xbe09000000	                              mov esi, 9	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x8ef	          0x4889c7	                            mov rdi, rax	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x8f2	      0xe841fbffff	                 call sym.setpenattr_col	       198	pen.c	FUNCTION_11	ELSE_1	CALL_9
0x8f7	              0x90	                                     nop	       200	pen.c	FUNCTION_11
0x8f8	              0xc9	                                   leave	       200	pen.c	FUNCTION_11
0x8f9	              0xc3	                                     ret	       200	pen.c	FUNCTION_11
set_pen_col_ansi	SWITCH,0:CALL,2:DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:functions,0	30
0x491	              0x55	                                push rbp	       144	pen.c	FUNCTION_8
0x492	          0x4889e5	                            mov rbp, rsp	       144	pen.c	FUNCTION_8
0x495	        0x4883ec30	                           sub rsp, 0x30	       144	pen.c	FUNCTION_8
0x499	        0x48897de8	             mov qword [rbp - 0x18], rdi	       144	pen.c	FUNCTION_8
0x49d	          0x8975e4	             mov dword [rbp - 0x1c], esi	       144	pen.c	FUNCTION_8
0x4a0	        0x488955d8	             mov qword [rbp - 0x28], rdx	       144	pen.c	FUNCTION_8
0x4a4	        0x837de409	               cmp dword [rbp - 0x1c], 9	       145	pen.c	FUNCTION_8
0x4a8	            0x750c	                           jne 0x40004f6	       145	pen.c	FUNCTION_8
0x4aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       145	pen.c	FUNCTION_8
0x4ae	    0x480520010000	                          add rax, 0x120	       145	pen.c	FUNCTION_8
0x4b4	            0xeb0a	                           jmp 0x4000500	       145	pen.c	FUNCTION_8
0x4b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       145	pen.c	FUNCTION_8
0x4ba	    0x48051c010000	                          add rax, 0x11c	       145	pen.c	FUNCTION_8
0x4c0	        0x488945f8	                mov qword [rbp - 8], rax	       145	pen.c	FUNCTION_8
0x4c4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       147	pen.c	FUNCTION_8	CALL_1
0x4c8	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       147	pen.c	FUNCTION_8	CALL_1
0x4cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       147	pen.c	FUNCTION_8	CALL_1
0x4d0	          0x4889ce	                            mov rsi, rcx	       147	pen.c	FUNCTION_8	CALL_1
0x4d3	          0x4889c7	                            mov rdi, rax	       147	pen.c	FUNCTION_8	CALL_1
0x4d6	      0xe825fbffff	             call sym.lookup_colour_ansi	       147	pen.c	FUNCTION_8	CALL_1
0x4db	        0x488b55f8	                mov rdx, qword [rbp - 8]	       149	pen.c	FUNCTION_8	CALL_2
0x4df	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       149	pen.c	FUNCTION_8	CALL_2
0x4e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	pen.c	FUNCTION_8	CALL_2
0x4e6	            0x8b12	                    mov edx, dword [rdx]	       149	pen.c	FUNCTION_8	CALL_2
0x4e8	            0x89ce	                            mov esi, ecx	       149	pen.c	FUNCTION_8	CALL_2
0x4ea	          0x4889c7	                            mov rdi, rax	       149	pen.c	FUNCTION_8	CALL_2
0x4ed	      0xe846ffffff	                 call sym.setpenattr_col	       149	pen.c	FUNCTION_8	CALL_2
0x4f2	              0x90	                                     nop	       150	pen.c	FUNCTION_8
0x4f3	              0xc9	                                   leave	       150	pen.c	FUNCTION_8
0x4f4	              0xc3	                                     ret	       150	pen.c	FUNCTION_8
lookup_colour	SWITCH,1:CALL,7:DO,0:ELSE,0:IF,2:WHILE,0:FOR,0:functions,0	81
0x215	              0x55	                                push rbp	        80	pen.c	FUNCTION_3
0x216	          0x4889e5	                            mov rbp, rsp	        80	pen.c	FUNCTION_3
0x219	        0x4883ec28	                           sub rsp, 0x28	        80	pen.c	FUNCTION_3
0x21d	        0x48897df8	                mov qword [rbp - 8], rdi	        80	pen.c	FUNCTION_3
0x221	          0x8975f4	              mov dword [rbp - 0xc], esi	        80	pen.c	FUNCTION_3
0x224	        0x488955e8	             mov qword [rbp - 0x18], rdx	        80	pen.c	FUNCTION_3
0x228	          0x894df0	             mov dword [rbp - 0x10], ecx	        80	pen.c	FUNCTION_3
0x22b	        0x4c8945e0	              mov qword [rbp - 0x20], r8	        80	pen.c	FUNCTION_3
0x22f	        0x4c894dd8	              mov qword [rbp - 0x28], r9	        80	pen.c	FUNCTION_3
0x233	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        81	pen.c	FUNCTION_3	SWITCH_1
0x236	          0x83f802	                              cmp eax, 2	        81	pen.c	FUNCTION_3	SWITCH_1
0x239	            0x740a	                            je 0x4000285	        81	pen.c	FUNCTION_3	SWITCH_1
0x23b	          0x83f805	                              cmp eax, 5	        81	pen.c	FUNCTION_3	SWITCH_1
0x23e	            0x745c	                            je 0x40002dc	        81	pen.c	FUNCTION_3	SWITCH_1
0x240	      0xe9e4000000	                           jmp 0x4000369	        81	pen.c	FUNCTION_3	SWITCH_1
0x245	        0x837df002	               cmp dword [rbp - 0x10], 2	        83	pen.c	FUNCTION_3	SWITCH_1	IF_1
0x249	            0x7f08	                            jg 0x4000293	        83	pen.c	FUNCTION_3	SWITCH_1	IF_1
0x24b	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        84	pen.c	FUNCTION_3	SWITCH_1	IF_1
0x24e	      0xe9db000000	                           jmp 0x400036e	        84	pen.c	FUNCTION_3	SWITCH_1	IF_1
0x253	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        86	pen.c	FUNCTION_3	SWITCH_1	CALL_1
0x257	          0x488b00	                    mov rax, qword [rax]	        86	pen.c	FUNCTION_3	SWITCH_1	CALL_1
0x25a	            0x89c2	                            mov edx, eax	        86	pen.c	FUNCTION_3	SWITCH_1	CALL_1
0x25c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        86	pen.c	FUNCTION_3	SWITCH_1	CALL_1
0x260	            0x8810	                      mov byte [rax], dl	        86	pen.c	FUNCTION_3	SWITCH_1	CALL_1
0x262	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        87	pen.c	FUNCTION_3	SWITCH_1	CALL_2
0x266	        0x4883c008	                              add rax, 8	        87	pen.c	FUNCTION_3	SWITCH_1	CALL_2
0x26a	          0x488b00	                    mov rax, qword [rax]	        87	pen.c	FUNCTION_3	SWITCH_1	CALL_2
0x26d	            0x89c2	                            mov edx, eax	        87	pen.c	FUNCTION_3	SWITCH_1	CALL_2
0x26f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        87	pen.c	FUNCTION_3	SWITCH_1	CALL_2
0x273	          0x885001	                  mov byte [rax + 1], dl	        87	pen.c	FUNCTION_3	SWITCH_1	CALL_2
0x276	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	pen.c	FUNCTION_3	SWITCH_1	CALL_3
0x27a	        0x4883c010	                           add rax, 0x10	        88	pen.c	FUNCTION_3	SWITCH_1	CALL_3
0x27e	          0x488b00	                    mov rax, qword [rax]	        88	pen.c	FUNCTION_3	SWITCH_1	CALL_3
0x281	            0x89c2	                            mov edx, eax	        88	pen.c	FUNCTION_3	SWITCH_1	CALL_3
0x283	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        88	pen.c	FUNCTION_3	SWITCH_1	CALL_3
0x287	          0x885002	                  mov byte [rax + 2], dl	        88	pen.c	FUNCTION_3	SWITCH_1	CALL_3
0x28a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        89	pen.c	FUNCTION_3	SWITCH_1
0x28e	        0xc64003ff	                mov byte [rax + 3], 0xff	        89	pen.c	FUNCTION_3	SWITCH_1
0x292	      0xb803000000	                              mov eax, 3	        91	pen.c	FUNCTION_3	SWITCH_1
0x297	      0xe992000000	                           jmp 0x400036e	        91	pen.c	FUNCTION_3	SWITCH_1
0x29c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        94	pen.c	FUNCTION_3	SWITCH_1	IF_2
0x2a1	            0x742f	                            je 0x4000312	        94	pen.c	FUNCTION_3	SWITCH_1	IF_2
0x2a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x2a7	          0x488b00	                    mov rax, qword [rax]	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x2aa	      0x25ffffff7f	                     and eax, 0x7fffffff	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x2af	    0x483dffffff3f	                     cmp rax, 0x3fffffff	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x2b5	            0x7410	                            je 0x4000307	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x2b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x2bb	          0x488b00	                    mov rax, qword [rax]	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x2be	      0x25ffffff7f	                     and eax, 0x7fffffff	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x2c3	            0x89c2	                            mov edx, eax	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x2c5	            0xeb05	                           jmp 0x400030c	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x2c7	      0xbaffffffff	                     mov edx, 0xffffffff	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x2cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x2d0	            0x8910	                    mov dword [rax], edx	        95	pen.c	FUNCTION_3	SWITCH_1	CALL_4
0x2d2	        0x837df000	               cmp dword [rbp - 0x10], 0	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x2d6	            0x742b	                            je 0x4000343	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x2d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x2dc	          0x488b00	                    mov rax, qword [rax]	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x2df	      0x25ffffff7f	                     and eax, 0x7fffffff	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x2e4	    0x483dffffff3f	                     cmp rax, 0x3fffffff	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x2ea	            0x740e	                            je 0x400033a	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x2ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x2f0	          0x488b00	                    mov rax, qword [rax]	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x2f3	      0x25ffffff7f	                     and eax, 0x7fffffff	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x2f8	            0xeb10	                           jmp 0x400034a	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x2fa	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x301	            0xeb07	                           jmp 0x400034a	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x303	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x30a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x30e	        0x488b4df8	                mov rcx, qword [rbp - 8]	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x312	          0x4889c6	                            mov rsi, rax	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x315	          0x4889cf	                            mov rdi, rcx	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x318	      0xe824fdffff	          call sym.lookup_colour_palette	        97	pen.c	FUNCTION_3	SWITCH_1	CALL_6
0x31d	        0x837df000	               cmp dword [rbp - 0x10], 0	        99	pen.c	FUNCTION_3	SWITCH_1
0x321	           0xf95c0	                                setne al	        99	pen.c	FUNCTION_3	SWITCH_1
0x324	           0xfb6c0	                           movzx eax, al	        99	pen.c	FUNCTION_3	SWITCH_1
0x327	            0xeb05	                           jmp 0x400036e	        99	pen.c	FUNCTION_3	SWITCH_1
0x329	      0xb800000000	                              mov eax, 0	       103	pen.c	FUNCTION_3	SWITCH_1
0x32e	              0xc9	                                   leave	       105	pen.c	FUNCTION_3
0x32f	              0xc3	                                     ret	       105	pen.c	FUNCTION_3
vterm_state_set_bold_highbright	SWITCH,0:CALL,0:DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:functions,0	10
0x9dc	              0x55	                                push rbp	       229	pen.c	FUNCTION_16
0x9dd	          0x4889e5	                            mov rbp, rsp	       229	pen.c	FUNCTION_16
0x9e0	        0x48897df8	                mov qword [rbp - 8], rdi	       229	pen.c	FUNCTION_16
0x9e4	          0x8975f4	              mov dword [rbp - 0xc], esi	       229	pen.c	FUNCTION_16
0x9e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	pen.c	FUNCTION_16
0x9eb	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       230	pen.c	FUNCTION_16
0x9ee	    0x899078010000	            mov dword [rax + 0x178], edx	       230	pen.c	FUNCTION_16
0x9f4	              0x90	                                     nop	       231	pen.c	FUNCTION_16
0x9f5	              0x5d	                                 pop rbp	       231	pen.c	FUNCTION_16
0x9f6	              0xc3	                                     ret	       231	pen.c	FUNCTION_16
lookup_colour_palette	SWITCH,0:CALL,1:DO,0:ELSE,2:IF,3:WHILE,0:FOR,0:functions,0	119
0x41	              0x55	                                push rbp	        48	pen.c	FUNCTION_2
0x42	          0x4889e5	                            mov rbp, rsp	        48	pen.c	FUNCTION_2
0x45	        0x4883ec18	                           sub rsp, 0x18	        48	pen.c	FUNCTION_2
0x49	        0x48897df8	                mov qword [rbp - 8], rdi	        48	pen.c	FUNCTION_2
0x4d	        0x488975f0	             mov qword [rbp - 0x10], rsi	        48	pen.c	FUNCTION_2
0x51	        0x488955e8	             mov qword [rbp - 0x18], rdx	        48	pen.c	FUNCTION_2
0x55	      0x48837df000	               cmp qword [rbp - 0x10], 0	        49	pen.c	FUNCTION_2	IF_1
0x5a	            0x7823	                            js 0x40000bf	        49	pen.c	FUNCTION_2	IF_1
0x5c	      0x48837df00f	            cmp qword [rbp - 0x10], 0xf 	        49	pen.c	FUNCTION_2	IF_1
0x61	            0x7f1c	                            jg 0x40000bf	        49	pen.c	FUNCTION_2	IF_1
0x63	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        51	pen.c	FUNCTION_2	IF_1	CALL_1
0x67	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        51	pen.c	FUNCTION_2	IF_1	CALL_1
0x6b	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	pen.c	FUNCTION_2	IF_1	CALL_1
0x6f	          0x4889ce	                            mov rsi, rcx	        51	pen.c	FUNCTION_2	IF_1	CALL_1
0x72	          0x4889c7	                            mov rdi, rax	        51	pen.c	FUNCTION_2	IF_1	CALL_1
0x75	      0xe886ffffff	             call sym.lookup_colour_ansi	        51	pen.c	FUNCTION_2	IF_1	CALL_1
0x7a	      0xe994010000	                           jmp 0x4000253	        51	pen.c	FUNCTION_2	IF_1	CALL_1
0x7f	      0x48837df00f	            cmp qword [rbp - 0x10], 0xf 	        53	pen.c	FUNCTION_2	ELSE_1	IF_2
0x84	     0xf8e1e010000	                           jle 0x40001e8	        53	pen.c	FUNCTION_2	ELSE_1	IF_2
0x8a	    0x48817df0e700	           cmp qword [rbp - 0x10], 0xe7 	        53	pen.c	FUNCTION_2	ELSE_1	IF_2
0x92	     0xf8f10010000	                            jg 0x40001e8	        53	pen.c	FUNCTION_2	ELSE_1	IF_2
0x98	      0x48836df010	            sub qword [rbp - 0x10], 0x10	        55	pen.c	FUNCTION_2	ELSE_1	IF_2
0x9d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xa1	    0x48baabaaaaaa	          movabs rdx, 0x2aaaaaaaaaaaaaab	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xab	          0x4889c8	                            mov rax, rcx	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xae	          0x48f7ea	                                imul rdx	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xb1	          0x4889c8	                            mov rax, rcx	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xb4	        0x48c1f83f	                           sar rax, 0x3f	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xb8	          0x4829c2	                            sub rdx, rax	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xbb	          0x4889d0	                            mov rax, rdx	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xbe	          0x4801c0	                            add rax, rax	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xc1	          0x4801d0	                            add rax, rdx	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xc4	          0x4801c0	                            add rax, rax	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xc7	          0x4829c1	                            sub rcx, rax	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xca	          0x4889ca	                            mov rdx, rcx	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xcd	    0x8b0495000000	                  mov eax, dword [rdx*4]	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xd4	            0x89c2	                            mov edx, eax	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xd6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xda	          0x885002	                  mov byte [rax + 2], dl	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0xdd	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0xe1	    0x48baabaaaaaa	          movabs rdx, 0x2aaaaaaaaaaaaaab	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0xeb	          0x4889c8	                            mov rax, rcx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0xee	          0x48f7ea	                                imul rdx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0xf1	          0x4889c8	                            mov rax, rcx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0xf4	        0x48c1f83f	                           sar rax, 0x3f	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0xf8	          0x4889d1	                            mov rcx, rdx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0xfb	          0x4829c1	                            sub rcx, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0xfe	    0x48baabaaaaaa	          movabs rdx, 0x2aaaaaaaaaaaaaab	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x108	          0x4889c8	                            mov rax, rcx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x10b	          0x48f7ea	                                imul rdx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x10e	          0x4889c8	                            mov rax, rcx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x111	        0x48c1f83f	                           sar rax, 0x3f	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x115	          0x4829c2	                            sub rdx, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x118	          0x4889d0	                            mov rax, rdx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x11b	          0x4801c0	                            add rax, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x11e	          0x4801d0	                            add rax, rdx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x121	          0x4801c0	                            add rax, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x124	          0x4829c1	                            sub rcx, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x127	          0x4889ca	                            mov rdx, rcx	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x12a	    0x8b0495000000	                  mov eax, dword [rdx*4]	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x131	            0x89c2	                            mov edx, eax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x133	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x137	          0x885001	                  mov byte [rax + 1], dl	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x13a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x13e	    0x48ba398ee338	           movabs rdx, 0xe38e38e38e38e39	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x148	          0x4889c8	                            mov rax, rcx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x14b	          0x48f7ea	                                imul rdx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x14e	          0x48d1fa	                              sar rdx, 1	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x151	          0x4889c8	                            mov rax, rcx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x154	        0x48c1f83f	                           sar rax, 0x3f	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x158	          0x4889d1	                            mov rcx, rdx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x15b	          0x4829c1	                            sub rcx, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x15e	    0x48baabaaaaaa	          movabs rdx, 0x2aaaaaaaaaaaaaab	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x168	          0x4889c8	                            mov rax, rcx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x16b	          0x48f7ea	                                imul rdx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x16e	          0x4889c8	                            mov rax, rcx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x171	        0x48c1f83f	                           sar rax, 0x3f	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x175	          0x4829c2	                            sub rdx, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x178	          0x4889d0	                            mov rax, rdx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x17b	          0x4801c0	                            add rax, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x17e	          0x4801d0	                            add rax, rdx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x181	          0x4801c0	                            add rax, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x184	          0x4829c1	                            sub rcx, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x187	          0x4889ca	                            mov rdx, rcx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x18a	    0x8b0495000000	                  mov eax, dword [rdx*4]	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x191	            0x89c2	                            mov edx, eax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x193	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x197	            0x8810	                      mov byte [rax], dl	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x199	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        60	pen.c	FUNCTION_2	ELSE_1	IF_2
0x19d	        0xc64003ff	                mov byte [rax + 3], 0xff	        60	pen.c	FUNCTION_2	ELSE_1	IF_2
0x1a1	      0xb801000000	                              mov eax, 1	        62	pen.c	FUNCTION_2	ELSE_1	IF_2
0x1a6	            0xeb6b	                           jmp 0x4000253	        62	pen.c	FUNCTION_2	ELSE_1	IF_2
0x1a8	    0x48817df0e700	           cmp qword [rbp - 0x10], 0xe7 	        64	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1b0	            0x7e5c	                           jle 0x400024e	        64	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1b2	    0x48817df0ff00	           cmp qword [rbp - 0x10], 0xff 	        64	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1ba	            0x7f52	                            jg 0x400024e	        64	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1bc	    0x48816df0e800	            sub qword [rbp - 0x10], 0xe8	        66	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        68	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1c8	    0x8b0485000000	                  mov eax, dword [rax*4]	        68	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1cf	            0x89c2	                            mov edx, eax	        68	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        68	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1d5	          0x885002	                  mov byte [rax + 2], dl	        68	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1d8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        69	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1dc	    0x8b0485000000	                  mov eax, dword [rax*4]	        69	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1e3	            0x89c2	                            mov edx, eax	        69	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1e9	          0x885001	                  mov byte [rax + 1], dl	        69	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        70	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1f0	    0x8b0485000000	                  mov eax, dword [rax*4]	        70	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1f7	            0x89c2	                            mov edx, eax	        70	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1fd	            0x8810	                      mov byte [rax], dl	        70	pen.c	FUNCTION_2	ELSE_2	IF_3
0x1ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	pen.c	FUNCTION_2	ELSE_2	IF_3
0x203	        0xc64003ff	                mov byte [rax + 3], 0xff	        71	pen.c	FUNCTION_2	ELSE_2	IF_3
0x207	      0xb801000000	                              mov eax, 1	        73	pen.c	FUNCTION_2	ELSE_2	IF_3
0x20c	            0xeb05	                           jmp 0x4000253	        73	pen.c	FUNCTION_2	ELSE_2	IF_3
0x20e	      0xb800000000	                              mov eax, 0	        76	pen.c	FUNCTION_2
0x213	              0xc9	                                   leave	        77	pen.c	FUNCTION_2
0x214	              0xc3	                                     ret	        77	pen.c	FUNCTION_2
vterm_state_get_penattr	SWITCH,1:CALL,0:DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:functions,0	89
0x18fa	              0x55	                                push rbp	       473	pen.c	FUNCTION_19
0x18fb	          0x4889e5	                            mov rbp, rsp	       473	pen.c	FUNCTION_19
0x18fe	        0x48897df8	                mov qword [rbp - 8], rdi	       473	pen.c	FUNCTION_19
0x1902	          0x8975f4	              mov dword [rbp - 0xc], esi	       473	pen.c	FUNCTION_19
0x1905	        0x488955e8	             mov qword [rbp - 0x18], rdx	       473	pen.c	FUNCTION_19
0x1909	        0x837df40a	              cmp dword [rbp - 0xc], 0xa	       474	pen.c	FUNCTION_19	SWITCH_1
0x190d	     0xf8732010000	                            ja 0x4001a85	       474	pen.c	FUNCTION_19	SWITCH_1
0x1913	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       474	pen.c	FUNCTION_19	SWITCH_1
0x1916	    0x488b04c50000	                  mov rax, qword [rax*8]	       474	pen.c	FUNCTION_19	SWITCH_1
0x191e	            0xffe0	                                 jmp rax	       474	pen.c	FUNCTION_19	SWITCH_1
0x1920	        0x488b45f8	                mov rax, qword [rbp - 8]	       476	pen.c	FUNCTION_19	SWITCH_1
0x1924	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       476	pen.c	FUNCTION_19	SWITCH_1
0x192b	          0x83e001	                              and eax, 1	       476	pen.c	FUNCTION_19	SWITCH_1
0x192e	           0xfb6d0	                           movzx edx, al	       476	pen.c	FUNCTION_19	SWITCH_1
0x1931	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       476	pen.c	FUNCTION_19	SWITCH_1
0x1935	            0x8910	                    mov dword [rax], edx	       476	pen.c	FUNCTION_19	SWITCH_1
0x1937	      0xb801000000	                              mov eax, 1	       477	pen.c	FUNCTION_19	SWITCH_1
0x193c	      0xe909010000	                           jmp 0x4001a8a	       477	pen.c	FUNCTION_19	SWITCH_1
0x1941	        0x488b45f8	                mov rax, qword [rbp - 8]	       480	pen.c	FUNCTION_19	SWITCH_1
0x1945	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       480	pen.c	FUNCTION_19	SWITCH_1
0x194c	            0xd0e8	                               shr al, 1	       480	pen.c	FUNCTION_19	SWITCH_1
0x194e	          0x83e003	                              and eax, 3	       480	pen.c	FUNCTION_19	SWITCH_1
0x1951	           0xfb6d0	                           movzx edx, al	       480	pen.c	FUNCTION_19	SWITCH_1
0x1954	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       480	pen.c	FUNCTION_19	SWITCH_1
0x1958	            0x8910	                    mov dword [rax], edx	       480	pen.c	FUNCTION_19	SWITCH_1
0x195a	      0xb801000000	                              mov eax, 1	       481	pen.c	FUNCTION_19	SWITCH_1
0x195f	      0xe9e6000000	                           jmp 0x4001a8a	       481	pen.c	FUNCTION_19	SWITCH_1
0x1964	        0x488b45f8	                mov rax, qword [rbp - 8]	       484	pen.c	FUNCTION_19	SWITCH_1
0x1968	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       484	pen.c	FUNCTION_19	SWITCH_1
0x196f	          0xc0e803	                               shr al, 3	       484	pen.c	FUNCTION_19	SWITCH_1
0x1972	          0x83e001	                              and eax, 1	       484	pen.c	FUNCTION_19	SWITCH_1
0x1975	           0xfb6d0	                           movzx edx, al	       484	pen.c	FUNCTION_19	SWITCH_1
0x1978	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       484	pen.c	FUNCTION_19	SWITCH_1
0x197c	            0x8910	                    mov dword [rax], edx	       484	pen.c	FUNCTION_19	SWITCH_1
0x197e	      0xb801000000	                              mov eax, 1	       485	pen.c	FUNCTION_19	SWITCH_1
0x1983	      0xe9c2000000	                           jmp 0x4001a8a	       485	pen.c	FUNCTION_19	SWITCH_1
0x1988	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	pen.c	FUNCTION_19	SWITCH_1
0x198c	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       488	pen.c	FUNCTION_19	SWITCH_1
0x1993	          0xc0e804	                               shr al, 4	       488	pen.c	FUNCTION_19	SWITCH_1
0x1996	          0x83e001	                              and eax, 1	       488	pen.c	FUNCTION_19	SWITCH_1
0x1999	           0xfb6d0	                           movzx edx, al	       488	pen.c	FUNCTION_19	SWITCH_1
0x199c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       488	pen.c	FUNCTION_19	SWITCH_1
0x19a0	            0x8910	                    mov dword [rax], edx	       488	pen.c	FUNCTION_19	SWITCH_1
0x19a2	      0xb801000000	                              mov eax, 1	       489	pen.c	FUNCTION_19	SWITCH_1
0x19a7	      0xe99e000000	                           jmp 0x4001a8a	       489	pen.c	FUNCTION_19	SWITCH_1
0x19ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       492	pen.c	FUNCTION_19	SWITCH_1
0x19b0	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       492	pen.c	FUNCTION_19	SWITCH_1
0x19b7	          0xc0e805	                               shr al, 5	       492	pen.c	FUNCTION_19	SWITCH_1
0x19ba	          0x83e001	                              and eax, 1	       492	pen.c	FUNCTION_19	SWITCH_1
0x19bd	           0xfb6d0	                           movzx edx, al	       492	pen.c	FUNCTION_19	SWITCH_1
0x19c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       492	pen.c	FUNCTION_19	SWITCH_1
0x19c4	            0x8910	                    mov dword [rax], edx	       492	pen.c	FUNCTION_19	SWITCH_1
0x19c6	      0xb801000000	                              mov eax, 1	       493	pen.c	FUNCTION_19	SWITCH_1
0x19cb	            0xeb7d	                           jmp 0x4001a8a	       493	pen.c	FUNCTION_19	SWITCH_1
0x19cd	        0x488b45f8	                mov rax, qword [rbp - 8]	       496	pen.c	FUNCTION_19	SWITCH_1
0x19d1	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       496	pen.c	FUNCTION_19	SWITCH_1
0x19d8	          0xc0e806	                               shr al, 6	       496	pen.c	FUNCTION_19	SWITCH_1
0x19db	          0x83e001	                              and eax, 1	       496	pen.c	FUNCTION_19	SWITCH_1
0x19de	           0xfb6d0	                           movzx edx, al	       496	pen.c	FUNCTION_19	SWITCH_1
0x19e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       496	pen.c	FUNCTION_19	SWITCH_1
0x19e5	            0x8910	                    mov dword [rax], edx	       496	pen.c	FUNCTION_19	SWITCH_1
0x19e7	      0xb801000000	                              mov eax, 1	       497	pen.c	FUNCTION_19	SWITCH_1
0x19ec	            0xeb5c	                           jmp 0x4001a8a	       497	pen.c	FUNCTION_19	SWITCH_1
0x19ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       500	pen.c	FUNCTION_19	SWITCH_1
0x19f2	     0xfb780240100	          movzx eax, word [rax + 0x124] 	       500	pen.c	FUNCTION_19	SWITCH_1
0x19f9	        0x66c1e807	                               shr ax, 7	       500	pen.c	FUNCTION_19	SWITCH_1
0x19fd	          0x83e00f	                            and eax, 0xf	       500	pen.c	FUNCTION_19	SWITCH_1
0x1a00	           0xfb6d0	                           movzx edx, al	       500	pen.c	FUNCTION_19	SWITCH_1
0x1a03	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       500	pen.c	FUNCTION_19	SWITCH_1
0x1a07	            0x8910	                    mov dword [rax], edx	       500	pen.c	FUNCTION_19	SWITCH_1
0x1a09	      0xb801000000	                              mov eax, 1	       501	pen.c	FUNCTION_19	SWITCH_1
0x1a0e	            0xeb3a	                           jmp 0x4001a8a	       501	pen.c	FUNCTION_19	SWITCH_1
0x1a10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       504	pen.c	FUNCTION_19	SWITCH_1
0x1a14	        0x488b55f8	                mov rdx, qword [rbp - 8]	       504	pen.c	FUNCTION_19	SWITCH_1
0x1a18	    0x8b921c010000	           mov edx, dword [rdx + 0x11c] 	       504	pen.c	FUNCTION_19	SWITCH_1
0x1a1e	            0x8910	                    mov dword [rax], edx	       504	pen.c	FUNCTION_19	SWITCH_1
0x1a20	      0xb801000000	                              mov eax, 1	       505	pen.c	FUNCTION_19	SWITCH_1
0x1a25	            0xeb23	                           jmp 0x4001a8a	       505	pen.c	FUNCTION_19	SWITCH_1
0x1a27	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       508	pen.c	FUNCTION_19	SWITCH_1
0x1a2b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       508	pen.c	FUNCTION_19	SWITCH_1
0x1a2f	    0x8b9220010000	           mov edx, dword [rdx + 0x120] 	       508	pen.c	FUNCTION_19	SWITCH_1
0x1a35	            0x8910	                    mov dword [rax], edx	       508	pen.c	FUNCTION_19	SWITCH_1
0x1a37	      0xb801000000	                              mov eax, 1	       509	pen.c	FUNCTION_19	SWITCH_1
0x1a3c	            0xeb0c	                           jmp 0x4001a8a	       509	pen.c	FUNCTION_19	SWITCH_1
0x1a3e	      0xb800000000	                              mov eax, 0	       512	pen.c	FUNCTION_19	SWITCH_1
0x1a43	            0xeb05	                           jmp 0x4001a8a	       512	pen.c	FUNCTION_19	SWITCH_1
0x1a45	      0xb800000000	                              mov eax, 0	       515	pen.c	FUNCTION_19
0x1a4a	              0x5d	                                 pop rbp	       516	pen.c	FUNCTION_19
0x1a4b	              0xc3	                                     ret	       516	pen.c	FUNCTION_19
vterm_state_get_palette_color	SWITCH,0:CALL,1:DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:functions,0	16
0x92d	              0x55	                                push rbp	       209	pen.c	FUNCTION_13
0x92e	          0x4889e5	                            mov rbp, rsp	       209	pen.c	FUNCTION_13
0x931	        0x4883ec18	                           sub rsp, 0x18	       209	pen.c	FUNCTION_13
0x935	        0x48897df8	                mov qword [rbp - 8], rdi	       209	pen.c	FUNCTION_13
0x939	          0x8975f4	              mov dword [rbp - 0xc], esi	       209	pen.c	FUNCTION_13
0x93c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       209	pen.c	FUNCTION_13
0x940	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       210	pen.c	FUNCTION_13	CALL_1
0x943	          0x4863c8	                         movsxd rcx, eax	       210	pen.c	FUNCTION_13	CALL_1
0x946	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       210	pen.c	FUNCTION_13	CALL_1
0x94a	        0x488b45f8	                mov rax, qword [rbp - 8]	       210	pen.c	FUNCTION_13	CALL_1
0x94e	          0x4889ce	                            mov rsi, rcx	       210	pen.c	FUNCTION_13	CALL_1
0x951	          0x4889c7	                            mov rdi, rax	       210	pen.c	FUNCTION_13	CALL_1
0x954	      0xe8e8f6ffff	          call sym.lookup_colour_palette	       210	pen.c	FUNCTION_13	CALL_1
0x959	              0x90	                                     nop	       211	pen.c	FUNCTION_13
0x95a	              0xc9	                                   leave	       211	pen.c	FUNCTION_13
0x95b	              0xc3	                                     ret	       211	pen.c	FUNCTION_13
setpenattr_col	SWITCH,0:CALL,1:DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:functions,0	25
0x438	              0x55	                                push rbp	       137	pen.c	FUNCTION_7
0x439	          0x4889e5	                            mov rbp, rsp	       137	pen.c	FUNCTION_7
0x43c	        0x4883ec20	                           sub rsp, 0x20	       137	pen.c	FUNCTION_7
0x440	        0x48897de8	             mov qword [rbp - 0x18], rdi	       137	pen.c	FUNCTION_7
0x444	          0x8975e4	             mov dword [rbp - 0x1c], esi	       137	pen.c	FUNCTION_7
0x447	          0x8955e0	             mov dword [rbp - 0x20], edx	       137	pen.c	FUNCTION_7
0x44a	    0x64488b042528	                mov rax, qword fs:[0x28]	       137	pen.c	FUNCTION_7
0x453	        0x488945f8	                mov qword [rbp - 8], rax	       137	pen.c	FUNCTION_7
0x457	            0x31c0	                            xor eax, eax	       137	pen.c	FUNCTION_7
0x459	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       139	pen.c	FUNCTION_7
0x45c	          0x8945f0	             mov dword [rbp - 0x10], eax	       139	pen.c	FUNCTION_7
0x45f	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       140	pen.c	FUNCTION_7	CALL_1
0x463	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       140	pen.c	FUNCTION_7	CALL_1
0x466	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	pen.c	FUNCTION_7	CALL_1
0x46a	          0x4889d1	                            mov rcx, rdx	       140	pen.c	FUNCTION_7	CALL_1
0x46d	      0xba04000000	                              mov edx, 4	       140	pen.c	FUNCTION_7	CALL_1
0x472	          0x4889c7	                            mov rdi, rax	       140	pen.c	FUNCTION_7	CALL_1
0x475	      0xe8b6feffff	                     call sym.setpenattr	       140	pen.c	FUNCTION_7	CALL_1
0x47a	              0x90	                                     nop	       141	pen.c	FUNCTION_7
0x47b	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	pen.c	FUNCTION_7
0x47f	    0x644833042528	                xor rax, qword fs:[0x28]	       141	pen.c	FUNCTION_7
0x488	            0x7405	                            je 0x40004cf	       141	pen.c	FUNCTION_7
0x48a	      0xe800000000	                          call 0x40004cf	       141	pen.c	FUNCTION_7
0x48f	              0xc9	                                   leave	       141	pen.c	FUNCTION_7
0x490	              0xc3	                                     ret	       141	pen.c	FUNCTION_7
vterm_state_get_default_colors	SWITCH,0:CALL,0:DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:functions,0	16
0x8fa	              0x55	                                push rbp	       203	pen.c	FUNCTION_12
0x8fb	          0x4889e5	                            mov rbp, rsp	       203	pen.c	FUNCTION_12
0x8fe	        0x48897df8	                mov qword [rbp - 8], rdi	       203	pen.c	FUNCTION_12
0x902	        0x488975f0	             mov qword [rbp - 0x10], rsi	       203	pen.c	FUNCTION_12
0x906	        0x488955e8	             mov qword [rbp - 0x18], rdx	       203	pen.c	FUNCTION_12
0x90a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       204	pen.c	FUNCTION_12
0x90e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       204	pen.c	FUNCTION_12
0x912	    0x8b9228010000	           mov edx, dword [rdx + 0x128] 	       204	pen.c	FUNCTION_12
0x918	            0x8910	                    mov dword [rax], edx	       204	pen.c	FUNCTION_12
0x91a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       205	pen.c	FUNCTION_12
0x91e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       205	pen.c	FUNCTION_12
0x922	    0x8b922c010000	           mov edx, dword [rdx + 0x12c] 	       205	pen.c	FUNCTION_12
0x928	            0x8910	                    mov dword [rax], edx	       205	pen.c	FUNCTION_12
0x92a	              0x90	                                     nop	       206	pen.c	FUNCTION_12
0x92b	              0x5d	                                 pop rbp	       206	pen.c	FUNCTION_12
0x92c	              0xc3	                                     ret	       206	pen.c	FUNCTION_12
vterm_state_setpen	SWITCH,1:CALL,36:DO,0:ELSE,0:IF,5:WHILE,2:FOR,0:functions,0	502
0x9f7	              0x55	                                push rbp	       234	pen.c	FUNCTION_17
0x9f8	          0x4889e5	                            mov rbp, rsp	       234	pen.c	FUNCTION_17
0x9fb	        0x4883ec40	                           sub rsp, 0x40	       234	pen.c	FUNCTION_17
0x9ff	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       234	pen.c	FUNCTION_17
0xa03	        0x488975d0	             mov qword [rbp - 0x30], rsi	       234	pen.c	FUNCTION_17
0xa07	          0x8955cc	             mov dword [rbp - 0x34], edx	       234	pen.c	FUNCTION_17
0xa0a	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       237	pen.c	FUNCTION_17
0xa11	      0xe92f080000	                           jmp 0x4001285	       240	pen.c	FUNCTION_17	WHILE_1
0xa16	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       243	pen.c	FUNCTION_17	WHILE_1
0xa1d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa20	            0x4898	                                    cdqe	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa22	    0x488d14c50000	                        lea rdx, [rax*8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa2a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa2e	          0x4801d0	                            add rax, rdx	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa31	          0x488b00	                    mov rax, qword [rax]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa34	      0x25ffffff7f	                     and eax, 0x7fffffff	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa39	        0x488945f8	                mov qword [rbp - 8], rax	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa3d	        0x488b45f8	                mov rax, qword [rbp - 8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa41	        0x4883f81b	                           cmp rax, 0x1b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa45	     0xf8441040000	                            je 0x4000ecc	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa4b	        0x4883f81b	                           cmp rax, 0x1b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa4f	     0xf8fa7000000	                            jg 0x4000b3c	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa55	        0x4883f809	                              cmp rax, 9	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa59	     0xf84a2020000	                            je 0x4000d41	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa5f	        0x4883f809	                              cmp rax, 9	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa63	            0x7f4b	                            jg 0x4000af0	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa65	        0x4883f803	                              cmp rax, 3	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa69	     0xf84d3010000	                            je 0x4000c82	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa6f	        0x4883f803	                              cmp rax, 3	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa73	            0x7f18	                            jg 0x4000acd	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa75	          0x4885c0	                           test rax, rax	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa78	     0xf840f010000	                            je 0x4000bcd	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa7e	        0x4883f801	                              cmp rax, 1	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa82	     0xf8416010000	                            je 0x4000bde	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa88	      0xe985070000	                           jmp 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa8d	        0x4883f805	                              cmp rax, 5	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa91	     0xf840c020000	                            je 0x4000ce3	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa97	        0x4883f805	                              cmp rax, 5	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xa9b	     0xf8cd0010000	                            jl 0x4000cb1	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xaa1	        0x4883f807	                              cmp rax, 7	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xaa5	     0xf8427020000	                            je 0x4000d12	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xaab	      0xe962070000	                           jmp 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xab0	        0x4883f816	                           cmp rax, 0x16	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xab4	     0xf8416030000	                            je 0x4000e10	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xaba	        0x4883f816	                           cmp rax, 0x16	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xabe	            0x7f19	                            jg 0x4000b19	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xac0	        0x4883f813	                           cmp rax, 0x13	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xac4	     0xf8e66020000	                           jle 0x4000d70	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xaca	        0x4883f815	                           cmp rax, 0x15	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xace	     0xf84ca020000	                            je 0x4000dde	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xad4	      0xe939070000	                           jmp 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xad9	        0x4883f818	                           cmp rax, 0x18	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xadd	     0xf844b030000	                            je 0x4000e6e	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xae3	        0x4883f818	                           cmp rax, 0x18	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xae7	     0xf8c12030000	                            jl 0x4000e3f	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xaed	        0x4883f819	                           cmp rax, 0x19	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xaf1	     0xf8466030000	                            je 0x4000e9d	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xaf7	      0xe916070000	                           jmp 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xafc	        0x4883f82f	                           cmp rax, 0x2f	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb00	            0x7f42	                            jg 0x4000b84	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb02	        0x4883f828	                           cmp rax, 0x28	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb06	     0xf8d3c050000	                           jge 0x4001088	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb0c	        0x4883f825	                           cmp rax, 0x25	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb10	            0x7f19	                            jg 0x4000b6b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb12	        0x4883f81e	                           cmp rax, 0x1e	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb16	     0xf8dce030000	                           jge 0x4000f2a	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb1c	        0x4883f81d	                           cmp rax, 0x1d	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb20	     0xf8495030000	                            je 0x4000efb	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb26	      0xe9e7060000	                           jmp 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb2b	        0x4883f826	                           cmp rax, 0x26	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb2f	     0xf8424040000	                            je 0x4000f99	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb35	        0x4883f827	                           cmp rax, 0x27	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb39	     0xf84c7040000	                            je 0x4001046	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb3f	      0xe9ce060000	                           jmp 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb44	        0x4883f861	                           cmp rax, 0x61	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb48	            0x7f23	                            jg 0x4000bad	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb4a	        0x4883f85a	                           cmp rax, 0x5a	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb4e	     0xf8d2e060000	                           jge 0x40011c2	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb54	        0x4883f830	                           cmp rax, 0x30	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb58	     0xf8435050000	                            je 0x40010d3	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb5e	        0x4883f831	                           cmp rax, 0x31	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb62	     0xf84d8050000	                            je 0x4001180	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb68	      0xe9a5060000	                           jmp 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb6d	        0x4883f864	                           cmp rax, 0x64	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb71	     0xf8c9b060000	                            jl 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb77	        0x4883f86b	                           cmp rax, 0x6b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb7b	     0xf8e49060000	                           jle 0x400120a	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb81	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb87	     0xf8585060000	                           jne 0x4001252	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0xb8d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       249	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0xb91	          0x4889c7	                            mov rdi, rax	       249	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0xb94	      0xe800000000	                          call 0x4000bd9	       249	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0xb99	      0xe97f060000	                           jmp 0x400125d	       250	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xb9e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       253	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xba2	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       253	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xba9	          0x83ca01	                               or edx, 1	       253	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xbac	    0x889024010000	              mov byte [rax + 0x124], dl	       253	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xbb2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       254	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0xbb6	      0xba01000000	                              mov edx, 1	       254	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0xbbb	      0xbe01000000	                              mov esi, 1	       254	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0xbc0	          0x4889c7	                            mov rdi, rax	       254	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0xbc3	      0xe8bef7ffff	                call sym.setpenattr_bool	       254	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_3
0xbc8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0xbcc	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0xbd2	            0x85c0	                           test eax, eax	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0xbd4	     0xf8842060000	                            js 0x400125c	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0xbda	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0xbde	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0xbe4	          0x83f807	                              cmp eax, 7	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0xbe7	     0xf8f2f060000	                            jg 0x400125c	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0xbed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0xbf1	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0xbf7	            0x85c0	                           test eax, eax	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0xbf9	     0xf841d060000	                            je 0x400125c	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0xbff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc03	    0x8b9070010000	           mov edx, dword [rax + 0x170] 	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc09	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc0d	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc14	          0x83e001	                              and eax, 1	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc17	            0x84c0	                             test al, al	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc19	            0x7407	                            je 0x4000c62	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc1b	      0xb808000000	                              mov eax, 8	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc20	            0xeb05	                           jmp 0x4000c67	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc22	      0xb800000000	                              mov eax, 0	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc27	             0x1d0	                            add eax, edx	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc29	          0x4863d0	                         movsxd rdx, eax	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc2c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc30	      0xbe08000000	                              mov esi, 8	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc35	          0x4889c7	                            mov rdi, rax	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc38	      0xe854f8ffff	               call sym.set_pen_col_ansi	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0xc3d	      0xe9da050000	                           jmp 0x400125c	       257	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xc42	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       260	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xc46	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       260	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xc4d	          0x83ca08	                               or edx, 8	       260	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xc50	    0x889024010000	              mov byte [rax + 0x124], dl	       260	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xc56	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       261	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_5
0xc5a	      0xba01000000	                              mov edx, 1	       261	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_5
0xc5f	      0xbe03000000	                              mov esi, 3	       261	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_5
0xc64	          0x4889c7	                            mov rdi, rax	       261	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_5
0xc67	      0xe81af7ffff	                call sym.setpenattr_bool	       261	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_5
0xc6c	      0xe9ac050000	                           jmp 0x400125d	       262	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xc71	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xc75	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xc7c	          0x83e2f9	                     and edx, 0xfffffff9	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xc7f	          0x83ca02	                               or edx, 2	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xc82	    0x889024010000	              mov byte [rax + 0x124], dl	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xc88	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       266	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_6
0xc8c	      0xba01000000	                              mov edx, 1	       266	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_6
0xc91	      0xbe02000000	                              mov esi, 2	       266	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_6
0xc96	          0x4889c7	                            mov rdi, rax	       266	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_6
0xc99	      0xe841f7ffff	                 call sym.setpenattr_int	       266	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_6
0xc9e	      0xe97a050000	                           jmp 0x400125d	       267	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xca3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       270	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xca7	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       270	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xcae	          0x83ca10	                            or edx, 0x10	       270	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xcb1	    0x889024010000	              mov byte [rax + 0x124], dl	       270	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xcb7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       271	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_7
0xcbb	      0xba01000000	                              mov edx, 1	       271	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_7
0xcc0	      0xbe04000000	                              mov esi, 4	       271	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_7
0xcc5	          0x4889c7	                            mov rdi, rax	       271	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_7
0xcc8	      0xe8b9f6ffff	                call sym.setpenattr_bool	       271	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_7
0xccd	      0xe94b050000	                           jmp 0x400125d	       272	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xcd2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       275	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xcd6	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       275	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xcdd	          0x83ca20	                            or edx, 0x20	       275	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xce0	    0x889024010000	              mov byte [rax + 0x124], dl	       275	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xce6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       276	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_8
0xcea	      0xba01000000	                              mov edx, 1	       276	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_8
0xcef	      0xbe05000000	                              mov esi, 5	       276	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_8
0xcf4	          0x4889c7	                            mov rdi, rax	       276	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_8
0xcf7	      0xe88af6ffff	                call sym.setpenattr_bool	       276	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_8
0xcfc	      0xe91c050000	                           jmp 0x400125d	       277	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xd01	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       280	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xd05	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       280	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xd0c	          0x83ca40	                            or edx, 0x40	       280	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xd0f	    0x889024010000	              mov byte [rax + 0x124], dl	       280	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xd15	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       281	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_9
0xd19	      0xba01000000	                              mov edx, 1	       281	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_9
0xd1e	      0xbe06000000	                              mov esi, 6	       281	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_9
0xd23	          0x4889c7	                            mov rdi, rax	       281	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_9
0xd26	      0xe85bf6ffff	                call sym.setpenattr_bool	       281	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_9
0xd2b	      0xe9ed040000	                           jmp 0x400125d	       282	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xd30	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd33	            0x4898	                                    cdqe	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd35	    0x488d14c50000	                        lea rdx, [rax*8]	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd3d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd41	          0x4801d0	                            add rax, rdx	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd44	          0x488b00	                    mov rax, qword [rax]	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd47	          0x83e80a	                            sub eax, 0xa	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd4a	          0x83e00f	                            and eax, 0xf	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd4d	            0x89c2	                            mov edx, eax	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd4f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd53	           0xfb6d2	                           movzx edx, dl	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd56	          0x83e20f	                            and edx, 0xf	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd59	            0x89d1	                            mov ecx, edx	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd5b	          0xc1e107	                              shl ecx, 7	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd5e	     0xfb790240100	          movzx edx, word [rax + 0x124] 	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd65	      0x6681e27ff8	                          and dx, 0xf87f	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd6a	             0x9ca	                             or edx, ecx	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd6c	    0x668990240100	              mov word [rax + 0x124], dx	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0xd73	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0xd77	     0xfb780240100	          movzx eax, word [rax + 0x124] 	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0xd7e	        0x66c1e807	                               shr ax, 7	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0xd82	          0x83e00f	                            and eax, 0xf	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0xd85	           0xfb6d0	                           movzx edx, al	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0xd88	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0xd8c	      0xbe07000000	                              mov esi, 7	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0xd91	          0x4889c7	                            mov rdi, rax	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0xd94	      0xe846f6ffff	                 call sym.setpenattr_int	       287	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_11
0xd99	      0xe97f040000	                           jmp 0x400125d	       288	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xd9e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xda2	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xda9	          0x83e2f9	                     and edx, 0xfffffff9	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xdac	          0x83ca04	                               or edx, 4	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xdaf	    0x889024010000	              mov byte [rax + 0x124], dl	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xdb5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       292	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_12
0xdb9	      0xba02000000	                              mov edx, 2	       292	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_12
0xdbe	      0xbe02000000	                              mov esi, 2	       292	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_12
0xdc3	          0x4889c7	                            mov rdi, rax	       292	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_12
0xdc6	      0xe814f6ffff	                 call sym.setpenattr_int	       292	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_12
0xdcb	      0xe94d040000	                           jmp 0x400125d	       293	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xdd0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       296	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xdd4	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       296	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xddb	          0x83e2fe	                     and edx, 0xfffffffe	       296	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xdde	    0x889024010000	              mov byte [rax + 0x124], dl	       296	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xde4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       297	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_13
0xde8	      0xba00000000	                              mov edx, 0	       297	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_13
0xded	      0xbe01000000	                              mov esi, 1	       297	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_13
0xdf2	          0x4889c7	                            mov rdi, rax	       297	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_13
0xdf5	      0xe88cf5ffff	                call sym.setpenattr_bool	       297	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_13
0xdfa	      0xe91e040000	                           jmp 0x400125d	       298	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xdff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       301	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe03	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       301	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe0a	          0x83e2f7	                     and edx, 0xfffffff7	       301	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe0d	    0x889024010000	              mov byte [rax + 0x124], dl	       301	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe13	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       302	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_14
0xe17	      0xba00000000	                              mov edx, 0	       302	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_14
0xe1c	      0xbe03000000	                              mov esi, 3	       302	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_14
0xe21	          0x4889c7	                            mov rdi, rax	       302	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_14
0xe24	      0xe85df5ffff	                call sym.setpenattr_bool	       302	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_14
0xe29	      0xe9ef030000	                           jmp 0x400125d	       303	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe2e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       306	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe32	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       306	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe39	          0x83e2f9	                     and edx, 0xfffffff9	       306	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe3c	    0x889024010000	              mov byte [rax + 0x124], dl	       306	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe42	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       307	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_15
0xe46	      0xba00000000	                              mov edx, 0	       307	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_15
0xe4b	      0xbe02000000	                              mov esi, 2	       307	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_15
0xe50	          0x4889c7	                            mov rdi, rax	       307	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_15
0xe53	      0xe887f5ffff	                 call sym.setpenattr_int	       307	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_15
0xe58	      0xe9c0030000	                           jmp 0x400125d	       308	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe5d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       311	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe61	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       311	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe68	          0x83e2ef	                     and edx, 0xffffffef	       311	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe6b	    0x889024010000	              mov byte [rax + 0x124], dl	       311	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe71	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       312	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_16
0xe75	      0xba00000000	                              mov edx, 0	       312	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_16
0xe7a	      0xbe04000000	                              mov esi, 4	       312	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_16
0xe7f	          0x4889c7	                            mov rdi, rax	       312	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_16
0xe82	      0xe8fff4ffff	                call sym.setpenattr_bool	       312	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_16
0xe87	      0xe991030000	                           jmp 0x400125d	       313	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe8c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       316	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe90	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       316	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe97	          0x83e2df	                     and edx, 0xffffffdf	       316	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xe9a	    0x889024010000	              mov byte [rax + 0x124], dl	       316	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xea0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       317	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_17
0xea4	      0xba00000000	                              mov edx, 0	       317	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_17
0xea9	      0xbe05000000	                              mov esi, 5	       317	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_17
0xeae	          0x4889c7	                            mov rdi, rax	       317	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_17
0xeb1	      0xe8d0f4ffff	                call sym.setpenattr_bool	       317	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_17
0xeb6	      0xe962030000	                           jmp 0x400125d	       318	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xebb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       321	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xebf	     0xfb690240100	          movzx edx, byte [rax + 0x124] 	       321	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xec6	          0x83e2bf	                     and edx, 0xffffffbf	       321	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xec9	    0x889024010000	              mov byte [rax + 0x124], dl	       321	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xecf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       322	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_18
0xed3	      0xba00000000	                              mov edx, 0	       322	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_18
0xed8	      0xbe06000000	                              mov esi, 6	       322	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_18
0xedd	          0x4889c7	                            mov rdi, rax	       322	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_18
0xee0	      0xe8a1f4ffff	                call sym.setpenattr_bool	       322	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_18
0xee5	      0xe933030000	                           jmp 0x400125d	       323	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xeea	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0xeed	            0x4898	                                    cdqe	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0xeef	    0x488d14c50000	                        lea rdx, [rax*8]	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0xef7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0xefb	          0x4801d0	                            add rax, rdx	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0xefe	          0x488b00	                    mov rax, qword [rax]	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0xf01	      0x25ffffff7f	                     and eax, 0x7fffffff	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0xf06	          0x83e81e	                           sub eax, 0x1e	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0xf09	          0x8945f0	             mov dword [rbp - 0x10], eax	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0xf0c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       328	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xf10	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       328	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xf13	    0x899070010000	            mov dword [rax + 0x170], edx	       328	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xf19	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0xf1d	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0xf24	          0x83e001	                              and eax, 1	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0xf27	            0x84c0	                             test al, al	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0xf29	            0x7412	                            je 0x4000f7d	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0xf2b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0xf2f	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0xf35	            0x85c0	                           test eax, eax	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0xf37	            0x7404	                            je 0x4000f7d	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0xf39	        0x8345f008	               add dword [rbp - 0x10], 8	       330	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0xf3d	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0xf40	          0x4863d0	                         movsxd rdx, eax	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0xf43	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0xf47	      0xbe08000000	                              mov esi, 8	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0xf4c	          0x4889c7	                            mov rdi, rax	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0xf4f	      0xe83df5ffff	               call sym.set_pen_col_ansi	       331	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_20
0xf54	      0xe9c4020000	                           jmp 0x400125d	       332	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xf59	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       335	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xf5d	    0xc78070010000	    mov dword [rax + 0x170], 0xffffffff 	       335	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0xf67	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       336	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0xf6a	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       336	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0xf6d	            0x85c0	                           test eax, eax	       336	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0xf6f	     0xf8ede020000	                           jle 0x4001293	       336	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0xf75	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xf79	    0x4c8d80700100	                   lea r8, [rax + 0x170]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xf80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xf84	    0x488db81c0100	                  lea rdi, [rax + 0x11c]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xf8b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xf8e	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xf91	          0x8d48fe	                      lea ecx, [rax - 2]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xf94	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xf97	            0x4898	                                    cdqe	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xf99	        0x4883c002	                              add rax, 2	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xf9d	    0x488d14c50000	                        lea rdx, [rax*8]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfa5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfa9	          0x4801c2	                            add rdx, rax	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfac	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfaf	            0x4898	                                    cdqe	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfb1	        0x4883c001	                              add rax, 1	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfb5	    0x488d34c50000	                        lea rsi, [rax*8]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfbd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfc1	          0x4801f0	                            add rax, rsi	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfc4	          0x488b00	                    mov rax, qword [rax]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfc7	      0x25ffffff7f	                     and eax, 0x7fffffff	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfcc	            0x89c6	                            mov esi, eax	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfce	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfd2	          0x4d89c1	                              mov r9, r8	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfd5	          0x4989f8	                             mov r8, rdi	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfd8	          0x4889c7	                            mov rdi, rax	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfdb	      0xe835f2ffff	                  call sym.lookup_colour	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfe0	          0x83c001	                              add eax, 1	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfe3	           0x145ec	             add dword [rbp - 0x14], eax	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0xfe6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0xfea	    0x8b901c010000	           mov edx, dword [rax + 0x11c] 	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0xff0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0xff4	      0xbe08000000	                              mov esi, 8	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0xff9	          0x4889c7	                            mov rdi, rax	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0xffc	      0xe837f4ffff	                 call sym.setpenattr_col	       339	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_23
0x1001	      0xe917020000	                           jmp 0x400125d	       340	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1006	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       343	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x100a	    0xc78070010000	    mov dword [rax + 0x170], 0xffffffff 	       343	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1014	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1018	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x101c	    0x8b9228010000	           mov edx, dword [rdx + 0x128] 	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1022	    0x89901c010000	            mov dword [rax + 0x11c], edx	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1028	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       345	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_24
0x102c	    0x8b901c010000	           mov edx, dword [rax + 0x11c] 	       345	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_24
0x1032	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       345	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_24
0x1036	      0xbe08000000	                              mov esi, 8	       345	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_24
0x103b	          0x4889c7	                            mov rdi, rax	       345	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_24
0x103e	      0xe8f5f3ffff	                 call sym.setpenattr_col	       345	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_24
0x1043	      0xe9d5010000	                           jmp 0x400125d	       346	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1048	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x104b	            0x4898	                                    cdqe	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x104d	    0x488d14c50000	                        lea rdx, [rax*8]	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x1055	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x1059	          0x4801d0	                            add rax, rdx	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x105c	          0x488b00	                    mov rax, qword [rax]	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x105f	      0x25ffffff7f	                     and eax, 0x7fffffff	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x1064	          0x83e828	                           sub eax, 0x28	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x1067	          0x8945f0	             mov dword [rbp - 0x10], eax	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x106a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       351	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x106e	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       351	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1071	    0x899074010000	            mov dword [rax + 0x174], edx	       351	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1077	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x107a	          0x4863d0	                         movsxd rdx, eax	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x107d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x1081	      0xbe09000000	                              mov esi, 9	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x1086	          0x4889c7	                            mov rdi, rax	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x1089	      0xe803f4ffff	               call sym.set_pen_col_ansi	       352	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_26
0x108e	      0xe98a010000	                           jmp 0x400125d	       353	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1093	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       356	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1097	    0xc78074010000	    mov dword [rax + 0x174], 0xffffffff 	       356	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x10a1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       357	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_4
0x10a4	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       357	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_4
0x10a7	            0x85c0	                           test eax, eax	       357	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_4
0x10a9	     0xf8ea7010000	                           jle 0x4001296	       357	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_4
0x10af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10b3	    0x4c8d80740100	                   lea r8, [rax + 0x174]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10be	    0x488db8200100	                  lea rdi, [rax + 0x120]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10c5	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10c8	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10cb	          0x8d48fe	                      lea ecx, [rax - 2]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10ce	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10d1	            0x4898	                                    cdqe	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10d3	        0x4883c002	                              add rax, 2	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10d7	    0x488d14c50000	                        lea rdx, [rax*8]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10df	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10e3	          0x4801c2	                            add rdx, rax	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10e6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10e9	            0x4898	                                    cdqe	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10eb	        0x4883c001	                              add rax, 1	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10ef	    0x488d34c50000	                        lea rsi, [rax*8]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10f7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10fb	          0x4801f0	                            add rax, rsi	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x10fe	          0x488b00	                    mov rax, qword [rax]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x1101	      0x25ffffff7f	                     and eax, 0x7fffffff	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x1106	            0x89c6	                            mov esi, eax	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x1108	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x110c	          0x4d89c1	                              mov r9, r8	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x110f	          0x4989f8	                             mov r8, rdi	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x1112	          0x4889c7	                            mov rdi, rax	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x1115	      0xe8fbf0ffff	                  call sym.lookup_colour	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x111a	          0x83c001	                              add eax, 1	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x111d	           0x145ec	             add dword [rbp - 0x14], eax	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x1120	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x1124	    0x8b9020010000	           mov edx, dword [rax + 0x120] 	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x112a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x112e	      0xbe09000000	                              mov esi, 9	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x1133	          0x4889c7	                            mov rdi, rax	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x1136	      0xe8fdf2ffff	                 call sym.setpenattr_col	       360	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_29
0x113b	      0xe9dd000000	                           jmp 0x400125d	       361	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1140	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       364	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1144	    0xc78074010000	    mov dword [rax + 0x174], 0xffffffff 	       364	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x114e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       365	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1152	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       365	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1156	    0x8b922c010000	           mov edx, dword [rdx + 0x12c] 	       365	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x115c	    0x899020010000	            mov dword [rax + 0x120], edx	       365	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1162	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       366	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_30
0x1166	    0x8b9020010000	           mov edx, dword [rax + 0x120] 	       366	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_30
0x116c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       366	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_30
0x1170	      0xbe09000000	                              mov esi, 9	       366	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_30
0x1175	          0x4889c7	                            mov rdi, rax	       366	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_30
0x1178	      0xe8bbf2ffff	                 call sym.setpenattr_col	       366	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_30
0x117d	      0xe99b000000	                           jmp 0x400125d	       367	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1182	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x1185	            0x4898	                                    cdqe	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x1187	    0x488d14c50000	                        lea rdx, [rax*8]	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x118f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x1193	          0x4801d0	                            add rax, rdx	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x1196	          0x488b00	                    mov rax, qword [rax]	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x1199	      0x25ffffff7f	                     and eax, 0x7fffffff	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x119e	          0x83e852	                           sub eax, 0x52	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x11a1	          0x8945f0	             mov dword [rbp - 0x10], eax	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x11a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       372	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x11a8	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       372	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x11ab	    0x899070010000	            mov dword [rax + 0x170], edx	       372	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x11b1	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x11b4	          0x4863d0	                         movsxd rdx, eax	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x11b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x11bb	      0xbe08000000	                              mov esi, 8	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x11c0	          0x4889c7	                            mov rdi, rax	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x11c3	      0xe8c9f2ffff	               call sym.set_pen_col_ansi	       373	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_32
0x11c8	            0xeb53	                           jmp 0x400125d	       374	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x11ca	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x11cd	            0x4898	                                    cdqe	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x11cf	    0x488d14c50000	                        lea rdx, [rax*8]	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x11d7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x11db	          0x4801d0	                            add rax, rdx	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x11de	          0x488b00	                    mov rax, qword [rax]	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x11e1	      0x25ffffff7f	                     and eax, 0x7fffffff	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x11e6	          0x83e85c	                           sub eax, 0x5c	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x11e9	          0x8945f0	             mov dword [rbp - 0x10], eax	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x11ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       379	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x11f0	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       379	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x11f3	    0x899074010000	            mov dword [rax + 0x174], edx	       379	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x11f9	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x11fc	          0x4863d0	                         movsxd rdx, eax	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x11ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x1203	      0xbe09000000	                              mov esi, 9	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x1208	          0x4889c7	                            mov rdi, rax	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x120b	      0xe881f2ffff	               call sym.set_pen_col_ansi	       380	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_34
0x1210	            0xeb0b	                           jmp 0x400125d	       381	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1212	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       384	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x1219	              0x90	                                     nop	       385	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x121a	            0xeb01	                           jmp 0x400125d	       385	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x121c	              0x90	                                     nop	       257	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x121d	              0x90	                                     nop	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x121e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x1221	          0x8d5001	                      lea edx, [rax + 1]	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x1224	          0x8955ec	             mov dword [rbp - 0x14], edx	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x1227	            0x4898	                                    cdqe	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x1229	    0x488d14c50000	                        lea rdx, [rax*8]	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x1231	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x1235	          0x4801d0	                            add rax, rdx	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x1238	          0x488b00	                    mov rax, qword [rax]	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x123b	      0x2500000080	                     and eax, 0x80000000	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x1240	          0x4885c0	                           test rax, rax	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x1243	            0x75d9	                           jne 0x400125e	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x1245	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       240	pen.c	FUNCTION_17	WHILE_1
0x1248	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	       240	pen.c	FUNCTION_17	WHILE_1
0x124b	     0xf8cc5f7ffff	                            jl 0x4000a56	       240	pen.c	FUNCTION_17	WHILE_1
0x1251	            0xeb04	                           jmp 0x4001297	       240	pen.c	FUNCTION_17	WHILE_1
0x1253	              0x90	                                     nop	       337	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0x1254	            0xeb01	                           jmp 0x4001297	       337	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_3
0x1256	              0x90	                                     nop	       358	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_4
0x1257	              0xc9	                                   leave	       395	pen.c	FUNCTION_17
0x1258	              0xc3	                                     ret	       395	pen.c	FUNCTION_17
vterm_state_set_palette_color	SWITCH,0:CALL,0:DO,0:ELSE,0:IF,1:WHILE,0:FOR,0:functions,0	26
0x98f	              0x55	                                push rbp	       220	pen.c	FUNCTION_15
0x990	          0x4889e5	                            mov rbp, rsp	       220	pen.c	FUNCTION_15
0x993	        0x48897df8	                mov qword [rbp - 8], rdi	       220	pen.c	FUNCTION_15
0x997	          0x8975f4	              mov dword [rbp - 0xc], esi	       220	pen.c	FUNCTION_15
0x99a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       220	pen.c	FUNCTION_15
0x99e	        0x837df400	                cmp dword [rbp - 0xc], 0	       221	pen.c	FUNCTION_15	IF_1
0x9a2	            0x7835	                            js 0x4000a19	       221	pen.c	FUNCTION_15	IF_1
0x9a4	        0x837df40f	              cmp dword [rbp - 0xc], 0xf	       221	pen.c	FUNCTION_15	IF_1
0x9a8	            0x7f2f	                            jg 0x4000a19	       221	pen.c	FUNCTION_15	IF_1
0x9aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       223	pen.c	FUNCTION_15	IF_1
0x9ae	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       223	pen.c	FUNCTION_15	IF_1
0x9b1	          0x4863d2	                         movsxd rdx, edx	       223	pen.c	FUNCTION_15	IF_1
0x9b4	        0x488d4a4c	                   lea rcx, [rdx + 0x4c]	       223	pen.c	FUNCTION_15	IF_1
0x9b8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       223	pen.c	FUNCTION_15	IF_1
0x9bc	            0x8b12	                    mov edx, dword [rdx]	       223	pen.c	FUNCTION_15	IF_1
0x9be	          0x891488	            mov dword [rax + rcx*4], edx	       223	pen.c	FUNCTION_15	IF_1
0x9c1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       224	pen.c	FUNCTION_15	IF_1
0x9c4	          0x8d4801	                      lea ecx, [rax + 1]	       224	pen.c	FUNCTION_15	IF_1
0x9c7	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	pen.c	FUNCTION_15	IF_1
0x9cb	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       224	pen.c	FUNCTION_15	IF_1
0x9ce	          0x4863d2	                         movsxd rdx, edx	       224	pen.c	FUNCTION_15	IF_1
0x9d1	        0x4883c24c	                           add rdx, 0x4c	       224	pen.c	FUNCTION_15	IF_1
0x9d5	        0x884c9003	          mov byte [rax + rdx*4 + 3], cl	       224	pen.c	FUNCTION_15	IF_1
0x9d9	              0x90	                                     nop	       226	pen.c	FUNCTION_15
0x9da	              0x5d	                                 pop rbp	       226	pen.c	FUNCTION_15
0x9db	              0xc3	                                     ret	       226	pen.c	FUNCTION_15
setpenattr_bool	SWITCH,0:CALL,1:DO,0:ELSE,0:IF,0:WHILE,0:FOR,0:functions,0	25
0x386	              0x55	                                push rbp	       123	pen.c	FUNCTION_5
0x387	          0x4889e5	                            mov rbp, rsp	       123	pen.c	FUNCTION_5
0x38a	        0x4883ec20	                           sub rsp, 0x20	       123	pen.c	FUNCTION_5
0x38e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       123	pen.c	FUNCTION_5
0x392	          0x8975e4	             mov dword [rbp - 0x1c], esi	       123	pen.c	FUNCTION_5
0x395	          0x8955e0	             mov dword [rbp - 0x20], edx	       123	pen.c	FUNCTION_5
0x398	    0x64488b042528	                mov rax, qword fs:[0x28]	       123	pen.c	FUNCTION_5
0x3a1	        0x488945f8	                mov qword [rbp - 8], rax	       123	pen.c	FUNCTION_5
0x3a5	            0x31c0	                            xor eax, eax	       123	pen.c	FUNCTION_5
0x3a7	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       125	pen.c	FUNCTION_5
0x3aa	          0x8945f0	             mov dword [rbp - 0x10], eax	       125	pen.c	FUNCTION_5
0x3ad	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       126	pen.c	FUNCTION_5	CALL_1
0x3b1	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       126	pen.c	FUNCTION_5	CALL_1
0x3b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       126	pen.c	FUNCTION_5	CALL_1
0x3b8	          0x4889d1	                            mov rcx, rdx	       126	pen.c	FUNCTION_5	CALL_1
0x3bb	      0xba01000000	                              mov edx, 1	       126	pen.c	FUNCTION_5	CALL_1
0x3c0	          0x4889c7	                            mov rdi, rax	       126	pen.c	FUNCTION_5	CALL_1
0x3c3	      0xe868ffffff	                     call sym.setpenattr	       126	pen.c	FUNCTION_5	CALL_1
0x3c8	              0x90	                                     nop	       127	pen.c	FUNCTION_5
0x3c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       127	pen.c	FUNCTION_5
0x3cd	    0x644833042528	                xor rax, qword fs:[0x28]	       127	pen.c	FUNCTION_5
0x3d6	            0x7405	                            je 0x400041d	       127	pen.c	FUNCTION_5
0x3d8	      0xe800000000	                          call 0x400041d	       127	pen.c	FUNCTION_5
0x3dd	              0xc9	                                   leave	       127	pen.c	FUNCTION_5
0x3de	              0xc3	                                     ret	       127	pen.c	FUNCTION_5
vterm_state_getpen	SWITCH,0:CALL,0:DO,0:ELSE,6:IF,18:WHILE,0:FOR,0:functions,0	434
0x1259	              0x55	                                push rbp	       398	pen.c	FUNCTION_18
0x125a	          0x4889e5	                            mov rbp, rsp	       398	pen.c	FUNCTION_18
0x125d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       398	pen.c	FUNCTION_18
0x1261	        0x488975e0	             mov qword [rbp - 0x20], rsi	       398	pen.c	FUNCTION_18
0x1265	          0x8955dc	             mov dword [rbp - 0x24], edx	       398	pen.c	FUNCTION_18
0x1268	    0xc745fc000000	                  mov dword [rbp - 4], 0	       399	pen.c	FUNCTION_18
0x126f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       401	pen.c	FUNCTION_18	IF_1
0x1273	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       401	pen.c	FUNCTION_18	IF_1
0x127a	          0x83e001	                              and eax, 1	       401	pen.c	FUNCTION_18	IF_1
0x127d	            0x84c0	                             test al, al	       401	pen.c	FUNCTION_18	IF_1
0x127f	            0x7421	                            je 0x40012e2	       401	pen.c	FUNCTION_18	IF_1
0x1281	          0x8b45fc	                mov eax, dword [rbp - 4]	       402	pen.c	FUNCTION_18	IF_1
0x1284	          0x8d5001	                      lea edx, [rax + 1]	       402	pen.c	FUNCTION_18	IF_1
0x1287	          0x8955fc	                mov dword [rbp - 4], edx	       402	pen.c	FUNCTION_18	IF_1
0x128a	            0x4898	                                    cdqe	       402	pen.c	FUNCTION_18	IF_1
0x128c	    0x488d14c50000	                        lea rdx, [rax*8]	       402	pen.c	FUNCTION_18	IF_1
0x1294	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       402	pen.c	FUNCTION_18	IF_1
0x1298	          0x4801d0	                            add rax, rdx	       402	pen.c	FUNCTION_18	IF_1
0x129b	    0x48c700010000	                      mov qword [rax], 1	       402	pen.c	FUNCTION_18	IF_1
0x12a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       404	pen.c	FUNCTION_18	IF_2
0x12a6	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       404	pen.c	FUNCTION_18	IF_2
0x12ad	          0x83e008	                              and eax, 8	       404	pen.c	FUNCTION_18	IF_2
0x12b0	            0x84c0	                             test al, al	       404	pen.c	FUNCTION_18	IF_2
0x12b2	            0x7421	                            je 0x4001315	       404	pen.c	FUNCTION_18	IF_2
0x12b4	          0x8b45fc	                mov eax, dword [rbp - 4]	       405	pen.c	FUNCTION_18	IF_2
0x12b7	          0x8d5001	                      lea edx, [rax + 1]	       405	pen.c	FUNCTION_18	IF_2
0x12ba	          0x8955fc	                mov dword [rbp - 4], edx	       405	pen.c	FUNCTION_18	IF_2
0x12bd	            0x4898	                                    cdqe	       405	pen.c	FUNCTION_18	IF_2
0x12bf	    0x488d14c50000	                        lea rdx, [rax*8]	       405	pen.c	FUNCTION_18	IF_2
0x12c7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       405	pen.c	FUNCTION_18	IF_2
0x12cb	          0x4801d0	                            add rax, rdx	       405	pen.c	FUNCTION_18	IF_2
0x12ce	    0x48c700030000	                      mov qword [rax], 3	       405	pen.c	FUNCTION_18	IF_2
0x12d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       407	pen.c	FUNCTION_18	IF_3
0x12d9	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       407	pen.c	FUNCTION_18	IF_3
0x12e0	          0x83e006	                              and eax, 6	       407	pen.c	FUNCTION_18	IF_3
0x12e3	            0x3c02	                               cmp al, 2	       407	pen.c	FUNCTION_18	IF_3
0x12e5	            0x7521	                           jne 0x4001348	       407	pen.c	FUNCTION_18	IF_3
0x12e7	          0x8b45fc	                mov eax, dword [rbp - 4]	       408	pen.c	FUNCTION_18	IF_3
0x12ea	          0x8d5001	                      lea edx, [rax + 1]	       408	pen.c	FUNCTION_18	IF_3
0x12ed	          0x8955fc	                mov dword [rbp - 4], edx	       408	pen.c	FUNCTION_18	IF_3
0x12f0	            0x4898	                                    cdqe	       408	pen.c	FUNCTION_18	IF_3
0x12f2	    0x488d14c50000	                        lea rdx, [rax*8]	       408	pen.c	FUNCTION_18	IF_3
0x12fa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       408	pen.c	FUNCTION_18	IF_3
0x12fe	          0x4801d0	                            add rax, rdx	       408	pen.c	FUNCTION_18	IF_3
0x1301	    0x48c700040000	                      mov qword [rax], 4	       408	pen.c	FUNCTION_18	IF_3
0x1308	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       410	pen.c	FUNCTION_18	IF_4
0x130c	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       410	pen.c	FUNCTION_18	IF_4
0x1313	          0x83e010	                           and eax, 0x10	       410	pen.c	FUNCTION_18	IF_4
0x1316	            0x84c0	                             test al, al	       410	pen.c	FUNCTION_18	IF_4
0x1318	            0x7421	                            je 0x400137b	       410	pen.c	FUNCTION_18	IF_4
0x131a	          0x8b45fc	                mov eax, dword [rbp - 4]	       411	pen.c	FUNCTION_18	IF_4
0x131d	          0x8d5001	                      lea edx, [rax + 1]	       411	pen.c	FUNCTION_18	IF_4
0x1320	          0x8955fc	                mov dword [rbp - 4], edx	       411	pen.c	FUNCTION_18	IF_4
0x1323	            0x4898	                                    cdqe	       411	pen.c	FUNCTION_18	IF_4
0x1325	    0x488d14c50000	                        lea rdx, [rax*8]	       411	pen.c	FUNCTION_18	IF_4
0x132d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       411	pen.c	FUNCTION_18	IF_4
0x1331	          0x4801d0	                            add rax, rdx	       411	pen.c	FUNCTION_18	IF_4
0x1334	    0x48c700050000	                      mov qword [rax], 5	       411	pen.c	FUNCTION_18	IF_4
0x133b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       413	pen.c	FUNCTION_18	IF_5
0x133f	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       413	pen.c	FUNCTION_18	IF_5
0x1346	          0x83e020	                           and eax, 0x20	       413	pen.c	FUNCTION_18	IF_5
0x1349	            0x84c0	                             test al, al	       413	pen.c	FUNCTION_18	IF_5
0x134b	            0x7421	                            je 0x40013ae	       413	pen.c	FUNCTION_18	IF_5
0x134d	          0x8b45fc	                mov eax, dword [rbp - 4]	       414	pen.c	FUNCTION_18	IF_5
0x1350	          0x8d5001	                      lea edx, [rax + 1]	       414	pen.c	FUNCTION_18	IF_5
0x1353	          0x8955fc	                mov dword [rbp - 4], edx	       414	pen.c	FUNCTION_18	IF_5
0x1356	            0x4898	                                    cdqe	       414	pen.c	FUNCTION_18	IF_5
0x1358	    0x488d14c50000	                        lea rdx, [rax*8]	       414	pen.c	FUNCTION_18	IF_5
0x1360	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       414	pen.c	FUNCTION_18	IF_5
0x1364	          0x4801d0	                            add rax, rdx	       414	pen.c	FUNCTION_18	IF_5
0x1367	    0x48c700070000	                      mov qword [rax], 7	       414	pen.c	FUNCTION_18	IF_5
0x136e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       416	pen.c	FUNCTION_18	IF_6
0x1372	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       416	pen.c	FUNCTION_18	IF_6
0x1379	          0x83e040	                           and eax, 0x40	       416	pen.c	FUNCTION_18	IF_6
0x137c	            0x84c0	                             test al, al	       416	pen.c	FUNCTION_18	IF_6
0x137e	            0x7421	                            je 0x40013e1	       416	pen.c	FUNCTION_18	IF_6
0x1380	          0x8b45fc	                mov eax, dword [rbp - 4]	       417	pen.c	FUNCTION_18	IF_6
0x1383	          0x8d5001	                      lea edx, [rax + 1]	       417	pen.c	FUNCTION_18	IF_6
0x1386	          0x8955fc	                mov dword [rbp - 4], edx	       417	pen.c	FUNCTION_18	IF_6
0x1389	            0x4898	                                    cdqe	       417	pen.c	FUNCTION_18	IF_6
0x138b	    0x488d14c50000	                        lea rdx, [rax*8]	       417	pen.c	FUNCTION_18	IF_6
0x1393	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       417	pen.c	FUNCTION_18	IF_6
0x1397	          0x4801d0	                            add rax, rdx	       417	pen.c	FUNCTION_18	IF_6
0x139a	    0x48c700090000	                      mov qword [rax], 9	       417	pen.c	FUNCTION_18	IF_6
0x13a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       419	pen.c	FUNCTION_18	IF_7
0x13a5	     0xfb780240100	          movzx eax, word [rax + 0x124] 	       419	pen.c	FUNCTION_18	IF_7
0x13ac	        0x66258007	                           and ax, 0x780	       419	pen.c	FUNCTION_18	IF_7
0x13b0	          0x6685c0	                             test ax, ax	       419	pen.c	FUNCTION_18	IF_7
0x13b3	            0x7437	                            je 0x400142c	       419	pen.c	FUNCTION_18	IF_7
0x13b5	          0x8b45fc	                mov eax, dword [rbp - 4]	       420	pen.c	FUNCTION_18	IF_7
0x13b8	          0x8d5001	                      lea edx, [rax + 1]	       420	pen.c	FUNCTION_18	IF_7
0x13bb	          0x8955fc	                mov dword [rbp - 4], edx	       420	pen.c	FUNCTION_18	IF_7
0x13be	            0x4898	                                    cdqe	       420	pen.c	FUNCTION_18	IF_7
0x13c0	    0x488d14c50000	                        lea rdx, [rax*8]	       420	pen.c	FUNCTION_18	IF_7
0x13c8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       420	pen.c	FUNCTION_18	IF_7
0x13cc	          0x4801c2	                            add rdx, rax	       420	pen.c	FUNCTION_18	IF_7
0x13cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       420	pen.c	FUNCTION_18	IF_7
0x13d3	     0xfb780240100	          movzx eax, word [rax + 0x124] 	       420	pen.c	FUNCTION_18	IF_7
0x13da	        0x66c1e807	                               shr ax, 7	       420	pen.c	FUNCTION_18	IF_7
0x13de	          0x83e00f	                            and eax, 0xf	       420	pen.c	FUNCTION_18	IF_7
0x13e1	           0xfb6c0	                           movzx eax, al	       420	pen.c	FUNCTION_18	IF_7
0x13e4	          0x83c00a	                            add eax, 0xa	       420	pen.c	FUNCTION_18	IF_7
0x13e7	            0x4898	                                    cdqe	       420	pen.c	FUNCTION_18	IF_7
0x13e9	          0x488902	                    mov qword [rdx], rax	       420	pen.c	FUNCTION_18	IF_7
0x13ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       422	pen.c	FUNCTION_18	IF_8
0x13f0	     0xfb680240100	          movzx eax, byte [rax + 0x124] 	       422	pen.c	FUNCTION_18	IF_8
0x13f7	          0x83e006	                              and eax, 6	       422	pen.c	FUNCTION_18	IF_8
0x13fa	            0x3c04	                               cmp al, 4	       422	pen.c	FUNCTION_18	IF_8
0x13fc	            0x7521	                           jne 0x400145f	       422	pen.c	FUNCTION_18	IF_8
0x13fe	          0x8b45fc	                mov eax, dword [rbp - 4]	       423	pen.c	FUNCTION_18	IF_8
0x1401	          0x8d5001	                      lea edx, [rax + 1]	       423	pen.c	FUNCTION_18	IF_8
0x1404	          0x8955fc	                mov dword [rbp - 4], edx	       423	pen.c	FUNCTION_18	IF_8
0x1407	            0x4898	                                    cdqe	       423	pen.c	FUNCTION_18	IF_8
0x1409	    0x488d14c50000	                        lea rdx, [rax*8]	       423	pen.c	FUNCTION_18	IF_8
0x1411	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       423	pen.c	FUNCTION_18	IF_8
0x1415	          0x4801d0	                            add rax, rdx	       423	pen.c	FUNCTION_18	IF_8
0x1418	    0x48c700150000	                   mov qword [rax], 0x15	       423	pen.c	FUNCTION_18	IF_8
0x141f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       425	pen.c	FUNCTION_18	IF_9
0x1423	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       425	pen.c	FUNCTION_18	IF_9
0x1429	            0x85c0	                           test eax, eax	       425	pen.c	FUNCTION_18	IF_9
0x142b	            0x7840	                            js 0x40014ad	       425	pen.c	FUNCTION_18	IF_9
0x142d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       425	pen.c	FUNCTION_18	IF_9
0x1431	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       425	pen.c	FUNCTION_18	IF_9
0x1437	          0x83f807	                              cmp eax, 7	       425	pen.c	FUNCTION_18	IF_9
0x143a	            0x7f31	                            jg 0x40014ad	       425	pen.c	FUNCTION_18	IF_9
0x143c	          0x8b45fc	                mov eax, dword [rbp - 4]	       426	pen.c	FUNCTION_18	IF_9
0x143f	          0x8d5001	                      lea edx, [rax + 1]	       426	pen.c	FUNCTION_18	IF_9
0x1442	          0x8955fc	                mov dword [rbp - 4], edx	       426	pen.c	FUNCTION_18	IF_9
0x1445	            0x4898	                                    cdqe	       426	pen.c	FUNCTION_18	IF_9
0x1447	    0x488d14c50000	                        lea rdx, [rax*8]	       426	pen.c	FUNCTION_18	IF_9
0x144f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       426	pen.c	FUNCTION_18	IF_9
0x1453	          0x4801c2	                            add rdx, rax	       426	pen.c	FUNCTION_18	IF_9
0x1456	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       426	pen.c	FUNCTION_18	IF_9
0x145a	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       426	pen.c	FUNCTION_18	IF_9
0x1460	          0x83c01e	                           add eax, 0x1e	       426	pen.c	FUNCTION_18	IF_9
0x1463	            0x4898	                                    cdqe	       426	pen.c	FUNCTION_18	IF_9
0x1465	          0x488902	                    mov qword [rdx], rax	       426	pen.c	FUNCTION_18	IF_9
0x1468	      0xe91d020000	                           jmp 0x40016ca	       426	pen.c	FUNCTION_18	IF_9
0x146d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x1471	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x1477	          0x83f807	                              cmp eax, 7	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x147a	            0x7e40	                           jle 0x40014fc	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x147c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x1480	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x1486	          0x83f80f	                            cmp eax, 0xf	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x1489	            0x7f31	                            jg 0x40014fc	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x148b	          0x8b45fc	                mov eax, dword [rbp - 4]	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x148e	          0x8d5001	                      lea edx, [rax + 1]	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x1491	          0x8955fc	                mov dword [rbp - 4], edx	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x1494	            0x4898	                                    cdqe	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x1496	    0x488d14c50000	                        lea rdx, [rax*8]	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x149e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x14a2	          0x4801c2	                            add rdx, rax	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x14a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x14a9	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x14af	          0x83c052	                           add eax, 0x52	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x14b2	            0x4898	                                    cdqe	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x14b4	          0x488902	                    mov qword [rdx], rax	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x14b7	      0xe9ce010000	                           jmp 0x40016ca	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x14bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14c0	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14c6	          0x83f80f	                            cmp eax, 0xf	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14c9	     0xf8e83000000	                           jle 0x4001592	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14d3	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14d9	      0x3dff000000	                           cmp eax, 0xff	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14de	            0x7f72	                            jg 0x4001592	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14e0	          0x8b45fc	                mov eax, dword [rbp - 4]	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14e3	          0x8d5001	                      lea edx, [rax + 1]	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14e6	          0x8955fc	                mov dword [rbp - 4], edx	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14e9	            0x4898	                                    cdqe	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14eb	    0x488d14c50000	                        lea rdx, [rax*8]	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14f3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14f7	          0x4801d0	                            add rax, rdx	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14fa	      0xb926000080	                     mov ecx, 0x80000026	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x14ff	          0x488908	                    mov qword [rax], rcx	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x1502	          0x8b45fc	                mov eax, dword [rbp - 4]	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x1505	          0x8d5001	                      lea edx, [rax + 1]	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x1508	          0x8955fc	                mov dword [rbp - 4], edx	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x150b	            0x4898	                                    cdqe	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x150d	    0x488d14c50000	                        lea rdx, [rax*8]	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x1515	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x1519	          0x4801d0	                            add rax, rdx	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x151c	      0xbe05000080	                     mov esi, 0x80000005	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x1521	          0x488930	                    mov qword [rax], rsi	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x1524	          0x8b45fc	                mov eax, dword [rbp - 4]	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x1527	          0x8d5001	                      lea edx, [rax + 1]	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x152a	          0x8955fc	                mov dword [rbp - 4], edx	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x152d	            0x4898	                                    cdqe	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x152f	    0x488d14c50000	                        lea rdx, [rax*8]	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x1537	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x153b	          0x4801c2	                            add rdx, rax	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x153e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x1542	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x1548	            0x4898	                                    cdqe	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x154a	          0x488902	                    mov qword [rdx], rax	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x154d	      0xe938010000	                           jmp 0x40016ca	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x1552	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x1556	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x155c	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x155f	     0xf8525010000	                           jne 0x40016ca	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x1565	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1569	     0xfb6901c0100	          movzx edx, byte [rax + 0x11c] 	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1570	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1574	     0xfb680280100	          movzx eax, byte [rax + 0x128] 	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x157b	            0x38c2	                              cmp dl, al	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x157d	            0x7538	                           jne 0x40015f7	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x157f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       437	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1583	     0xfb6901d0100	          movzx edx, byte [rax + 0x11d] 	       437	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x158a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       437	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x158e	     0xfb680290100	          movzx eax, byte [rax + 0x129] 	       437	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1595	            0x38c2	                              cmp dl, al	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1597	            0x751e	                           jne 0x40015f7	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1599	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       438	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x159d	     0xfb6901e0100	          movzx edx, byte [rax + 0x11e] 	       438	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       438	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15a8	     0xfb6802a0100	          movzx eax, byte [rax + 0x12a] 	       438	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15af	            0x38c2	                              cmp dl, al	       437	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15b1	     0xf84d3000000	                            je 0x40016ca	       437	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15b7	          0x8b45fc	                mov eax, dword [rbp - 4]	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15ba	          0x8d5001	                      lea edx, [rax + 1]	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15bd	          0x8955fc	                mov dword [rbp - 4], edx	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15c0	            0x4898	                                    cdqe	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15c2	    0x488d14c50000	                        lea rdx, [rax*8]	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15ca	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15ce	          0x4801d0	                            add rax, rdx	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15d1	      0xbf26000080	                     mov edi, 0x80000026	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15d6	          0x488938	                    mov qword [rax], rdi	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15d9	          0x8b45fc	                mov eax, dword [rbp - 4]	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15dc	          0x8d5001	                      lea edx, [rax + 1]	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15df	          0x8955fc	                mov dword [rbp - 4], edx	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15e2	            0x4898	                                    cdqe	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15e4	    0x488d14c50000	                        lea rdx, [rax*8]	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15ec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15f0	          0x4801d0	                            add rax, rdx	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15f3	      0xb902000080	                     mov ecx, 0x80000002	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15f8	          0x488908	                    mov qword [rax], rcx	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15fb	          0x8b45fc	                mov eax, dword [rbp - 4]	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x15fe	          0x8d5001	                      lea edx, [rax + 1]	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1601	          0x8955fc	                mov dword [rbp - 4], edx	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1604	            0x4898	                                    cdqe	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1606	    0x488d14c50000	                        lea rdx, [rax*8]	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x160e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1612	          0x4801c2	                            add rdx, rax	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1615	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1619	     0xfb6801c0100	          movzx eax, byte [rax + 0x11c] 	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1620	           0xfb6c0	                           movzx eax, al	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1623	       0xd00000080	                      or eax, 0x80000000	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1628	            0x89c0	                            mov eax, eax	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x162a	          0x488902	                    mov qword [rdx], rax	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x162d	          0x8b45fc	                mov eax, dword [rbp - 4]	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1630	          0x8d5001	                      lea edx, [rax + 1]	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1633	          0x8955fc	                mov dword [rbp - 4], edx	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1636	            0x4898	                                    cdqe	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1638	    0x488d14c50000	                        lea rdx, [rax*8]	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1640	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1644	          0x4801c2	                            add rdx, rax	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1647	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x164b	     0xfb6801d0100	          movzx eax, byte [rax + 0x11d] 	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1652	           0xfb6c0	                           movzx eax, al	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1655	       0xd00000080	                      or eax, 0x80000000	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x165a	            0x89c0	                            mov eax, eax	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x165c	          0x488902	                    mov qword [rdx], rax	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x165f	          0x8b45fc	                mov eax, dword [rbp - 4]	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1662	          0x8d5001	                      lea edx, [rax + 1]	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1665	          0x8955fc	                mov dword [rbp - 4], edx	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1668	            0x4898	                                    cdqe	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x166a	    0x488d14c50000	                        lea rdx, [rax*8]	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1672	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1676	          0x4801c2	                            add rdx, rax	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1679	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x167d	     0xfb6801e0100	          movzx eax, byte [rax + 0x11e] 	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1684	           0xfb6c0	                           movzx eax, al	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x1687	          0x488902	                    mov qword [rdx], rax	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x168a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       447	pen.c	FUNCTION_18	IF_14
0x168e	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       447	pen.c	FUNCTION_18	IF_14
0x1694	            0x85c0	                           test eax, eax	       447	pen.c	FUNCTION_18	IF_14
0x1696	            0x7840	                            js 0x4001718	       447	pen.c	FUNCTION_18	IF_14
0x1698	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       447	pen.c	FUNCTION_18	IF_14
0x169c	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       447	pen.c	FUNCTION_18	IF_14
0x16a2	          0x83f807	                              cmp eax, 7	       447	pen.c	FUNCTION_18	IF_14
0x16a5	            0x7f31	                            jg 0x4001718	       447	pen.c	FUNCTION_18	IF_14
0x16a7	          0x8b45fc	                mov eax, dword [rbp - 4]	       448	pen.c	FUNCTION_18	IF_14
0x16aa	          0x8d5001	                      lea edx, [rax + 1]	       448	pen.c	FUNCTION_18	IF_14
0x16ad	          0x8955fc	                mov dword [rbp - 4], edx	       448	pen.c	FUNCTION_18	IF_14
0x16b0	            0x4898	                                    cdqe	       448	pen.c	FUNCTION_18	IF_14
0x16b2	    0x488d14c50000	                        lea rdx, [rax*8]	       448	pen.c	FUNCTION_18	IF_14
0x16ba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       448	pen.c	FUNCTION_18	IF_14
0x16be	          0x4801c2	                            add rdx, rax	       448	pen.c	FUNCTION_18	IF_14
0x16c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       448	pen.c	FUNCTION_18	IF_14
0x16c5	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       448	pen.c	FUNCTION_18	IF_14
0x16cb	          0x83c028	                           add eax, 0x28	       448	pen.c	FUNCTION_18	IF_14
0x16ce	            0x4898	                                    cdqe	       448	pen.c	FUNCTION_18	IF_14
0x16d0	          0x488902	                    mov qword [rdx], rax	       448	pen.c	FUNCTION_18	IF_14
0x16d3	      0xe91d020000	                           jmp 0x4001935	       448	pen.c	FUNCTION_18	IF_14
0x16d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x16dc	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x16e2	          0x83f807	                              cmp eax, 7	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x16e5	            0x7e40	                           jle 0x4001767	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x16e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x16eb	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x16f1	          0x83f80f	                            cmp eax, 0xf	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x16f4	            0x7f31	                            jg 0x4001767	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x16f6	          0x8b45fc	                mov eax, dword [rbp - 4]	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x16f9	          0x8d5001	                      lea edx, [rax + 1]	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x16fc	          0x8955fc	                mov dword [rbp - 4], edx	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x16ff	            0x4898	                                    cdqe	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x1701	    0x488d14c50000	                        lea rdx, [rax*8]	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x1709	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x170d	          0x4801c2	                            add rdx, rax	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x1710	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x1714	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x171a	          0x83c05c	                           add eax, 0x5c	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x171d	            0x4898	                                    cdqe	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x171f	          0x488902	                    mov qword [rdx], rax	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x1722	      0xe9ce010000	                           jmp 0x4001935	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x1727	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x172b	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1731	          0x83f80f	                            cmp eax, 0xf	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1734	     0xf8e83000000	                           jle 0x40017fd	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x173a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x173e	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1744	      0x3dff000000	                           cmp eax, 0xff	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1749	            0x7f72	                            jg 0x40017fd	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x174b	          0x8b45fc	                mov eax, dword [rbp - 4]	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x174e	          0x8d5001	                      lea edx, [rax + 1]	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1751	          0x8955fc	                mov dword [rbp - 4], edx	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1754	            0x4898	                                    cdqe	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1756	    0x488d14c50000	                        lea rdx, [rax*8]	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x175e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1762	          0x4801d0	                            add rax, rdx	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1765	      0xbe30000080	                     mov esi, 0x80000030	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x176a	          0x488930	                    mov qword [rax], rsi	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x176d	          0x8b45fc	                mov eax, dword [rbp - 4]	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1770	          0x8d5001	                      lea edx, [rax + 1]	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1773	          0x8955fc	                mov dword [rbp - 4], edx	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1776	            0x4898	                                    cdqe	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1778	    0x488d14c50000	                        lea rdx, [rax*8]	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1780	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1784	          0x4801d0	                            add rax, rdx	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1787	      0xbf05000080	                     mov edi, 0x80000005	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x178c	          0x488938	                    mov qword [rax], rdi	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x178f	          0x8b45fc	                mov eax, dword [rbp - 4]	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1792	          0x8d5001	                      lea edx, [rax + 1]	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1795	          0x8955fc	                mov dword [rbp - 4], edx	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x1798	            0x4898	                                    cdqe	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x179a	    0x488d14c50000	                        lea rdx, [rax*8]	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x17a2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x17a6	          0x4801c2	                            add rdx, rax	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x17a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x17ad	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x17b3	            0x4898	                                    cdqe	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x17b5	          0x488902	                    mov qword [rdx], rax	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x17b8	      0xe938010000	                           jmp 0x4001935	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x17bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x17c1	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x17c7	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x17ca	     0xf8525010000	                           jne 0x4001935	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x17d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x17d4	     0xfb690200100	          movzx edx, byte [rax + 0x120] 	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x17db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x17df	     0xfb6802c0100	          movzx eax, byte [rax + 0x12c] 	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x17e6	            0x38c2	                              cmp dl, al	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x17e8	            0x7538	                           jne 0x4001862	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x17ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       459	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x17ee	     0xfb690210100	          movzx edx, byte [rax + 0x121] 	       459	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x17f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       459	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x17f9	     0xfb6802d0100	          movzx eax, byte [rax + 0x12d] 	       459	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1800	            0x38c2	                              cmp dl, al	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1802	            0x751e	                           jne 0x4001862	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1804	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       460	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1808	     0xfb690220100	          movzx edx, byte [rax + 0x122] 	       460	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x180f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       460	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1813	     0xfb6802e0100	          movzx eax, byte [rax + 0x12e] 	       460	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x181a	            0x38c2	                              cmp dl, al	       459	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x181c	     0xf84d3000000	                            je 0x4001935	       459	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1822	          0x8b45fc	                mov eax, dword [rbp - 4]	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1825	          0x8d5001	                      lea edx, [rax + 1]	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1828	          0x8955fc	                mov dword [rbp - 4], edx	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x182b	            0x4898	                                    cdqe	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x182d	    0x488d14c50000	                        lea rdx, [rax*8]	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1835	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1839	          0x4801d0	                            add rax, rdx	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x183c	      0xb930000080	                     mov ecx, 0x80000030	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1841	          0x488908	                    mov qword [rax], rcx	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1844	          0x8b45fc	                mov eax, dword [rbp - 4]	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1847	          0x8d5001	                      lea edx, [rax + 1]	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x184a	          0x8955fc	                mov dword [rbp - 4], edx	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x184d	            0x4898	                                    cdqe	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x184f	    0x488d14c50000	                        lea rdx, [rax*8]	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1857	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x185b	          0x4801d0	                            add rax, rdx	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x185e	      0xbe02000080	                     mov esi, 0x80000002	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1863	          0x488930	                    mov qword [rax], rsi	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1866	          0x8b45fc	                mov eax, dword [rbp - 4]	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1869	          0x8d5001	                      lea edx, [rax + 1]	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x186c	          0x8955fc	                mov dword [rbp - 4], edx	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x186f	            0x4898	                                    cdqe	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1871	    0x488d14c50000	                        lea rdx, [rax*8]	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1879	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x187d	          0x4801c2	                            add rdx, rax	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1880	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1884	     0xfb680200100	          movzx eax, byte [rax + 0x120] 	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x188b	           0xfb6c0	                           movzx eax, al	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x188e	       0xd00000080	                      or eax, 0x80000000	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1893	            0x89c0	                            mov eax, eax	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1895	          0x488902	                    mov qword [rdx], rax	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x1898	          0x8b45fc	                mov eax, dword [rbp - 4]	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x189b	          0x8d5001	                      lea edx, [rax + 1]	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x189e	          0x8955fc	                mov dword [rbp - 4], edx	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18a1	            0x4898	                                    cdqe	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18a3	    0x488d14c50000	                        lea rdx, [rax*8]	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18ab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18af	          0x4801c2	                            add rdx, rax	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18b6	     0xfb680210100	          movzx eax, byte [rax + 0x121] 	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18bd	           0xfb6c0	                           movzx eax, al	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18c0	       0xd00000080	                      or eax, 0x80000000	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18c5	            0x89c0	                            mov eax, eax	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18c7	          0x488902	                    mov qword [rdx], rax	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18ca	          0x8b45fc	                mov eax, dword [rbp - 4]	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18cd	          0x8d5001	                      lea edx, [rax + 1]	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18d0	          0x8955fc	                mov dword [rbp - 4], edx	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18d3	            0x4898	                                    cdqe	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18d5	    0x488d14c50000	                        lea rdx, [rax*8]	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18dd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18e1	          0x4801c2	                            add rdx, rax	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18e8	     0xfb680220100	          movzx eax, byte [rax + 0x122] 	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18ef	           0xfb6c0	                           movzx eax, al	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18f2	          0x488902	                    mov qword [rdx], rax	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x18f5	          0x8b45fc	                mov eax, dword [rbp - 4]	       469	pen.c	FUNCTION_18
0x18f8	              0x5d	                                 pop rbp	       470	pen.c	FUNCTION_18
0x18f9	              0xc3	                                     ret	       470	pen.c	FUNCTION_18
