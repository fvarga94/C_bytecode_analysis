collect_bottom_commits	FOR,1:functions,0:WHILE,0:CALL,1:IF,1:ELSE,0:DO,0:SWITCH,0	37
0x2689	              0x55	                                push rbp	      1015	revision.c	FUNCTION_30
0x268a	          0x4889e5	                            mov rbp, rsp	      1015	revision.c	FUNCTION_30
0x268d	        0x4883ec30	                           sub rsp, 0x30	      1015	revision.c	FUNCTION_30
0x2691	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1015	revision.c	FUNCTION_30
0x2695	    0x64488b042528	                mov rax, qword fs:[0x28]	      1015	revision.c	FUNCTION_30
0x269e	        0x488945f8	                mov qword [rbp - 8], rax	      1015	revision.c	FUNCTION_30
0x26a2	            0x31c0	                            xor eax, eax	      1015	revision.c	FUNCTION_30
0x26a4	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1016	revision.c	FUNCTION_30
0x26ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1017	revision.c	FUNCTION_30	FOR_1
0x26b0	        0x488945f0	             mov qword [rbp - 0x10], rax	      1017	revision.c	FUNCTION_30	FOR_1
0x26b4	            0xeb3c	                           jmp 0x4002732	      1017	revision.c	FUNCTION_30	FOR_1
0x26b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1018	revision.c	FUNCTION_30	FOR_1	IF_1
0x26ba	          0x488b00	                    mov rax, qword [rax]	      1018	revision.c	FUNCTION_30	FOR_1	IF_1
0x26bd	            0x8b00	                    mov eax, dword [rax]	      1018	revision.c	FUNCTION_30	FOR_1	IF_1
0x26bf	          0xc1e804	                              shr eax, 4	      1018	revision.c	FUNCTION_30	FOR_1	IF_1
0x26c2	      0x25ffffff07	                      and eax, 0x7ffffff	      1018	revision.c	FUNCTION_30	FOR_1	IF_1
0x26c7	      0x2500040000	                          and eax, 0x400	      1018	revision.c	FUNCTION_30	FOR_1	IF_1
0x26cc	            0x85c0	                           test eax, eax	      1018	revision.c	FUNCTION_30	FOR_1	IF_1
0x26ce	            0x7416	                            je 0x4002726	      1018	revision.c	FUNCTION_30	FOR_1	IF_1
0x26d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1019	revision.c	FUNCTION_30	FOR_1	IF_1
0x26d4	          0x488b00	                    mov rax, qword [rax]	      1019	revision.c	FUNCTION_30	FOR_1	IF_1
0x26d7	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      1019	revision.c	FUNCTION_30	FOR_1	IF_1
0x26db	          0x4889d6	                            mov rsi, rdx	      1019	revision.c	FUNCTION_30	FOR_1	IF_1
0x26de	          0x4889c7	                            mov rdi, rax	      1019	revision.c	FUNCTION_30	FOR_1	IF_1
0x26e1	      0xe800000000	                          call 0x4002726	      1019	revision.c	FUNCTION_30	FOR_1	IF_1
0x26e6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1017	revision.c	FUNCTION_30	FOR_1
0x26ea	        0x488b4008	                mov rax, qword [rax + 8]	      1017	revision.c	FUNCTION_30	FOR_1
0x26ee	        0x488945f0	             mov qword [rbp - 0x10], rax	      1017	revision.c	FUNCTION_30	FOR_1
0x26f2	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1017	revision.c	FUNCTION_30	FOR_1
0x26f7	            0x75bd	                           jne 0x40026f6	      1017	revision.c	FUNCTION_30	FOR_1
0x26f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1020	revision.c	FUNCTION_30
0x26fd	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1021	revision.c	FUNCTION_30
0x2701	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1021	revision.c	FUNCTION_30
0x270a	            0x7405	                            je 0x4002751	      1021	revision.c	FUNCTION_30
0x270c	      0xe800000000	                          call 0x4002751	      1021	revision.c	FUNCTION_30
0x2711	              0xc9	                                   leave	      1021	revision.c	FUNCTION_30
0x2712	              0xc3	                                     ret	      1021	revision.c	FUNCTION_30
handle_dotdot	FOR,0:functions,0:WHILE,0:CALL,6:IF,1:ELSE,0:DO,0:SWITCH,0	59
0x40ff	              0x55	                                push rbp	      1599	revision.c	FUNCTION_55
0x4100	          0x4889e5	                            mov rbp, rsp	      1599	revision.c	FUNCTION_55
0x4103	    0x4881ecb00000	                           sub rsp, 0xb0	      1599	revision.c	FUNCTION_55
0x410a	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      1599	revision.c	FUNCTION_55
0x4111	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      1599	revision.c	FUNCTION_55
0x4118	    0x89955cffffff	             mov dword [rbp - 0xa4], edx	      1599	revision.c	FUNCTION_55
0x411e	    0x898d58ffffff	             mov dword [rbp - 0xa8], ecx	      1599	revision.c	FUNCTION_55
0x4124	    0x64488b042528	                mov rax, qword fs:[0x28]	      1599	revision.c	FUNCTION_55
0x412d	        0x488945f8	                mov qword [rbp - 8], rax	      1599	revision.c	FUNCTION_55
0x4131	            0x31c0	                            xor eax, eax	      1599	revision.c	FUNCTION_55
0x4133	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1601	revision.c	FUNCTION_55	CALL_1
0x413a	      0xbe00000000	                              mov esi, 0	      1601	revision.c	FUNCTION_55	CALL_1
0x413f	          0x4889c7	                            mov rdi, rax	      1601	revision.c	FUNCTION_55	CALL_1
0x4142	      0xe800000000	                          call 0x4004187	      1601	revision.c	FUNCTION_55	CALL_1
0x4147	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1601	revision.c	FUNCTION_55	CALL_1
0x414e	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      1604	revision.c	FUNCTION_55	IF_1
0x4156	            0x750a	                           jne 0x40041a2	      1604	revision.c	FUNCTION_55	IF_1
0x4158	      0xb8ffffffff	                     mov eax, 0xffffffff	      1605	revision.c	FUNCTION_55	IF_1
0x415d	      0xe99f000000	                           jmp 0x4004241	      1605	revision.c	FUNCTION_55	IF_1
0x4162	        0x488d4580	                   lea rax, [rbp - 0x80]	      1607	revision.c	FUNCTION_55	CALL_2
0x4166	      0xba38000000	                           mov edx, 0x38	      1607	revision.c	FUNCTION_55	CALL_2
0x416b	      0xbe00000000	                              mov esi, 0	      1607	revision.c	FUNCTION_55	CALL_2
0x4170	          0x4889c7	                            mov rdi, rax	      1607	revision.c	FUNCTION_55	CALL_2
0x4173	      0xe800000000	                          call 0x40041b8	      1607	revision.c	FUNCTION_55	CALL_2
0x4178	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1608	revision.c	FUNCTION_55	CALL_3
0x417c	      0xba38000000	                           mov edx, 0x38	      1608	revision.c	FUNCTION_55	CALL_3
0x4181	      0xbe00000000	                              mov esi, 0	      1608	revision.c	FUNCTION_55	CALL_3
0x4186	          0x4889c7	                            mov rdi, rax	      1608	revision.c	FUNCTION_55	CALL_3
0x4189	      0xe800000000	                          call 0x40041ce	      1608	revision.c	FUNCTION_55	CALL_3
0x418e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1610	revision.c	FUNCTION_55
0x4195	          0xc60000	                       mov byte [rax], 0	      1610	revision.c	FUNCTION_55
0x4198	        0x4c8d4d80	                    lea r9, [rbp - 0x80]	      1611	revision.c	FUNCTION_55	CALL_4
0x419c	    0x448b8558ffff	             mov r8d, dword [rbp - 0xa8]	      1611	revision.c	FUNCTION_55	CALL_4
0x41a3	    0x8b8d5cffffff	             mov ecx, dword [rbp - 0xa4]	      1611	revision.c	FUNCTION_55	CALL_4
0x41a9	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      1611	revision.c	FUNCTION_55	CALL_4
0x41b0	    0x488bb578ffff	             mov rsi, qword [rbp - 0x88]	      1611	revision.c	FUNCTION_55	CALL_4
0x41b7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1611	revision.c	FUNCTION_55	CALL_4
0x41be	        0x4883ec08	                              sub rsp, 8	      1611	revision.c	FUNCTION_55	CALL_4
0x41c2	        0x488d7dc0	                   lea rdi, [rbp - 0x40]	      1611	revision.c	FUNCTION_55	CALL_4
0x41c6	              0x57	                                push rdi	      1611	revision.c	FUNCTION_55	CALL_4
0x41c7	          0x4889c7	                            mov rdi, rax	      1611	revision.c	FUNCTION_55	CALL_4
0x41ca	      0xe86ffbffff	                call sym.handle_dotdot_1	      1611	revision.c	FUNCTION_55	CALL_4
0x41cf	        0x4883c410	                           add rsp, 0x10	      1611	revision.c	FUNCTION_55	CALL_4
0x41d3	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      1611	revision.c	FUNCTION_55	CALL_4
0x41d9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1613	revision.c	FUNCTION_55
0x41e0	          0xc6002e	                    mov byte [rax], 0x2e	      1613	revision.c	FUNCTION_55
0x41e3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1615	revision.c	FUNCTION_55	CALL_5
0x41e7	          0x4889c7	                            mov rdi, rax	      1615	revision.c	FUNCTION_55	CALL_5
0x41ea	      0xe800000000	                          call 0x400422f	      1615	revision.c	FUNCTION_55	CALL_5
0x41ef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1616	revision.c	FUNCTION_55	CALL_6
0x41f3	          0x4889c7	                            mov rdi, rax	      1616	revision.c	FUNCTION_55	CALL_6
0x41f6	      0xe800000000	                          call 0x400423b	      1616	revision.c	FUNCTION_55	CALL_6
0x41fb	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      1618	revision.c	FUNCTION_55
0x4201	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1619	revision.c	FUNCTION_55
0x4205	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1619	revision.c	FUNCTION_55
0x420e	            0x7405	                            je 0x4004255	      1619	revision.c	FUNCTION_55
0x4210	      0xe800000000	                          call 0x4004255	      1619	revision.c	FUNCTION_55
0x4215	              0xc9	                                   leave	      1619	revision.c	FUNCTION_55
0x4216	              0xc3	                                     ret	      1619	revision.c	FUNCTION_55
add_grep	FOR,0:functions,0:WHILE,0:CALL,1:IF,0:ELSE,0:DO,0:SWITCH,0	18
0x4726	              0x55	                                push rbp	      1735	revision.c	FUNCTION_59
0x4727	          0x4889e5	                            mov rbp, rsp	      1735	revision.c	FUNCTION_59
0x472a	        0x4883ec20	                           sub rsp, 0x20	      1735	revision.c	FUNCTION_59
0x472e	        0x48897df8	                mov qword [rbp - 8], rdi	      1735	revision.c	FUNCTION_59
0x4732	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1735	revision.c	FUNCTION_59
0x4736	          0x8955ec	             mov dword [rbp - 0x14], edx	      1735	revision.c	FUNCTION_59
0x4739	        0x488b45f8	                mov rax, qword [rbp - 8]	      1736	revision.c	FUNCTION_59	CALL_1
0x473d	    0x488db8500100	                  lea rdi, [rax + 0x150]	      1736	revision.c	FUNCTION_59	CALL_1
0x4744	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1736	revision.c	FUNCTION_59	CALL_1
0x4747	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1736	revision.c	FUNCTION_59	CALL_1
0x474b	          0x4189d0	                            mov r8d, edx	      1736	revision.c	FUNCTION_59	CALL_1
0x474e	      0xb900000000	                              mov ecx, 0	      1736	revision.c	FUNCTION_59	CALL_1
0x4753	      0xba00000000	                              mov edx, 0	      1736	revision.c	FUNCTION_59	CALL_1
0x4758	          0x4889c6	                            mov rsi, rax	      1736	revision.c	FUNCTION_59	CALL_1
0x475b	      0xe800000000	                          call 0x40047a0	      1736	revision.c	FUNCTION_59	CALL_1
0x4760	              0x90	                                     nop	      1737	revision.c	FUNCTION_59
0x4761	              0xc9	                                   leave	      1737	revision.c	FUNCTION_59
0x4762	              0xc3	                                     ret	      1737	revision.c	FUNCTION_59
parse_revision_opt	FOR,0:functions,0:WHILE,0:CALL,3:IF,1:ELSE,0:DO,0:SWITCH,0	52
0x636a	              0x55	                                push rbp	      2128	revision.c	FUNCTION_63
0x636b	          0x4889e5	                            mov rbp, rsp	      2128	revision.c	FUNCTION_63
0x636e	        0x4883ec30	                           sub rsp, 0x30	      2128	revision.c	FUNCTION_63
0x6372	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2128	revision.c	FUNCTION_63
0x6376	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2128	revision.c	FUNCTION_63
0x637a	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2128	revision.c	FUNCTION_63
0x637e	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      2128	revision.c	FUNCTION_63
0x6382	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2129	revision.c	FUNCTION_63	CALL_1
0x6386	        0x488b7808	                mov rdi, qword [rax + 8]	      2129	revision.c	FUNCTION_63	CALL_1
0x638a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2129	revision.c	FUNCTION_63	CALL_1
0x638e	        0x488d4814	                   lea rcx, [rax + 0x14]	      2129	revision.c	FUNCTION_63	CALL_1
0x6392	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2129	revision.c	FUNCTION_63	CALL_1
0x6396	          0x488b10	                    mov rdx, qword [rax]	      2129	revision.c	FUNCTION_63	CALL_1
0x6399	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2129	revision.c	FUNCTION_63	CALL_1
0x639d	          0x8b7010	            mov esi, dword [rax + 0x10] 	      2129	revision.c	FUNCTION_63	CALL_1
0x63a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2129	revision.c	FUNCTION_63	CALL_1
0x63a4	          0x4989f8	                             mov r8, rdi	      2129	revision.c	FUNCTION_63	CALL_1
0x63a7	          0x4889c7	                            mov rdi, rax	      2129	revision.c	FUNCTION_63	CALL_1
0x63aa	      0xe811e4ffff	            call sym.handle_revision_opt	      2129	revision.c	FUNCTION_63	CALL_1
0x63af	          0x8945fc	                mov dword [rbp - 4], eax	      2129	revision.c	FUNCTION_63	CALL_1
0x63b2	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2131	revision.c	FUNCTION_63	IF_1
0x63b6	            0x7f34	                            jg 0x400642c	      2131	revision.c	FUNCTION_63	IF_1
0x63b8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2132	revision.c	FUNCTION_63	IF_1	CALL_2
0x63bc	          0x488b00	                    mov rax, qword [rax]	      2132	revision.c	FUNCTION_63	IF_1	CALL_2
0x63bf	          0x488b00	                    mov rax, qword [rax]	      2132	revision.c	FUNCTION_63	IF_1	CALL_2
0x63c2	          0x4889c6	                            mov rsi, rax	      2132	revision.c	FUNCTION_63	IF_1	CALL_2
0x63c5	      0xbf00000000	                              mov edi, 0	      2132	revision.c	FUNCTION_63	IF_1	CALL_2
0x63ca	      0xb800000000	                              mov eax, 0	      2132	revision.c	FUNCTION_63	IF_1	CALL_2
0x63cf	      0xe800000000	                          call 0x4006414	      2132	revision.c	FUNCTION_63	IF_1	CALL_2
0x63d4	      0xe8279cffff	                    call sym.const_error	      2132	revision.c	FUNCTION_63	IF_1	CALL_2
0x63d9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2133	revision.c	FUNCTION_63	IF_1	CALL_3
0x63dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2133	revision.c	FUNCTION_63	IF_1	CALL_3
0x63e1	          0x4889d6	                            mov rsi, rdx	      2133	revision.c	FUNCTION_63	IF_1	CALL_3
0x63e4	          0x4889c7	                            mov rdi, rax	      2133	revision.c	FUNCTION_63	IF_1	CALL_3
0x63e7	      0xe800000000	                          call 0x400642c	      2133	revision.c	FUNCTION_63	IF_1	CALL_3
0x63ec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2135	revision.c	FUNCTION_63
0x63f0	          0x488b00	                    mov rax, qword [rax]	      2135	revision.c	FUNCTION_63
0x63f3	          0x8b55fc	                mov edx, dword [rbp - 4]	      2135	revision.c	FUNCTION_63
0x63f6	          0x4863d2	                         movsxd rdx, edx	      2135	revision.c	FUNCTION_63
0x63f9	        0x48c1e203	                              shl rdx, 3	      2135	revision.c	FUNCTION_63
0x63fd	          0x4801c2	                            add rdx, rax	      2135	revision.c	FUNCTION_63
0x6400	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2135	revision.c	FUNCTION_63
0x6404	          0x488910	                    mov qword [rax], rdx	      2135	revision.c	FUNCTION_63
0x6407	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2136	revision.c	FUNCTION_63
0x640b	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2136	revision.c	FUNCTION_63
0x640e	          0x2b45fc	                sub eax, dword [rbp - 4]	      2136	revision.c	FUNCTION_63
0x6411	            0x89c2	                            mov edx, eax	      2136	revision.c	FUNCTION_63
0x6413	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2136	revision.c	FUNCTION_63
0x6417	          0x895010	             mov dword [rax + 0x10], edx	      2136	revision.c	FUNCTION_63
0x641a	              0x90	                                     nop	      2137	revision.c	FUNCTION_63
0x641b	              0xc9	                                   leave	      2137	revision.c	FUNCTION_63
0x641c	              0xc3	                                     ret	      2137	revision.c	FUNCTION_63
set_children	FOR,2:functions,0:WHILE,0:CALL,1:IF,0:ELSE,0:DO,0:SWITCH,0	35
0x7fcb	              0x55	                                push rbp	      2842	revision.c	FUNCTION_79
0x7fcc	          0x4889e5	                            mov rbp, rsp	      2842	revision.c	FUNCTION_79
0x7fcf	        0x4883ec30	                           sub rsp, 0x30	      2842	revision.c	FUNCTION_79
0x7fd3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2842	revision.c	FUNCTION_79
0x7fd7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2844	revision.c	FUNCTION_79	FOR_1
0x7fdb	          0x488b00	                    mov rax, qword [rax]	      2844	revision.c	FUNCTION_79	FOR_1
0x7fde	        0x488945e8	             mov qword [rbp - 0x18], rax	      2844	revision.c	FUNCTION_79	FOR_1
0x7fe2	            0xeb52	                           jmp 0x4008076	      2844	revision.c	FUNCTION_79	FOR_1
0x7fe4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2845	revision.c	FUNCTION_79	FOR_1
0x7fe8	          0x488b00	                    mov rax, qword [rax]	      2845	revision.c	FUNCTION_79	FOR_1
0x7feb	        0x488945f8	                mov qword [rbp - 8], rax	      2845	revision.c	FUNCTION_79	FOR_1
0x7fef	        0x488b45f8	                mov rax, qword [rbp - 8]	      2848	revision.c	FUNCTION_79	FOR_1	FOR_2
0x7ff3	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2848	revision.c	FUNCTION_79	FOR_1	FOR_2
0x7ff7	        0x488945f0	             mov qword [rbp - 0x10], rax	      2848	revision.c	FUNCTION_79	FOR_1	FOR_2
0x7ffb	            0xeb26	                           jmp 0x4008063	      2848	revision.c	FUNCTION_79	FOR_1	FOR_2
0x7ffd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2849	revision.c	FUNCTION_79	FOR_1	CALL_1
0x8001	          0x488b08	                    mov rcx, qword [rax]	      2849	revision.c	FUNCTION_79	FOR_1	CALL_1
0x8004	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2849	revision.c	FUNCTION_79	FOR_1	CALL_1
0x8008	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2849	revision.c	FUNCTION_79	FOR_1	CALL_1
0x800c	          0x4889ce	                            mov rsi, rcx	      2849	revision.c	FUNCTION_79	FOR_1	CALL_1
0x800f	          0x4889c7	                            mov rdi, rax	      2849	revision.c	FUNCTION_79	FOR_1	CALL_1
0x8012	      0xe8d3f5ffff	                      call sym.add_child	      2849	revision.c	FUNCTION_79	FOR_1	CALL_1
0x8017	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2848	revision.c	FUNCTION_79	FOR_1	FOR_2
0x801b	        0x488b4008	                mov rax, qword [rax + 8]	      2848	revision.c	FUNCTION_79	FOR_1	FOR_2
0x801f	        0x488945f0	             mov qword [rbp - 0x10], rax	      2848	revision.c	FUNCTION_79	FOR_1	FOR_2
0x8023	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2848	revision.c	FUNCTION_79	FOR_1	FOR_2
0x8028	            0x75d3	                           jne 0x400803d	      2848	revision.c	FUNCTION_79	FOR_1	FOR_2
0x802a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2844	revision.c	FUNCTION_79	FOR_1
0x802e	        0x488b4008	                mov rax, qword [rax + 8]	      2844	revision.c	FUNCTION_79	FOR_1
0x8032	        0x488945e8	             mov qword [rbp - 0x18], rax	      2844	revision.c	FUNCTION_79	FOR_1
0x8036	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2844	revision.c	FUNCTION_79	FOR_1
0x803b	            0x75a7	                           jne 0x4008024	      2844	revision.c	FUNCTION_79	FOR_1
0x803d	              0x90	                                     nop	      2851	revision.c	FUNCTION_79
0x803e	              0xc9	                                   leave	      2851	revision.c	FUNCTION_79
0x803f	              0xc3	                                     ret	      2851	revision.c	FUNCTION_79
handle_dotdot_1	FOR,0:functions,0:WHILE,0:CALL,17:IF,8:ELSE,1:DO,0:SWITCH,0	217
0x3d3e	              0x55	                                push rbp	      1527	revision.c	FUNCTION_54
0x3d3f	          0x4889e5	                            mov rbp, rsp	      1527	revision.c	FUNCTION_54
0x3d42	    0x4881ecc00000	                           sub rsp, 0xc0	      1527	revision.c	FUNCTION_54
0x3d49	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      1527	revision.c	FUNCTION_54
0x3d50	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      1527	revision.c	FUNCTION_54
0x3d57	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      1527	revision.c	FUNCTION_54
0x3d5e	    0x898d54ffffff	             mov dword [rbp - 0xac], ecx	      1527	revision.c	FUNCTION_54
0x3d64	    0x44898550ffff	             mov dword [rbp - 0xb0], r8d	      1527	revision.c	FUNCTION_54
0x3d6b	    0x4c898d48ffff	              mov qword [rbp - 0xb8], r9	      1527	revision.c	FUNCTION_54
0x3d72	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1527	revision.c	FUNCTION_54
0x3d76	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      1527	revision.c	FUNCTION_54
0x3d7d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1527	revision.c	FUNCTION_54
0x3d86	        0x488945f8	                mov qword [rbp - 8], rax	      1527	revision.c	FUNCTION_54
0x3d8a	            0x31c0	                            xor eax, eax	      1527	revision.c	FUNCTION_54
0x3d8c	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	      1532	revision.c	FUNCTION_54
0x3d96	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      1533	revision.c	FUNCTION_54
0x3d9c	      0x3502040000	                          xor eax, 0x402	      1533	revision.c	FUNCTION_54
0x3da1	          0x894580	             mov dword [rbp - 0x80], eax	      1533	revision.c	FUNCTION_54
0x3da4	    0xc74584840000	           mov dword [rbp - 0x7c], 0x84 	      1534	revision.c	FUNCTION_54
0x3dab	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1536	revision.c	FUNCTION_54
0x3db2	        0x48894588	             mov qword [rbp - 0x78], rax	      1536	revision.c	FUNCTION_54
0x3db6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1537	revision.c	FUNCTION_54	IF_1
0x3dba	           0xfb600	                   movzx eax, byte [rax]	      1537	revision.c	FUNCTION_54	IF_1
0x3dbd	            0x84c0	                             test al, al	      1537	revision.c	FUNCTION_54	IF_1
0x3dbf	            0x7508	                           jne 0x4003e09	      1537	revision.c	FUNCTION_54	IF_1
0x3dc1	    0x48c745880000	               mov qword [rbp - 0x78], 0	      1538	revision.c	FUNCTION_54	IF_1
0x3dc9	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1540	revision.c	FUNCTION_54
0x3dd0	        0x4883c002	                              add rax, 2	      1540	revision.c	FUNCTION_54
0x3dd4	        0x48894590	             mov qword [rbp - 0x70], rax	      1540	revision.c	FUNCTION_54
0x3dd8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1541	revision.c	FUNCTION_54	IF_2
0x3ddc	           0xfb600	                   movzx eax, byte [rax]	      1541	revision.c	FUNCTION_54	IF_2
0x3ddf	            0x3c2e	                            cmp al, 0x2e	      1541	revision.c	FUNCTION_54	IF_2
0x3de1	            0x750f	                           jne 0x4003e32	      1541	revision.c	FUNCTION_54	IF_2
0x3de3	    0xc7857cffffff	               mov dword [rbp - 0x84], 1	      1542	revision.c	FUNCTION_54	IF_2
0x3ded	      0x4883459001	               add qword [rbp - 0x70], 1	      1543	revision.c	FUNCTION_54	IF_2
0x3df2	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1545	revision.c	FUNCTION_54	IF_3
0x3df6	           0xfb600	                   movzx eax, byte [rax]	      1545	revision.c	FUNCTION_54	IF_3
0x3df9	            0x84c0	                             test al, al	      1545	revision.c	FUNCTION_54	IF_3
0x3dfb	            0x7508	                           jne 0x4003e45	      1545	revision.c	FUNCTION_54	IF_3
0x3dfd	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1546	revision.c	FUNCTION_54	IF_3
0x3e05	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	      1548	revision.c	FUNCTION_54	IF_4	CALL_1
0x3e0c	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      1548	revision.c	FUNCTION_54	IF_4	CALL_1
0x3e10	          0x8b7584	             mov esi, dword [rbp - 0x7c]	      1548	revision.c	FUNCTION_54	IF_4	CALL_1
0x3e13	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1548	revision.c	FUNCTION_54	IF_4	CALL_1
0x3e17	          0x4889c7	                            mov rdi, rax	      1548	revision.c	FUNCTION_54	IF_4	CALL_1
0x3e1a	      0xe800000000	                          call 0x4003e5f	      1548	revision.c	FUNCTION_54	IF_4	CALL_1
0x3e1f	            0x85c0	                           test eax, eax	      1548	revision.c	FUNCTION_54	IF_4	CALL_1
0x3e21	            0x751e	                           jne 0x4003e81	      1548	revision.c	FUNCTION_54	IF_4	CALL_1
0x3e23	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	      1549	revision.c	FUNCTION_54	IF_4	CALL_2
0x3e2a	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1549	revision.c	FUNCTION_54	IF_4	CALL_2
0x3e2e	          0x8b7584	             mov esi, dword [rbp - 0x7c]	      1549	revision.c	FUNCTION_54	IF_4	CALL_2
0x3e31	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1549	revision.c	FUNCTION_54	IF_4	CALL_2
0x3e35	          0x4889c7	                            mov rdi, rax	      1549	revision.c	FUNCTION_54	IF_4	CALL_2
0x3e38	      0xe800000000	                          call 0x4003e7d	      1549	revision.c	FUNCTION_54	IF_4	CALL_2
0x3e3d	            0x85c0	                           test eax, eax	      1548	revision.c	FUNCTION_54	IF_4	CALL_1
0x3e3f	            0x740a	                            je 0x4003e8b	      1548	revision.c	FUNCTION_54	IF_4	CALL_1
0x3e41	      0xb8ffffffff	                     mov eax, 0xffffffff	      1550	revision.c	FUNCTION_54	IF_4
0x3e46	      0xe99e020000	                           jmp 0x4004129	      1550	revision.c	FUNCTION_54	IF_4
0x3e4b	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	      1552	revision.c	FUNCTION_54	IF_5
0x3e52	            0x7531	                           jne 0x4003ec5	      1552	revision.c	FUNCTION_54	IF_5
0x3e54	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1553	revision.c	FUNCTION_54	IF_5
0x3e5b	          0xc6002e	                    mov byte [rax], 0x2e	      1553	revision.c	FUNCTION_54	IF_5
0x3e5e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1554	revision.c	FUNCTION_54	IF_5	CALL_3
0x3e65	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1554	revision.c	FUNCTION_54	IF_5	CALL_3
0x3e69	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      1554	revision.c	FUNCTION_54	IF_5	CALL_3
0x3e70	          0x4889d6	                            mov rsi, rdx	      1554	revision.c	FUNCTION_54	IF_5	CALL_3
0x3e73	          0x4889c7	                            mov rdi, rax	      1554	revision.c	FUNCTION_54	IF_5	CALL_3
0x3e76	      0xe800000000	                          call 0x4003ebb	      1554	revision.c	FUNCTION_54	IF_5	CALL_3
0x3e7b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1555	revision.c	FUNCTION_54	IF_5
0x3e82	          0xc60000	                       mov byte [rax], 0	      1555	revision.c	FUNCTION_54	IF_5
0x3e85	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1558	revision.c	FUNCTION_54	CALL_4
0x3e89	          0x4889c7	                            mov rdi, rax	      1558	revision.c	FUNCTION_54	CALL_4
0x3e8c	      0xe800000000	                          call 0x4003ed1	      1558	revision.c	FUNCTION_54	CALL_4
0x3e91	        0x48894598	             mov qword [rbp - 0x68], rax	      1558	revision.c	FUNCTION_54	CALL_4
0x3e95	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1559	revision.c	FUNCTION_54	CALL_5
0x3e99	          0x4889c7	                            mov rdi, rax	      1559	revision.c	FUNCTION_54	CALL_5
0x3e9c	      0xe800000000	                          call 0x4003ee1	      1559	revision.c	FUNCTION_54	CALL_5
0x3ea1	        0x488945a0	             mov qword [rbp - 0x60], rax	      1559	revision.c	FUNCTION_54	CALL_5
0x3ea5	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      1560	revision.c	FUNCTION_54	IF_6
0x3eaa	            0x7407	                            je 0x4003ef3	      1560	revision.c	FUNCTION_54	IF_6
0x3eac	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1560	revision.c	FUNCTION_54	IF_6
0x3eb1	            0x7528	                           jne 0x4003f1b	      1560	revision.c	FUNCTION_54	IF_6
0x3eb3	    0x8b8d7cffffff	             mov ecx, dword [rbp - 0x84]	      1561	revision.c	FUNCTION_54	CALL_6
0x3eb9	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1561	revision.c	FUNCTION_54	CALL_6
0x3ec0	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	      1561	revision.c	FUNCTION_54	CALL_6
0x3ec7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1561	revision.c	FUNCTION_54	CALL_6
0x3ece	          0x4889c7	                            mov rdi, rax	      1561	revision.c	FUNCTION_54	CALL_6
0x3ed1	      0xe80cfeffff	                 call sym.dotdot_missing	      1561	revision.c	FUNCTION_54	CALL_6
0x3ed6	      0xe90e020000	                           jmp 0x4004129	      1561	revision.c	FUNCTION_54	CALL_6
0x3edb	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      1563	revision.c	FUNCTION_54	IF_7
0x3ee2	            0x751a	                           jne 0x4003f3e	      1563	revision.c	FUNCTION_54	IF_7
0x3ee4	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      1565	revision.c	FUNCTION_54	IF_7
0x3eea	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      1565	revision.c	FUNCTION_54	IF_7
0x3ef0	          0x8b4580	             mov eax, dword [rbp - 0x80]	      1566	revision.c	FUNCTION_54	IF_7
0x3ef3	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      1566	revision.c	FUNCTION_54	IF_7
0x3ef9	      0xe9d2000000	                           jmp 0x4004010	      1566	revision.c	FUNCTION_54	IF_7
0x3efe	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1572	revision.c	FUNCTION_54	ELSE_1	CALL_7
0x3f02	        0x4883c004	                              add rax, 4	      1572	revision.c	FUNCTION_54	ELSE_1	CALL_7
0x3f06	          0x4889c7	                            mov rdi, rax	      1572	revision.c	FUNCTION_54	ELSE_1	CALL_7
0x3f09	      0xe800000000	                          call 0x4003f4e	      1572	revision.c	FUNCTION_54	ELSE_1	CALL_7
0x3f0e	        0x488945a8	             mov qword [rbp - 0x58], rax	      1572	revision.c	FUNCTION_54	ELSE_1	CALL_7
0x3f12	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1573	revision.c	FUNCTION_54	ELSE_1	CALL_8
0x3f16	        0x4883c004	                              add rax, 4	      1573	revision.c	FUNCTION_54	ELSE_1	CALL_8
0x3f1a	          0x4889c7	                            mov rdi, rax	      1573	revision.c	FUNCTION_54	ELSE_1	CALL_8
0x3f1d	      0xe800000000	                          call 0x4003f62	      1573	revision.c	FUNCTION_54	ELSE_1	CALL_8
0x3f22	        0x488945b0	             mov qword [rbp - 0x50], rax	      1573	revision.c	FUNCTION_54	ELSE_1	CALL_8
0x3f26	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1574	revision.c	FUNCTION_54	ELSE_1	IF_8
0x3f2b	            0x7407	                            je 0x4003f74	      1574	revision.c	FUNCTION_54	ELSE_1	IF_8
0x3f2d	      0x48837db000	               cmp qword [rbp - 0x50], 0	      1574	revision.c	FUNCTION_54	ELSE_1	IF_8
0x3f32	            0x7528	                           jne 0x4003f9c	      1574	revision.c	FUNCTION_54	ELSE_1	IF_8
0x3f34	    0x8b8d7cffffff	             mov ecx, dword [rbp - 0x84]	      1575	revision.c	FUNCTION_54	ELSE_1	CALL_9
0x3f3a	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1575	revision.c	FUNCTION_54	ELSE_1	CALL_9
0x3f41	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	      1575	revision.c	FUNCTION_54	ELSE_1	CALL_9
0x3f48	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1575	revision.c	FUNCTION_54	ELSE_1	CALL_9
0x3f4f	          0x4889c7	                            mov rdi, rax	      1575	revision.c	FUNCTION_54	ELSE_1	CALL_9
0x3f52	      0xe88bfdffff	                 call sym.dotdot_missing	      1575	revision.c	FUNCTION_54	ELSE_1	CALL_9
0x3f57	      0xe98d010000	                           jmp 0x4004129	      1575	revision.c	FUNCTION_54	ELSE_1	CALL_9
0x3f5c	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1577	revision.c	FUNCTION_54	ELSE_1	CALL_10
0x3f60	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1577	revision.c	FUNCTION_54	ELSE_1	CALL_10
0x3f64	          0x4889d6	                            mov rsi, rdx	      1577	revision.c	FUNCTION_54	ELSE_1	CALL_10
0x3f67	          0x4889c7	                            mov rdi, rax	      1577	revision.c	FUNCTION_54	ELSE_1	CALL_10
0x3f6a	      0xe800000000	                          call 0x4003faf	      1577	revision.c	FUNCTION_54	ELSE_1	CALL_10
0x3f6f	        0x488945b8	             mov qword [rbp - 0x48], rax	      1577	revision.c	FUNCTION_54	ELSE_1	CALL_10
0x3f73	          0x8b5580	             mov edx, dword [rbp - 0x80]	      1578	revision.c	FUNCTION_54	ELSE_1	CALL_11
0x3f76	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	      1578	revision.c	FUNCTION_54	ELSE_1	CALL_11
0x3f7a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1578	revision.c	FUNCTION_54	ELSE_1	CALL_11
0x3f81	            0x89d1	                            mov ecx, edx	      1578	revision.c	FUNCTION_54	ELSE_1	CALL_11
0x3f83	      0xba04000000	                              mov edx, 4	      1578	revision.c	FUNCTION_54	ELSE_1	CALL_11
0x3f88	          0x4889c7	                            mov rdi, rax	      1578	revision.c	FUNCTION_54	ELSE_1	CALL_11
0x3f8b	      0xe8f3ecffff	           call sym.add_rev_cmdline_list	      1578	revision.c	FUNCTION_54	ELSE_1	CALL_11
0x3f90	          0x8b5580	             mov edx, dword [rbp - 0x80]	      1580	revision.c	FUNCTION_54	ELSE_1	CALL_12
0x3f93	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      1580	revision.c	FUNCTION_54	ELSE_1	CALL_12
0x3f97	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1580	revision.c	FUNCTION_54	ELSE_1	CALL_12
0x3f9e	          0x4889ce	                            mov rsi, rcx	      1580	revision.c	FUNCTION_54	ELSE_1	CALL_12
0x3fa1	          0x4889c7	                            mov rdi, rax	      1580	revision.c	FUNCTION_54	ELSE_1	CALL_12
0x3fa4	      0xe8caf9ffff	        call sym.add_pending_commit_list	      1580	revision.c	FUNCTION_54	ELSE_1	CALL_12
0x3fa9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1581	revision.c	FUNCTION_54	ELSE_1	CALL_13
0x3fad	          0x4889c7	                            mov rdi, rax	      1581	revision.c	FUNCTION_54	ELSE_1	CALL_13
0x3fb0	      0xe800000000	                          call 0x4003ff5	      1581	revision.c	FUNCTION_54	ELSE_1	CALL_13
0x3fb5	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      1583	revision.c	FUNCTION_54	ELSE_1
0x3fbb	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      1583	revision.c	FUNCTION_54	ELSE_1
0x3fc1	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      1584	revision.c	FUNCTION_54	ELSE_1
0x3fc7	          0x80cc01	                                or ah, 1	      1584	revision.c	FUNCTION_54	ELSE_1
0x3fca	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      1584	revision.c	FUNCTION_54	ELSE_1
0x3fd0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1587	revision.c	FUNCTION_54
0x3fd4	            0x8b00	                    mov eax, dword [rax]	      1587	revision.c	FUNCTION_54
0x3fd6	          0xc1e804	                              shr eax, 4	      1587	revision.c	FUNCTION_54
0x3fd9	      0x25ffffff07	                      and eax, 0x7ffffff	      1587	revision.c	FUNCTION_54
0x3fde	     0xb8574ffffff	              or eax, dword [rbp - 0x8c]	      1587	revision.c	FUNCTION_54
0x3fe4	      0x25ffffff07	                      and eax, 0x7ffffff	      1587	revision.c	FUNCTION_54
0x3fe9	            0x89c2	                            mov edx, eax	      1587	revision.c	FUNCTION_54
0x3feb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1587	revision.c	FUNCTION_54
0x3fef	    0x81e2ffffff07	                      and edx, 0x7ffffff	      1587	revision.c	FUNCTION_54
0x3ff5	            0x89d1	                            mov ecx, edx	      1587	revision.c	FUNCTION_54
0x3ff7	          0xc1e104	                              shl ecx, 4	      1587	revision.c	FUNCTION_54
0x3ffa	            0x8b10	                    mov edx, dword [rax]	      1587	revision.c	FUNCTION_54
0x3ffc	    0x81e20f000080	                     and edx, 0x8000000f	      1587	revision.c	FUNCTION_54
0x4002	             0x9ca	                             or edx, ecx	      1587	revision.c	FUNCTION_54
0x4004	            0x8910	                    mov dword [rax], edx	      1587	revision.c	FUNCTION_54
0x4006	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1588	revision.c	FUNCTION_54
0x400a	            0x8b00	                    mov eax, dword [rax]	      1588	revision.c	FUNCTION_54
0x400c	          0xc1e804	                              shr eax, 4	      1588	revision.c	FUNCTION_54
0x400f	      0x25ffffff07	                      and eax, 0x7ffffff	      1588	revision.c	FUNCTION_54
0x4014	     0xb8578ffffff	              or eax, dword [rbp - 0x88]	      1588	revision.c	FUNCTION_54
0x401a	      0x25ffffff07	                      and eax, 0x7ffffff	      1588	revision.c	FUNCTION_54
0x401f	            0x89c2	                            mov edx, eax	      1588	revision.c	FUNCTION_54
0x4021	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1588	revision.c	FUNCTION_54
0x4025	    0x81e2ffffff07	                      and edx, 0x7ffffff	      1588	revision.c	FUNCTION_54
0x402b	            0x89d1	                            mov ecx, edx	      1588	revision.c	FUNCTION_54
0x402d	          0xc1e104	                              shl ecx, 4	      1588	revision.c	FUNCTION_54
0x4030	            0x8b10	                    mov edx, dword [rax]	      1588	revision.c	FUNCTION_54
0x4032	    0x81e20f000080	                     and edx, 0x8000000f	      1588	revision.c	FUNCTION_54
0x4038	             0x9ca	                             or edx, ecx	      1588	revision.c	FUNCTION_54
0x403a	            0x8910	                    mov dword [rax], edx	      1588	revision.c	FUNCTION_54
0x403c	    0x8b8d74ffffff	             mov ecx, dword [rbp - 0x8c]	      1589	revision.c	FUNCTION_54	CALL_14
0x4042	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1589	revision.c	FUNCTION_54	CALL_14
0x4046	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      1589	revision.c	FUNCTION_54	CALL_14
0x404a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1589	revision.c	FUNCTION_54	CALL_14
0x4051	          0x4189c8	                            mov r8d, ecx	      1589	revision.c	FUNCTION_54	CALL_14
0x4054	      0xb902000000	                              mov ecx, 2	      1589	revision.c	FUNCTION_54	CALL_14
0x4059	          0x4889c7	                            mov rdi, rax	      1589	revision.c	FUNCTION_54	CALL_14
0x405c	      0xe8b7eaffff	                call sym.add_rev_cmdline	      1589	revision.c	FUNCTION_54	CALL_14
0x4061	    0x8b8d78ffffff	             mov ecx, dword [rbp - 0x88]	      1590	revision.c	FUNCTION_54	CALL_15
0x4067	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1590	revision.c	FUNCTION_54	CALL_15
0x406b	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      1590	revision.c	FUNCTION_54	CALL_15
0x406f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1590	revision.c	FUNCTION_54	CALL_15
0x4076	          0x4189c8	                            mov r8d, ecx	      1590	revision.c	FUNCTION_54	CALL_15
0x4079	      0xb903000000	                              mov ecx, 3	      1590	revision.c	FUNCTION_54	CALL_15
0x407e	          0x4889c7	                            mov rdi, rax	      1590	revision.c	FUNCTION_54	CALL_15
0x4081	      0xe892eaffff	                call sym.add_rev_cmdline	      1590	revision.c	FUNCTION_54	CALL_15
0x4086	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1591	revision.c	FUNCTION_54	CALL_16
0x408d	        0x488b7830	            mov rdi, qword [rax + 0x30] 	      1591	revision.c	FUNCTION_54	CALL_16
0x4091	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1591	revision.c	FUNCTION_54	CALL_16
0x4098	          0x8b4814	            mov ecx, dword [rax + 0x14] 	      1591	revision.c	FUNCTION_54	CALL_16
0x409b	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1591	revision.c	FUNCTION_54	CALL_16
0x409f	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      1591	revision.c	FUNCTION_54	CALL_16
0x40a3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1591	revision.c	FUNCTION_54	CALL_16
0x40aa	          0x4989f8	                             mov r8, rdi	      1591	revision.c	FUNCTION_54	CALL_16
0x40ad	          0x4889c7	                            mov rdi, rax	      1591	revision.c	FUNCTION_54	CALL_16
0x40b0	      0xe8cec8ffff	   call sym.add_pending_object_with_path	      1591	revision.c	FUNCTION_54	CALL_16
0x40b5	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1592	revision.c	FUNCTION_54	CALL_17
0x40bc	        0x488b7830	            mov rdi, qword [rax + 0x30] 	      1592	revision.c	FUNCTION_54	CALL_17
0x40c0	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1592	revision.c	FUNCTION_54	CALL_17
0x40c7	          0x8b4814	            mov ecx, dword [rax + 0x14] 	      1592	revision.c	FUNCTION_54	CALL_17
0x40ca	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1592	revision.c	FUNCTION_54	CALL_17
0x40ce	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      1592	revision.c	FUNCTION_54	CALL_17
0x40d2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1592	revision.c	FUNCTION_54	CALL_17
0x40d9	          0x4989f8	                             mov r8, rdi	      1592	revision.c	FUNCTION_54	CALL_17
0x40dc	          0x4889c7	                            mov rdi, rax	      1592	revision.c	FUNCTION_54	CALL_17
0x40df	      0xe89fc8ffff	   call sym.add_pending_object_with_path	      1592	revision.c	FUNCTION_54	CALL_17
0x40e4	      0xb800000000	                              mov eax, 0	      1593	revision.c	FUNCTION_54
0x40e9	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1594	revision.c	FUNCTION_54
0x40ed	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1594	revision.c	FUNCTION_54
0x40f6	            0x7405	                            je 0x400413d	      1594	revision.c	FUNCTION_54
0x40f8	      0xe800000000	                          call 0x400413d	      1594	revision.c	FUNCTION_54
0x40fd	              0xc9	                                   leave	      1594	revision.c	FUNCTION_54
0x40fe	              0xc3	                                     ret	      1594	revision.c	FUNCTION_54
try_to_simplify_commit	FOR,1:functions,0:WHILE,0:CALL,18:IF,17:ELSE,1:DO,0:SWITCH,1	274
0x1812	              0x55	                                push rbp	       607	revision.c	FUNCTION_24
0x1813	          0x4889e5	                            mov rbp, rsp	       607	revision.c	FUNCTION_24
0x1816	              0x53	                                push rbx	       607	revision.c	FUNCTION_24
0x1817	        0x4883ec48	                           sub rsp, 0x48	       607	revision.c	FUNCTION_24
0x181b	        0x48897db8	             mov qword [rbp - 0x48], rdi	       607	revision.c	FUNCTION_24
0x181f	        0x488975b0	             mov qword [rbp - 0x50], rsi	       607	revision.c	FUNCTION_24
0x1823	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       609	revision.c	FUNCTION_24
0x182b	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       610	revision.c	FUNCTION_24
0x1832	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       610	revision.c	FUNCTION_24
0x1839	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       616	revision.c	FUNCTION_24	IF_1
0x183d	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       616	revision.c	FUNCTION_24	IF_1
0x1841	          0x83e008	                              and eax, 8	       616	revision.c	FUNCTION_24	IF_1
0x1844	            0x84c0	                             test al, al	       616	revision.c	FUNCTION_24	IF_1
0x1846	     0xf8488030000	                            je 0x4001c14	       616	revision.c	FUNCTION_24	IF_1
0x184c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       619	revision.c	FUNCTION_24	IF_2	CALL_1
0x1850	          0x4889c7	                            mov rdi, rax	       619	revision.c	FUNCTION_24	IF_2	CALL_1
0x1853	      0xe800000000	                          call 0x4001898	       619	revision.c	FUNCTION_24	IF_2	CALL_1
0x1858	          0x4885c0	                           test rax, rax	       619	revision.c	FUNCTION_24	IF_2	CALL_1
0x185b	     0xf8476030000	                            je 0x4001c17	       619	revision.c	FUNCTION_24	IF_2	CALL_1
0x1861	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       622	revision.c	FUNCTION_24	IF_3
0x1865	        0x488b4030	            mov rax, qword [rax + 0x30] 	       622	revision.c	FUNCTION_24	IF_3
0x1869	          0x4885c0	                           test rax, rax	       622	revision.c	FUNCTION_24	IF_3
0x186c	            0x754e	                           jne 0x40018fc	       622	revision.c	FUNCTION_24	IF_3
0x186e	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       623	revision.c	FUNCTION_24	IF_3	IF_4	CALL_2
0x1872	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       623	revision.c	FUNCTION_24	IF_3	IF_4	CALL_2
0x1876	          0x4889d6	                            mov rsi, rdx	       623	revision.c	FUNCTION_24	IF_3	IF_4	CALL_2
0x1879	          0x4889c7	                            mov rdi, rax	       623	revision.c	FUNCTION_24	IF_3	IF_4	CALL_2
0x187c	      0xe856faffff	         call sym.rev_same_tree_as_empty	       623	revision.c	FUNCTION_24	IF_3	IF_4	CALL_2
0x1881	            0x85c0	                           test eax, eax	       623	revision.c	FUNCTION_24	IF_3	IF_4	CALL_2
0x1883	     0xf8451030000	                            je 0x4001c1a	       623	revision.c	FUNCTION_24	IF_3	IF_4	CALL_2
0x1889	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       624	revision.c	FUNCTION_24	IF_3	IF_4
0x188d	            0x8b00	                    mov eax, dword [rax]	       624	revision.c	FUNCTION_24	IF_3	IF_4
0x188f	          0xc1e804	                              shr eax, 4	       624	revision.c	FUNCTION_24	IF_3	IF_4
0x1892	      0x25ffffff07	                      and eax, 0x7ffffff	       624	revision.c	FUNCTION_24	IF_3	IF_4
0x1897	          0x83c804	                               or eax, 4	       624	revision.c	FUNCTION_24	IF_3	IF_4
0x189a	            0x89c2	                            mov edx, eax	       624	revision.c	FUNCTION_24	IF_3	IF_4
0x189c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       624	revision.c	FUNCTION_24	IF_3	IF_4
0x18a0	    0x81e2ffffff07	                      and edx, 0x7ffffff	       624	revision.c	FUNCTION_24	IF_3	IF_4
0x18a6	            0x89d1	                            mov ecx, edx	       624	revision.c	FUNCTION_24	IF_3	IF_4
0x18a8	          0xc1e104	                              shl ecx, 4	       624	revision.c	FUNCTION_24	IF_3	IF_4
0x18ab	            0x8b10	                    mov edx, dword [rax]	       624	revision.c	FUNCTION_24	IF_3	IF_4
0x18ad	    0x81e20f000080	                     and edx, 0x8000000f	       624	revision.c	FUNCTION_24	IF_3	IF_4
0x18b3	             0x9ca	                             or edx, ecx	       624	revision.c	FUNCTION_24	IF_3	IF_4
0x18b5	            0x8910	                    mov dword [rax], edx	       624	revision.c	FUNCTION_24	IF_3	IF_4
0x18b7	      0xe91e030000	                           jmp 0x4001c1a	       625	revision.c	FUNCTION_24	IF_3
0x18bc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       632	revision.c	FUNCTION_24	IF_5
0x18c0	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       632	revision.c	FUNCTION_24	IF_5
0x18c4	          0x83e004	                              and eax, 4	       632	revision.c	FUNCTION_24	IF_5
0x18c7	            0x84c0	                             test al, al	       632	revision.c	FUNCTION_24	IF_5
0x18c9	            0x7515	                           jne 0x4001920	       632	revision.c	FUNCTION_24	IF_5
0x18cb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       632	revision.c	FUNCTION_24	IF_5
0x18cf	        0x488b4030	            mov rax, qword [rax + 0x30] 	       632	revision.c	FUNCTION_24	IF_5
0x18d3	        0x488b4008	                mov rax, qword [rax + 8]	       632	revision.c	FUNCTION_24	IF_5
0x18d7	          0x4885c0	                           test rax, rax	       632	revision.c	FUNCTION_24	IF_5
0x18da	     0xf84fd020000	                            je 0x4001c1d	       632	revision.c	FUNCTION_24	IF_5
0x18e0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       635	revision.c	FUNCTION_24	FOR_1
0x18e4	        0x4883c030	                           add rax, 0x30	       635	revision.c	FUNCTION_24	FOR_1
0x18e8	        0x488945d0	             mov qword [rbp - 0x30], rax	       635	revision.c	FUNCTION_24	FOR_1
0x18ec	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       635	revision.c	FUNCTION_24	FOR_1
0x18f3	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       635	revision.c	FUNCTION_24	FOR_1
0x18fa	      0xe972020000	                           jmp 0x4001bb1	       635	revision.c	FUNCTION_24	FOR_1
0x18ff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       638	revision.c	FUNCTION_24	FOR_1
0x1903	          0x488b00	                    mov rax, qword [rax]	       638	revision.c	FUNCTION_24	FOR_1
0x1906	        0x488945e8	             mov qword [rbp - 0x18], rax	       638	revision.c	FUNCTION_24	FOR_1
0x190a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       639	revision.c	FUNCTION_24	FOR_1	IF_6	CALL_3
0x190e	          0x4889c7	                            mov rdi, rax	       639	revision.c	FUNCTION_24	FOR_1	IF_6	CALL_3
0x1911	      0xe866f7ffff	                call sym.relevant_commit	       639	revision.c	FUNCTION_24	FOR_1	IF_6	CALL_3
0x1916	            0x85c0	                           test eax, eax	       639	revision.c	FUNCTION_24	FOR_1	IF_6	CALL_3
0x1918	            0x7404	                            je 0x400195e	       639	revision.c	FUNCTION_24	FOR_1	IF_6	CALL_3
0x191a	        0x8345c801	               add dword [rbp - 0x38], 1	       640	revision.c	FUNCTION_24	FOR_1	IF_6
0x191e	        0x837dcc01	               cmp dword [rbp - 0x34], 1	       642	revision.c	FUNCTION_24	FOR_1	IF_7
0x1922	            0x7572	                           jne 0x40019d6	       642	revision.c	FUNCTION_24	FOR_1	IF_7
0x1924	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       652	revision.c	FUNCTION_24	FOR_1	IF_7	IF_8
0x1928	         0xfb64078	           movzx eax, byte [rax + 0x78] 	       652	revision.c	FUNCTION_24	FOR_1	IF_7	IF_8
0x192c	          0x83e010	                           and eax, 0x10	       652	revision.c	FUNCTION_24	FOR_1	IF_7	IF_8
0x192f	            0x84c0	                             test al, al	       652	revision.c	FUNCTION_24	FOR_1	IF_7	IF_8
0x1931	     0xf8552020000	                           jne 0x4001bc9	       652	revision.c	FUNCTION_24	FOR_1	IF_7	IF_8
0x1937	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       660	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x193b	    0x488b80300800	           mov rax, qword [rax + 0x830] 	       660	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x1942	          0x4885c0	                           test rax, rax	       660	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x1945	            0x744f	                            je 0x40019d6	       660	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x1947	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       661	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x194b	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       661	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x194f	          0x83e080	                     and eax, 0xffffff80	       661	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x1952	            0x84c0	                             test al, al	       660	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x1954	            0x7540	                           jne 0x40019d6	       660	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x1956	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       662	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x195a	            0x8b00	                    mov eax, dword [rax]	       662	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x195c	          0xc1e804	                              shr eax, 4	       662	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x195f	      0x25ffffff07	                      and eax, 0x7ffffff	       662	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x1964	          0x83e002	                              and eax, 2	       662	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x1967	            0x85c0	                           test eax, eax	       661	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x1969	            0x752b	                           jne 0x40019d6	       661	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9
0x196b	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       663	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9	CALL_4
0x196f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       663	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9	CALL_4
0x1973	          0x4889d6	                            mov rsi, rdx	       663	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9	CALL_4
0x1976	          0x4889c7	                            mov rdi, rax	       663	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9	CALL_4
0x1979	      0xe8eff9ffff	            call sym.initialise_treesame	       663	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9	CALL_4
0x197e	        0x488945d8	             mov qword [rbp - 0x28], rax	       663	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9	CALL_4
0x1982	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       664	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9	IF_10
0x1986	            0x750e	                           jne 0x40019d6	       664	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9	IF_10
0x1988	        0x837dc000	               cmp dword [rbp - 0x40], 0	       664	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9	IF_10
0x198c	            0x7508	                           jne 0x40019d6	       664	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9	IF_10
0x198e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       665	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9	IF_10
0x1992	        0xc6400401	                   mov byte [rax + 4], 1	       665	revision.c	FUNCTION_24	FOR_1	IF_7	IF_9	IF_10
0x1996	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       668	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_5
0x199a	          0x4889c7	                            mov rdi, rax	       668	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_5
0x199d	      0xe873ebffff	                   call sym.parse_commit	       668	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_5
0x19a2	            0x85c0	                           test eax, eax	       668	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_5
0x19a4	            0x7938	                           jns 0x4001a1e	       668	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_5
0x19a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       671	revision.c	FUNCTION_24	FOR_1	CALL_8
0x19aa	        0x4883c004	                              add rax, 4	       671	revision.c	FUNCTION_24	FOR_1	CALL_8
0x19ae	          0x4889c7	                            mov rdi, rax	       669	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_6
0x19b1	      0xe800000000	                          call 0x40019f6	       669	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_6
0x19b6	          0x4889c3	                            mov rbx, rax	       669	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_6
0x19b9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       670	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_7
0x19bd	        0x4883c004	                              add rax, 4	       670	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_7
0x19c1	          0x4889c7	                            mov rdi, rax	       669	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_6
0x19c4	      0xe800000000	                          call 0x4001a09	       669	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_6
0x19c9	          0x4889da	                            mov rdx, rbx	       669	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_6
0x19cc	          0x4889c6	                            mov rsi, rax	       669	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_6
0x19cf	      0xbf00000000	                              mov edi, 0	       669	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_6
0x19d4	      0xb800000000	                              mov eax, 0	       669	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_6
0x19d9	      0xe800000000	                          call 0x4001a1e	       669	revision.c	FUNCTION_24	FOR_1	IF_11	CALL_6
0x19de	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x19e2	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x19e6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x19ea	          0x4889ce	                            mov rsi, rcx	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x19ed	          0x4889c7	                            mov rdi, rax	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x19f0	      0xe8f7f7ffff	               call sym.rev_compare_tree	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x19f5	          0x83f801	                              cmp eax, 1	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x19f8	     0xf84a4000000	                            je 0x4001ae2	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x19fe	          0x83f801	                              cmp eax, 1	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x1a01	            0x7f09	                            jg 0x4001a4c	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x1a03	            0x85c0	                           test eax, eax	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x1a05	            0x7413	                            je 0x4001a5a	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x1a07	      0xe932010000	                           jmp 0x4001b7e	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x1a0c	          0x83f803	                              cmp eax, 3	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x1a0f	     0xf8f29010000	                            jg 0x4001b7e	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x1a15	      0xe902010000	                           jmp 0x4001b5c	       672	revision.c	FUNCTION_24	FOR_1	SWITCH_1	CALL_9
0x1a1a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       674	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	CALL_10
0x1a1e	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       674	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	CALL_10
0x1a22	          0x83e080	                     and eax, 0xffffff80	       674	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	CALL_10
0x1a25	            0x84c0	                             test al, al	       674	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	CALL_10
0x1a27	            0x7410	                            je 0x4001a79	       674	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	CALL_10
0x1a29	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       674	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	CALL_10
0x1a2d	          0x4889c7	                            mov rdi, rax	       674	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	CALL_10
0x1a30	      0xe847f6ffff	                call sym.relevant_commit	       674	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	CALL_10
0x1a35	            0x85c0	                           test eax, eax	       674	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	CALL_10
0x1a37	            0x751e	                           jne 0x4001a97	       674	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	CALL_10
0x1a39	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       681	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	IF_13
0x1a3e	     0xf841c010000	                            je 0x4001ba0	       681	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	IF_13
0x1a44	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       682	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	IF_13
0x1a48	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       682	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	IF_13
0x1a4b	            0x4898	                                    cdqe	       682	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	IF_13
0x1a4d	      0xc644020401	             mov byte [rdx + rax + 4], 1	       682	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12	IF_13
0x1a52	      0xe909010000	                           jmp 0x4001ba0	       683	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12
0x1a57	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       685	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a5b	    0x48c740080000	                  mov qword [rax + 8], 0	       685	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a63	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       686	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a67	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       686	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a6b	        0x48895030	             mov qword [rax + 0x30], rdx	       686	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a6f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       687	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a73	            0x8b00	                    mov eax, dword [rax]	       687	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a75	          0xc1e804	                              shr eax, 4	       687	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a78	      0x25ffffff07	                      and eax, 0x7ffffff	       687	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a7d	          0x83c804	                               or eax, 4	       687	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a80	            0x89c2	                            mov edx, eax	       687	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a82	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       687	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a86	    0x81e2ffffff07	                      and edx, 0x7ffffff	       687	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a8c	            0x89d1	                            mov ecx, edx	       687	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a8e	          0xc1e104	                              shl ecx, 4	       687	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a91	            0x8b10	                    mov edx, dword [rax]	       687	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a93	    0x81e20f000080	                     and edx, 0x8000000f	       687	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a99	             0x9ca	                             or edx, ecx	       687	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a9b	            0x8910	                    mov dword [rax], edx	       687	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1a9d	      0xe93c010000	                           jmp 0x4001c1e	       688	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1aa2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       691	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14
0x1aa6	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       691	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14
0x1aaa	          0x83e040	                           and eax, 0x40	       691	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14
0x1aad	            0x84c0	                             test al, al	       691	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14
0x1aaf	            0x746b	                            je 0x4001b5c	       691	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14
0x1ab1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       692	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	CALL_11
0x1ab5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       692	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	CALL_11
0x1ab9	          0x4889d6	                            mov rsi, rdx	       692	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	CALL_11
0x1abc	          0x4889c7	                            mov rdi, rax	       692	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	CALL_11
0x1abf	      0xe813f8ffff	         call sym.rev_same_tree_as_empty	       692	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	CALL_11
0x1ac4	            0x85c0	                           test eax, eax	       691	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14
0x1ac6	            0x7454	                            je 0x4001b5c	       691	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14
0x1ac8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       701	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_12
0x1acc	          0x4889c7	                            mov rdi, rax	       701	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_12
0x1acf	      0xe841eaffff	                   call sym.parse_commit	       701	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_12
0x1ad4	            0x85c0	                           test eax, eax	       701	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_12
0x1ad6	            0x7938	                           jns 0x4001b50	       701	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_12
0x1ad8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       704	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	CALL_15
0x1adc	        0x4883c004	                              add rax, 4	       704	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	CALL_15
0x1ae0	          0x4889c7	                            mov rdi, rax	       702	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_13
0x1ae3	      0xe800000000	                          call 0x4001b28	       702	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_13
0x1ae8	          0x4889c3	                            mov rbx, rax	       702	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_13
0x1aeb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       703	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_14
0x1aef	        0x4883c004	                              add rax, 4	       703	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_14
0x1af3	          0x4889c7	                            mov rdi, rax	       702	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_13
0x1af6	      0xe800000000	                          call 0x4001b3b	       702	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_13
0x1afb	          0x4889da	                            mov rdx, rbx	       702	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_13
0x1afe	          0x4889c6	                            mov rsi, rax	       702	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_13
0x1b01	      0xbf00000000	                              mov edi, 0	       702	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_13
0x1b06	      0xb800000000	                              mov eax, 0	       702	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_13
0x1b0b	      0xe800000000	                          call 0x4001b50	       702	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14	IF_15	CALL_13
0x1b10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       705	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14
0x1b14	    0x48c740300000	               mov qword [rax + 0x30], 0	       705	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_14
0x1b1c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       710	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_16	CALL_16
0x1b20	          0x4889c7	                            mov rdi, rax	       710	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_16	CALL_16
0x1b23	      0xe854f5ffff	                call sym.relevant_commit	       710	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_16	CALL_16
0x1b28	            0x85c0	                           test eax, eax	       710	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_16	CALL_16
0x1b2a	            0x7409	                            je 0x4001b75	       710	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_16	CALL_16
0x1b2c	    0xc745c0010000	               mov dword [rbp - 0x40], 1	       711	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_16
0x1b33	            0xeb2c	                           jmp 0x4001ba1	       714	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1b35	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	       713	revision.c	FUNCTION_24	FOR_1	SWITCH_1	ELSE_1
0x1b3c	            0xeb23	                           jmp 0x4001ba1	       714	revision.c	FUNCTION_24	FOR_1	SWITCH_1
0x1b3e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       716	revision.c	FUNCTION_24	FOR_1	CALL_18
0x1b42	        0x4883c004	                              add rax, 4	       716	revision.c	FUNCTION_24	FOR_1	CALL_18
0x1b46	          0x4889c7	                            mov rdi, rax	       716	revision.c	FUNCTION_24	FOR_1	CALL_18
0x1b49	      0xe800000000	                          call 0x4001b8e	       716	revision.c	FUNCTION_24	FOR_1	CALL_18
0x1b4e	          0x4889c6	                            mov rsi, rax	       716	revision.c	FUNCTION_24	FOR_1	CALL_18
0x1b51	      0xbf00000000	                              mov edi, 0	       716	revision.c	FUNCTION_24	FOR_1	CALL_18
0x1b56	      0xb800000000	                              mov eax, 0	       716	revision.c	FUNCTION_24	FOR_1	CALL_18
0x1b5b	      0xe800000000	                          call 0x4001ba0	       716	revision.c	FUNCTION_24	FOR_1	CALL_18
0x1b60	              0x90	                                     nop	       683	revision.c	FUNCTION_24	FOR_1	SWITCH_1	IF_12
0x1b61	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       637	revision.c	FUNCTION_24	FOR_1
0x1b65	        0x4883c008	                              add rax, 8	       637	revision.c	FUNCTION_24	FOR_1
0x1b69	        0x488945d0	             mov qword [rbp - 0x30], rax	       637	revision.c	FUNCTION_24	FOR_1
0x1b6d	        0x8345cc01	               add dword [rbp - 0x34], 1	       637	revision.c	FUNCTION_24	FOR_1
0x1b71	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       636	revision.c	FUNCTION_24	FOR_1
0x1b75	          0x488b00	                    mov rax, qword [rax]	       636	revision.c	FUNCTION_24	FOR_1
0x1b78	        0x488945e0	             mov qword [rbp - 0x20], rax	       636	revision.c	FUNCTION_24	FOR_1
0x1b7c	      0x48837de000	               cmp qword [rbp - 0x20], 0	       635	revision.c	FUNCTION_24	FOR_1
0x1b81	     0xf8578fdffff	                           jne 0x400193f	       635	revision.c	FUNCTION_24	FOR_1
0x1b87	            0xeb01	                           jmp 0x4001bca	       635	revision.c	FUNCTION_24	FOR_1
0x1b89	              0x90	                                     nop	       653	revision.c	FUNCTION_24	FOR_1	IF_7	IF_8
0x1b8a	        0x837dc800	               cmp dword [rbp - 0x38], 0	       729	revision.c	FUNCTION_24	IF_17
0x1b8e	            0x7409	                            je 0x4001bd9	       729	revision.c	FUNCTION_24	IF_17
0x1b90	        0x837dc000	               cmp dword [rbp - 0x40], 0	       729	revision.c	FUNCTION_24	IF_17
0x1b94	           0xf94c0	                                 sete al	       729	revision.c	FUNCTION_24	IF_17
0x1b97	            0xeb07	                           jmp 0x4001be0	       729	revision.c	FUNCTION_24	IF_17
0x1b99	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       729	revision.c	FUNCTION_24	IF_17
0x1b9d	           0xf94c0	                                 sete al	       729	revision.c	FUNCTION_24	IF_17
0x1ba0	            0x84c0	                             test al, al	       729	revision.c	FUNCTION_24	IF_17
0x1ba2	            0x743a	                            je 0x4001c1e	       729	revision.c	FUNCTION_24	IF_17
0x1ba4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       730	revision.c	FUNCTION_24	IF_17
0x1ba8	            0x8b00	                    mov eax, dword [rax]	       730	revision.c	FUNCTION_24	IF_17
0x1baa	          0xc1e804	                              shr eax, 4	       730	revision.c	FUNCTION_24	IF_17
0x1bad	      0x25ffffff07	                      and eax, 0x7ffffff	       730	revision.c	FUNCTION_24	IF_17
0x1bb2	          0x83c804	                               or eax, 4	       730	revision.c	FUNCTION_24	IF_17
0x1bb5	            0x89c2	                            mov edx, eax	       730	revision.c	FUNCTION_24	IF_17
0x1bb7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       730	revision.c	FUNCTION_24	IF_17
0x1bbb	    0x81e2ffffff07	                      and edx, 0x7ffffff	       730	revision.c	FUNCTION_24	IF_17
0x1bc1	            0x89d1	                            mov ecx, edx	       730	revision.c	FUNCTION_24	IF_17
0x1bc3	          0xc1e104	                              shl ecx, 4	       730	revision.c	FUNCTION_24	IF_17
0x1bc6	            0x8b10	                    mov edx, dword [rax]	       730	revision.c	FUNCTION_24	IF_17
0x1bc8	    0x81e20f000080	                     and edx, 0x8000000f	       730	revision.c	FUNCTION_24	IF_17
0x1bce	             0x9ca	                             or edx, ecx	       730	revision.c	FUNCTION_24	IF_17
0x1bd0	            0x8910	                    mov dword [rax], edx	       730	revision.c	FUNCTION_24	IF_17
0x1bd2	            0xeb0a	                           jmp 0x4001c1e	       730	revision.c	FUNCTION_24	IF_17
0x1bd4	              0x90	                                     nop	       617	revision.c	FUNCTION_24	IF_1
0x1bd5	            0xeb07	                           jmp 0x4001c1e	       617	revision.c	FUNCTION_24	IF_1
0x1bd7	              0x90	                                     nop	       620	revision.c	FUNCTION_24	IF_2
0x1bd8	            0xeb04	                           jmp 0x4001c1e	       620	revision.c	FUNCTION_24	IF_2
0x1bda	              0x90	                                     nop	       625	revision.c	FUNCTION_24	IF_3
0x1bdb	            0xeb01	                           jmp 0x4001c1e	       625	revision.c	FUNCTION_24	IF_3
0x1bdd	              0x90	                                     nop	       633	revision.c	FUNCTION_24	IF_5
0x1bde	        0x4883c448	                           add rsp, 0x48	       731	revision.c	FUNCTION_24
0x1be2	              0x5b	                                 pop rbx	       731	revision.c	FUNCTION_24
0x1be3	              0x5d	                                 pop rbp	       731	revision.c	FUNCTION_24
0x1be4	              0xc3	                                     ret	       731	revision.c	FUNCTION_24
setup_revisions	FOR,3:functions,0:WHILE,0:CALL,34:IF,38:ELSE,2:DO,0:SWITCH,0	565
0x6baa	              0x55	                                push rbp	      2293	revision.c	FUNCTION_69
0x6bab	          0x4889e5	                            mov rbp, rsp	      2293	revision.c	FUNCTION_69
0x6bae	    0x4881ece00000	                           sub rsp, 0xe0	      2293	revision.c	FUNCTION_69
0x6bb5	    0x89bd3cffffff	             mov dword [rbp - 0xc4], edi	      2293	revision.c	FUNCTION_69
0x6bbb	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	      2293	revision.c	FUNCTION_69
0x6bc2	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	      2293	revision.c	FUNCTION_69
0x6bc9	    0x48898d20ffff	             mov qword [rbp - 0xe0], rcx	      2293	revision.c	FUNCTION_69
0x6bd0	    0x64488b042528	                mov rax, qword fs:[0x28]	      2293	revision.c	FUNCTION_69
0x6bd9	        0x488945f8	                mov qword [rbp - 8], rax	      2293	revision.c	FUNCTION_69
0x6bdd	            0x31c0	                            xor eax, eax	      2293	revision.c	FUNCTION_69
0x6bdf	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	      2294	revision.c	FUNCTION_69
0x6be9	    0x48c745900000	               mov qword [rbp - 0x70], 0	      2295	revision.c	FUNCTION_69
0x6bf1	    0xc74598000000	               mov dword [rbp - 0x68], 0	      2295	revision.c	FUNCTION_69
0x6bf8	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      2295	revision.c	FUNCTION_69
0x6bff	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      2296	revision.c	FUNCTION_69
0x6c0a	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      2298	revision.c	FUNCTION_69	IF_1
0x6c12	            0x7412	                            je 0x4006c66	      2298	revision.c	FUNCTION_69	IF_1
0x6c14	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2299	revision.c	FUNCTION_69	IF_1
0x6c1b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2299	revision.c	FUNCTION_69	IF_1
0x6c1f	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2299	revision.c	FUNCTION_69	IF_1
0x6c26	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      2302	revision.c	FUNCTION_69	IF_2
0x6c2e	            0x741d	                            je 0x4006c8d	      2302	revision.c	FUNCTION_69	IF_2
0x6c30	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2302	revision.c	FUNCTION_69	IF_2
0x6c37	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2302	revision.c	FUNCTION_69	IF_2
0x6c3a	            0x85c0	                           test eax, eax	      2302	revision.c	FUNCTION_69	IF_2
0x6c3c	            0x740f	                            je 0x4006c8d	      2302	revision.c	FUNCTION_69	IF_2
0x6c3e	    0xc78558ffffff	               mov dword [rbp - 0xa8], 1	      2303	revision.c	FUNCTION_69	IF_2
0x6c48	      0xe9ff000000	                           jmp 0x4006d8c	      2303	revision.c	FUNCTION_69	IF_2
0x6c4d	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      2305	revision.c	FUNCTION_69	ELSE_1
0x6c57	    0xc78554ffffff	               mov dword [rbp - 0xac], 1	      2306	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6c61	      0xe9d4000000	                           jmp 0x4006d7a	      2306	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6c66	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2307	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6c6c	            0x4898	                                    cdqe	      2307	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6c6e	    0x488d14c50000	                        lea rdx, [rax*8]	      2307	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6c76	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2307	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6c7d	          0x4801d0	                            add rax, rdx	      2307	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6c80	          0x488b00	                    mov rax, qword [rax]	      2307	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6c83	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2307	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6c8a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2308	revision.c	FUNCTION_69	ELSE_1	FOR_1	IF_3	CALL_1
0x6c91	      0xbe00000000	                              mov esi, 0	      2308	revision.c	FUNCTION_69	ELSE_1	FOR_1	IF_3	CALL_1
0x6c96	          0x4889c7	                            mov rdi, rax	      2308	revision.c	FUNCTION_69	ELSE_1	FOR_1	IF_3	CALL_1
0x6c99	      0xe800000000	                          call 0x4006cde	      2308	revision.c	FUNCTION_69	ELSE_1	FOR_1	IF_3	CALL_1
0x6c9e	            0x85c0	                           test eax, eax	      2308	revision.c	FUNCTION_69	ELSE_1	FOR_1	IF_3	CALL_1
0x6ca0	            0x740c	                            je 0x4006cee	      2308	revision.c	FUNCTION_69	ELSE_1	FOR_1	IF_3	CALL_1
0x6ca2	    0x838554ffffff	               add dword [rbp - 0xac], 1	      2306	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6ca9	      0xe98c000000	                           jmp 0x4006d7a	      2306	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6cae	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2310	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6cb4	            0x4898	                                    cdqe	      2310	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6cb6	    0x488d14c50000	                        lea rdx, [rax*8]	      2310	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6cbe	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2310	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6cc5	          0x4801d0	                            add rax, rdx	      2310	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6cc8	    0x48c700000000	                      mov qword [rax], 0	      2310	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6ccf	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2311	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6cd5	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      2311	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6cdb	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2312	revision.c	FUNCTION_69	ELSE_1	FOR_1	IF_4
0x6ce1	            0x4898	                                    cdqe	      2312	revision.c	FUNCTION_69	ELSE_1	FOR_1	IF_4
0x6ce3	        0x4883c001	                              add rax, 1	      2312	revision.c	FUNCTION_69	ELSE_1	FOR_1	IF_4
0x6ce7	    0x488d14c50000	                        lea rdx, [rax*8]	      2312	revision.c	FUNCTION_69	ELSE_1	FOR_1	IF_4
0x6cef	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2312	revision.c	FUNCTION_69	ELSE_1	FOR_1	IF_4
0x6cf6	          0x4801d0	                            add rax, rdx	      2312	revision.c	FUNCTION_69	ELSE_1	FOR_1	IF_4
0x6cf9	          0x488b00	                    mov rax, qword [rax]	      2312	revision.c	FUNCTION_69	ELSE_1	FOR_1	IF_4
0x6cfc	          0x4885c0	                           test rax, rax	      2312	revision.c	FUNCTION_69	ELSE_1	FOR_1	IF_4
0x6cff	            0x742d	                            je 0x4006d6e	      2312	revision.c	FUNCTION_69	ELSE_1	FOR_1	IF_4
0x6d01	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2313	revision.c	FUNCTION_69	ELSE_1	FOR_1	CALL_2
0x6d07	            0x4898	                                    cdqe	      2313	revision.c	FUNCTION_69	ELSE_1	FOR_1	CALL_2
0x6d09	        0x4883c001	                              add rax, 1	      2313	revision.c	FUNCTION_69	ELSE_1	FOR_1	CALL_2
0x6d0d	    0x488d14c50000	                        lea rdx, [rax*8]	      2313	revision.c	FUNCTION_69	ELSE_1	FOR_1	CALL_2
0x6d15	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2313	revision.c	FUNCTION_69	ELSE_1	FOR_1	CALL_2
0x6d1c	          0x4801c2	                            add rdx, rax	      2313	revision.c	FUNCTION_69	ELSE_1	FOR_1	CALL_2
0x6d1f	        0x488d4590	                   lea rax, [rbp - 0x70]	      2313	revision.c	FUNCTION_69	ELSE_1	FOR_1	CALL_2
0x6d23	          0x4889d6	                            mov rsi, rdx	      2313	revision.c	FUNCTION_69	ELSE_1	FOR_1	CALL_2
0x6d26	          0x4889c7	                            mov rdi, rax	      2313	revision.c	FUNCTION_69	ELSE_1	FOR_1	CALL_2
0x6d29	      0xe800000000	                          call 0x4006d6e	      2313	revision.c	FUNCTION_69	ELSE_1	FOR_1	CALL_2
0x6d2e	    0xc78558ffffff	               mov dword [rbp - 0xa8], 1	      2314	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6d38	            0xeb12	                           jmp 0x4006d8c	      2315	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6d3a	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2306	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6d40	    0x3b853cffffff	             cmp eax, dword [rbp - 0xc4]	      2306	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6d46	     0xf8c1affffff	                            jl 0x4006ca6	      2306	revision.c	FUNCTION_69	ELSE_1	FOR_1
0x6d4c	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	      2320	revision.c	FUNCTION_69
0x6d56	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      2321	revision.c	FUNCTION_69
0x6d5e	            0x740c	                            je 0x4006dac	      2321	revision.c	FUNCTION_69
0x6d60	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2321	revision.c	FUNCTION_69
0x6d67	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      2321	revision.c	FUNCTION_69
0x6d6a	            0xeb05	                           jmp 0x4006db1	      2321	revision.c	FUNCTION_69
0x6d6c	      0xb800000000	                              mov eax, 0	      2321	revision.c	FUNCTION_69
0x6d71	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	      2321	revision.c	FUNCTION_69
0x6d77	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      2322	revision.c	FUNCTION_69	IF_5
0x6d7e	            0x7407	                            je 0x4006dc7	      2322	revision.c	FUNCTION_69	IF_5
0x6d80	    0x838d64ffffff	                or dword [rbp - 0x9c], 1	      2323	revision.c	FUNCTION_69	IF_5
0x6d87	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	      2324	revision.c	FUNCTION_69
0x6d91	    0xc78554ffffff	               mov dword [rbp - 0xac], 1	      2325	revision.c	FUNCTION_69	FOR_2
0x6d9b	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2325	revision.c	FUNCTION_69	FOR_2
0x6da1	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	      2325	revision.c	FUNCTION_69	FOR_2
0x6da7	      0xe9b0020000	                           jmp 0x400709c	      2325	revision.c	FUNCTION_69	FOR_2
0x6dac	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2326	revision.c	FUNCTION_69	FOR_2
0x6db2	            0x4898	                                    cdqe	      2326	revision.c	FUNCTION_69	FOR_2
0x6db4	    0x488d14c50000	                        lea rdx, [rax*8]	      2326	revision.c	FUNCTION_69	FOR_2
0x6dbc	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2326	revision.c	FUNCTION_69	FOR_2
0x6dc3	          0x4801d0	                            add rax, rdx	      2326	revision.c	FUNCTION_69	FOR_2
0x6dc6	          0x488b00	                    mov rax, qword [rax]	      2326	revision.c	FUNCTION_69	FOR_2
0x6dc9	        0x48894580	             mov qword [rbp - 0x80], rax	      2326	revision.c	FUNCTION_69	FOR_2
0x6dcd	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2327	revision.c	FUNCTION_69	FOR_2	IF_6
0x6dd1	           0xfb600	                   movzx eax, byte [rax]	      2327	revision.c	FUNCTION_69	FOR_2	IF_6
0x6dd4	            0x3c2d	                            cmp al, 0x2d	      2327	revision.c	FUNCTION_69	FOR_2	IF_6
0x6dd6	     0xf8588010000	                           jne 0x4006fa4	      2327	revision.c	FUNCTION_69	FOR_2	IF_6
0x6ddc	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2330	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_3
0x6de2	            0x4898	                                    cdqe	      2330	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_3
0x6de4	    0x488d14c50000	                        lea rdx, [rax*8]	      2331	revision.c	FUNCTION_69	FOR_2	IF_6
0x6dec	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2330	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_3
0x6df3	        0x488d0c02	                    lea rcx, [rdx + rax]	      2330	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_3
0x6df7	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      2330	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_3
0x6dfd	    0x2b8554ffffff	             sub eax, dword [rbp - 0xac]	      2330	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_3
0x6e03	            0x89c2	                            mov edx, eax	      2330	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_3
0x6e05	    0x488dbd4cffff	                   lea rdi, [rbp - 0xb4]	      2330	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_3
0x6e0c	    0x488bb528ffff	             mov rsi, qword [rbp - 0xd8]	      2330	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_3
0x6e13	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2330	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_3
0x6e1a	          0x4989f8	                             mov r8, rdi	      2330	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_3
0x6e1d	          0x4889c7	                            mov rdi, rax	      2330	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_3
0x6e20	      0xe8f9f6ffff	     call sym.handle_revision_pseudo_opt	      2330	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_3
0x6e25	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      2330	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_3
0x6e2b	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      2333	revision.c	FUNCTION_69	FOR_2	IF_6	IF_7
0x6e32	            0x7e14	                           jle 0x4006e88	      2333	revision.c	FUNCTION_69	FOR_2	IF_6	IF_7
0x6e34	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      2334	revision.c	FUNCTION_69	FOR_2	IF_6	IF_7
0x6e3a	          0x83e801	                              sub eax, 1	      2334	revision.c	FUNCTION_69	FOR_2	IF_6	IF_7
0x6e3d	     0x18554ffffff	             add dword [rbp - 0xac], eax	      2334	revision.c	FUNCTION_69	FOR_2	IF_6	IF_7
0x6e43	      0xe90d020000	                           jmp 0x4007095	      2335	revision.c	FUNCTION_69	FOR_2	IF_6	IF_7
0x6e48	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2338	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	CALL_4
0x6e4c	      0xbe00000000	                              mov esi, 0	      2338	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	CALL_4
0x6e51	          0x4889c7	                            mov rdi, rax	      2338	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	CALL_4
0x6e54	      0xe800000000	                          call 0x4006e99	      2338	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	CALL_4
0x6e59	            0x85c0	                           test eax, eax	      2338	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	CALL_4
0x6e5b	            0x757e	                           jne 0x4006f1b	      2338	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	CALL_4
0x6e5d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2339	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_9
0x6e64	         0xfb6407b	           movzx eax, byte [rax + 0x7b] 	      2339	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_9
0x6e68	          0x83e080	                     and eax, 0xffffff80	      2339	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_9
0x6e6b	            0x84c0	                             test al, al	      2339	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_9
0x6e6d	            0x742f	                            je 0x4006ede	      2339	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_9
0x6e6f	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2340	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_9
0x6e75	          0x8d5001	                      lea edx, [rax + 1]	      2340	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_9
0x6e78	    0x899550ffffff	             mov dword [rbp - 0xb0], edx	      2340	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_9
0x6e7e	            0x4898	                                    cdqe	      2340	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_9
0x6e80	    0x488d14c50000	                        lea rdx, [rax*8]	      2340	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_9
0x6e88	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2340	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_9
0x6e8f	          0x4801c2	                            add rdx, rax	      2340	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_9
0x6e92	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2340	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_9
0x6e96	          0x488902	                    mov qword [rdx], rax	      2340	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_9
0x6e99	      0xe9b7010000	                           jmp 0x4007095	      2341	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_9
0x6e9e	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2343	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_10
0x6ea4	          0x8d5001	                      lea edx, [rax + 1]	      2343	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_10
0x6ea7	    0x89955cffffff	             mov dword [rbp - 0xa4], edx	      2343	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_10
0x6ead	            0x85c0	                           test eax, eax	      2343	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_10
0x6eaf	            0x740f	                            je 0x4006f00	      2343	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	IF_10
0x6eb1	      0xbf00000000	                              mov edi, 0	      2344	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	CALL_5
0x6eb6	      0xb800000000	                              mov eax, 0	      2344	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	CALL_5
0x6ebb	      0xe800000000	                          call 0x4006f00	      2344	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	CALL_5
0x6ec0	        0x488d5590	                   lea rdx, [rbp - 0x70]	      2345	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	CALL_6
0x6ec4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2345	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	CALL_6
0x6ecb	          0x4889d6	                            mov rsi, rdx	      2345	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	CALL_6
0x6ece	          0x4889c7	                            mov rdi, rax	      2345	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	CALL_6
0x6ed1	      0xe81cd7ffff	      call sym.read_revisions_from_stdin	      2345	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8	CALL_6
0x6ed6	      0xe97a010000	                           jmp 0x4007095	      2346	revision.c	FUNCTION_69	FOR_2	IF_6	IF_8
0x6edb	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6ee1	            0x4898	                                    cdqe	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6ee3	    0x488d14c50000	                        lea rdx, [rax*8]	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6eeb	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6ef2	        0x488d3c02	                    lea rdi, [rdx + rax]	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6ef6	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6efc	    0x2b8554ffffff	             sub eax, dword [rbp - 0xac]	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6f02	            0x89c6	                            mov esi, eax	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6f04	    0x488b8d30ffff	             mov rcx, qword [rbp - 0xd0]	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6f0b	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6f12	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6f19	          0x4989c8	                             mov r8, rcx	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6f1c	          0x4889d1	                            mov rcx, rdx	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6f1f	          0x4889fa	                            mov rdx, rdi	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6f22	          0x4889c7	                            mov rdi, rax	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6f25	      0xe896d8ffff	            call sym.handle_revision_opt	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6f2a	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      2349	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_7
0x6f30	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      2350	revision.c	FUNCTION_69	FOR_2	IF_6	IF_11
0x6f37	            0x7e14	                           jle 0x4006f8d	      2350	revision.c	FUNCTION_69	FOR_2	IF_6	IF_11
0x6f39	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      2351	revision.c	FUNCTION_69	FOR_2	IF_6	IF_11
0x6f3f	          0x83e801	                              sub eax, 1	      2351	revision.c	FUNCTION_69	FOR_2	IF_6	IF_11
0x6f42	     0x18554ffffff	             add dword [rbp - 0xac], eax	      2351	revision.c	FUNCTION_69	FOR_2	IF_6	IF_11
0x6f48	      0xe908010000	                           jmp 0x4007095	      2352	revision.c	FUNCTION_69	FOR_2	IF_6	IF_11
0x6f4d	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      2354	revision.c	FUNCTION_69	FOR_2	IF_6	IF_12
0x6f54	     0xf89fa000000	                           jns 0x4007094	      2354	revision.c	FUNCTION_69	FOR_2	IF_6	IF_12
0x6f5a	      0xbf80000000	                           mov edi, 0x80	      2355	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_8
0x6f5f	      0xe800000000	                          call 0x4006fa4	      2355	revision.c	FUNCTION_69	FOR_2	IF_6	CALL_8
0x6f64	    0x8b8d64ffffff	             mov ecx, dword [rbp - 0x9c]	      2360	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_9
0x6f6a	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	      2360	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_9
0x6f70	    0x488bb528ffff	             mov rsi, qword [rbp - 0xd8]	      2360	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_9
0x6f77	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2360	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_9
0x6f7b	          0x4889c7	                            mov rdi, rax	      2360	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_9
0x6f7e	      0xe800000000	                          call 0x4006fc3	      2360	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_9
0x6f83	            0x85c0	                           test eax, eax	      2360	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_9
0x6f85	     0xf84bd000000	                            je 0x4007088	      2360	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_9
0x6f8b	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      2362	revision.c	FUNCTION_69	FOR_2	IF_13	IF_14
0x6f92	            0x750b	                           jne 0x4006fdf	      2362	revision.c	FUNCTION_69	FOR_2	IF_13	IF_14
0x6f94	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2362	revision.c	FUNCTION_69	FOR_2	IF_13	IF_14
0x6f98	           0xfb600	                   movzx eax, byte [rax]	      2362	revision.c	FUNCTION_69	FOR_2	IF_13	IF_14
0x6f9b	            0x3c5e	                            cmp al, 0x5e	      2362	revision.c	FUNCTION_69	FOR_2	IF_13	IF_14
0x6f9d	            0x7516	                           jne 0x4006ff5	      2362	revision.c	FUNCTION_69	FOR_2	IF_13	IF_14
0x6f9f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2363	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_10
0x6fa3	          0x4889c6	                            mov rsi, rax	      2363	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_10
0x6fa6	      0xbf00000000	                              mov edi, 0	      2363	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_10
0x6fab	      0xb800000000	                              mov eax, 0	      2363	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_10
0x6fb0	      0xe800000000	                          call 0x4006ff5	      2363	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_10
0x6fb5	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2371	revision.c	FUNCTION_69	FOR_2	IF_13	FOR_3
0x6fbb	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      2371	revision.c	FUNCTION_69	FOR_2	IF_13	FOR_3
0x6fc1	            0xeb4c	                           jmp 0x400704f	      2371	revision.c	FUNCTION_69	FOR_2	IF_13	FOR_3
0x6fc3	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2372	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_11
0x6fc9	    0x3b8554ffffff	             cmp eax, dword [rbp - 0xac]	      2372	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_11
0x6fcf	           0xf94c0	                                 sete al	      2372	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_11
0x6fd2	           0xfb6d0	                           movzx edx, al	      2372	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_11
0x6fd5	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2372	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_11
0x6fdb	            0x4898	                                    cdqe	      2372	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_11
0x6fdd	    0x488d0cc50000	                        lea rcx, [rax*8]	      2372	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_11
0x6fe5	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2372	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_11
0x6fec	          0x4801c8	                            add rax, rcx	      2372	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_11
0x6fef	          0x488b08	                    mov rcx, qword [rax]	      2372	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_11
0x6ff2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2372	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_11
0x6ff9	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2372	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_11
0x6ffd	          0x4889ce	                            mov rsi, rcx	      2372	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_11
0x7000	          0x4889c7	                            mov rdi, rax	      2372	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_11
0x7003	      0xe800000000	                          call 0x4007048	      2372	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_11
0x7008	    0x838568ffffff	               add dword [rbp - 0x98], 1	      2371	revision.c	FUNCTION_69	FOR_2	IF_13	FOR_3
0x700f	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2371	revision.c	FUNCTION_69	FOR_2	IF_13	FOR_3
0x7015	    0x3b853cffffff	             cmp eax, dword [rbp - 0xc4]	      2371	revision.c	FUNCTION_69	FOR_2	IF_13	FOR_3
0x701b	            0x7ca6	                            jl 0x4007003	      2371	revision.c	FUNCTION_69	FOR_2	IF_13	FOR_3
0x701d	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2374	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_12
0x7023	            0x4898	                                    cdqe	      2374	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_12
0x7025	    0x488d14c50000	                        lea rdx, [rax*8]	      2374	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_12
0x702d	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2374	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_12
0x7034	          0x4801c2	                            add rdx, rax	      2374	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_12
0x7037	        0x488d4590	                   lea rax, [rbp - 0x70]	      2374	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_12
0x703b	          0x4889d6	                            mov rsi, rdx	      2374	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_12
0x703e	          0x4889c7	                            mov rdi, rax	      2374	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_12
0x7041	      0xe800000000	                          call 0x4007086	      2374	revision.c	FUNCTION_69	FOR_2	IF_13	CALL_12
0x7046	            0xeb26	                           jmp 0x40070ae	      2375	revision.c	FUNCTION_69	FOR_2	IF_13
0x7048	    0xc78560ffffff	               mov dword [rbp - 0xa0], 1	      2378	revision.c	FUNCTION_69	FOR_2	ELSE_2
0x7052	            0xeb01	                           jmp 0x4007095	      2378	revision.c	FUNCTION_69	FOR_2	ELSE_2
0x7054	              0x90	                                     nop	      2356	revision.c	FUNCTION_69	FOR_2	IF_6
0x7055	    0x838554ffffff	               add dword [rbp - 0xac], 1	      2325	revision.c	FUNCTION_69	FOR_2
0x705c	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2325	revision.c	FUNCTION_69	FOR_2
0x7062	    0x3b853cffffff	             cmp eax, dword [rbp - 0xc4]	      2325	revision.c	FUNCTION_69	FOR_2
0x7068	     0xf8c3efdffff	                            jl 0x4006dec	      2325	revision.c	FUNCTION_69	FOR_2
0x706e	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2381	revision.c	FUNCTION_69	ELSE_2	IF_15
0x7071	            0x85c0	                           test eax, eax	      2381	revision.c	FUNCTION_69	ELSE_2	IF_15
0x7073	            0x742f	                            je 0x40070e4	      2381	revision.c	FUNCTION_69	ELSE_2	IF_15
0x7075	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2396	revision.c	FUNCTION_69	ELSE_2	IF_15	CALL_13
0x7079	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2396	revision.c	FUNCTION_69	ELSE_2	IF_15	CALL_13
0x7080	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2396	revision.c	FUNCTION_69	ELSE_2	IF_15	CALL_13
0x7084	    0x488b8d28ffff	             mov rcx, qword [rbp - 0xd8]	      2396	revision.c	FUNCTION_69	ELSE_2	IF_15	CALL_13
0x708b	        0x488d7950	                   lea rdi, [rcx + 0x50]	      2396	revision.c	FUNCTION_69	ELSE_2	IF_15	CALL_13
0x708f	          0x4989d0	                             mov r8, rdx	      2396	revision.c	FUNCTION_69	ELSE_2	IF_15	CALL_13
0x7092	          0x4889c1	                            mov rcx, rax	      2396	revision.c	FUNCTION_69	ELSE_2	IF_15	CALL_13
0x7095	      0xba00000000	                              mov edx, 0	      2396	revision.c	FUNCTION_69	ELSE_2	IF_15	CALL_13
0x709a	      0xbe00000000	                              mov esi, 0	      2396	revision.c	FUNCTION_69	ELSE_2	IF_15	CALL_13
0x709f	      0xe800000000	                          call 0x40070e4	      2396	revision.c	FUNCTION_69	ELSE_2	IF_15	CALL_13
0x70a4	        0x488d4590	                   lea rax, [rbp - 0x70]	      2399	revision.c	FUNCTION_69	CALL_14
0x70a8	          0x4889c7	                            mov rdi, rax	      2399	revision.c	FUNCTION_69	CALL_14
0x70ab	      0xe800000000	                          call 0x40070f0	      2399	revision.c	FUNCTION_69	CALL_14
0x70b0	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2401	revision.c	FUNCTION_69	IF_16
0x70b7	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2401	revision.c	FUNCTION_69	IF_16
0x70bb	          0x4885c0	                           test rax, rax	      2401	revision.c	FUNCTION_69	IF_16
0x70be	            0x7526	                           jne 0x4007126	      2401	revision.c	FUNCTION_69	IF_16
0x70c0	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      2402	revision.c	FUNCTION_69	IF_16
0x70c8	            0x740c	                            je 0x4007116	      2402	revision.c	FUNCTION_69	IF_16
0x70ca	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2402	revision.c	FUNCTION_69	IF_16
0x70d1	          0x488b00	                    mov rax, qword [rax]	      2402	revision.c	FUNCTION_69	IF_16
0x70d4	            0xeb05	                           jmp 0x400711b	      2402	revision.c	FUNCTION_69	IF_16
0x70d6	      0xb800000000	                              mov eax, 0	      2402	revision.c	FUNCTION_69	IF_16
0x70db	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      2402	revision.c	FUNCTION_69	IF_16
0x70e2	        0x48894248	             mov qword [rdx + 0x48], rax	      2402	revision.c	FUNCTION_69	IF_16
0x70e6	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      2403	revision.c	FUNCTION_69	IF_17
0x70ee	            0x7431	                            je 0x4007161	      2403	revision.c	FUNCTION_69	IF_17
0x70f0	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2403	revision.c	FUNCTION_69	IF_17
0x70f7	        0x488b4008	                mov rax, qword [rax + 8]	      2403	revision.c	FUNCTION_69	IF_17
0x70fb	          0x4885c0	                           test rax, rax	      2403	revision.c	FUNCTION_69	IF_17
0x70fe	            0x7421	                            je 0x4007161	      2403	revision.c	FUNCTION_69	IF_17
0x7100	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2404	revision.c	FUNCTION_69	CALL_15
0x7107	        0x488b4008	                mov rax, qword [rax + 8]	      2404	revision.c	FUNCTION_69	CALL_15
0x710b	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	      2404	revision.c	FUNCTION_69	CALL_15
0x7112	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      2404	revision.c	FUNCTION_69	CALL_15
0x7119	          0x4889ce	                            mov rsi, rcx	      2404	revision.c	FUNCTION_69	CALL_15
0x711c	          0x4889d7	                            mov rdi, rdx	      2404	revision.c	FUNCTION_69	CALL_15
0x711f	            0xffd0	                                call rax	      2404	revision.c	FUNCTION_69	CALL_15
0x7121	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2405	revision.c	FUNCTION_69	IF_18
0x7128	         0xfb6407a	           movzx eax, byte [rax + 0x7a] 	      2405	revision.c	FUNCTION_69	IF_18
0x712c	          0x83e008	                              and eax, 8	      2405	revision.c	FUNCTION_69	IF_18
0x712f	            0x84c0	                             test al, al	      2405	revision.c	FUNCTION_69	IF_18
0x7131	            0x740f	                            je 0x4007182	      2405	revision.c	FUNCTION_69	IF_18
0x7133	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2406	revision.c	FUNCTION_69	CALL_16
0x713a	          0x4889c7	                            mov rdi, rax	      2406	revision.c	FUNCTION_69	CALL_16
0x713d	      0xe8c0c8ffff	             call sym.prepare_show_merge	      2406	revision.c	FUNCTION_69	CALL_16
0x7142	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2407	revision.c	FUNCTION_69	IF_19
0x7149	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2407	revision.c	FUNCTION_69	IF_19
0x714d	          0x4885c0	                           test rax, rax	      2407	revision.c	FUNCTION_69	IF_19
0x7150	     0xf84ac000000	                            je 0x4007242	      2407	revision.c	FUNCTION_69	IF_19
0x7156	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2407	revision.c	FUNCTION_69	IF_19
0x715d	          0x8b4008	                mov eax, dword [rax + 8]	      2407	revision.c	FUNCTION_69	IF_19
0x7160	            0x85c0	                           test eax, eax	      2407	revision.c	FUNCTION_69	IF_19
0x7162	     0xf859a000000	                           jne 0x4007242	      2407	revision.c	FUNCTION_69	IF_19
0x7168	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2407	revision.c	FUNCTION_69	IF_19
0x716f	          0x8b4068	            mov eax, dword [rax + 0x68] 	      2407	revision.c	FUNCTION_69	IF_19
0x7172	            0x85c0	                           test eax, eax	      2407	revision.c	FUNCTION_69	IF_19
0x7174	     0xf8588000000	                           jne 0x4007242	      2407	revision.c	FUNCTION_69	IF_19
0x717a	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      2407	revision.c	FUNCTION_69	IF_19
0x7181	            0x757f	                           jne 0x4007242	      2407	revision.c	FUNCTION_69	IF_19
0x7183	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2411	revision.c	FUNCTION_69	IF_19	IF_20	CALL_17
0x718a	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2411	revision.c	FUNCTION_69	IF_19	IF_20	CALL_17
0x718e	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      2411	revision.c	FUNCTION_69	IF_19	IF_20	CALL_17
0x7192	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      2411	revision.c	FUNCTION_69	IF_19	IF_20	CALL_17
0x7196	      0xbe00000000	                              mov esi, 0	      2411	revision.c	FUNCTION_69	IF_19	IF_20	CALL_17
0x719b	          0x4889c7	                            mov rdi, rax	      2411	revision.c	FUNCTION_69	IF_19	IF_20	CALL_17
0x719e	      0xe800000000	                          call 0x40071e3	      2411	revision.c	FUNCTION_69	IF_19	IF_20	CALL_17
0x71a3	            0x85c0	                           test eax, eax	      2411	revision.c	FUNCTION_69	IF_19	IF_20	CALL_17
0x71a5	            0x7413	                            je 0x40071fa	      2411	revision.c	FUNCTION_69	IF_19	IF_20	CALL_17
0x71a7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2412	revision.c	FUNCTION_69	IF_19	CALL_18
0x71ae	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2412	revision.c	FUNCTION_69	IF_19	CALL_18
0x71b2	          0x4889c7	                            mov rdi, rax	      2412	revision.c	FUNCTION_69	IF_19	CALL_18
0x71b5	      0xe84cf9ffff	       call sym.diagnose_missing_default	      2412	revision.c	FUNCTION_69	IF_19	CALL_18
0x71ba	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2413	revision.c	FUNCTION_69	IF_19	CALL_19
0x71c1	        0x488b7048	            mov rsi, qword [rax + 0x48] 	      2413	revision.c	FUNCTION_69	IF_19	CALL_19
0x71c5	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      2413	revision.c	FUNCTION_69	IF_19	CALL_19
0x71c9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2413	revision.c	FUNCTION_69	IF_19	CALL_19
0x71d0	      0xb900000000	                              mov ecx, 0	      2413	revision.c	FUNCTION_69	IF_19	CALL_19
0x71d5	          0x4889c7	                            mov rdi, rax	      2413	revision.c	FUNCTION_69	IF_19	CALL_19
0x71d8	      0xe8079affff	                  call sym.get_reference	      2413	revision.c	FUNCTION_69	IF_19	CALL_19
0x71dd	        0x48894588	             mov qword [rbp - 0x78], rax	      2413	revision.c	FUNCTION_69	IF_19	CALL_19
0x71e1	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      2414	revision.c	FUNCTION_69	IF_19	CALL_20
0x71e4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2414	revision.c	FUNCTION_69	IF_19	CALL_20
0x71eb	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      2414	revision.c	FUNCTION_69	IF_19	CALL_20
0x71ef	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      2414	revision.c	FUNCTION_69	IF_19	CALL_20
0x71f3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2414	revision.c	FUNCTION_69	IF_19	CALL_20
0x71fa	          0x4889c7	                            mov rdi, rax	      2414	revision.c	FUNCTION_69	IF_19	CALL_20
0x71fd	      0xe80099ffff	   call sym.add_pending_object_with_mode	      2414	revision.c	FUNCTION_69	IF_19	CALL_20
0x7202	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2418	revision.c	FUNCTION_69	IF_21
0x7209	    0x8b8058050000	           mov eax, dword [rax + 0x558] 	      2418	revision.c	FUNCTION_69	IF_21
0x720f	          0x80e4f7	                            and ah, 0xf7	      2418	revision.c	FUNCTION_69	IF_21
0x7212	            0x85c0	                           test eax, eax	      2418	revision.c	FUNCTION_69	IF_21
0x7214	            0x7411	                            je 0x4007267	      2418	revision.c	FUNCTION_69	IF_21
0x7216	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2419	revision.c	FUNCTION_69	IF_21
0x721d	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      2419	revision.c	FUNCTION_69	IF_21
0x7221	          0x83ca01	                               or edx, 1	      2419	revision.c	FUNCTION_69	IF_21
0x7224	          0x885079	               mov byte [rax + 0x79], dl	      2419	revision.c	FUNCTION_69	IF_21
0x7227	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2422	revision.c	FUNCTION_69	IF_22
0x722e	    0x8b805c050000	           mov eax, dword [rax + 0x55c] 	      2422	revision.c	FUNCTION_69	IF_22
0x7234	          0x83e01c	                           and eax, 0x1c	      2422	revision.c	FUNCTION_69	IF_22
0x7237	            0x85c0	                           test eax, eax	      2422	revision.c	FUNCTION_69	IF_22
0x7239	            0x7526	                           jne 0x40072a1	      2422	revision.c	FUNCTION_69	IF_22
0x723b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2423	revision.c	FUNCTION_69	IF_22
0x7242	    0x8b8034050000	           mov eax, dword [rax + 0x534] 	      2423	revision.c	FUNCTION_69	IF_22
0x7248	            0x85c0	                           test eax, eax	      2422	revision.c	FUNCTION_69	IF_22
0x724a	            0x7515	                           jne 0x40072a1	      2422	revision.c	FUNCTION_69	IF_22
0x724c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2423	revision.c	FUNCTION_69	IF_22
0x7253	     0xfb680300500	          movzx eax, byte [rax + 0x530] 	      2423	revision.c	FUNCTION_69	IF_22
0x725a	          0x83e080	                     and eax, 0xffffff80	      2423	revision.c	FUNCTION_69	IF_22
0x725d	            0x84c0	                             test al, al	      2423	revision.c	FUNCTION_69	IF_22
0x725f	            0x7411	                            je 0x40072b2	      2423	revision.c	FUNCTION_69	IF_22
0x7261	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2425	revision.c	FUNCTION_69	IF_22
0x7268	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      2425	revision.c	FUNCTION_69	IF_22
0x726c	          0x83ca01	                               or edx, 1	      2425	revision.c	FUNCTION_69	IF_22
0x726f	          0x885079	               mov byte [rax + 0x79], dl	      2425	revision.c	FUNCTION_69	IF_22
0x7272	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2427	revision.c	FUNCTION_69	IF_23
0x7279	    0x488b80e00500	           mov rax, qword [rax + 0x5e0] 	      2427	revision.c	FUNCTION_69	IF_23
0x7280	          0x4885c0	                           test rax, rax	      2427	revision.c	FUNCTION_69	IF_23
0x7283	            0x7411	                            je 0x40072d6	      2427	revision.c	FUNCTION_69	IF_23
0x7285	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2428	revision.c	FUNCTION_69	IF_23
0x728c	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      2428	revision.c	FUNCTION_69	IF_23
0x7290	          0x83e27f	                           and edx, 0x7f	      2428	revision.c	FUNCTION_69	IF_23
0x7293	          0x885074	               mov byte [rax + 0x74], dl	      2428	revision.c	FUNCTION_69	IF_23
0x7296	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2430	revision.c	FUNCTION_69	IF_24
0x729d	         0xfb64075	           movzx eax, byte [rax + 0x75] 	      2430	revision.c	FUNCTION_69	IF_24
0x72a1	          0x83e001	                              and eax, 1	      2430	revision.c	FUNCTION_69	IF_24
0x72a4	            0x84c0	                             test al, al	      2430	revision.c	FUNCTION_69	IF_24
0x72a6	            0x7411	                            je 0x40072f9	      2430	revision.c	FUNCTION_69	IF_24
0x72a8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2431	revision.c	FUNCTION_69	IF_24
0x72af	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      2431	revision.c	FUNCTION_69	IF_24
0x72b3	          0x83ca04	                               or edx, 4	      2431	revision.c	FUNCTION_69	IF_24
0x72b6	          0x885076	               mov byte [rax + 0x76], dl	      2431	revision.c	FUNCTION_69	IF_24
0x72b9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2433	revision.c	FUNCTION_69	IF_25
0x72c0	          0x8b4050	            mov eax, dword [rax + 0x50] 	      2433	revision.c	FUNCTION_69	IF_25
0x72c3	            0x85c0	                           test eax, eax	      2433	revision.c	FUNCTION_69	IF_25
0x72c5	            0x747e	                            je 0x4007385	      2433	revision.c	FUNCTION_69	IF_25
0x72c7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2434	revision.c	FUNCTION_69	IF_25	CALL_21
0x72ce	        0x488d5050	                   lea rdx, [rax + 0x50]	      2434	revision.c	FUNCTION_69	IF_25	CALL_21
0x72d2	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2434	revision.c	FUNCTION_69	IF_25	CALL_21
0x72d9	    0x480588070000	                          add rax, 0x788	      2434	revision.c	FUNCTION_69	IF_25	CALL_21
0x72df	          0x4889d6	                            mov rsi, rdx	      2434	revision.c	FUNCTION_69	IF_25	CALL_21
0x72e2	          0x4889c7	                            mov rdi, rax	      2434	revision.c	FUNCTION_69	IF_25	CALL_21
0x72e5	      0xe800000000	                          call 0x400732a	      2434	revision.c	FUNCTION_69	IF_25	CALL_21
0x72ea	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2436	revision.c	FUNCTION_69	IF_25	IF_26
0x72f1	     0xfb680300500	          movzx eax, byte [rax + 0x530] 	      2436	revision.c	FUNCTION_69	IF_25	IF_26
0x72f8	          0x83e080	                     and eax, 0xffffff80	      2436	revision.c	FUNCTION_69	IF_25	IF_26
0x72fb	            0x84c0	                             test al, al	      2436	revision.c	FUNCTION_69	IF_25	IF_26
0x72fd	            0x7511	                           jne 0x4007350	      2436	revision.c	FUNCTION_69	IF_25	IF_26
0x72ff	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2437	revision.c	FUNCTION_69	IF_25	IF_26
0x7306	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      2437	revision.c	FUNCTION_69	IF_25	IF_26
0x730a	          0x83ca08	                               or edx, 8	      2437	revision.c	FUNCTION_69	IF_25	IF_26
0x730d	          0x885074	               mov byte [rax + 0x74], dl	      2437	revision.c	FUNCTION_69	IF_25	IF_26
0x7310	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2438	revision.c	FUNCTION_69	IF_25	IF_27
0x7317	         0xfb64079	           movzx eax, byte [rax + 0x79] 	      2438	revision.c	FUNCTION_69	IF_25	IF_27
0x731b	          0x83e002	                              and eax, 2	      2438	revision.c	FUNCTION_69	IF_25	IF_27
0x731e	            0x84c0	                             test al, al	      2438	revision.c	FUNCTION_69	IF_25	IF_27
0x7320	            0x7523	                           jne 0x4007385	      2438	revision.c	FUNCTION_69	IF_25	IF_27
0x7322	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2440	revision.c	FUNCTION_69	IF_25	IF_27
0x7329	        0x488d5050	                   lea rdx, [rax + 0x50]	      2440	revision.c	FUNCTION_69	IF_25	IF_27
0x732d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2439	revision.c	FUNCTION_69	IF_25	IF_27	CALL_22
0x7334	    0x480508060000	                          add rax, 0x608	      2439	revision.c	FUNCTION_69	IF_25	IF_27	CALL_22
0x733a	          0x4889d6	                            mov rsi, rdx	      2439	revision.c	FUNCTION_69	IF_25	IF_27	CALL_22
0x733d	          0x4889c7	                            mov rdi, rax	      2439	revision.c	FUNCTION_69	IF_25	IF_27	CALL_22
0x7340	      0xe800000000	                          call 0x4007385	      2439	revision.c	FUNCTION_69	IF_25	IF_27	CALL_22
0x7345	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2442	revision.c	FUNCTION_69	IF_28
0x734c	         0xfb64079	           movzx eax, byte [rax + 0x79] 	      2442	revision.c	FUNCTION_69	IF_28
0x7350	          0x83e040	                           and eax, 0x40	      2442	revision.c	FUNCTION_69	IF_28
0x7353	            0x84c0	                             test al, al	      2442	revision.c	FUNCTION_69	IF_28
0x7355	            0x7411	                            je 0x40073a8	      2442	revision.c	FUNCTION_69	IF_28
0x7357	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2443	revision.c	FUNCTION_69	IF_28
0x735e	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      2443	revision.c	FUNCTION_69	IF_28
0x7362	          0x83e2df	                     and edx, 0xffffffdf	      2443	revision.c	FUNCTION_69	IF_28
0x7365	          0x885079	               mov byte [rax + 0x79], dl	      2443	revision.c	FUNCTION_69	IF_28
0x7368	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2444	revision.c	FUNCTION_69
0x736f	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2444	revision.c	FUNCTION_69
0x7375	            0x89c2	                            mov edx, eax	      2444	revision.c	FUNCTION_69
0x7377	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2444	revision.c	FUNCTION_69
0x737e	    0x89907c050000	            mov dword [rax + 0x57c], edx	      2444	revision.c	FUNCTION_69
0x7384	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2446	revision.c	FUNCTION_69	IF_29
0x738b	         0xfb64078	           movzx eax, byte [rax + 0x78] 	      2446	revision.c	FUNCTION_69	IF_29
0x738f	          0x83e020	                           and eax, 0x20	      2446	revision.c	FUNCTION_69	IF_29
0x7392	            0x84c0	                             test al, al	      2446	revision.c	FUNCTION_69	IF_29
0x7394	            0x7422	                            je 0x40073f8	      2446	revision.c	FUNCTION_69	IF_29
0x7396	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2447	revision.c	FUNCTION_69	IF_29
0x739d	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      2447	revision.c	FUNCTION_69	IF_29
0x73a1	          0x83ca04	                               or edx, 4	      2447	revision.c	FUNCTION_69	IF_29
0x73a4	          0x885076	               mov byte [rax + 0x76], dl	      2447	revision.c	FUNCTION_69	IF_29
0x73a7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2448	revision.c	FUNCTION_69	IF_29
0x73ae	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      2448	revision.c	FUNCTION_69	IF_29
0x73b2	          0x83ca01	                               or edx, 1	      2448	revision.c	FUNCTION_69	IF_29
0x73b5	          0x885075	               mov byte [rax + 0x75], dl	      2448	revision.c	FUNCTION_69	IF_29
0x73b8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2451	revision.c	FUNCTION_69	CALL_23
0x73bf	    0x4805f8040000	                          add rax, 0x4f8	      2451	revision.c	FUNCTION_69	CALL_23
0x73c5	          0x4889c7	                            mov rdi, rax	      2451	revision.c	FUNCTION_69	CALL_23
0x73c8	      0xe800000000	                          call 0x400740d	      2451	revision.c	FUNCTION_69	CALL_23
0x73cd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2453	revision.c	FUNCTION_69	CALL_24
0x73d4	    0x480550010000	                          add rax, 0x150	      2453	revision.c	FUNCTION_69	CALL_24
0x73da	          0x4889c6	                            mov rsi, rax	      2453	revision.c	FUNCTION_69	CALL_24
0x73dd	      0xbf00000000	                              mov edi, 0	      2453	revision.c	FUNCTION_69	CALL_24
0x73e2	      0xe800000000	                          call 0x4007427	      2453	revision.c	FUNCTION_69	CALL_24
0x73e7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2455	revision.c	FUNCTION_69	CALL_25
0x73ee	    0x480550010000	                          add rax, 0x150	      2455	revision.c	FUNCTION_69	CALL_25
0x73f4	          0x4889c7	                            mov rdi, rax	      2455	revision.c	FUNCTION_69	CALL_25
0x73f7	      0xe800000000	                          call 0x400743c	      2455	revision.c	FUNCTION_69	CALL_25
0x73fc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2457	revision.c	FUNCTION_69	IF_30
0x7403	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      2457	revision.c	FUNCTION_69	IF_30
0x7407	          0x83e040	                           and eax, 0x40	      2457	revision.c	FUNCTION_69	IF_30
0x740a	            0x84c0	                             test al, al	      2457	revision.c	FUNCTION_69	IF_30
0x740c	            0x7422	                            je 0x4007470	      2457	revision.c	FUNCTION_69	IF_30
0x740e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2457	revision.c	FUNCTION_69	IF_30
0x7415	    0x488b80f80700	           mov rax, qword [rax + 0x7f8] 	      2457	revision.c	FUNCTION_69	IF_30
0x741c	          0x4885c0	                           test rax, rax	      2457	revision.c	FUNCTION_69	IF_30
0x741f	            0x740f	                            je 0x4007470	      2457	revision.c	FUNCTION_69	IF_30
0x7421	      0xbf00000000	                              mov edi, 0	      2458	revision.c	FUNCTION_69	CALL_26
0x7426	      0xb800000000	                              mov eax, 0	      2458	revision.c	FUNCTION_69	CALL_26
0x742b	      0xe800000000	                          call 0x4007470	      2458	revision.c	FUNCTION_69	CALL_26
0x7430	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2459	revision.c	FUNCTION_69	IF_31
0x7437	    0x488b80f80700	           mov rax, qword [rax + 0x7f8] 	      2459	revision.c	FUNCTION_69	IF_31
0x743e	          0x4885c0	                           test rax, rax	      2459	revision.c	FUNCTION_69	IF_31
0x7441	            0x7421	                            je 0x40074a4	      2459	revision.c	FUNCTION_69	IF_31
0x7443	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2459	revision.c	FUNCTION_69	IF_31
0x744a	         0xfb64076	           movzx eax, byte [rax + 0x76] 	      2459	revision.c	FUNCTION_69	IF_31
0x744e	          0x83e004	                              and eax, 4	      2459	revision.c	FUNCTION_69	IF_31
0x7451	            0x84c0	                             test al, al	      2459	revision.c	FUNCTION_69	IF_31
0x7453	            0x740f	                            je 0x40074a4	      2459	revision.c	FUNCTION_69	IF_31
0x7455	      0xbf00000000	                              mov edi, 0	      2460	revision.c	FUNCTION_69	CALL_27
0x745a	      0xb800000000	                              mov eax, 0	      2460	revision.c	FUNCTION_69	CALL_27
0x745f	      0xe800000000	                          call 0x40074a4	      2460	revision.c	FUNCTION_69	CALL_27
0x7464	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2461	revision.c	FUNCTION_69	IF_32
0x746b	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      2461	revision.c	FUNCTION_69	IF_32
0x746f	          0x83e004	                              and eax, 4	      2461	revision.c	FUNCTION_69	IF_32
0x7472	            0x84c0	                             test al, al	      2461	revision.c	FUNCTION_69	IF_32
0x7474	            0x7422	                            je 0x40074d8	      2461	revision.c	FUNCTION_69	IF_32
0x7476	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2461	revision.c	FUNCTION_69	IF_32
0x747d	    0x488b80000800	           mov rax, qword [rax + 0x800] 	      2461	revision.c	FUNCTION_69	IF_32
0x7484	          0x4885c0	                           test rax, rax	      2461	revision.c	FUNCTION_69	IF_32
0x7487	            0x740f	                            je 0x40074d8	      2461	revision.c	FUNCTION_69	IF_32
0x7489	      0xbf00000000	                              mov edi, 0	      2462	revision.c	FUNCTION_69	CALL_28
0x748e	      0xb800000000	                              mov eax, 0	      2462	revision.c	FUNCTION_69	CALL_28
0x7493	      0xe800000000	                          call 0x40074d8	      2462	revision.c	FUNCTION_69	CALL_28
0x7498	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2467	revision.c	FUNCTION_69	IF_33
0x749f	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      2467	revision.c	FUNCTION_69	IF_33
0x74a3	          0x83e040	                           and eax, 0x40	      2467	revision.c	FUNCTION_69	IF_33
0x74a6	            0x84c0	                             test al, al	      2467	revision.c	FUNCTION_69	IF_33
0x74a8	            0x7422	                            je 0x400750c	      2467	revision.c	FUNCTION_69	IF_33
0x74aa	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2467	revision.c	FUNCTION_69	IF_33
0x74b1	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	      2467	revision.c	FUNCTION_69	IF_33
0x74b8	          0x4885c0	                           test rax, rax	      2467	revision.c	FUNCTION_69	IF_33
0x74bb	            0x740f	                            je 0x400750c	      2467	revision.c	FUNCTION_69	IF_33
0x74bd	      0xbf00000000	                              mov edi, 0	      2468	revision.c	FUNCTION_69	CALL_29
0x74c2	      0xb800000000	                              mov eax, 0	      2468	revision.c	FUNCTION_69	CALL_29
0x74c7	      0xe800000000	                          call 0x400750c	      2468	revision.c	FUNCTION_69	CALL_29
0x74cc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2470	revision.c	FUNCTION_69	IF_34
0x74d3	    0x488b80f80700	           mov rax, qword [rax + 0x7f8] 	      2470	revision.c	FUNCTION_69	IF_34
0x74da	          0x4885c0	                           test rax, rax	      2470	revision.c	FUNCTION_69	IF_34
0x74dd	            0x7422	                            je 0x4007541	      2470	revision.c	FUNCTION_69	IF_34
0x74df	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2470	revision.c	FUNCTION_69	IF_34
0x74e6	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	      2470	revision.c	FUNCTION_69	IF_34
0x74ed	          0x4885c0	                           test rax, rax	      2470	revision.c	FUNCTION_69	IF_34
0x74f0	            0x740f	                            je 0x4007541	      2470	revision.c	FUNCTION_69	IF_34
0x74f2	      0xbf00000000	                              mov edi, 0	      2471	revision.c	FUNCTION_69	CALL_30
0x74f7	      0xb800000000	                              mov eax, 0	      2471	revision.c	FUNCTION_69	CALL_30
0x74fc	      0xe800000000	                          call 0x4007541	      2471	revision.c	FUNCTION_69	CALL_30
0x7501	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2472	revision.c	FUNCTION_69	IF_35
0x7508	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      2472	revision.c	FUNCTION_69	IF_35
0x750c	          0x83e030	                           and eax, 0x30	      2472	revision.c	FUNCTION_69	IF_35
0x750f	            0x84c0	                             test al, al	      2472	revision.c	FUNCTION_69	IF_35
0x7511	            0x7422	                            je 0x4007575	      2472	revision.c	FUNCTION_69	IF_35
0x7513	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2472	revision.c	FUNCTION_69	IF_35
0x751a	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	      2472	revision.c	FUNCTION_69	IF_35
0x7521	          0x4885c0	                           test rax, rax	      2472	revision.c	FUNCTION_69	IF_35
0x7524	            0x740f	                            je 0x4007575	      2472	revision.c	FUNCTION_69	IF_35
0x7526	      0xbf00000000	                              mov edi, 0	      2473	revision.c	FUNCTION_69	CALL_31
0x752b	      0xb800000000	                              mov eax, 0	      2473	revision.c	FUNCTION_69	CALL_31
0x7530	      0xe800000000	                          call 0x4007575	      2473	revision.c	FUNCTION_69	CALL_31
0x7535	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2474	revision.c	FUNCTION_69	IF_36
0x753c	    0x488b80f80700	           mov rax, qword [rax + 0x7f8] 	      2474	revision.c	FUNCTION_69	IF_36
0x7543	          0x4885c0	                           test rax, rax	      2474	revision.c	FUNCTION_69	IF_36
0x7546	            0x7520	                           jne 0x40075a8	      2474	revision.c	FUNCTION_69	IF_36
0x7548	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2474	revision.c	FUNCTION_69	IF_36
0x754f	    0x8b8000020000	           mov eax, dword [rax + 0x200] 	      2474	revision.c	FUNCTION_69	IF_36
0x7555	            0x85c0	                           test eax, eax	      2474	revision.c	FUNCTION_69	IF_36
0x7557	            0x740f	                            je 0x40075a8	      2474	revision.c	FUNCTION_69	IF_36
0x7559	      0xbf00000000	                              mov edi, 0	      2475	revision.c	FUNCTION_69	CALL_32
0x755e	      0xb800000000	                              mov eax, 0	      2475	revision.c	FUNCTION_69	CALL_32
0x7563	      0xe800000000	                          call 0x40075a8	      2475	revision.c	FUNCTION_69	CALL_32
0x7568	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2477	revision.c	FUNCTION_69	IF_37
0x756f	         0xfb64078	           movzx eax, byte [rax + 0x78] 	      2477	revision.c	FUNCTION_69	IF_37
0x7573	          0x83e010	                           and eax, 0x10	      2477	revision.c	FUNCTION_69	IF_37
0x7576	            0x84c0	                             test al, al	      2477	revision.c	FUNCTION_69	IF_37
0x7578	            0x7429	                            je 0x40075e3	      2477	revision.c	FUNCTION_69	IF_37
0x757a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2477	revision.c	FUNCTION_69	IF_37
0x7581	         0xfb64078	           movzx eax, byte [rax + 0x78] 	      2477	revision.c	FUNCTION_69	IF_37
0x7585	          0x83e004	                              and eax, 4	      2477	revision.c	FUNCTION_69	IF_37
0x7588	            0x84c0	                             test al, al	      2477	revision.c	FUNCTION_69	IF_37
0x758a	            0x7417	                            je 0x40075e3	      2477	revision.c	FUNCTION_69	IF_37
0x758c	      0xbf00000000	                              mov edi, 0	      2478	revision.c	FUNCTION_69	CALL_34
0x7591	      0xe8338effff	                               call sym.	      2478	revision.c	FUNCTION_69	CALL_34
0x7596	          0x4889c7	                            mov rdi, rax	      2478	revision.c	FUNCTION_69	CALL_34
0x7599	      0xb800000000	                              mov eax, 0	      2478	revision.c	FUNCTION_69	CALL_34
0x759e	      0xe800000000	                          call 0x40075e3	      2478	revision.c	FUNCTION_69	CALL_34
0x75a3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2480	revision.c	FUNCTION_69	IF_38
0x75aa	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      2480	revision.c	FUNCTION_69	IF_38
0x75b0	            0x85c0	                           test eax, eax	      2480	revision.c	FUNCTION_69	IF_38
0x75b2	            0x791a	                           jns 0x400760e	      2480	revision.c	FUNCTION_69	IF_38
0x75b4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2481	revision.c	FUNCTION_69	IF_38
0x75bb	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      2481	revision.c	FUNCTION_69	IF_38
0x75c1	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2481	revision.c	FUNCTION_69	IF_38
0x75c8	    0x899098000000	             mov dword [rax + 0x98], edx	      2481	revision.c	FUNCTION_69	IF_38
0x75ce	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2483	revision.c	FUNCTION_69
0x75d4	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2484	revision.c	FUNCTION_69
0x75d8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2484	revision.c	FUNCTION_69
0x75e1	            0x7405	                            je 0x4007628	      2484	revision.c	FUNCTION_69
0x75e3	      0xe800000000	                          call 0x4007628	      2484	revision.c	FUNCTION_69
0x75e8	              0xc9	                                   leave	      2484	revision.c	FUNCTION_69
0x75e9	              0xc3	                                     ret	      2484	revision.c	FUNCTION_69
add_pending_object_with_mode	FOR,0:functions,0:WHILE,0:CALL,1:IF,0:ELSE,0:DO,0:SWITCH,0	17
0xb02	              0x55	                                push rbp	       171	revision.c	FUNCTION_7
0xb03	          0x4889e5	                            mov rbp, rsp	       171	revision.c	FUNCTION_7
0xb06	        0x4883ec20	                           sub rsp, 0x20	       171	revision.c	FUNCTION_7
0xb0a	        0x48897df8	                mov qword [rbp - 8], rdi	       171	revision.c	FUNCTION_7
0xb0e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       171	revision.c	FUNCTION_7
0xb12	        0x488955e8	             mov qword [rbp - 0x18], rdx	       171	revision.c	FUNCTION_7
0xb16	          0x894de4	             mov dword [rbp - 0x1c], ecx	       171	revision.c	FUNCTION_7
0xb19	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       172	revision.c	FUNCTION_7	CALL_1
0xb1c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       172	revision.c	FUNCTION_7	CALL_1
0xb20	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       172	revision.c	FUNCTION_7	CALL_1
0xb24	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	revision.c	FUNCTION_7	CALL_1
0xb28	    0x41b800000000	                              mov r8d, 0	       172	revision.c	FUNCTION_7	CALL_1
0xb2e	          0x4889c7	                            mov rdi, rax	       172	revision.c	FUNCTION_7	CALL_1
0xb31	      0xe84dfeffff	   call sym.add_pending_object_with_path	       172	revision.c	FUNCTION_7	CALL_1
0xb36	              0x90	                                     nop	       173	revision.c	FUNCTION_7
0xb37	              0xc9	                                   leave	       173	revision.c	FUNCTION_7
0xb38	              0xc3	                                     ret	       173	revision.c	FUNCTION_7
commit_list_insert_by_date_cached	FOR,0:functions,0:WHILE,0:CALL,2:IF,2:ELSE,1:DO,0:SWITCH,0	50
0x1be5	              0x55	                                push rbp	       735	revision.c	FUNCTION_25
0x1be6	          0x4889e5	                            mov rbp, rsp	       735	revision.c	FUNCTION_25
0x1be9	        0x4883ec30	                           sub rsp, 0x30	       735	revision.c	FUNCTION_25
0x1bed	        0x48897de8	             mov qword [rbp - 0x18], rdi	       735	revision.c	FUNCTION_25
0x1bf1	        0x488975e0	             mov qword [rbp - 0x20], rsi	       735	revision.c	FUNCTION_25
0x1bf5	        0x488955d8	             mov qword [rbp - 0x28], rdx	       735	revision.c	FUNCTION_25
0x1bf9	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       735	revision.c	FUNCTION_25
0x1bfd	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       738	revision.c	FUNCTION_25	IF_1
0x1c02	            0x7435	                            je 0x4001c79	       738	revision.c	FUNCTION_25	IF_1
0x1c04	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       738	revision.c	FUNCTION_25	IF_1
0x1c08	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       738	revision.c	FUNCTION_25	IF_1
0x1c0c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       738	revision.c	FUNCTION_25	IF_1
0x1c10	          0x488b00	                    mov rax, qword [rax]	       738	revision.c	FUNCTION_25	IF_1
0x1c13	        0x488b4028	            mov rax, qword [rax + 0x28] 	       738	revision.c	FUNCTION_25	IF_1
0x1c17	          0x4839c2	                            cmp rdx, rax	       738	revision.c	FUNCTION_25	IF_1
0x1c1a	            0x731d	                           jae 0x4001c79	       738	revision.c	FUNCTION_25	IF_1
0x1c1c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       739	revision.c	FUNCTION_25	CALL_1
0x1c20	        0x488d5008	                      lea rdx, [rax + 8]	       739	revision.c	FUNCTION_25	CALL_1
0x1c24	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       739	revision.c	FUNCTION_25	CALL_1
0x1c28	          0x4889d6	                            mov rsi, rdx	       739	revision.c	FUNCTION_25	CALL_1
0x1c2b	          0x4889c7	                            mov rdi, rax	       739	revision.c	FUNCTION_25	CALL_1
0x1c2e	      0xe800000000	                          call 0x4001c73	       739	revision.c	FUNCTION_25	CALL_1
0x1c33	        0x488945f8	                mov qword [rbp - 8], rax	       739	revision.c	FUNCTION_25	CALL_1
0x1c37	            0xeb17	                           jmp 0x4001c90	       739	revision.c	FUNCTION_25	CALL_1
0x1c39	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       741	revision.c	FUNCTION_25	CALL_2
0x1c3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       741	revision.c	FUNCTION_25	CALL_2
0x1c41	          0x4889d6	                            mov rsi, rdx	       741	revision.c	FUNCTION_25	CALL_2
0x1c44	          0x4889c7	                            mov rdi, rax	       741	revision.c	FUNCTION_25	CALL_2
0x1c47	      0xe800000000	                          call 0x4001c8c	       741	revision.c	FUNCTION_25	CALL_2
0x1c4c	        0x488945f8	                mov qword [rbp - 8], rax	       741	revision.c	FUNCTION_25	CALL_2
0x1c50	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       743	revision.c	FUNCTION_25	IF_2
0x1c55	            0x7432	                            je 0x4001cc9	       743	revision.c	FUNCTION_25	IF_2
0x1c57	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       743	revision.c	FUNCTION_25	IF_2
0x1c5b	          0x488b00	                    mov rax, qword [rax]	       743	revision.c	FUNCTION_25	IF_2
0x1c5e	          0x4885c0	                           test rax, rax	       743	revision.c	FUNCTION_25	IF_2
0x1c61	            0x741b	                            je 0x4001cbe	       743	revision.c	FUNCTION_25	IF_2
0x1c63	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       743	revision.c	FUNCTION_25	IF_2
0x1c67	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       743	revision.c	FUNCTION_25	IF_2
0x1c6b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       743	revision.c	FUNCTION_25	IF_2
0x1c6f	          0x488b00	                    mov rax, qword [rax]	       743	revision.c	FUNCTION_25	IF_2
0x1c72	          0x488b00	                    mov rax, qword [rax]	       743	revision.c	FUNCTION_25	IF_2
0x1c75	        0x488b4028	            mov rax, qword [rax + 0x28] 	       743	revision.c	FUNCTION_25	IF_2
0x1c79	          0x4839c2	                            cmp rdx, rax	       743	revision.c	FUNCTION_25	IF_2
0x1c7c	            0x730b	                           jae 0x4001cc9	       743	revision.c	FUNCTION_25	IF_2
0x1c7e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       744	revision.c	FUNCTION_25	IF_2
0x1c82	        0x488b55f8	                mov rdx, qword [rbp - 8]	       744	revision.c	FUNCTION_25	IF_2
0x1c86	          0x488910	                    mov qword [rax], rdx	       744	revision.c	FUNCTION_25	IF_2
0x1c89	              0x90	                                     nop	       745	revision.c	FUNCTION_25
0x1c8a	              0xc9	                                   leave	       745	revision.c	FUNCTION_25
0x1c8b	              0xc3	                                     ret	       745	revision.c	FUNCTION_25
want_ancestry	FOR,0:functions,0:WHILE,0:CALL,0:IF,0:ELSE,0:DO,0:SWITCH,0	17
0x8935	              0x55	                                push rbp	      3070	revision.c	FUNCTION_87
0x8936	          0x4889e5	                            mov rbp, rsp	      3070	revision.c	FUNCTION_87
0x8939	        0x48897df8	                mov qword [rbp - 8], rdi	      3070	revision.c	FUNCTION_87
0x893d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3071	revision.c	FUNCTION_87
0x8941	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      3071	revision.c	FUNCTION_87
0x8945	          0x83e004	                              and eax, 4	      3071	revision.c	FUNCTION_87
0x8948	            0x84c0	                             test al, al	      3071	revision.c	FUNCTION_87
0x894a	            0x7510	                           jne 0x400899c	      3071	revision.c	FUNCTION_87
0x894c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3071	revision.c	FUNCTION_87
0x8950	    0x488b80000800	           mov rax, qword [rax + 0x800] 	      3071	revision.c	FUNCTION_87
0x8957	          0x4885c0	                           test rax, rax	      3071	revision.c	FUNCTION_87
0x895a	            0x7407	                            je 0x40089a3	      3071	revision.c	FUNCTION_87
0x895c	      0xb801000000	                              mov eax, 1	      3071	revision.c	FUNCTION_87
0x8961	            0xeb05	                           jmp 0x40089a8	      3071	revision.c	FUNCTION_87
0x8963	      0xb800000000	                              mov eax, 0	      3071	revision.c	FUNCTION_87
0x8968	              0x5d	                                 pop rbp	      3072	revision.c	FUNCTION_87
0x8969	              0xc3	                                     ret	      3072	revision.c	FUNCTION_87
update_treesame	FOR,1:functions,0:WHILE,0:CALL,4:IF,4:ELSE,2:DO,0:SWITCH,0	113
0x162f	              0x55	                                push rbp	       562	revision.c	FUNCTION_22
0x1630	          0x4889e5	                            mov rbp, rsp	       562	revision.c	FUNCTION_22
0x1633	        0x4883ec30	                           sub rsp, 0x30	       562	revision.c	FUNCTION_22
0x1637	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       562	revision.c	FUNCTION_22
0x163b	        0x488975d0	             mov qword [rbp - 0x30], rsi	       562	revision.c	FUNCTION_22
0x163f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       563	revision.c	FUNCTION_22	IF_1
0x1643	        0x488b4030	            mov rax, qword [rax + 0x30] 	       563	revision.c	FUNCTION_22	IF_1
0x1647	          0x4885c0	                           test rax, rax	       563	revision.c	FUNCTION_22	IF_1
0x164a	     0xf845d010000	                            je 0x40017ed	       563	revision.c	FUNCTION_22	IF_1
0x1650	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       563	revision.c	FUNCTION_22	IF_1
0x1654	        0x488b4030	            mov rax, qword [rax + 0x30] 	       563	revision.c	FUNCTION_22	IF_1
0x1658	        0x488b4008	                mov rax, qword [rax + 8]	       563	revision.c	FUNCTION_22	IF_1
0x165c	          0x4885c0	                           test rax, rax	       563	revision.c	FUNCTION_22	IF_1
0x165f	     0xf8448010000	                            je 0x40017ed	       563	revision.c	FUNCTION_22	IF_1
0x1665	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       570	revision.c	FUNCTION_22	IF_1	CALL_1
0x1669	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       570	revision.c	FUNCTION_22	IF_1	CALL_1
0x166d	    0x4881c2300800	                          add rdx, 0x830	       570	revision.c	FUNCTION_22	IF_1	CALL_1
0x1674	          0x4889c6	                            mov rsi, rax	       570	revision.c	FUNCTION_22	IF_1	CALL_1
0x1677	          0x4889d7	                            mov rdi, rdx	       570	revision.c	FUNCTION_22	IF_1	CALL_1
0x167a	      0xe800000000	                          call 0x40016bf	       570	revision.c	FUNCTION_22	IF_1	CALL_1
0x167f	        0x488945f8	                mov qword [rbp - 8], rax	       570	revision.c	FUNCTION_22	IF_1	CALL_1
0x1683	      0x48837df800	                  cmp qword [rbp - 8], 0	       571	revision.c	FUNCTION_22	IF_1	IF_2
0x1688	            0x7522	                           jne 0x40016ec	       571	revision.c	FUNCTION_22	IF_1	IF_2
0x168a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       572	revision.c	FUNCTION_22	IF_1	CALL_3
0x168e	        0x4883c004	                              add rax, 4	       572	revision.c	FUNCTION_22	IF_1	CALL_3
0x1692	          0x4889c7	                            mov rdi, rax	       572	revision.c	FUNCTION_22	IF_1	CALL_3
0x1695	      0xe800000000	                          call 0x40016da	       572	revision.c	FUNCTION_22	IF_1	CALL_3
0x169a	          0x4889c6	                            mov rsi, rax	       572	revision.c	FUNCTION_22	IF_1	CALL_3
0x169d	      0xbf00000000	                              mov edi, 0	       572	revision.c	FUNCTION_22	IF_1	CALL_3
0x16a2	      0xb800000000	                              mov eax, 0	       572	revision.c	FUNCTION_22	IF_1	CALL_3
0x16a7	      0xe800000000	                          call 0x40016ec	       572	revision.c	FUNCTION_22	IF_1	CALL_3
0x16ac	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       573	revision.c	FUNCTION_22	IF_1
0x16b3	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       574	revision.c	FUNCTION_22	IF_1
0x16ba	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       574	revision.c	FUNCTION_22	IF_1
0x16bd	          0x8945e8	             mov dword [rbp - 0x18], eax	       574	revision.c	FUNCTION_22	IF_1
0x16c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       575	revision.c	FUNCTION_22	IF_1	FOR_1
0x16c4	        0x488b4030	            mov rax, qword [rax + 0x30] 	       575	revision.c	FUNCTION_22	IF_1	FOR_1
0x16c8	        0x488945f0	             mov qword [rbp - 0x10], rax	       575	revision.c	FUNCTION_22	IF_1	FOR_1
0x16cc	    0xc745e0000000	               mov dword [rbp - 0x20], 0	       575	revision.c	FUNCTION_22	IF_1	FOR_1
0x16d3	            0xeb57	                           jmp 0x400176c	       575	revision.c	FUNCTION_22	IF_1	FOR_1
0x16d5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       576	revision.c	FUNCTION_22	IF_1	FOR_1	IF_3	CALL_4
0x16d9	          0x488b00	                    mov rax, qword [rax]	       576	revision.c	FUNCTION_22	IF_1	FOR_1	IF_3	CALL_4
0x16dc	          0x4889c7	                            mov rdi, rax	       576	revision.c	FUNCTION_22	IF_1	FOR_1	IF_3	CALL_4
0x16df	      0xe898f9ffff	                call sym.relevant_commit	       576	revision.c	FUNCTION_22	IF_1	FOR_1	IF_3	CALL_4
0x16e4	            0x85c0	                           test eax, eax	       576	revision.c	FUNCTION_22	IF_1	FOR_1	IF_3	CALL_4
0x16e6	            0x741d	                            je 0x4001745	       576	revision.c	FUNCTION_22	IF_1	FOR_1	IF_3	CALL_4
0x16e8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       577	revision.c	FUNCTION_22	IF_1	FOR_1	IF_3
0x16ec	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       577	revision.c	FUNCTION_22	IF_1	FOR_1	IF_3
0x16ef	       0xfb6440204	        movzx eax, byte [rdx + rax + 4] 	       577	revision.c	FUNCTION_22	IF_1	FOR_1	IF_3
0x16f4	            0x84c0	                             test al, al	       577	revision.c	FUNCTION_22	IF_1	FOR_1	IF_3
0x16f6	           0xf94c0	                                 sete al	       577	revision.c	FUNCTION_22	IF_1	FOR_1	IF_3
0x16f9	           0xfb6c0	                           movzx eax, al	       577	revision.c	FUNCTION_22	IF_1	FOR_1	IF_3
0x16fc	           0x945e8	              or dword [rbp - 0x18], eax	       577	revision.c	FUNCTION_22	IF_1	FOR_1	IF_3
0x16ff	        0x8345e401	               add dword [rbp - 0x1c], 1	       578	revision.c	FUNCTION_22	IF_1	FOR_1	IF_3
0x1703	            0xeb17	                           jmp 0x400175c	       578	revision.c	FUNCTION_22	IF_1	FOR_1	IF_3
0x1705	        0x488b55f8	                mov rdx, qword [rbp - 8]	       580	revision.c	FUNCTION_22	IF_1	FOR_1	ELSE_1
0x1709	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       580	revision.c	FUNCTION_22	IF_1	FOR_1	ELSE_1
0x170c	       0xfb6440204	        movzx eax, byte [rdx + rax + 4] 	       580	revision.c	FUNCTION_22	IF_1	FOR_1	ELSE_1
0x1711	            0x84c0	                             test al, al	       580	revision.c	FUNCTION_22	IF_1	FOR_1	ELSE_1
0x1713	           0xf94c0	                                 sete al	       580	revision.c	FUNCTION_22	IF_1	FOR_1	ELSE_1
0x1716	           0xfb6c0	                           movzx eax, al	       580	revision.c	FUNCTION_22	IF_1	FOR_1	ELSE_1
0x1719	           0x945ec	              or dword [rbp - 0x14], eax	       580	revision.c	FUNCTION_22	IF_1	FOR_1	ELSE_1
0x171c	        0x8345e001	               add dword [rbp - 0x20], 1	       575	revision.c	FUNCTION_22	IF_1	FOR_1
0x1720	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       575	revision.c	FUNCTION_22	IF_1	FOR_1
0x1724	        0x488b4008	                mov rax, qword [rax + 8]	       575	revision.c	FUNCTION_22	IF_1	FOR_1
0x1728	        0x488945f0	             mov qword [rbp - 0x10], rax	       575	revision.c	FUNCTION_22	IF_1	FOR_1
0x172c	      0x48837df000	               cmp qword [rbp - 0x10], 0	       575	revision.c	FUNCTION_22	IF_1	FOR_1
0x1731	            0x75a2	                           jne 0x4001715	       575	revision.c	FUNCTION_22	IF_1	FOR_1
0x1733	        0x837de400	               cmp dword [rbp - 0x1c], 0	       582	revision.c	FUNCTION_22	IF_1	IF_4
0x1737	            0x7409	                            je 0x4001782	       582	revision.c	FUNCTION_22	IF_1	IF_4
0x1739	        0x837de800	               cmp dword [rbp - 0x18], 0	       582	revision.c	FUNCTION_22	IF_1	IF_4
0x173d	           0xf95c0	                                setne al	       582	revision.c	FUNCTION_22	IF_1	IF_4
0x1740	            0xeb07	                           jmp 0x4001789	       582	revision.c	FUNCTION_22	IF_1	IF_4
0x1742	        0x837dec00	               cmp dword [rbp - 0x14], 0	       582	revision.c	FUNCTION_22	IF_1	IF_4
0x1746	           0xf95c0	                                setne al	       582	revision.c	FUNCTION_22	IF_1	IF_4
0x1749	            0x84c0	                             test al, al	       582	revision.c	FUNCTION_22	IF_1	IF_4
0x174b	            0x7432	                            je 0x40017bf	       582	revision.c	FUNCTION_22	IF_1	IF_4
0x174d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       583	revision.c	FUNCTION_22	IF_1	IF_4
0x1751	            0x8b00	                    mov eax, dword [rax]	       583	revision.c	FUNCTION_22	IF_1	IF_4
0x1753	          0xc1e804	                              shr eax, 4	       583	revision.c	FUNCTION_22	IF_1	IF_4
0x1756	      0x25ffffff07	                      and eax, 0x7ffffff	       583	revision.c	FUNCTION_22	IF_1	IF_4
0x175b	      0x25fbffff07	                      and eax, 0x7fffffb	       583	revision.c	FUNCTION_22	IF_1	IF_4
0x1760	            0x89c2	                            mov edx, eax	       583	revision.c	FUNCTION_22	IF_1	IF_4
0x1762	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       583	revision.c	FUNCTION_22	IF_1	IF_4
0x1766	    0x81e2ffffff07	                      and edx, 0x7ffffff	       583	revision.c	FUNCTION_22	IF_1	IF_4
0x176c	            0x89d1	                            mov ecx, edx	       583	revision.c	FUNCTION_22	IF_1	IF_4
0x176e	          0xc1e104	                              shl ecx, 4	       583	revision.c	FUNCTION_22	IF_1	IF_4
0x1771	            0x8b10	                    mov edx, dword [rax]	       583	revision.c	FUNCTION_22	IF_1	IF_4
0x1773	    0x81e20f000080	                     and edx, 0x8000000f	       583	revision.c	FUNCTION_22	IF_1	IF_4
0x1779	             0x9ca	                             or edx, ecx	       583	revision.c	FUNCTION_22	IF_1	IF_4
0x177b	            0x8910	                    mov dword [rax], edx	       583	revision.c	FUNCTION_22	IF_1	IF_4
0x177d	            0xeb2e	                           jmp 0x40017ed	       583	revision.c	FUNCTION_22	IF_1	IF_4
0x177f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       585	revision.c	FUNCTION_22	IF_1	ELSE_2
0x1783	            0x8b00	                    mov eax, dword [rax]	       585	revision.c	FUNCTION_22	IF_1	ELSE_2
0x1785	          0xc1e804	                              shr eax, 4	       585	revision.c	FUNCTION_22	IF_1	ELSE_2
0x1788	      0x25ffffff07	                      and eax, 0x7ffffff	       585	revision.c	FUNCTION_22	IF_1	ELSE_2
0x178d	          0x83c804	                               or eax, 4	       585	revision.c	FUNCTION_22	IF_1	ELSE_2
0x1790	            0x89c2	                            mov edx, eax	       585	revision.c	FUNCTION_22	IF_1	ELSE_2
0x1792	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       585	revision.c	FUNCTION_22	IF_1	ELSE_2
0x1796	    0x81e2ffffff07	                      and edx, 0x7ffffff	       585	revision.c	FUNCTION_22	IF_1	ELSE_2
0x179c	            0x89d1	                            mov ecx, edx	       585	revision.c	FUNCTION_22	IF_1	ELSE_2
0x179e	          0xc1e104	                              shl ecx, 4	       585	revision.c	FUNCTION_22	IF_1	ELSE_2
0x17a1	            0x8b10	                    mov edx, dword [rax]	       585	revision.c	FUNCTION_22	IF_1	ELSE_2
0x17a3	    0x81e20f000080	                     and edx, 0x8000000f	       585	revision.c	FUNCTION_22	IF_1	ELSE_2
0x17a9	             0x9ca	                             or edx, ecx	       585	revision.c	FUNCTION_22	IF_1	ELSE_2
0x17ab	            0x8910	                    mov dword [rax], edx	       585	revision.c	FUNCTION_22	IF_1	ELSE_2
0x17ad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       588	revision.c	FUNCTION_22	ELSE_2
0x17b1	            0x8b00	                    mov eax, dword [rax]	       588	revision.c	FUNCTION_22	ELSE_2
0x17b3	          0xc1e804	                              shr eax, 4	       588	revision.c	FUNCTION_22	ELSE_2
0x17b6	      0x25ffffff07	                      and eax, 0x7ffffff	       588	revision.c	FUNCTION_22	ELSE_2
0x17bb	          0x83e004	                              and eax, 4	       588	revision.c	FUNCTION_22	ELSE_2
0x17be	              0xc9	                                   leave	       589	revision.c	FUNCTION_22	ELSE_2
0x17bf	              0xc3	                                     ret	       589	revision.c	FUNCTION_22	ELSE_2
commit_rewrite_person	FOR,0:functions,0:WHILE,0:CALL,8:IF,4:ELSE,0:DO,0:SWITCH,0	127
0x84aa	              0x55	                                push rbp	      2961	revision.c	FUNCTION_85
0x84ab	          0x4889e5	                            mov rbp, rsp	      2961	revision.c	FUNCTION_85
0x84ae	    0x4881ecd00000	                           sub rsp, 0xd0	      2961	revision.c	FUNCTION_85
0x84b5	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      2961	revision.c	FUNCTION_85
0x84bc	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	      2961	revision.c	FUNCTION_85
0x84c3	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	      2961	revision.c	FUNCTION_85
0x84ca	    0x64488b042528	                mov rax, qword fs:[0x28]	      2961	revision.c	FUNCTION_85
0x84d3	        0x488945f8	                mov qword [rbp - 8], rax	      2961	revision.c	FUNCTION_85
0x84d7	            0x31c0	                            xor eax, eax	      2961	revision.c	FUNCTION_85
0x84d9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2968	revision.c	FUNCTION_85	CALL_1
0x84e0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2968	revision.c	FUNCTION_85	CALL_1
0x84e4	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      2968	revision.c	FUNCTION_85	CALL_1
0x84eb	          0x4889d6	                            mov rsi, rdx	      2968	revision.c	FUNCTION_85	CALL_1
0x84ee	          0x4889c7	                            mov rdi, rax	      2968	revision.c	FUNCTION_85	CALL_1
0x84f1	      0xe800000000	                          call 0x4008536	      2968	revision.c	FUNCTION_85	CALL_1
0x84f6	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2968	revision.c	FUNCTION_85	CALL_1
0x84fd	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      2969	revision.c	FUNCTION_85	IF_1
0x8505	            0x750a	                           jne 0x4008551	      2969	revision.c	FUNCTION_85	IF_1
0x8507	      0xb800000000	                              mov eax, 0	      2970	revision.c	FUNCTION_85	IF_1
0x850c	      0xe9be010000	                           jmp 0x400870f	      2970	revision.c	FUNCTION_85	IF_1
0x8511	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2972	revision.c	FUNCTION_85	CALL_2
0x8518	          0x4889c7	                            mov rdi, rax	      2972	revision.c	FUNCTION_85	CALL_2
0x851b	      0xe800000000	                          call 0x4008560	      2972	revision.c	FUNCTION_85	CALL_2
0x8520	    0x48018578ffff	            add qword [rbp - 0x88], rax 	      2972	revision.c	FUNCTION_85	CALL_2
0x8527	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2973	revision.c	FUNCTION_85	CALL_3
0x852e	      0xbe0a000000	                            mov esi, 0xa	      2973	revision.c	FUNCTION_85	CALL_3
0x8533	          0x4889c7	                            mov rdi, rax	      2973	revision.c	FUNCTION_85	CALL_3
0x8536	      0xe800000000	                          call 0x400857b	      2973	revision.c	FUNCTION_85	CALL_3
0x853b	        0x48894580	             mov qword [rbp - 0x80], rax	      2973	revision.c	FUNCTION_85	CALL_3
0x853f	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      2974	revision.c	FUNCTION_85	IF_2
0x8544	            0x750a	                           jne 0x4008590	      2974	revision.c	FUNCTION_85	IF_2
0x8546	      0xb800000000	                              mov eax, 0	      2975	revision.c	FUNCTION_85	IF_2
0x854b	      0xe97f010000	                           jmp 0x400870f	      2975	revision.c	FUNCTION_85	IF_2
0x8550	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2977	revision.c	FUNCTION_85
0x8554	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2977	revision.c	FUNCTION_85
0x855b	          0x4829c2	                            sub rdx, rax	      2977	revision.c	FUNCTION_85
0x855e	          0x4889d0	                            mov rax, rdx	      2977	revision.c	FUNCTION_85
0x8561	        0x48894588	             mov qword [rbp - 0x78], rax	      2977	revision.c	FUNCTION_85
0x8565	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2979	revision.c	FUNCTION_85	IF_3	CALL_4
0x8569	            0x89c2	                            mov edx, eax	      2979	revision.c	FUNCTION_85	IF_3	CALL_4
0x856b	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      2979	revision.c	FUNCTION_85	IF_3	CALL_4
0x8572	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2979	revision.c	FUNCTION_85	IF_3	CALL_4
0x8576	          0x4889ce	                            mov rsi, rcx	      2979	revision.c	FUNCTION_85	IF_3	CALL_4
0x8579	          0x4889c7	                            mov rdi, rax	      2979	revision.c	FUNCTION_85	IF_3	CALL_4
0x857c	      0xe800000000	                          call 0x40085c1	      2979	revision.c	FUNCTION_85	IF_3	CALL_4
0x8581	            0x85c0	                           test eax, eax	      2979	revision.c	FUNCTION_85	IF_3	CALL_4
0x8583	            0x740a	                            je 0x40085cf	      2979	revision.c	FUNCTION_85	IF_3	CALL_4
0x8585	      0xb800000000	                              mov eax, 0	      2980	revision.c	FUNCTION_85	IF_3
0x858a	      0xe940010000	                           jmp 0x400870f	      2980	revision.c	FUNCTION_85	IF_3
0x858f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2982	revision.c	FUNCTION_85
0x8593	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2982	revision.c	FUNCTION_85
0x859a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2983	revision.c	FUNCTION_85
0x859e	          0x4889c2	                            mov rdx, rax	      2983	revision.c	FUNCTION_85
0x85a1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2983	revision.c	FUNCTION_85
0x85a5	          0x4829c2	                            sub rdx, rax	      2983	revision.c	FUNCTION_85
0x85a8	          0x4889d0	                            mov rax, rdx	      2983	revision.c	FUNCTION_85
0x85ab	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2983	revision.c	FUNCTION_85
0x85b2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2984	revision.c	FUNCTION_85
0x85b6	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2984	revision.c	FUNCTION_85
0x85bd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2985	revision.c	FUNCTION_85
0x85c1	          0x4889c2	                            mov rdx, rax	      2985	revision.c	FUNCTION_85
0x85c4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2985	revision.c	FUNCTION_85
0x85c8	          0x4829c2	                            sub rdx, rax	      2985	revision.c	FUNCTION_85
0x85cb	          0x4889d0	                            mov rax, rdx	      2985	revision.c	FUNCTION_85
0x85ce	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2985	revision.c	FUNCTION_85
0x85d5	    0x488dbd58ffff	                   lea rdi, [rbp - 0xa8]	      2987	revision.c	FUNCTION_85	IF_4	CALL_5
0x85dc	    0x488d8d68ffff	                   lea rcx, [rbp - 0x98]	      2987	revision.c	FUNCTION_85	IF_4	CALL_5
0x85e3	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      2987	revision.c	FUNCTION_85	IF_4	CALL_5
0x85ea	    0x488db570ffff	                   lea rsi, [rbp - 0x90]	      2987	revision.c	FUNCTION_85	IF_4	CALL_5
0x85f1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2987	revision.c	FUNCTION_85	IF_4	CALL_5
0x85f8	          0x4989f8	                             mov r8, rdi	      2987	revision.c	FUNCTION_85	IF_4	CALL_5
0x85fb	          0x4889c7	                            mov rdi, rax	      2987	revision.c	FUNCTION_85	IF_4	CALL_5
0x85fe	      0xe800000000	                          call 0x4008643	      2987	revision.c	FUNCTION_85	IF_4	CALL_5
0x8603	            0x85c0	                           test eax, eax	      2987	revision.c	FUNCTION_85	IF_4	CALL_5
0x8605	     0xf84bf000000	                            je 0x400870a	      2987	revision.c	FUNCTION_85	IF_4	CALL_5
0x860b	    0x48c745900000	               mov qword [rbp - 0x70], 0	      2988	revision.c	FUNCTION_85	IF_4
0x8613	    0x48c745980000	               mov qword [rbp - 0x68], 0	      2988	revision.c	FUNCTION_85	IF_4
0x861b	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      2988	revision.c	FUNCTION_85	IF_4
0x8623	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      2990	revision.c	FUNCTION_85	IF_4	CALL_6
0x862a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2990	revision.c	FUNCTION_85	IF_4	CALL_6
0x8631	            0x89c7	                            mov edi, eax	      2990	revision.c	FUNCTION_85	IF_4	CALL_6
0x8633	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      2990	revision.c	FUNCTION_85	IF_4	CALL_6
0x863a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2990	revision.c	FUNCTION_85	IF_4	CALL_6
0x8641	            0x89c6	                            mov esi, eax	      2990	revision.c	FUNCTION_85	IF_4	CALL_6
0x8643	        0x488d4590	                   lea rax, [rbp - 0x70]	      2990	revision.c	FUNCTION_85	IF_4	CALL_6
0x8647	          0x4989c9	                             mov r9, rcx	      2990	revision.c	FUNCTION_85	IF_4	CALL_6
0x864a	          0x4189f8	                            mov r8d, edi	      2990	revision.c	FUNCTION_85	IF_4	CALL_6
0x864d	          0x4889d1	                            mov rcx, rdx	      2990	revision.c	FUNCTION_85	IF_4	CALL_6
0x8650	            0x89f2	                            mov edx, esi	      2990	revision.c	FUNCTION_85	IF_4	CALL_6
0x8652	      0xbe00000000	                              mov esi, 0	      2990	revision.c	FUNCTION_85	IF_4	CALL_6
0x8657	          0x4889c7	                            mov rdi, rax	      2990	revision.c	FUNCTION_85	IF_4	CALL_6
0x865a	      0xb800000000	                              mov eax, 0	      2990	revision.c	FUNCTION_85	IF_4	CALL_6
0x865f	      0xe800000000	                          call 0x40086a4	      2990	revision.c	FUNCTION_85	IF_4	CALL_6
0x8664	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2993	revision.c	FUNCTION_85	IF_4	CALL_7
0x8668	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2995	revision.c	FUNCTION_85	IF_4
0x866c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2994	revision.c	FUNCTION_85	IF_4
0x8670	          0x4889c6	                            mov rsi, rax	      2994	revision.c	FUNCTION_85	IF_4
0x8673	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2994	revision.c	FUNCTION_85	IF_4
0x8677	          0x4829c6	                            sub rsi, rax	      2994	revision.c	FUNCTION_85	IF_4
0x867a	          0x4889f0	                            mov rax, rsi	      2994	revision.c	FUNCTION_85	IF_4
0x867d	        0x4883c001	                              add rax, 1	      2994	revision.c	FUNCTION_85	IF_4
0x8681	          0x4889c7	                            mov rdi, rax	      2993	revision.c	FUNCTION_85	IF_4	CALL_7
0x8684	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2993	revision.c	FUNCTION_85	IF_4	CALL_7
0x8688	          0x4889c6	                            mov rsi, rax	      2993	revision.c	FUNCTION_85	IF_4	CALL_7
0x868b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2993	revision.c	FUNCTION_85	IF_4	CALL_7
0x8692	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2993	revision.c	FUNCTION_85	IF_4	CALL_7
0x8696	          0x4829c6	                            sub rsi, rax	      2993	revision.c	FUNCTION_85	IF_4	CALL_7
0x8699	          0x4889f0	                            mov rax, rsi	      2993	revision.c	FUNCTION_85	IF_4	CALL_7
0x869c	          0x4889c6	                            mov rsi, rax	      2993	revision.c	FUNCTION_85	IF_4	CALL_7
0x869f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2993	revision.c	FUNCTION_85	IF_4	CALL_7
0x86a6	          0x4989c8	                             mov r8, rcx	      2993	revision.c	FUNCTION_85	IF_4	CALL_7
0x86a9	          0x4889d1	                            mov rcx, rdx	      2993	revision.c	FUNCTION_85	IF_4	CALL_7
0x86ac	          0x4889fa	                            mov rdx, rdi	      2993	revision.c	FUNCTION_85	IF_4	CALL_7
0x86af	          0x4889c7	                            mov rdi, rax	      2993	revision.c	FUNCTION_85	IF_4	CALL_7
0x86b2	      0xe800000000	                          call 0x40086f7	      2993	revision.c	FUNCTION_85	IF_4	CALL_7
0x86b7	        0x488d4590	                   lea rax, [rbp - 0x70]	      2997	revision.c	FUNCTION_85	IF_4	CALL_8
0x86bb	          0x4889c7	                            mov rdi, rax	      2997	revision.c	FUNCTION_85	IF_4	CALL_8
0x86be	      0xe800000000	                          call 0x4008703	      2997	revision.c	FUNCTION_85	IF_4	CALL_8
0x86c3	      0xb801000000	                              mov eax, 1	      2999	revision.c	FUNCTION_85	IF_4
0x86c8	            0xeb05	                           jmp 0x400870f	      2999	revision.c	FUNCTION_85	IF_4
0x86ca	      0xb800000000	                              mov eax, 0	      3002	revision.c	FUNCTION_85
0x86cf	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3003	revision.c	FUNCTION_85
0x86d3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3003	revision.c	FUNCTION_85
0x86dc	            0x7405	                            je 0x4008723	      3003	revision.c	FUNCTION_85
0x86de	      0xe800000000	                          call 0x4008723	      3003	revision.c	FUNCTION_85
0x86e3	              0xc9	                                   leave	      3003	revision.c	FUNCTION_85
0x86e4	              0xc3	                                     ret	      3003	revision.c	FUNCTION_85
handle_commit	FOR,0:functions,0:WHILE,1:CALL,13:IF,14:ELSE,0:DO,0:SWITCH,0	214
0xce8	              0x55	                                push rbp	       220	revision.c	FUNCTION_12
0xce9	          0x4889e5	                            mov rbp, rsp	       220	revision.c	FUNCTION_12
0xcec	        0x4883ec50	                           sub rsp, 0x50	       220	revision.c	FUNCTION_12
0xcf0	        0x48897db8	             mov qword [rbp - 0x48], rdi	       220	revision.c	FUNCTION_12
0xcf4	        0x488975b0	             mov qword [rbp - 0x50], rsi	       220	revision.c	FUNCTION_12
0xcf8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       221	revision.c	FUNCTION_12
0xcfc	          0x488b00	                    mov rax, qword [rax]	       221	revision.c	FUNCTION_12
0xcff	        0x488945c8	             mov qword [rbp - 0x38], rax	       221	revision.c	FUNCTION_12
0xd03	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       222	revision.c	FUNCTION_12
0xd07	        0x488b4008	                mov rax, qword [rax + 8]	       222	revision.c	FUNCTION_12
0xd0b	        0x488945d8	             mov qword [rbp - 0x28], rax	       222	revision.c	FUNCTION_12
0xd0f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       223	revision.c	FUNCTION_12
0xd13	        0x488b4010	            mov rax, qword [rax + 0x10] 	       223	revision.c	FUNCTION_12
0xd17	        0x488945d0	             mov qword [rbp - 0x30], rax	       223	revision.c	FUNCTION_12
0xd1b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       224	revision.c	FUNCTION_12
0xd1f	          0x8b4018	            mov eax, dword [rax + 0x18] 	       224	revision.c	FUNCTION_12
0xd22	          0x8945c4	             mov dword [rbp - 0x3c], eax	       224	revision.c	FUNCTION_12
0xd25	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       225	revision.c	FUNCTION_12
0xd29	            0x8b00	                    mov eax, dword [rax]	       225	revision.c	FUNCTION_12
0xd2b	          0xc1e804	                              shr eax, 4	       225	revision.c	FUNCTION_12
0xd2e	      0x25ffffff07	                      and eax, 0x7ffffff	       225	revision.c	FUNCTION_12
0xd33	            0x89c0	                            mov eax, eax	       225	revision.c	FUNCTION_12
0xd35	        0x488945e0	             mov qword [rbp - 0x20], rax	       225	revision.c	FUNCTION_12
0xd39	      0xe90b010000	                           jmp 0x4000e89	       230	revision.c	FUNCTION_12	WHILE_1
0xd3e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       231	revision.c	FUNCTION_12	WHILE_1
0xd42	        0x488945e8	             mov qword [rbp - 0x18], rax	       231	revision.c	FUNCTION_12	WHILE_1
0xd46	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       232	revision.c	FUNCTION_12	WHILE_1	IF_1
0xd4a	         0xfb64075	           movzx eax, byte [rax + 0x75] 	       232	revision.c	FUNCTION_12	WHILE_1	IF_1
0xd4e	          0x83e010	                           and eax, 0x10	       232	revision.c	FUNCTION_12	WHILE_1	IF_1
0xd51	            0x84c0	                             test al, al	       232	revision.c	FUNCTION_12	WHILE_1	IF_1
0xd53	            0x7427	                            je 0x4000dbc	       232	revision.c	FUNCTION_12	WHILE_1	IF_1
0xd55	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       232	revision.c	FUNCTION_12	WHILE_1	IF_1
0xd59	          0x83e002	                              and eax, 2	       232	revision.c	FUNCTION_12	WHILE_1	IF_1
0xd5c	          0x4885c0	                           test rax, rax	       232	revision.c	FUNCTION_12	WHILE_1	IF_1
0xd5f	            0x751b	                           jne 0x4000dbc	       232	revision.c	FUNCTION_12	WHILE_1	IF_1
0xd61	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       233	revision.c	FUNCTION_12	WHILE_1	CALL_1
0xd65	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       233	revision.c	FUNCTION_12	WHILE_1	CALL_1
0xd69	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       233	revision.c	FUNCTION_12	WHILE_1	CALL_1
0xd6d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       233	revision.c	FUNCTION_12	WHILE_1	CALL_1
0xd71	          0x4889ce	                            mov rsi, rcx	       233	revision.c	FUNCTION_12	WHILE_1	CALL_1
0xd74	          0x4889c7	                            mov rdi, rax	       233	revision.c	FUNCTION_12	WHILE_1	CALL_1
0xd77	      0xe800000000	                          call 0x4000dbc	       233	revision.c	FUNCTION_12	WHILE_1	CALL_1
0xd7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       234	revision.c	FUNCTION_12	WHILE_1	IF_2
0xd80	        0x488b4018	            mov rax, qword [rax + 0x18] 	       234	revision.c	FUNCTION_12	WHILE_1	IF_2
0xd84	          0x4885c0	                           test rax, rax	       234	revision.c	FUNCTION_12	WHILE_1	IF_2
0xd87	            0x750f	                           jne 0x4000dd8	       234	revision.c	FUNCTION_12	WHILE_1	IF_2
0xd89	      0xbf00000000	                              mov edi, 0	       235	revision.c	FUNCTION_12	WHILE_1	CALL_2
0xd8e	      0xb800000000	                              mov eax, 0	       235	revision.c	FUNCTION_12	WHILE_1	CALL_2
0xd93	      0xe800000000	                          call 0x4000dd8	       235	revision.c	FUNCTION_12	WHILE_1	CALL_2
0xd98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       236	revision.c	FUNCTION_12	WHILE_1	CALL_3
0xd9c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       236	revision.c	FUNCTION_12	WHILE_1	CALL_3
0xda0	        0x4883c004	                              add rax, 4	       236	revision.c	FUNCTION_12	WHILE_1	CALL_3
0xda4	          0x4889c7	                            mov rdi, rax	       236	revision.c	FUNCTION_12	WHILE_1	CALL_3
0xda7	      0xe800000000	                          call 0x4000dec	       236	revision.c	FUNCTION_12	WHILE_1	CALL_3
0xdac	        0x488945c8	             mov qword [rbp - 0x38], rax	       236	revision.c	FUNCTION_12	WHILE_1	CALL_3
0xdb0	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       237	revision.c	FUNCTION_12	WHILE_1	IF_3
0xdb5	            0x754b	                           jne 0x4000e42	       237	revision.c	FUNCTION_12	WHILE_1	IF_3
0xdb7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       238	revision.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0xdbb	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       238	revision.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0xdbf	          0x83e002	                              and eax, 2	       238	revision.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0xdc2	            0x84c0	                             test al, al	       238	revision.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0xdc4	            0x750c	                           jne 0x4000e12	       238	revision.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0xdc6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       238	revision.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0xdca	          0x83e002	                              and eax, 2	       238	revision.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0xdcd	          0x4885c0	                           test rax, rax	       238	revision.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0xdd0	            0x740a	                            je 0x4000e1c	       238	revision.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0xdd2	      0xb800000000	                              mov eax, 0	       239	revision.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0xdd7	      0xe909020000	                           jmp 0x4001025	       239	revision.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0xddc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       240	revision.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0xde0	        0x488b4018	            mov rax, qword [rax + 0x18] 	       240	revision.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0xde4	        0x4883c004	                              add rax, 4	       240	revision.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0xde8	          0x4889c7	                            mov rdi, rax	       240	revision.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0xdeb	      0xe800000000	                          call 0x4000e30	       240	revision.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0xdf0	          0x4889c6	                            mov rsi, rax	       240	revision.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0xdf3	      0xbf00000000	                              mov edi, 0	       240	revision.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0xdf8	      0xb800000000	                              mov eax, 0	       240	revision.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0xdfd	      0xe800000000	                          call 0x4000e42	       240	revision.c	FUNCTION_12	WHILE_1	IF_3	CALL_5
0xe02	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       242	revision.c	FUNCTION_12	WHILE_1
0xe06	            0x8b00	                    mov eax, dword [rax]	       242	revision.c	FUNCTION_12	WHILE_1
0xe08	          0xc1e804	                              shr eax, 4	       242	revision.c	FUNCTION_12	WHILE_1
0xe0b	      0x25ffffff07	                      and eax, 0x7ffffff	       242	revision.c	FUNCTION_12	WHILE_1
0xe10	            0x89c2	                            mov edx, eax	       242	revision.c	FUNCTION_12	WHILE_1
0xe12	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       242	revision.c	FUNCTION_12	WHILE_1
0xe16	             0x9d0	                             or eax, edx	       242	revision.c	FUNCTION_12	WHILE_1
0xe18	      0x25ffffff07	                      and eax, 0x7ffffff	       242	revision.c	FUNCTION_12	WHILE_1
0xe1d	            0x89c2	                            mov edx, eax	       242	revision.c	FUNCTION_12	WHILE_1
0xe1f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       242	revision.c	FUNCTION_12	WHILE_1
0xe23	    0x81e2ffffff07	                      and edx, 0x7ffffff	       242	revision.c	FUNCTION_12	WHILE_1
0xe29	            0x89d1	                            mov ecx, edx	       242	revision.c	FUNCTION_12	WHILE_1
0xe2b	          0xc1e104	                              shl ecx, 4	       242	revision.c	FUNCTION_12	WHILE_1
0xe2e	            0x8b10	                    mov edx, dword [rax]	       242	revision.c	FUNCTION_12	WHILE_1
0xe30	    0x81e20f000080	                     and edx, 0x8000000f	       242	revision.c	FUNCTION_12	WHILE_1
0xe36	             0x9ca	                             or edx, ecx	       242	revision.c	FUNCTION_12	WHILE_1
0xe38	            0x8910	                    mov dword [rax], edx	       242	revision.c	FUNCTION_12	WHILE_1
0xe3a	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       248	revision.c	FUNCTION_12	WHILE_1
0xe42	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       249	revision.c	FUNCTION_12	WHILE_1
0xe49	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       230	revision.c	FUNCTION_12	WHILE_1
0xe4d	           0xfb600	                   movzx eax, byte [rax]	       230	revision.c	FUNCTION_12	WHILE_1
0xe50	          0x83e00e	                            and eax, 0xe	       230	revision.c	FUNCTION_12	WHILE_1
0xe53	            0x3c08	                               cmp al, 8	       230	revision.c	FUNCTION_12	WHILE_1
0xe55	     0xf84e3feffff	                            je 0x4000d7e	       230	revision.c	FUNCTION_12	WHILE_1
0xe5b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       256	revision.c	FUNCTION_12	IF_5
0xe5f	           0xfb600	                   movzx eax, byte [rax]	       256	revision.c	FUNCTION_12	IF_5
0xe62	          0x83e00e	                            and eax, 0xe	       256	revision.c	FUNCTION_12	IF_5
0xe65	            0x3c02	                               cmp al, 2	       256	revision.c	FUNCTION_12	IF_5
0xe67	     0xf8590000000	                           jne 0x4000f3d	       256	revision.c	FUNCTION_12	IF_5
0xe6d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       257	revision.c	FUNCTION_12	IF_5
0xe71	        0x488945f0	             mov qword [rbp - 0x10], rax	       257	revision.c	FUNCTION_12	IF_5
0xe75	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       258	revision.c	FUNCTION_12	IF_5	IF_6	CALL_6
0xe79	          0x4889c7	                            mov rdi, rax	       258	revision.c	FUNCTION_12	IF_5	IF_6	CALL_6
0xe7c	      0xe894f6ffff	                   call sym.parse_commit	       258	revision.c	FUNCTION_12	IF_5	IF_6	CALL_6
0xe81	            0x85c0	                           test eax, eax	       258	revision.c	FUNCTION_12	IF_5	IF_6	CALL_6
0xe83	            0x7916	                           jns 0x4000edb	       258	revision.c	FUNCTION_12	IF_5	IF_6	CALL_6
0xe85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       259	revision.c	FUNCTION_12	IF_5	CALL_7
0xe89	          0x4889c6	                            mov rsi, rax	       259	revision.c	FUNCTION_12	IF_5	CALL_7
0xe8c	      0xbf00000000	                              mov edi, 0	       259	revision.c	FUNCTION_12	IF_5	CALL_7
0xe91	      0xb800000000	                              mov eax, 0	       259	revision.c	FUNCTION_12	IF_5	CALL_7
0xe96	      0xe800000000	                          call 0x4000edb	       259	revision.c	FUNCTION_12	IF_5	CALL_7
0xe9b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       260	revision.c	FUNCTION_12	IF_5	IF_7
0xe9f	          0x83e002	                              and eax, 2	       260	revision.c	FUNCTION_12	IF_5	IF_7
0xea2	          0x4885c0	                           test rax, rax	       260	revision.c	FUNCTION_12	IF_5	IF_7
0xea5	            0x741a	                            je 0x4000f01	       260	revision.c	FUNCTION_12	IF_5	IF_7
0xea7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       261	revision.c	FUNCTION_12	IF_5	IF_7	CALL_8
0xeab	          0x4889c7	                            mov rdi, rax	       261	revision.c	FUNCTION_12	IF_5	IF_7	CALL_8
0xeae	      0xe800000000	                          call 0x4000ef3	       261	revision.c	FUNCTION_12	IF_5	IF_7	CALL_8
0xeb3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       262	revision.c	FUNCTION_12	IF_5	IF_7
0xeb7	         0xfb65076	           movzx edx, byte [rax + 0x76] 	       262	revision.c	FUNCTION_12	IF_5	IF_7
0xebb	          0x83ca04	                               or edx, 4	       262	revision.c	FUNCTION_12	IF_5	IF_7
0xebe	          0x885076	               mov byte [rax + 0x76], dl	       262	revision.c	FUNCTION_12	IF_5	IF_7
0xec1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       264	revision.c	FUNCTION_12	IF_5	IF_8
0xec5	         0xfb64077	           movzx eax, byte [rax + 0x77] 	       264	revision.c	FUNCTION_12	IF_5	IF_8
0xec9	          0x83e010	                           and eax, 0x10	       264	revision.c	FUNCTION_12	IF_5	IF_8
0xecc	            0x84c0	                             test al, al	       264	revision.c	FUNCTION_12	IF_5	IF_8
0xece	            0x7424	                            je 0x4000f34	       264	revision.c	FUNCTION_12	IF_5	IF_8
0xed0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       264	revision.c	FUNCTION_12	IF_5	IF_8
0xed4	        0x488b4018	            mov rax, qword [rax + 0x18] 	       264	revision.c	FUNCTION_12	IF_5	IF_8
0xed8	          0x4885c0	                           test rax, rax	       264	revision.c	FUNCTION_12	IF_5	IF_8
0xedb	            0x7517	                           jne 0x4000f34	       264	revision.c	FUNCTION_12	IF_5	IF_8
0xedd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       265	revision.c	FUNCTION_12	IF_5	CALL_9
0xee1	          0x4889c7	                            mov rdi, rax	       265	revision.c	FUNCTION_12	IF_5	CALL_9
0xee4	      0xe800000000	                          call 0x4000f29	       265	revision.c	FUNCTION_12	IF_5	CALL_9
0xee9	          0x4889c2	                            mov rdx, rax	       265	revision.c	FUNCTION_12	IF_5	CALL_9
0xeec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       265	revision.c	FUNCTION_12	IF_5	CALL_9
0xef0	        0x48895018	             mov qword [rax + 0x18], rdx	       265	revision.c	FUNCTION_12	IF_5	CALL_9
0xef4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       266	revision.c	FUNCTION_12	IF_5
0xef8	      0xe9e8000000	                           jmp 0x4001025	       266	revision.c	FUNCTION_12	IF_5
0xefd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       273	revision.c	FUNCTION_12	IF_9
0xf01	           0xfb600	                   movzx eax, byte [rax]	       273	revision.c	FUNCTION_12	IF_9
0xf04	          0x83e00e	                            and eax, 0xe	       273	revision.c	FUNCTION_12	IF_9
0xf07	            0x3c04	                               cmp al, 4	       273	revision.c	FUNCTION_12	IF_9
0xf09	            0x7568	                           jne 0x4000fb3	       273	revision.c	FUNCTION_12	IF_9
0xf0b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       274	revision.c	FUNCTION_12	IF_9
0xf0f	        0x488945f8	                mov qword [rbp - 8], rax	       274	revision.c	FUNCTION_12	IF_9
0xf13	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       275	revision.c	FUNCTION_12	IF_9	IF_10
0xf17	         0xfb64075	           movzx eax, byte [rax + 0x75] 	       275	revision.c	FUNCTION_12	IF_9	IF_10
0xf1b	          0x83e020	                           and eax, 0x20	       275	revision.c	FUNCTION_12	IF_9	IF_10
0xf1e	            0x84c0	                             test al, al	       275	revision.c	FUNCTION_12	IF_9	IF_10
0xf20	            0x750a	                           jne 0x4000f6c	       275	revision.c	FUNCTION_12	IF_9	IF_10
0xf22	      0xb800000000	                              mov eax, 0	       276	revision.c	FUNCTION_12	IF_9	IF_10
0xf27	      0xe9b9000000	                           jmp 0x4001025	       276	revision.c	FUNCTION_12	IF_9	IF_10
0xf2c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       277	revision.c	FUNCTION_12	IF_9	IF_11
0xf30	          0x83e002	                              and eax, 2	       277	revision.c	FUNCTION_12	IF_9	IF_11
0xf33	          0x4885c0	                           test rax, rax	       277	revision.c	FUNCTION_12	IF_9	IF_11
0xf36	            0x7416	                            je 0x4000f8e	       277	revision.c	FUNCTION_12	IF_9	IF_11
0xf38	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	revision.c	FUNCTION_12	IF_9	IF_11	CALL_10
0xf3c	          0x4889c7	                            mov rdi, rax	       278	revision.c	FUNCTION_12	IF_9	IF_11	CALL_10
0xf3f	      0xe84ef7ffff	call sym.mark_tree_contents_uninteresting	       278	revision.c	FUNCTION_12	IF_9	IF_11	CALL_10
0xf44	      0xb800000000	                              mov eax, 0	       279	revision.c	FUNCTION_12	IF_9	IF_11
0xf49	      0xe997000000	                           jmp 0x4001025	       279	revision.c	FUNCTION_12	IF_9	IF_11
0xf4e	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	       281	revision.c	FUNCTION_12	IF_9	CALL_11
0xf52	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	       281	revision.c	FUNCTION_12	IF_9	CALL_11
0xf55	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       281	revision.c	FUNCTION_12	IF_9	CALL_11
0xf59	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       281	revision.c	FUNCTION_12	IF_9	CALL_11
0xf5d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       281	revision.c	FUNCTION_12	IF_9	CALL_11
0xf61	          0x4989f8	                             mov r8, rdi	       281	revision.c	FUNCTION_12	IF_9	CALL_11
0xf64	          0x4889c7	                            mov rdi, rax	       281	revision.c	FUNCTION_12	IF_9	CALL_11
0xf67	      0xe817faffff	   call sym.add_pending_object_with_path	       281	revision.c	FUNCTION_12	IF_9	CALL_11
0xf6c	      0xb800000000	                              mov eax, 0	       282	revision.c	FUNCTION_12	IF_9
0xf71	            0xeb72	                           jmp 0x4001025	       282	revision.c	FUNCTION_12	IF_9
0xf73	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       288	revision.c	FUNCTION_12	IF_12
0xf77	           0xfb600	                   movzx eax, byte [rax]	       288	revision.c	FUNCTION_12	IF_12
0xf7a	          0x83e00e	                            and eax, 0xe	       288	revision.c	FUNCTION_12	IF_12
0xf7d	            0x3c06	                               cmp al, 6	       288	revision.c	FUNCTION_12	IF_12
0xf7f	            0x754e	                           jne 0x400100f	       288	revision.c	FUNCTION_12	IF_12
0xf81	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       289	revision.c	FUNCTION_12	IF_12	IF_13
0xf85	         0xfb64075	           movzx eax, byte [rax + 0x75] 	       289	revision.c	FUNCTION_12	IF_12	IF_13
0xf89	          0x83e040	                           and eax, 0x40	       289	revision.c	FUNCTION_12	IF_12	IF_13
0xf8c	            0x84c0	                             test al, al	       289	revision.c	FUNCTION_12	IF_12	IF_13
0xf8e	            0x7507	                           jne 0x4000fd7	       289	revision.c	FUNCTION_12	IF_12	IF_13
0xf90	      0xb800000000	                              mov eax, 0	       290	revision.c	FUNCTION_12	IF_12	IF_13
0xf95	            0xeb4e	                           jmp 0x4001025	       290	revision.c	FUNCTION_12	IF_12	IF_13
0xf97	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       291	revision.c	FUNCTION_12	IF_12	IF_14
0xf9b	          0x83e002	                              and eax, 2	       291	revision.c	FUNCTION_12	IF_12	IF_14
0xf9e	          0x4885c0	                           test rax, rax	       291	revision.c	FUNCTION_12	IF_12	IF_14
0xfa1	            0x7407	                            je 0x4000fea	       291	revision.c	FUNCTION_12	IF_12	IF_14
0xfa3	      0xb800000000	                              mov eax, 0	       292	revision.c	FUNCTION_12	IF_12	IF_14
0xfa8	            0xeb3b	                           jmp 0x4001025	       292	revision.c	FUNCTION_12	IF_12	IF_14
0xfaa	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	       293	revision.c	FUNCTION_12	IF_12	CALL_12
0xfae	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	       293	revision.c	FUNCTION_12	IF_12	CALL_12
0xfb1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       293	revision.c	FUNCTION_12	IF_12	CALL_12
0xfb5	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       293	revision.c	FUNCTION_12	IF_12	CALL_12
0xfb9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       293	revision.c	FUNCTION_12	IF_12	CALL_12
0xfbd	          0x4989f8	                             mov r8, rdi	       293	revision.c	FUNCTION_12	IF_12	CALL_12
0xfc0	          0x4889c7	                            mov rdi, rax	       293	revision.c	FUNCTION_12	IF_12	CALL_12
0xfc3	      0xe8bbf9ffff	   call sym.add_pending_object_with_path	       293	revision.c	FUNCTION_12	IF_12	CALL_12
0xfc8	      0xb800000000	                              mov eax, 0	       294	revision.c	FUNCTION_12	IF_12
0xfcd	            0xeb16	                           jmp 0x4001025	       294	revision.c	FUNCTION_12	IF_12
0xfcf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       296	revision.c	FUNCTION_12	CALL_13
0xfd3	          0x4889c6	                            mov rsi, rax	       296	revision.c	FUNCTION_12	CALL_13
0xfd6	      0xbf00000000	                              mov edi, 0	       296	revision.c	FUNCTION_12	CALL_13
0xfdb	      0xb800000000	                              mov eax, 0	       296	revision.c	FUNCTION_12	CALL_13
0xfe0	      0xe800000000	                          call 0x4001025	       296	revision.c	FUNCTION_12	CALL_13
0xfe5	              0xc9	                                   leave	       297	revision.c	FUNCTION_12
0xfe6	              0xc3	                                     ret	       297	revision.c	FUNCTION_12
read_revisions_from_stdin	FOR,0:functions,0:WHILE,1:CALL,7:IF,5:ELSE,0:DO,0:SWITCH,0	79
0x45f2	              0x55	                                push rbp	      1703	revision.c	FUNCTION_58
0x45f3	          0x4889e5	                            mov rbp, rsp	      1703	revision.c	FUNCTION_58
0x45f6	        0x4883ec40	                           sub rsp, 0x40	      1703	revision.c	FUNCTION_58
0x45fa	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1703	revision.c	FUNCTION_58
0x45fe	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1703	revision.c	FUNCTION_58
0x4602	    0x64488b042528	                mov rax, qword fs:[0x28]	      1703	revision.c	FUNCTION_58
0x460b	        0x488945f8	                mov qword [rbp - 8], rax	      1703	revision.c	FUNCTION_58
0x460f	            0x31c0	                            xor eax, eax	      1703	revision.c	FUNCTION_58
0x4611	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1705	revision.c	FUNCTION_58
0x4618	    0x8b0500000000	            mov eax, dword [0x0400465e] 	      1708	revision.c	FUNCTION_58
0x461e	          0x8945d8	             mov dword [rbp - 0x28], eax	      1708	revision.c	FUNCTION_58
0x4621	    0xc70500000000	               mov dword [0x0400466b], 0	      1709	revision.c	FUNCTION_58
0x462b	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1711	revision.c	FUNCTION_58	CALL_1
0x462f	      0xbee8030000	                          mov esi, 0x3e8	      1711	revision.c	FUNCTION_58	CALL_1
0x4634	          0x4889c7	                            mov rdi, rax	      1711	revision.c	FUNCTION_58	CALL_1
0x4637	      0xe800000000	                          call 0x400467c	      1711	revision.c	FUNCTION_58	CALL_1
0x463c	            0xeb7d	                           jmp 0x40046fb	      1712	revision.c	FUNCTION_58	WHILE_1	CALL_2
0x463e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1713	revision.c	FUNCTION_58	WHILE_1
0x4642	          0x8945dc	             mov dword [rbp - 0x24], eax	      1713	revision.c	FUNCTION_58	WHILE_1
0x4645	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1714	revision.c	FUNCTION_58	WHILE_1	IF_1
0x4649	     0xf848d000000	                            je 0x400471c	      1714	revision.c	FUNCTION_58	WHILE_1	IF_1
0x464f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1716	revision.c	FUNCTION_58	WHILE_1	IF_2
0x4653	           0xfb600	                   movzx eax, byte [rax]	      1716	revision.c	FUNCTION_58	WHILE_1	IF_2
0x4656	            0x3c2d	                            cmp al, 0x2d	      1716	revision.c	FUNCTION_58	WHILE_1	IF_2
0x4658	            0x752d	                           jne 0x40046c7	      1716	revision.c	FUNCTION_58	WHILE_1	IF_2
0x465a	        0x837ddc02	               cmp dword [rbp - 0x24], 2	      1717	revision.c	FUNCTION_58	WHILE_1	IF_2	IF_3
0x465e	            0x7518	                           jne 0x40046b8	      1717	revision.c	FUNCTION_58	WHILE_1	IF_2	IF_3
0x4660	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1717	revision.c	FUNCTION_58	WHILE_1	IF_2	IF_3
0x4664	        0x4883c001	                              add rax, 1	      1717	revision.c	FUNCTION_58	WHILE_1	IF_2	IF_3
0x4668	           0xfb600	                   movzx eax, byte [rax]	      1717	revision.c	FUNCTION_58	WHILE_1	IF_2	IF_3
0x466b	            0x3c2d	                            cmp al, 0x2d	      1717	revision.c	FUNCTION_58	WHILE_1	IF_2	IF_3
0x466d	            0x7509	                           jne 0x40046b8	      1717	revision.c	FUNCTION_58	WHILE_1	IF_2	IF_3
0x466f	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      1718	revision.c	FUNCTION_58	WHILE_1	IF_2	IF_3
0x4676	            0xeb65	                           jmp 0x400471d	      1719	revision.c	FUNCTION_58	WHILE_1	IF_2	IF_3
0x4678	      0xbf00000000	                              mov edi, 0	      1721	revision.c	FUNCTION_58	WHILE_1	IF_2	CALL_3
0x467d	      0xb800000000	                              mov eax, 0	      1721	revision.c	FUNCTION_58	WHILE_1	IF_2	CALL_3
0x4682	      0xe800000000	                          call 0x40046c7	      1721	revision.c	FUNCTION_58	WHILE_1	IF_2	CALL_3
0x4687	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1723	revision.c	FUNCTION_58	WHILE_1	IF_4	CALL_4
0x468b	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      1723	revision.c	FUNCTION_58	WHILE_1	IF_4	CALL_4
0x468f	      0xb901000000	                              mov ecx, 1	      1723	revision.c	FUNCTION_58	WHILE_1	IF_4	CALL_4
0x4694	      0xba00000000	                              mov edx, 0	      1723	revision.c	FUNCTION_58	WHILE_1	IF_4	CALL_4
0x4699	          0x4889c7	                            mov rdi, rax	      1723	revision.c	FUNCTION_58	WHILE_1	IF_4	CALL_4
0x469c	      0xe800000000	                          call 0x40046e1	      1723	revision.c	FUNCTION_58	WHILE_1	IF_4	CALL_4
0x46a1	            0x85c0	                           test eax, eax	      1723	revision.c	FUNCTION_58	WHILE_1	IF_4	CALL_4
0x46a3	            0x7416	                            je 0x40046fb	      1723	revision.c	FUNCTION_58	WHILE_1	IF_4	CALL_4
0x46a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1725	revision.c	FUNCTION_58	WHILE_1	CALL_5
0x46a9	          0x4889c6	                            mov rsi, rax	      1725	revision.c	FUNCTION_58	WHILE_1	CALL_5
0x46ac	      0xbf00000000	                              mov edi, 0	      1725	revision.c	FUNCTION_58	WHILE_1	CALL_5
0x46b1	      0xb800000000	                              mov eax, 0	      1725	revision.c	FUNCTION_58	WHILE_1	CALL_5
0x46b6	      0xe800000000	                          call 0x40046fb	      1725	revision.c	FUNCTION_58	WHILE_1	CALL_5
0x46bb	    0x488b15000000	            mov rdx, qword [0x04004702] 	      1712	revision.c	FUNCTION_58	WHILE_1	CALL_2
0x46c2	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1712	revision.c	FUNCTION_58	WHILE_1	CALL_2
0x46c6	          0x4889d6	                            mov rsi, rdx	      1712	revision.c	FUNCTION_58	WHILE_1	CALL_2
0x46c9	          0x4889c7	                            mov rdi, rax	      1712	revision.c	FUNCTION_58	WHILE_1	CALL_2
0x46cc	      0xe800000000	                          call 0x4004711	      1712	revision.c	FUNCTION_58	WHILE_1	CALL_2
0x46d1	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1712	revision.c	FUNCTION_58	WHILE_1	CALL_2
0x46d4	     0xf8564ffffff	                           jne 0x400467e	      1712	revision.c	FUNCTION_58	WHILE_1	CALL_2
0x46da	            0xeb01	                           jmp 0x400471d	      1712	revision.c	FUNCTION_58	WHILE_1	CALL_2
0x46dc	              0x90	                                     nop	      1715	revision.c	FUNCTION_58	WHILE_1	IF_1
0x46dd	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1727	revision.c	FUNCTION_58	IF_5
0x46e1	            0x7417	                            je 0x400473a	      1727	revision.c	FUNCTION_58	IF_5
0x46e3	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1728	revision.c	FUNCTION_58	CALL_6
0x46e7	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      1728	revision.c	FUNCTION_58	CALL_6
0x46eb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1728	revision.c	FUNCTION_58	CALL_6
0x46ef	          0x4889ce	                            mov rsi, rcx	      1728	revision.c	FUNCTION_58	CALL_6
0x46f2	          0x4889c7	                            mov rdi, rax	      1728	revision.c	FUNCTION_58	CALL_6
0x46f5	      0xe8adfeffff	       call sym.read_pathspec_from_stdin	      1728	revision.c	FUNCTION_58	CALL_6
0x46fa	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1730	revision.c	FUNCTION_58	CALL_7
0x46fe	          0x4889c7	                            mov rdi, rax	      1730	revision.c	FUNCTION_58	CALL_7
0x4701	      0xe800000000	                          call 0x4004746	      1730	revision.c	FUNCTION_58	CALL_7
0x4706	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1731	revision.c	FUNCTION_58
0x4709	    0x890500000000	            mov dword [0x0400474f], eax 	      1731	revision.c	FUNCTION_58
0x470f	              0x90	                                     nop	      1732	revision.c	FUNCTION_58
0x4710	        0x488b45f8	                mov rax, qword [rbp - 8]	      1732	revision.c	FUNCTION_58
0x4714	    0x644833042528	                xor rax, qword fs:[0x28]	      1732	revision.c	FUNCTION_58
0x471d	            0x7405	                            je 0x4004764	      1732	revision.c	FUNCTION_58
0x471f	      0xe800000000	                          call 0x4004764	      1732	revision.c	FUNCTION_58
0x4724	              0xc9	                                   leave	      1732	revision.c	FUNCTION_58
0x4725	              0xc3	                                     ret	      1732	revision.c	FUNCTION_58
get_revision	FOR,0:functions,0:WHILE,1:CALL,7:IF,6:ELSE,0:DO,0:SWITCH,0	111
0x96be	              0x55	                                push rbp	      3422	revision.c	FUNCTION_100
0x96bf	          0x4889e5	                            mov rbp, rsp	      3422	revision.c	FUNCTION_100
0x96c2	        0x4883ec30	                           sub rsp, 0x30	      3422	revision.c	FUNCTION_100
0x96c6	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3422	revision.c	FUNCTION_100
0x96ca	    0x64488b042528	                mov rax, qword fs:[0x28]	      3422	revision.c	FUNCTION_100
0x96d3	        0x488945f8	                mov qword [rbp - 8], rax	      3422	revision.c	FUNCTION_100
0x96d7	            0x31c0	                            xor eax, eax	      3422	revision.c	FUNCTION_100
0x96d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3426	revision.c	FUNCTION_100	IF_1
0x96dd	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      3426	revision.c	FUNCTION_100	IF_1
0x96e1	          0x83e040	                           and eax, 0x40	      3426	revision.c	FUNCTION_100	IF_1
0x96e4	            0x84c0	                             test al, al	      3426	revision.c	FUNCTION_100	IF_1
0x96e6	            0x745b	                            je 0x4009783	      3426	revision.c	FUNCTION_100	IF_1
0x96e8	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      3427	revision.c	FUNCTION_100	IF_1
0x96f0	            0xeb13	                           jmp 0x4009745	      3428	revision.c	FUNCTION_100	IF_1	WHILE_1	CALL_1
0x96f2	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      3429	revision.c	FUNCTION_100	IF_1	CALL_2
0x96f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3429	revision.c	FUNCTION_100	IF_1	CALL_2
0x96fa	          0x4889d6	                            mov rsi, rdx	      3429	revision.c	FUNCTION_100	IF_1	CALL_2
0x96fd	          0x4889c7	                            mov rdi, rax	      3429	revision.c	FUNCTION_100	IF_1	CALL_2
0x9700	      0xe800000000	                          call 0x4009745	      3429	revision.c	FUNCTION_100	IF_1	CALL_2
0x9705	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3428	revision.c	FUNCTION_100	IF_1	WHILE_1	CALL_1
0x9709	          0x4889c7	                            mov rdi, rax	      3428	revision.c	FUNCTION_100	IF_1	WHILE_1	CALL_1
0x970c	      0xe887fdffff	          call sym.get_revision_internal	      3428	revision.c	FUNCTION_100	IF_1	WHILE_1	CALL_1
0x9711	        0x488945f0	             mov qword [rbp - 0x10], rax	      3428	revision.c	FUNCTION_100	IF_1	WHILE_1	CALL_1
0x9715	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3428	revision.c	FUNCTION_100	IF_1	WHILE_1	CALL_1
0x971a	            0x75d6	                           jne 0x4009732	      3428	revision.c	FUNCTION_100	IF_1	WHILE_1	CALL_1
0x971c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3430	revision.c	FUNCTION_100	IF_1
0x9720	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3430	revision.c	FUNCTION_100	IF_1
0x9724	          0x488910	                    mov qword [rax], rdx	      3430	revision.c	FUNCTION_100	IF_1
0x9727	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3431	revision.c	FUNCTION_100	IF_1
0x972b	         0xfb65077	           movzx edx, byte [rax + 0x77] 	      3431	revision.c	FUNCTION_100	IF_1
0x972f	          0x83e2bf	                     and edx, 0xffffffbf	      3431	revision.c	FUNCTION_100	IF_1
0x9732	          0x885077	               mov byte [rax + 0x77], dl	      3431	revision.c	FUNCTION_100	IF_1
0x9735	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3432	revision.c	FUNCTION_100	IF_1
0x9739	         0xfb65077	           movzx edx, byte [rax + 0x77] 	      3432	revision.c	FUNCTION_100	IF_1
0x973d	          0x83ca80	                      or edx, 0xffffff80	      3432	revision.c	FUNCTION_100	IF_1
0x9740	          0x885077	               mov byte [rax + 0x77], dl	      3432	revision.c	FUNCTION_100	IF_1
0x9743	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3435	revision.c	FUNCTION_100	IF_2
0x9747	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      3435	revision.c	FUNCTION_100	IF_2
0x974b	          0x83e080	                     and eax, 0xffffff80	      3435	revision.c	FUNCTION_100	IF_2
0x974e	            0x84c0	                             test al, al	      3435	revision.c	FUNCTION_100	IF_2
0x9750	            0x7471	                            je 0x4009803	      3435	revision.c	FUNCTION_100	IF_2
0x9752	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3436	revision.c	FUNCTION_100	IF_2	CALL_3
0x9756	          0x4889c7	                            mov rdi, rax	      3436	revision.c	FUNCTION_100	IF_2	CALL_3
0x9759	      0xe800000000	                          call 0x400979e	      3436	revision.c	FUNCTION_100	IF_2	CALL_3
0x975e	        0x488945f0	             mov qword [rbp - 0x10], rax	      3436	revision.c	FUNCTION_100	IF_2	CALL_3
0x9762	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3437	revision.c	FUNCTION_100	IF_2	IF_3
0x9766	         0xfb6407c	           movzx eax, byte [rax + 0x7c] 	      3437	revision.c	FUNCTION_100	IF_2	IF_3
0x976a	          0x83e001	                              and eax, 1	      3437	revision.c	FUNCTION_100	IF_2	IF_3
0x976d	            0x84c0	                             test al, al	      3437	revision.c	FUNCTION_100	IF_2	IF_3
0x976f	            0x7449	                            je 0x40097fa	      3437	revision.c	FUNCTION_100	IF_2	IF_3
0x9771	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x9776	            0x741e	                            je 0x40097d6	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x9778	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x977c	            0x8b00	                    mov eax, dword [rax]	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x977e	          0xc1e804	                              shr eax, 4	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x9781	      0x25ffffff07	                      and eax, 0x7ffffff	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x9786	      0x2500000004	          and eax, obj.show_early_output	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x978b	            0x85c0	                           test eax, eax	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x978d	            0x7407	                            je 0x40097d6	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x978f	      0xb801000000	                              mov eax, 1	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x9794	            0xeb05	                           jmp 0x40097db	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x9796	      0xb800000000	                              mov eax, 0	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x979b	          0x83e001	                              and eax, 1	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x979e	            0x89c2	                            mov edx, eax	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x97a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x97a4	          0x83e201	                              and edx, 1	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x97a7	    0x8d0c95000000	                        lea ecx, [rdx*4]	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x97ae	         0xfb6507c	           movzx edx, byte [rax + 0x7c] 	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x97b2	          0x83e2fb	                     and edx, 0xfffffffb	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x97b5	             0x9ca	                             or edx, ecx	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x97b7	          0x88507c	               mov byte [rax + 0x7c], dl	      3438	revision.c	FUNCTION_100	IF_2	IF_3
0x97ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3439	revision.c	FUNCTION_100	IF_2
0x97be	      0xe98a000000	                           jmp 0x400988d	      3439	revision.c	FUNCTION_100	IF_2
0x97c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3442	revision.c	FUNCTION_100	CALL_4
0x97c7	          0x4889c7	                            mov rdi, rax	      3442	revision.c	FUNCTION_100	CALL_4
0x97ca	      0xe8c9fcffff	          call sym.get_revision_internal	      3442	revision.c	FUNCTION_100	CALL_4
0x97cf	        0x488945f0	             mov qword [rbp - 0x10], rax	      3442	revision.c	FUNCTION_100	CALL_4
0x97d3	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3443	revision.c	FUNCTION_100	IF_4
0x97d8	            0x742a	                            je 0x4009844	      3443	revision.c	FUNCTION_100	IF_4
0x97da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3443	revision.c	FUNCTION_100	IF_4
0x97de	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	      3443	revision.c	FUNCTION_100	IF_4
0x97e5	          0x4885c0	                           test rax, rax	      3443	revision.c	FUNCTION_100	IF_4
0x97e8	            0x741a	                            je 0x4009844	      3443	revision.c	FUNCTION_100	IF_4
0x97ea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3444	revision.c	FUNCTION_100	CALL_5
0x97ee	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	      3444	revision.c	FUNCTION_100	CALL_5
0x97f5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3444	revision.c	FUNCTION_100	CALL_5
0x97f9	          0x4889d6	                            mov rsi, rdx	      3444	revision.c	FUNCTION_100	CALL_5
0x97fc	          0x4889c7	                            mov rdi, rax	      3444	revision.c	FUNCTION_100	CALL_5
0x97ff	      0xe800000000	                          call 0x4009844	      3444	revision.c	FUNCTION_100	CALL_5
0x9804	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3445	revision.c	FUNCTION_100	IF_5
0x9809	            0x753e	                           jne 0x4009889	      3445	revision.c	FUNCTION_100	IF_5
0x980b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3446	revision.c	FUNCTION_100	IF_5	CALL_6
0x980f	          0x4889c7	                            mov rdi, rax	      3446	revision.c	FUNCTION_100	IF_5	CALL_6
0x9812	      0xe8daf6ffff	             call sym.free_saved_parents	      3446	revision.c	FUNCTION_100	IF_5	CALL_6
0x9817	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3447	revision.c	FUNCTION_100	IF_5	IF_6
0x981b	    0x488b80a00800	           mov rax, qword [rax + 0x8a0] 	      3447	revision.c	FUNCTION_100	IF_5	IF_6
0x9822	          0x4885c0	                           test rax, rax	      3447	revision.c	FUNCTION_100	IF_5	IF_6
0x9825	            0x7422	                            je 0x4009889	      3447	revision.c	FUNCTION_100	IF_5	IF_6
0x9827	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3448	revision.c	FUNCTION_100	IF_5	IF_6	CALL_7
0x982b	    0x488b80a00800	           mov rax, qword [rax + 0x8a0] 	      3448	revision.c	FUNCTION_100	IF_5	IF_6	CALL_7
0x9832	          0x4889c7	                            mov rdi, rax	      3448	revision.c	FUNCTION_100	IF_5	IF_6	CALL_7
0x9835	      0xe800000000	                          call 0x400987a	      3448	revision.c	FUNCTION_100	IF_5	IF_6	CALL_7
0x983a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3449	revision.c	FUNCTION_100	IF_5	IF_6
0x983e	    0x48c780a00800	              mov qword [rax + 0x8a0], 0	      3449	revision.c	FUNCTION_100	IF_5	IF_6
0x9849	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3452	revision.c	FUNCTION_100
0x984d	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3453	revision.c	FUNCTION_100
0x9851	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3453	revision.c	FUNCTION_100
0x985a	            0x7405	                            je 0x40098a1	      3453	revision.c	FUNCTION_100
0x985c	      0xe800000000	                          call 0x40098a1	      3453	revision.c	FUNCTION_100
0x9861	              0xc9	                                   leave	      3453	revision.c	FUNCTION_100
0x9862	              0xc3	                                     ret	      3453	revision.c	FUNCTION_100
get_commit_action	FOR,1:functions,0:WHILE,0:CALL,6:IF,12:ELSE,0:DO,0:SWITCH,0	138
0x89a9	              0x55	                                push rbp	      3087	revision.c	FUNCTION_89
0x89aa	          0x4889e5	                            mov rbp, rsp	      3087	revision.c	FUNCTION_89
0x89ad	        0x4883ec20	                           sub rsp, 0x20	      3087	revision.c	FUNCTION_89
0x89b1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3087	revision.c	FUNCTION_89
0x89b5	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3087	revision.c	FUNCTION_89
0x89b9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3088	revision.c	FUNCTION_89	IF_1
0x89bd	            0x8b00	                    mov eax, dword [rax]	      3088	revision.c	FUNCTION_89	IF_1
0x89bf	          0xc1e804	                              shr eax, 4	      3088	revision.c	FUNCTION_89	IF_1
0x89c2	      0x25ffffff07	                      and eax, 0x7ffffff	      3088	revision.c	FUNCTION_89	IF_1
0x89c7	          0x83e008	                              and eax, 8	      3088	revision.c	FUNCTION_89	IF_1
0x89ca	            0x85c0	                           test eax, eax	      3088	revision.c	FUNCTION_89	IF_1
0x89cc	            0x740a	                            je 0x4008a18	      3088	revision.c	FUNCTION_89	IF_1
0x89ce	      0xb800000000	                              mov eax, 0	      3089	revision.c	FUNCTION_89	IF_1
0x89d3	      0xe9b9010000	                           jmp 0x4008bd1	      3089	revision.c	FUNCTION_89	IF_1
0x89d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3090	revision.c	FUNCTION_89	IF_2	CALL_1
0x89dc	         0xfb64076	           movzx eax, byte [rax + 0x76] 	      3090	revision.c	FUNCTION_89	IF_2	CALL_1
0x89e0	          0x83e008	                              and eax, 8	      3090	revision.c	FUNCTION_89	IF_2	CALL_1
0x89e3	            0x84c0	                             test al, al	      3090	revision.c	FUNCTION_89	IF_2	CALL_1
0x89e5	            0x741e	                            je 0x4008a45	      3090	revision.c	FUNCTION_89	IF_2	CALL_1
0x89e7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3090	revision.c	FUNCTION_89	IF_2	CALL_1
0x89eb	        0x4883c004	                              add rax, 4	      3090	revision.c	FUNCTION_89	IF_2	CALL_1
0x89ef	          0x4889c7	                            mov rdi, rax	      3090	revision.c	FUNCTION_89	IF_2	CALL_1
0x89f2	      0xe800000000	                          call 0x4008a37	      3090	revision.c	FUNCTION_89	IF_2	CALL_1
0x89f7	            0x85c0	                           test eax, eax	      3090	revision.c	FUNCTION_89	IF_2	CALL_1
0x89f9	            0x740a	                            je 0x4008a45	      3090	revision.c	FUNCTION_89	IF_2	CALL_1
0x89fb	      0xb800000000	                              mov eax, 0	      3091	revision.c	FUNCTION_89	IF_2
0x8a00	      0xe98c010000	                           jmp 0x4008bd1	      3091	revision.c	FUNCTION_89	IF_2
0x8a05	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3092	revision.c	FUNCTION_89	IF_3
0x8a09	            0x8b00	                    mov eax, dword [rax]	      3092	revision.c	FUNCTION_89	IF_3
0x8a0b	          0xc1e804	                              shr eax, 4	      3092	revision.c	FUNCTION_89	IF_3
0x8a0e	      0x25ffffff07	                      and eax, 0x7ffffff	      3092	revision.c	FUNCTION_89	IF_3
0x8a13	          0x83e002	                              and eax, 2	      3092	revision.c	FUNCTION_89	IF_3
0x8a16	            0x85c0	                           test eax, eax	      3092	revision.c	FUNCTION_89	IF_3
0x8a18	            0x740a	                            je 0x4008a64	      3092	revision.c	FUNCTION_89	IF_3
0x8a1a	      0xb800000000	                              mov eax, 0	      3093	revision.c	FUNCTION_89	IF_3
0x8a1f	      0xe96d010000	                           jmp 0x4008bd1	      3093	revision.c	FUNCTION_89	IF_3
0x8a24	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3094	revision.c	FUNCTION_89	IF_4
0x8a28	    0x488b80d80400	           mov rax, qword [rax + 0x4d8] 	      3094	revision.c	FUNCTION_89	IF_4
0x8a2f	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      3094	revision.c	FUNCTION_89	IF_4
0x8a33	            0x7430	                            je 0x4008aa5	      3094	revision.c	FUNCTION_89	IF_4
0x8a35	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3095	revision.c	FUNCTION_89	IF_4	CALL_2
0x8a39	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3095	revision.c	FUNCTION_89	IF_4	CALL_2
0x8a3d	          0x4889d6	                            mov rsi, rdx	      3095	revision.c	FUNCTION_89	IF_4	CALL_2
0x8a40	          0x4889c7	                            mov rdi, rax	      3095	revision.c	FUNCTION_89	IF_4	CALL_2
0x8a43	      0xe822ffffff	                call sym.comparison_date	      3095	revision.c	FUNCTION_89	IF_4	CALL_2
0x8a48	          0x4889c2	                            mov rdx, rax	      3095	revision.c	FUNCTION_89	IF_4	CALL_2
0x8a4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3095	revision.c	FUNCTION_89	IF_4	CALL_2
0x8a4f	    0x488b80d80400	           mov rax, qword [rax + 0x4d8] 	      3095	revision.c	FUNCTION_89	IF_4	CALL_2
0x8a56	          0x4839c2	                            cmp rdx, rax	      3094	revision.c	FUNCTION_89	IF_4
0x8a59	            0x760a	                           jbe 0x4008aa5	      3094	revision.c	FUNCTION_89	IF_4
0x8a5b	      0xb800000000	                              mov eax, 0	      3096	revision.c	FUNCTION_89	IF_4
0x8a60	      0xe92c010000	                           jmp 0x4008bd1	      3096	revision.c	FUNCTION_89	IF_4
0x8a65	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3097	revision.c	FUNCTION_89	IF_5
0x8a69	    0x8b80e0040000	           mov eax, dword [rax + 0x4e0] 	      3097	revision.c	FUNCTION_89	IF_5
0x8a6f	            0x85c0	                           test eax, eax	      3097	revision.c	FUNCTION_89	IF_5
0x8a71	            0x750e	                           jne 0x4008ac1	      3097	revision.c	FUNCTION_89	IF_5
0x8a73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3097	revision.c	FUNCTION_89	IF_5
0x8a77	    0x8b80e4040000	           mov eax, dword [rax + 0x4e4] 	      3097	revision.c	FUNCTION_89	IF_5
0x8a7d	            0x85c0	                           test eax, eax	      3097	revision.c	FUNCTION_89	IF_5
0x8a7f	            0x7849	                            js 0x4008b0a	      3097	revision.c	FUNCTION_89	IF_5
0x8a81	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3098	revision.c	FUNCTION_89	IF_5	CALL_3
0x8a85	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3098	revision.c	FUNCTION_89	IF_5	CALL_3
0x8a89	          0x4889c7	                            mov rdi, rax	      3098	revision.c	FUNCTION_89	IF_5	CALL_3
0x8a8c	      0xe800000000	                          call 0x4008ad1	      3098	revision.c	FUNCTION_89	IF_5	CALL_3
0x8a91	          0x8945f4	              mov dword [rbp - 0xc], eax	      3098	revision.c	FUNCTION_89	IF_5	CALL_3
0x8a94	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3099	revision.c	FUNCTION_89	IF_5	IF_6
0x8a98	    0x8b80e0040000	           mov eax, dword [rax + 0x4e0] 	      3099	revision.c	FUNCTION_89	IF_5	IF_6
0x8a9e	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      3099	revision.c	FUNCTION_89	IF_5	IF_6
0x8aa1	            0x7f1d	                            jg 0x4008b00	      3099	revision.c	FUNCTION_89	IF_5	IF_6
0x8aa3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3100	revision.c	FUNCTION_89	IF_5	IF_6
0x8aa7	    0x8b80e4040000	           mov eax, dword [rax + 0x4e4] 	      3100	revision.c	FUNCTION_89	IF_5	IF_6
0x8aad	            0x85c0	                           test eax, eax	      3099	revision.c	FUNCTION_89	IF_5	IF_6
0x8aaf	            0x7819	                            js 0x4008b0a	      3099	revision.c	FUNCTION_89	IF_5	IF_6
0x8ab1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3100	revision.c	FUNCTION_89	IF_5	IF_6
0x8ab5	    0x8b80e4040000	           mov eax, dword [rax + 0x4e4] 	      3100	revision.c	FUNCTION_89	IF_5	IF_6
0x8abb	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      3100	revision.c	FUNCTION_89	IF_5	IF_6
0x8abe	            0x7d0a	                           jge 0x4008b0a	      3100	revision.c	FUNCTION_89	IF_5	IF_6
0x8ac0	      0xb800000000	                              mov eax, 0	      3101	revision.c	FUNCTION_89	IF_5	IF_6
0x8ac5	      0xe9c7000000	                           jmp 0x4008bd1	      3101	revision.c	FUNCTION_89	IF_5	IF_6
0x8aca	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3103	revision.c	FUNCTION_89	IF_7	CALL_4
0x8ace	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3103	revision.c	FUNCTION_89	IF_7	CALL_4
0x8ad2	          0x4889d6	                            mov rsi, rdx	      3103	revision.c	FUNCTION_89	IF_7	CALL_4
0x8ad5	          0x4889c7	                            mov rdi, rax	      3103	revision.c	FUNCTION_89	IF_7	CALL_4
0x8ad8	      0xe808fcffff	                   call sym.commit_match	      3103	revision.c	FUNCTION_89	IF_7	CALL_4
0x8add	            0x85c0	                           test eax, eax	      3103	revision.c	FUNCTION_89	IF_7	CALL_4
0x8adf	            0x750a	                           jne 0x4008b2b	      3103	revision.c	FUNCTION_89	IF_7	CALL_4
0x8ae1	      0xb800000000	                              mov eax, 0	      3104	revision.c	FUNCTION_89	IF_7
0x8ae6	      0xe9a6000000	                           jmp 0x4008bd1	      3104	revision.c	FUNCTION_89	IF_7
0x8aeb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3105	revision.c	FUNCTION_89	IF_8
0x8aef	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      3105	revision.c	FUNCTION_89	IF_8
0x8af3	          0x83e008	                              and eax, 8	      3105	revision.c	FUNCTION_89	IF_8
0x8af6	            0x84c0	                             test al, al	      3105	revision.c	FUNCTION_89	IF_8
0x8af8	     0xf848e000000	                            je 0x4008bcc	      3105	revision.c	FUNCTION_89	IF_8
0x8afe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3105	revision.c	FUNCTION_89	IF_8
0x8b02	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      3105	revision.c	FUNCTION_89	IF_8
0x8b06	          0x83e004	                              and eax, 4	      3105	revision.c	FUNCTION_89	IF_8
0x8b09	            0x84c0	                             test al, al	      3105	revision.c	FUNCTION_89	IF_8
0x8b0b	            0x747f	                            je 0x4008bcc	      3105	revision.c	FUNCTION_89	IF_8
0x8b0d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3107	revision.c	FUNCTION_89	IF_8	IF_9
0x8b11	            0x8b00	                    mov eax, dword [rax]	      3107	revision.c	FUNCTION_89	IF_8	IF_9
0x8b13	          0xc1e804	                              shr eax, 4	      3107	revision.c	FUNCTION_89	IF_8	IF_9
0x8b16	      0x25ffffff07	                      and eax, 0x7ffffff	      3107	revision.c	FUNCTION_89	IF_8	IF_9
0x8b1b	          0x83e004	                              and eax, 4	      3107	revision.c	FUNCTION_89	IF_8	IF_9
0x8b1e	            0x85c0	                           test eax, eax	      3107	revision.c	FUNCTION_89	IF_8	IF_9
0x8b20	            0x746a	                            je 0x4008bcc	      3107	revision.c	FUNCTION_89	IF_8	IF_9
0x8b22	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3111	revision.c	FUNCTION_89	IF_8	IF_9	IF_10	CALL_5
0x8b26	          0x4889c7	                            mov rdi, rax	      3111	revision.c	FUNCTION_89	IF_8	IF_9	IF_10	CALL_5
0x8b29	      0xe807feffff	                  call sym.want_ancestry	      3111	revision.c	FUNCTION_89	IF_8	IF_9	IF_10	CALL_5
0x8b2e	            0x85c0	                           test eax, eax	      3111	revision.c	FUNCTION_89	IF_8	IF_9	IF_10	CALL_5
0x8b30	            0x7507	                           jne 0x4008b79	      3111	revision.c	FUNCTION_89	IF_8	IF_9	IF_10	CALL_5
0x8b32	      0xb800000000	                              mov eax, 0	      3112	revision.c	FUNCTION_89	IF_8	IF_9	IF_10
0x8b37	            0xeb58	                           jmp 0x4008bd1	      3112	revision.c	FUNCTION_89	IF_8	IF_9	IF_10
0x8b39	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      3120	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1
0x8b40	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3120	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1
0x8b44	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3120	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1
0x8b48	        0x488945f8	                mov qword [rbp - 8], rax	      3120	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1
0x8b4c	            0xeb30	                           jmp 0x4008bbe	      3120	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1
0x8b4e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3121	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1	IF_11	CALL_6
0x8b52	          0x488b00	                    mov rax, qword [rax]	      3121	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1	IF_11	CALL_6
0x8b55	          0x4889c7	                            mov rdi, rax	      3121	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1	IF_11	CALL_6
0x8b58	      0xe81f85ffff	                call sym.relevant_commit	      3121	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1	IF_11	CALL_6
0x8b5d	            0x85c0	                           test eax, eax	      3121	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1	IF_11	CALL_6
0x8b5f	            0x7411	                            je 0x4008bb2	      3121	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1	IF_11	CALL_6
0x8b61	        0x8345f001	               add dword [rbp - 0x10], 1	      3122	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1	IF_11	IF_12
0x8b65	        0x837df001	               cmp dword [rbp - 0x10], 1	      3122	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1	IF_11	IF_12
0x8b69	            0x7e07	                           jle 0x4008bb2	      3122	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1	IF_11	IF_12
0x8b6b	      0xb801000000	                              mov eax, 1	      3123	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1	IF_11	IF_12
0x8b70	            0xeb1f	                           jmp 0x4008bd1	      3123	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1	IF_11	IF_12
0x8b72	        0x488b45f8	                mov rax, qword [rbp - 8]	      3120	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1
0x8b76	        0x488b4008	                mov rax, qword [rax + 8]	      3120	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1
0x8b7a	        0x488945f8	                mov qword [rbp - 8], rax	      3120	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1
0x8b7e	      0x48837df800	                  cmp qword [rbp - 8], 0	      3120	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1
0x8b83	            0x75c9	                           jne 0x4008b8e	      3120	revision.c	FUNCTION_89	IF_8	IF_9	FOR_1
0x8b85	      0xb800000000	                              mov eax, 0	      3124	revision.c	FUNCTION_89	IF_8	IF_9
0x8b8a	            0xeb05	                           jmp 0x4008bd1	      3124	revision.c	FUNCTION_89	IF_8	IF_9
0x8b8c	      0xb801000000	                              mov eax, 1	      3127	revision.c	FUNCTION_89
0x8b91	              0xc9	                                   leave	      3128	revision.c	FUNCTION_89
0x8b92	              0xc3	                                     ret	      3128	revision.c	FUNCTION_89
add_pending_object	FOR,0:functions,0:WHILE,0:CALL,1:IF,0:ELSE,0:DO,0:SWITCH,0	15
0xb39	              0x55	                                push rbp	       177	revision.c	FUNCTION_8
0xb3a	          0x4889e5	                            mov rbp, rsp	       177	revision.c	FUNCTION_8
0xb3d	        0x4883ec20	                           sub rsp, 0x20	       177	revision.c	FUNCTION_8
0xb41	        0x48897df8	                mov qword [rbp - 8], rdi	       177	revision.c	FUNCTION_8
0xb45	        0x488975f0	             mov qword [rbp - 0x10], rsi	       177	revision.c	FUNCTION_8
0xb49	        0x488955e8	             mov qword [rbp - 0x18], rdx	       177	revision.c	FUNCTION_8
0xb4d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       178	revision.c	FUNCTION_8	CALL_1
0xb51	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       178	revision.c	FUNCTION_8	CALL_1
0xb55	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	revision.c	FUNCTION_8	CALL_1
0xb59	      0xb900300000	                         mov ecx, 0x3000	       178	revision.c	FUNCTION_8	CALL_1
0xb5e	          0x4889c7	                            mov rdi, rax	       178	revision.c	FUNCTION_8	CALL_1
0xb61	      0xe89cffffff	   call sym.add_pending_object_with_mode	       178	revision.c	FUNCTION_8	CALL_1
0xb66	              0x90	                                     nop	       179	revision.c	FUNCTION_8
0xb67	              0xc9	                                   leave	       179	revision.c	FUNCTION_8
0xb68	              0xc3	                                     ret	       179	revision.c	FUNCTION_8
rev_same_tree_as_empty	FOR,0:functions,0:WHILE,0:CALL,2:IF,1:ELSE,0:DO,0:SWITCH,0	39
0x12d7	              0x55	                                push rbp	       479	revision.c	FUNCTION_19
0x12d8	          0x4889e5	                            mov rbp, rsp	       479	revision.c	FUNCTION_19
0x12db	        0x4883ec20	                           sub rsp, 0x20	       479	revision.c	FUNCTION_19
0x12df	        0x48897de8	             mov qword [rbp - 0x18], rdi	       479	revision.c	FUNCTION_19
0x12e3	        0x488975e0	             mov qword [rbp - 0x20], rsi	       479	revision.c	FUNCTION_19
0x12e7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       481	revision.c	FUNCTION_19	CALL_1
0x12eb	          0x4889c7	                            mov rdi, rax	       481	revision.c	FUNCTION_19	CALL_1
0x12ee	      0xe800000000	                          call 0x4001333	       481	revision.c	FUNCTION_19	CALL_1
0x12f3	        0x488945f8	                mov qword [rbp - 8], rax	       481	revision.c	FUNCTION_19	CALL_1
0x12f7	      0x48837df800	                  cmp qword [rbp - 8], 0	       483	revision.c	FUNCTION_19	IF_1
0x12fc	            0x7507	                           jne 0x4001345	       483	revision.c	FUNCTION_19	IF_1
0x12fe	      0xb800000000	                              mov eax, 0	       484	revision.c	FUNCTION_19	IF_1
0x1303	            0xeb66	                           jmp 0x40013ab	       484	revision.c	FUNCTION_19	IF_1
0x1305	    0xc70500000000	               mov dword [0x0400134f], 0	       486	revision.c	FUNCTION_19
0x130f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       487	revision.c	FUNCTION_19
0x1313	     0xfb690b10600	          movzx edx, byte [rax + 0x6b1] 	       487	revision.c	FUNCTION_19
0x131a	          0x83e2fd	                     and edx, 0xfffffffd	       487	revision.c	FUNCTION_19
0x131d	    0x8890b1060000	              mov byte [rax + 0x6b1], dl	       487	revision.c	FUNCTION_19
0x1323	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       488	revision.c	FUNCTION_19	CALL_2
0x1327	    0x488d90780600	                  lea rdx, [rax + 0x678]	       488	revision.c	FUNCTION_19	CALL_2
0x132e	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	revision.c	FUNCTION_19	CALL_2
0x1332	        0x4883c004	                              add rax, 4	       488	revision.c	FUNCTION_19	CALL_2
0x1336	          0x4889d1	                            mov rcx, rdx	       488	revision.c	FUNCTION_19	CALL_2
0x1339	      0xba00000000	                              mov edx, 0	       488	revision.c	FUNCTION_19	CALL_2
0x133e	          0x4889c6	                            mov rsi, rax	       488	revision.c	FUNCTION_19	CALL_2
0x1341	      0xbf00000000	                              mov edi, 0	       488	revision.c	FUNCTION_19	CALL_2
0x1346	      0xe800000000	                          call 0x400138b	       488	revision.c	FUNCTION_19	CALL_2
0x134b	          0x8945f4	              mov dword [rbp - 0xc], eax	       488	revision.c	FUNCTION_19	CALL_2
0x134e	        0x837df400	                cmp dword [rbp - 0xc], 0	       490	revision.c	FUNCTION_19
0x1352	            0x7811	                            js 0x40013a5	       490	revision.c	FUNCTION_19
0x1354	    0x8b0500000000	            mov eax, dword [0x0400139a] 	       490	revision.c	FUNCTION_19
0x135a	            0x85c0	                           test eax, eax	       490	revision.c	FUNCTION_19
0x135c	            0x7507	                           jne 0x40013a5	       490	revision.c	FUNCTION_19
0x135e	      0xb801000000	                              mov eax, 1	       490	revision.c	FUNCTION_19
0x1363	            0xeb05	                           jmp 0x40013aa	       490	revision.c	FUNCTION_19
0x1365	      0xb800000000	                              mov eax, 0	       490	revision.c	FUNCTION_19
0x136a	              0x90	                                     nop	       490	revision.c	FUNCTION_19
0x136b	              0xc9	                                   leave	       491	revision.c	FUNCTION_19
0x136c	              0xc3	                                     ret	       491	revision.c	FUNCTION_19
leave_one_treesame_to_parent	FOR,1:functions,0:WHILE,0:CALL,1:IF,5:ELSE,1:DO,0:SWITCH,0	73
0x79af	              0x55	                                push rbp	      2597	revision.c	FUNCTION_75
0x79b0	          0x4889e5	                            mov rbp, rsp	      2597	revision.c	FUNCTION_75
0x79b3	        0x4883ec40	                           sub rsp, 0x40	      2597	revision.c	FUNCTION_75
0x79b7	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2597	revision.c	FUNCTION_75
0x79bb	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2597	revision.c	FUNCTION_75
0x79bf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2598	revision.c	FUNCTION_75	CALL_1
0x79c3	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2598	revision.c	FUNCTION_75	CALL_1
0x79c7	    0x4881c2300800	                          add rdx, 0x830	      2598	revision.c	FUNCTION_75	CALL_1
0x79ce	          0x4889c6	                            mov rsi, rax	      2598	revision.c	FUNCTION_75	CALL_1
0x79d1	          0x4889d7	                            mov rdi, rdx	      2598	revision.c	FUNCTION_75	CALL_1
0x79d4	      0xe800000000	                          call 0x4007a19	      2598	revision.c	FUNCTION_75	CALL_1
0x79d9	        0x488945f8	                mov qword [rbp - 8], rax	      2598	revision.c	FUNCTION_75	CALL_1
0x79dd	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2599	revision.c	FUNCTION_75
0x79e5	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2599	revision.c	FUNCTION_75
0x79ed	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2603	revision.c	FUNCTION_75	FOR_1
0x79f1	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2603	revision.c	FUNCTION_75	FOR_1
0x79f5	        0x488945f0	             mov qword [rbp - 0x10], rax	      2603	revision.c	FUNCTION_75	FOR_1
0x79f9	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      2603	revision.c	FUNCTION_75	FOR_1
0x7a00	            0xeb60	                           jmp 0x4007aa2	      2603	revision.c	FUNCTION_75	FOR_1
0x7a02	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2604	revision.c	FUNCTION_75	FOR_1	IF_1
0x7a06	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2604	revision.c	FUNCTION_75	FOR_1	IF_1
0x7a09	       0xfb6440204	        movzx eax, byte [rdx + rax + 4] 	      2604	revision.c	FUNCTION_75	FOR_1	IF_1
0x7a0e	            0x84c0	                             test al, al	      2604	revision.c	FUNCTION_75	FOR_1	IF_1
0x7a10	            0x7440	                            je 0x4007a92	      2604	revision.c	FUNCTION_75	FOR_1	IF_1
0x7a12	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2605	revision.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x7a16	          0x488b00	                    mov rax, qword [rax]	      2605	revision.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x7a19	            0x8b00	                    mov eax, dword [rax]	      2605	revision.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x7a1b	          0xc1e804	                              shr eax, 4	      2605	revision.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x7a1e	      0x25ffffff07	                      and eax, 0x7ffffff	      2605	revision.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x7a23	          0x83e010	                           and eax, 0x10	      2605	revision.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x7a26	            0x85c0	                           test eax, eax	      2605	revision.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x7a28	            0x7414	                            je 0x4007a7e	      2605	revision.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x7a2a	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2606	revision.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x7a2f	            0x7521	                           jne 0x4007a92	      2606	revision.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x7a31	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2607	revision.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x7a35	          0x488b00	                    mov rax, qword [rax]	      2607	revision.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x7a38	        0x488945e8	             mov qword [rbp - 0x18], rax	      2607	revision.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x7a3c	            0xeb14	                           jmp 0x4007a92	      2607	revision.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x7a3e	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2609	revision.c	FUNCTION_75	FOR_1	IF_1	ELSE_1	IF_4
0x7a43	            0x750d	                           jne 0x4007a92	      2609	revision.c	FUNCTION_75	FOR_1	IF_1	ELSE_1	IF_4
0x7a45	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2610	revision.c	FUNCTION_75	FOR_1	IF_1	ELSE_1	IF_4
0x7a49	          0x488b00	                    mov rax, qword [rax]	      2610	revision.c	FUNCTION_75	FOR_1	IF_1	ELSE_1	IF_4
0x7a4c	        0x488945e0	             mov qword [rbp - 0x20], rax	      2610	revision.c	FUNCTION_75	FOR_1	IF_1	ELSE_1	IF_4
0x7a50	            0xeb17	                           jmp 0x4007aa9	      2611	revision.c	FUNCTION_75	FOR_1	IF_1	ELSE_1	IF_4
0x7a52	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2603	revision.c	FUNCTION_75	FOR_1
0x7a56	        0x488b4008	                mov rax, qword [rax + 8]	      2603	revision.c	FUNCTION_75	FOR_1
0x7a5a	        0x488945f0	             mov qword [rbp - 0x10], rax	      2603	revision.c	FUNCTION_75	FOR_1
0x7a5e	        0x8345dc01	               add dword [rbp - 0x24], 1	      2603	revision.c	FUNCTION_75	FOR_1
0x7a62	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2603	revision.c	FUNCTION_75	FOR_1
0x7a67	            0x7599	                           jne 0x4007a42	      2603	revision.c	FUNCTION_75	FOR_1
0x7a69	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2650	revision.c	FUNCTION_75	IF_5
0x7a6e	            0x753e	                           jne 0x4007aee	      2650	revision.c	FUNCTION_75	IF_5
0x7a70	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2650	revision.c	FUNCTION_75	IF_5
0x7a75	            0x7437	                            je 0x4007aee	      2650	revision.c	FUNCTION_75	IF_5
0x7a77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2651	revision.c	FUNCTION_75	IF_5
0x7a7b	            0x8b00	                    mov eax, dword [rax]	      2651	revision.c	FUNCTION_75	IF_5
0x7a7d	          0xc1e804	                              shr eax, 4	      2651	revision.c	FUNCTION_75	IF_5
0x7a80	      0x25ffffff07	                      and eax, 0x7ffffff	      2651	revision.c	FUNCTION_75	IF_5
0x7a85	      0x25efffff07	                      and eax, 0x7ffffef	      2651	revision.c	FUNCTION_75	IF_5
0x7a8a	            0x89c2	                            mov edx, eax	      2651	revision.c	FUNCTION_75	IF_5
0x7a8c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2651	revision.c	FUNCTION_75	IF_5
0x7a90	    0x81e2ffffff07	                      and edx, 0x7ffffff	      2651	revision.c	FUNCTION_75	IF_5
0x7a96	            0x89d1	                            mov ecx, edx	      2651	revision.c	FUNCTION_75	IF_5
0x7a98	          0xc1e104	                              shl ecx, 4	      2651	revision.c	FUNCTION_75	IF_5
0x7a9b	            0x8b10	                    mov edx, dword [rax]	      2651	revision.c	FUNCTION_75	IF_5
0x7a9d	    0x81e20f000080	                     and edx, 0x8000000f	      2651	revision.c	FUNCTION_75	IF_5
0x7aa3	             0x9ca	                             or edx, ecx	      2651	revision.c	FUNCTION_75	IF_5
0x7aa5	            0x8910	                    mov dword [rax], edx	      2651	revision.c	FUNCTION_75	IF_5
0x7aa7	      0xb801000000	                              mov eax, 1	      2652	revision.c	FUNCTION_75	IF_5
0x7aac	            0xeb05	                           jmp 0x4007af3	      2652	revision.c	FUNCTION_75	IF_5
0x7aae	      0xb800000000	                              mov eax, 0	      2655	revision.c	FUNCTION_75
0x7ab3	              0xc9	                                   leave	      2656	revision.c	FUNCTION_75
0x7ab4	              0xc3	                                     ret	      2656	revision.c	FUNCTION_75
ref_excluded	FOR,0:functions,1:WHILE,0:CALL,0:IF,1:ELSE,0:DO,0:SWITCH,0	39
0x2ced	              0x55	                                push rbp	      1157	revision.c	FUNCTION_35
0x2cee	          0x4889e5	                            mov rbp, rsp	      1157	revision.c	FUNCTION_35
0x2cf1	        0x4883ec20	                           sub rsp, 0x20	      1157	revision.c	FUNCTION_35
0x2cf5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1157	revision.c	FUNCTION_35
0x2cf9	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1157	revision.c	FUNCTION_35
0x2cfd	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1160	revision.c	FUNCTION_35	IF_1
0x2d02	            0x7507	                           jne 0x4002d4b	      1160	revision.c	FUNCTION_35	IF_1
0x2d04	      0xb800000000	                              mov eax, 0	      1161	revision.c	FUNCTION_35	IF_1
0x2d09	            0xeb61	                           jmp 0x4002dac	      1161	revision.c	FUNCTION_35	IF_1
0x2d0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d0f	          0x488b00	                    mov rax, qword [rax]	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d12	        0x488945f8	                mov qword [rbp - 8], rax	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d16	            0xeb2b	                           jmp 0x4002d83	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d18	        0x488b45f8	                mov rax, qword [rbp - 8]	      1163	revision.c	FUNCTION_35	FUNCTION_1	IF_1	CALL_1
0x2d1c	          0x488b00	                    mov rax, qword [rax]	      1163	revision.c	FUNCTION_35	FUNCTION_1	IF_1	CALL_1
0x2d1f	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1163	revision.c	FUNCTION_35	FUNCTION_1	IF_1	CALL_1
0x2d23	      0xba00000000	                              mov edx, 0	      1163	revision.c	FUNCTION_35	FUNCTION_1	IF_1	CALL_1
0x2d28	          0x4889ce	                            mov rsi, rcx	      1163	revision.c	FUNCTION_35	FUNCTION_1	IF_1	CALL_1
0x2d2b	          0x4889c7	                            mov rdi, rax	      1163	revision.c	FUNCTION_35	FUNCTION_1	IF_1	CALL_1
0x2d2e	      0xe800000000	                          call 0x4002d73	      1163	revision.c	FUNCTION_35	FUNCTION_1	IF_1	CALL_1
0x2d33	            0x85c0	                           test eax, eax	      1163	revision.c	FUNCTION_35	FUNCTION_1	IF_1	CALL_1
0x2d35	            0x7507	                           jne 0x4002d7e	      1163	revision.c	FUNCTION_35	FUNCTION_1	IF_1	CALL_1
0x2d37	      0xb801000000	                              mov eax, 1	      1164	revision.c	FUNCTION_35	FUNCTION_1	IF_1
0x2d3c	            0xeb2e	                           jmp 0x4002dac	      1164	revision.c	FUNCTION_35	FUNCTION_1	IF_1
0x2d3e	      0x488345f810	               add qword [rbp - 8], 0x10	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d43	      0x48837df800	                  cmp qword [rbp - 8], 0	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d48	            0x741d	                            je 0x4002da7	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d4e	          0x488b10	                    mov rdx, qword [rax]	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d51	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d55	          0x8b4008	                mov eax, dword [rax + 8]	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d58	            0x89c0	                            mov eax, eax	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d5a	        0x48c1e004	                              shl rax, 4	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d5e	          0x4801d0	                            add rax, rdx	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d61	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d65	            0x77b1	                            ja 0x4002d58	      1162	revision.c	FUNCTION_35	FUNCTION_1
0x2d67	      0xb800000000	                              mov eax, 0	      1166	revision.c	FUNCTION_35
0x2d6c	              0xc9	                                   leave	      1167	revision.c	FUNCTION_35
0x2d6d	              0xc3	                                     ret	      1167	revision.c	FUNCTION_35
entry_unshown	FOR,0:functions,0:WHILE,0:CALL,0:IF,0:ELSE,0:DO,0:SWITCH,0	15
0x9324	              0x55	                                push rbp	      3280	revision.c	FUNCTION_96
0x9325	          0x4889e5	                            mov rbp, rsp	      3280	revision.c	FUNCTION_96
0x9328	        0x48897df8	                mov qword [rbp - 8], rdi	      3280	revision.c	FUNCTION_96
0x932c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3280	revision.c	FUNCTION_96
0x9330	        0x488b45f8	                mov rax, qword [rbp - 8]	      3281	revision.c	FUNCTION_96
0x9334	          0x488b00	                    mov rax, qword [rax]	      3281	revision.c	FUNCTION_96
0x9337	            0x8b00	                    mov eax, dword [rax]	      3281	revision.c	FUNCTION_96
0x9339	          0xc1e804	                              shr eax, 4	      3281	revision.c	FUNCTION_96
0x933c	      0x25ffffff07	                      and eax, 0x7ffffff	      3281	revision.c	FUNCTION_96
0x9341	          0x83e008	                              and eax, 8	      3281	revision.c	FUNCTION_96
0x9344	            0x85c0	                           test eax, eax	      3281	revision.c	FUNCTION_96
0x9346	           0xf94c0	                                 sete al	      3281	revision.c	FUNCTION_96
0x9349	           0xfb6c0	                           movzx eax, al	      3281	revision.c	FUNCTION_96
0x934c	              0x5d	                                 pop rbp	      3282	revision.c	FUNCTION_96
0x934d	              0xc3	                                     ret	      3282	revision.c	FUNCTION_96
get_reference	FOR,0:functions,0:WHILE,0:CALL,3:IF,3:ELSE,0:DO,0:SWITCH,0	55
0xbe4	              0x55	                                push rbp	       196	revision.c	FUNCTION_10
0xbe5	          0x4889e5	                            mov rbp, rsp	       196	revision.c	FUNCTION_10
0xbe8	        0x4883ec30	                           sub rsp, 0x30	       196	revision.c	FUNCTION_10
0xbec	        0x48897de8	             mov qword [rbp - 0x18], rdi	       196	revision.c	FUNCTION_10
0xbf0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       196	revision.c	FUNCTION_10
0xbf4	        0x488955d8	             mov qword [rbp - 0x28], rdx	       196	revision.c	FUNCTION_10
0xbf8	          0x894dd4	             mov dword [rbp - 0x2c], ecx	       196	revision.c	FUNCTION_10
0xbfb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       199	revision.c	FUNCTION_10	CALL_1
0xbff	          0x4889c7	                            mov rdi, rax	       199	revision.c	FUNCTION_10	CALL_1
0xc02	      0xe800000000	                          call 0x4000c47	       199	revision.c	FUNCTION_10	CALL_1
0xc07	        0x488945f8	                mov qword [rbp - 8], rax	       199	revision.c	FUNCTION_10	CALL_1
0xc0b	      0x48837df800	                  cmp qword [rbp - 8], 0	       200	revision.c	FUNCTION_10	IF_1
0xc10	            0x7551	                           jne 0x4000ca3	       200	revision.c	FUNCTION_10	IF_1
0xc12	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       201	revision.c	FUNCTION_10	IF_1	IF_2
0xc16	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       201	revision.c	FUNCTION_10	IF_1	IF_2
0xc1a	          0x83e001	                              and eax, 1	       201	revision.c	FUNCTION_10	IF_1	IF_2
0xc1d	            0x84c0	                             test al, al	       201	revision.c	FUNCTION_10	IF_1	IF_2
0xc1f	            0x7406	                            je 0x4000c67	       201	revision.c	FUNCTION_10	IF_1	IF_2
0xc21	        0x488b45f8	                mov rax, qword [rbp - 8]	       202	revision.c	FUNCTION_10	IF_1	IF_2
0xc25	            0xeb73	                           jmp 0x4000cda	       202	revision.c	FUNCTION_10	IF_1	IF_2
0xc27	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       203	revision.c	FUNCTION_10	IF_1	IF_3	CALL_2
0xc2b	         0xfb64078	           movzx eax, byte [rax + 0x78] 	       203	revision.c	FUNCTION_10	IF_1	IF_3	CALL_2
0xc2f	          0x83e080	                     and eax, 0xffffff80	       203	revision.c	FUNCTION_10	IF_1	IF_3	CALL_2
0xc32	            0x84c0	                             test al, al	       203	revision.c	FUNCTION_10	IF_1	IF_3	CALL_2
0xc34	            0x7417	                            je 0x4000c8d	       203	revision.c	FUNCTION_10	IF_1	IF_3	CALL_2
0xc36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       203	revision.c	FUNCTION_10	IF_1	IF_3	CALL_2
0xc3a	          0x4889c7	                            mov rdi, rax	       203	revision.c	FUNCTION_10	IF_1	IF_3	CALL_2
0xc3d	      0xe800000000	                          call 0x4000c82	       203	revision.c	FUNCTION_10	IF_1	IF_3	CALL_2
0xc42	            0x85c0	                           test eax, eax	       203	revision.c	FUNCTION_10	IF_1	IF_3	CALL_2
0xc44	            0x7407	                            je 0x4000c8d	       203	revision.c	FUNCTION_10	IF_1	IF_3	CALL_2
0xc46	      0xb800000000	                              mov eax, 0	       204	revision.c	FUNCTION_10	IF_1	IF_3
0xc4b	            0xeb4d	                           jmp 0x4000cda	       204	revision.c	FUNCTION_10	IF_1	IF_3
0xc4d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       205	revision.c	FUNCTION_10	IF_1	CALL_3
0xc51	          0x4889c6	                            mov rsi, rax	       205	revision.c	FUNCTION_10	IF_1	CALL_3
0xc54	      0xbf00000000	                              mov edi, 0	       205	revision.c	FUNCTION_10	IF_1	CALL_3
0xc59	      0xb800000000	                              mov eax, 0	       205	revision.c	FUNCTION_10	IF_1	CALL_3
0xc5e	      0xe800000000	                          call 0x4000ca3	       205	revision.c	FUNCTION_10	IF_1	CALL_3
0xc63	        0x488b45f8	                mov rax, qword [rbp - 8]	       207	revision.c	FUNCTION_10
0xc67	            0x8b00	                    mov eax, dword [rax]	       207	revision.c	FUNCTION_10
0xc69	          0xc1e804	                              shr eax, 4	       207	revision.c	FUNCTION_10
0xc6c	      0x25ffffff07	                      and eax, 0x7ffffff	       207	revision.c	FUNCTION_10
0xc71	           0xb45d4	              or eax, dword [rbp - 0x2c]	       207	revision.c	FUNCTION_10
0xc74	      0x25ffffff07	                      and eax, 0x7ffffff	       207	revision.c	FUNCTION_10
0xc79	            0x89c2	                            mov edx, eax	       207	revision.c	FUNCTION_10
0xc7b	        0x488b45f8	                mov rax, qword [rbp - 8]	       207	revision.c	FUNCTION_10
0xc7f	    0x81e2ffffff07	                      and edx, 0x7ffffff	       207	revision.c	FUNCTION_10
0xc85	            0x89d1	                            mov ecx, edx	       207	revision.c	FUNCTION_10
0xc87	          0xc1e104	                              shl ecx, 4	       207	revision.c	FUNCTION_10
0xc8a	            0x8b10	                    mov edx, dword [rax]	       207	revision.c	FUNCTION_10
0xc8c	    0x81e20f000080	                     and edx, 0x8000000f	       207	revision.c	FUNCTION_10
0xc92	             0x9ca	                             or edx, ecx	       207	revision.c	FUNCTION_10
0xc94	            0x8910	                    mov dword [rax], edx	       207	revision.c	FUNCTION_10
0xc96	        0x488b45f8	                mov rax, qword [rbp - 8]	       208	revision.c	FUNCTION_10
0xc9a	              0xc9	                                   leave	       209	revision.c	FUNCTION_10
0xc9b	              0xc3	                                     ret	       209	revision.c	FUNCTION_10
init_revisions	FOR,0:functions,0:WHILE,0:CALL,5:IF,1:ELSE,0:DO,0:SWITCH,0	95
0x37a5	              0x55	                                push rbp	      1417	revision.c	FUNCTION_50
0x37a6	          0x4889e5	                            mov rbp, rsp	      1417	revision.c	FUNCTION_50
0x37a9	        0x4883ec10	                           sub rsp, 0x10	      1417	revision.c	FUNCTION_50
0x37ad	        0x48897df8	                mov qword [rbp - 8], rdi	      1417	revision.c	FUNCTION_50
0x37b1	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1417	revision.c	FUNCTION_50
0x37b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1418	revision.c	FUNCTION_50	CALL_1
0x37b9	      0xbab0080000	                          mov edx, 0x8b0	      1418	revision.c	FUNCTION_50	CALL_1
0x37be	      0xbe00000000	                              mov esi, 0	      1418	revision.c	FUNCTION_50	CALL_1
0x37c3	          0x4889c7	                            mov rdi, rax	      1418	revision.c	FUNCTION_50	CALL_1
0x37c6	      0xe800000000	                          call 0x400380b	      1418	revision.c	FUNCTION_50	CALL_1
0x37cb	    0x8b0500000000	            mov eax, dword [0x04003811] 	      1420	revision.c	FUNCTION_50
0x37d1	            0x89c2	                            mov edx, eax	      1420	revision.c	FUNCTION_50
0x37d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1420	revision.c	FUNCTION_50
0x37d7	    0x8990a0000000	             mov dword [rax + 0xa0], edx	      1420	revision.c	FUNCTION_50
0x37dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1421	revision.c	FUNCTION_50
0x37e1	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      1421	revision.c	FUNCTION_50
0x37e5	          0x83ca20	                            or edx, 0x20	      1421	revision.c	FUNCTION_50
0x37e8	          0x885079	               mov byte [rax + 0x79], dl	      1421	revision.c	FUNCTION_50
0x37eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1422	revision.c	FUNCTION_50
0x37ef	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      1422	revision.c	FUNCTION_50
0x37f3	          0x83ca80	                      or edx, 0xffffff80	      1422	revision.c	FUNCTION_50
0x37f6	          0x885074	               mov byte [rax + 0x74], dl	      1422	revision.c	FUNCTION_50
0x37f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1423	revision.c	FUNCTION_50
0x37fd	     0xfb690b00600	          movzx edx, byte [rax + 0x6b0] 	      1423	revision.c	FUNCTION_50
0x3804	          0x83ca01	                               or edx, 1	      1423	revision.c	FUNCTION_50
0x3807	    0x8890b0060000	              mov byte [rax + 0x6b0], dl	      1423	revision.c	FUNCTION_50
0x380d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1424	revision.c	FUNCTION_50
0x3811	     0xfb690b10600	          movzx edx, byte [rax + 0x6b1] 	      1424	revision.c	FUNCTION_50
0x3818	          0x83ca04	                               or edx, 4	      1424	revision.c	FUNCTION_50
0x381b	    0x8890b1060000	              mov byte [rax + 0x6b1], dl	      1424	revision.c	FUNCTION_50
0x3821	        0x488b45f8	                mov rax, qword [rbp - 8]	      1425	revision.c	FUNCTION_50
0x3825	    0x48c780b00700	              mov qword [rax + 0x7b0], 0	      1425	revision.c	FUNCTION_50
0x3830	        0x488b45f8	                mov rax, qword [rbp - 8]	      1426	revision.c	FUNCTION_50
0x3834	    0x48c780a80700	              mov qword [rax + 0x7a8], 0	      1426	revision.c	FUNCTION_50
0x383f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1427	revision.c	FUNCTION_50
0x3843	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1427	revision.c	FUNCTION_50
0x3847	    0x488990b80700	            mov qword [rax + 0x7b8], rdx	      1427	revision.c	FUNCTION_50
0x384e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1428	revision.c	FUNCTION_50
0x3852	    0xc7406c000000	               mov dword [rax + 0x6c], 0	      1428	revision.c	FUNCTION_50
0x3859	        0x488b45f8	                mov rax, qword [rbp - 8]	      1429	revision.c	FUNCTION_50
0x385d	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      1429	revision.c	FUNCTION_50
0x3861	          0x83ca04	                               or edx, 4	      1429	revision.c	FUNCTION_50
0x3864	          0x885074	               mov byte [rax + 0x74], dl	      1429	revision.c	FUNCTION_50
0x3867	        0x488b45f8	                mov rax, qword [rbp - 8]	      1430	revision.c	FUNCTION_50
0x386b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1430	revision.c	FUNCTION_50
0x386f	        0x48895040	             mov qword [rax + 0x40], rdx	      1430	revision.c	FUNCTION_50
0x3873	        0x488b45f8	                mov rax, qword [rbp - 8]	      1431	revision.c	FUNCTION_50
0x3877	    0x48c780d00400	mov qword [rax + 0x4d0], 0xffffffffffffffff	      1431	revision.c	FUNCTION_50
0x3882	        0x488b45f8	                mov rax, qword [rbp - 8]	      1432	revision.c	FUNCTION_50
0x3886	    0x48c780d80400	mov qword [rax + 0x4d8], 0xffffffffffffffff	      1432	revision.c	FUNCTION_50
0x3891	        0x488b45f8	                mov rax, qword [rbp - 8]	      1433	revision.c	FUNCTION_50
0x3895	    0xc780c8040000	    mov dword [rax + 0x4c8], 0xffffffff 	      1433	revision.c	FUNCTION_50
0x389f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1434	revision.c	FUNCTION_50
0x38a3	    0xc780cc040000	    mov dword [rax + 0x4cc], 0xffffffff 	      1434	revision.c	FUNCTION_50
0x38ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      1435	revision.c	FUNCTION_50
0x38b1	    0xc780e4040000	    mov dword [rax + 0x4e4], 0xffffffff 	      1435	revision.c	FUNCTION_50
0x38bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1436	revision.c	FUNCTION_50
0x38bf	    0xc78098000000	     mov dword [rax + 0x98], 0xffffffff 	      1436	revision.c	FUNCTION_50
0x38c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1438	revision.c	FUNCTION_50
0x38cd	    0xc780a4000000	               mov dword [rax + 0xa4], 1	      1438	revision.c	FUNCTION_50
0x38d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1439	revision.c	FUNCTION_50
0x38db	    0xc7809c000000	               mov dword [rax + 0x9c], 8	      1439	revision.c	FUNCTION_50
0x38e5	      0xe800000000	                          call 0x400392a	      1441	revision.c	FUNCTION_50	CALL_2
0x38ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      1442	revision.c	FUNCTION_50	CALL_3
0x38ee	    0x488d90500100	                  lea rdx, [rax + 0x150]	      1442	revision.c	FUNCTION_50	CALL_3
0x38f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1442	revision.c	FUNCTION_50	CALL_3
0x38f9	          0x4889c6	                            mov rsi, rax	      1442	revision.c	FUNCTION_50	CALL_3
0x38fc	          0x4889d7	                            mov rdi, rdx	      1442	revision.c	FUNCTION_50	CALL_3
0x38ff	      0xe800000000	                          call 0x4003944	      1442	revision.c	FUNCTION_50	CALL_3
0x3904	        0x488b45f8	                mov rax, qword [rbp - 8]	      1443	revision.c	FUNCTION_50
0x3908	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      1443	revision.c	FUNCTION_50
0x3912	        0x488b45f8	                mov rax, qword [rbp - 8]	      1445	revision.c	FUNCTION_50	CALL_4
0x3916	    0x4805f8040000	                          add rax, 0x4f8	      1445	revision.c	FUNCTION_50	CALL_4
0x391c	          0x4889c7	                            mov rdi, rax	      1445	revision.c	FUNCTION_50	CALL_4
0x391f	      0xe800000000	                          call 0x4003964	      1445	revision.c	FUNCTION_50	CALL_4
0x3924	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1446	revision.c	FUNCTION_50	IF_1
0x3929	            0x7437	                            je 0x40039a2	      1446	revision.c	FUNCTION_50	IF_1
0x392b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1446	revision.c	FUNCTION_50	IF_1
0x392f	    0x488b80880500	           mov rax, qword [rax + 0x588] 	      1446	revision.c	FUNCTION_50	IF_1
0x3936	          0x4885c0	                           test rax, rax	      1446	revision.c	FUNCTION_50	IF_1
0x3939	            0x7527	                           jne 0x40039a2	      1446	revision.c	FUNCTION_50	IF_1
0x393b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1447	revision.c	FUNCTION_50	IF_1
0x393f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1447	revision.c	FUNCTION_50	IF_1
0x3943	    0x488990880500	            mov qword [rax + 0x588], rdx	      1447	revision.c	FUNCTION_50	IF_1
0x394a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1448	revision.c	FUNCTION_50	IF_1	CALL_5
0x394e	          0x4889c7	                            mov rdi, rax	      1448	revision.c	FUNCTION_50	IF_1	CALL_5
0x3951	      0xe800000000	                          call 0x4003996	      1448	revision.c	FUNCTION_50	IF_1	CALL_5
0x3956	            0x89c2	                            mov edx, eax	      1448	revision.c	FUNCTION_50	IF_1	CALL_5
0x3958	        0x488b45f8	                mov rax, qword [rbp - 8]	      1448	revision.c	FUNCTION_50	IF_1	CALL_5
0x395c	    0x899090050000	            mov dword [rax + 0x590], edx	      1448	revision.c	FUNCTION_50	IF_1	CALL_5
0x3962	        0x488b45f8	                mov rax, qword [rbp - 8]	      1451	revision.c	FUNCTION_50
0x3966	    0xc78048080000	    mov dword [rax + 0x848], 0xffffffff 	      1451	revision.c	FUNCTION_50
0x3970	              0x90	                                     nop	      1452	revision.c	FUNCTION_50
0x3971	              0xc9	                                   leave	      1452	revision.c	FUNCTION_50
0x3972	              0xc3	                                     ret	      1452	revision.c	FUNCTION_50
strtol_i	FOR,0:functions,0:WHILE,0:CALL,1:IF,1:ELSE,0:DO,0:SWITCH,0	46
0x1b5	              0x55	                                push rbp	      1026	git-compat-util.h	FUNCTION_141
0x1b6	          0x4889e5	                            mov rbp, rsp	      1026	git-compat-util.h	FUNCTION_141
0x1b9	        0x4883ec40	                           sub rsp, 0x40	      1026	git-compat-util.h	FUNCTION_141
0x1bd	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1026	git-compat-util.h	FUNCTION_141
0x1c1	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1026	git-compat-util.h	FUNCTION_141
0x1c4	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1026	git-compat-util.h	FUNCTION_141
0x1c8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1026	git-compat-util.h	FUNCTION_141
0x1d1	        0x488945f8	                mov qword [rbp - 8], rax	      1026	git-compat-util.h	FUNCTION_141
0x1d5	            0x31c0	                            xor eax, eax	      1026	git-compat-util.h	FUNCTION_141
0x1d7	      0xe800000000	                          call 0x400021c	      1030	git-compat-util.h	FUNCTION_141
0x1dc	    0xc70000000000	                      mov dword [rax], 0	      1030	git-compat-util.h	FUNCTION_141
0x1e2	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1031	git-compat-util.h	FUNCTION_141	CALL_1
0x1e5	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      1031	git-compat-util.h	FUNCTION_141	CALL_1
0x1e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1031	git-compat-util.h	FUNCTION_141	CALL_1
0x1ed	          0x4889ce	                            mov rsi, rcx	      1031	git-compat-util.h	FUNCTION_141	CALL_1
0x1f0	          0x4889c7	                            mov rdi, rax	      1031	git-compat-util.h	FUNCTION_141	CALL_1
0x1f3	      0xe800000000	                          call 0x4000238	      1031	git-compat-util.h	FUNCTION_141	CALL_1
0x1f8	        0x488945f0	             mov qword [rbp - 0x10], rax	      1031	git-compat-util.h	FUNCTION_141	CALL_1
0x1fc	      0xe800000000	                          call 0x4000241	      1032	git-compat-util.h	FUNCTION_141	IF_1
0x201	            0x8b00	                    mov eax, dword [rax]	      1032	git-compat-util.h	FUNCTION_141	IF_1
0x203	            0x85c0	                           test eax, eax	      1032	git-compat-util.h	FUNCTION_141	IF_1
0x205	            0x7521	                           jne 0x4000268	      1032	git-compat-util.h	FUNCTION_141	IF_1
0x207	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1032	git-compat-util.h	FUNCTION_141	IF_1
0x20b	           0xfb600	                   movzx eax, byte [rax]	      1032	git-compat-util.h	FUNCTION_141	IF_1
0x20e	            0x84c0	                             test al, al	      1032	git-compat-util.h	FUNCTION_141	IF_1
0x210	            0x7516	                           jne 0x4000268	      1032	git-compat-util.h	FUNCTION_141	IF_1
0x212	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1032	git-compat-util.h	FUNCTION_141	IF_1
0x216	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1032	git-compat-util.h	FUNCTION_141	IF_1
0x21a	            0x740c	                            je 0x4000268	      1032	git-compat-util.h	FUNCTION_141	IF_1
0x21c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1032	git-compat-util.h	FUNCTION_141	IF_1
0x220	            0x4898	                                    cdqe	      1032	git-compat-util.h	FUNCTION_141	IF_1
0x222	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1032	git-compat-util.h	FUNCTION_141	IF_1
0x226	            0x7407	                            je 0x400026f	      1032	git-compat-util.h	FUNCTION_141	IF_1
0x228	      0xb8ffffffff	                     mov eax, 0xffffffff	      1033	git-compat-util.h	FUNCTION_141	IF_1
0x22d	            0xeb11	                           jmp 0x4000280	      1033	git-compat-util.h	FUNCTION_141	IF_1
0x22f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1034	git-compat-util.h	FUNCTION_141
0x233	            0x89c2	                            mov edx, eax	      1034	git-compat-util.h	FUNCTION_141
0x235	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1034	git-compat-util.h	FUNCTION_141
0x239	            0x8910	                    mov dword [rax], edx	      1034	git-compat-util.h	FUNCTION_141
0x23b	      0xb800000000	                              mov eax, 0	      1035	git-compat-util.h	FUNCTION_141
0x240	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1036	git-compat-util.h	FUNCTION_141
0x244	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1036	git-compat-util.h	FUNCTION_141
0x24d	            0x7405	                            je 0x4000294	      1036	git-compat-util.h	FUNCTION_141
0x24f	      0xe800000000	                          call 0x4000294	      1036	git-compat-util.h	FUNCTION_141
0x254	              0xc9	                                   leave	      1036	git-compat-util.h	FUNCTION_141
0x255	              0xc3	                                     ret	      1036	git-compat-util.h	FUNCTION_141
mark_parents_uninteresting	FOR,2:functions,0:WHILE,2:CALL,4:IF,3:ELSE,0:DO,0:SWITCH,0	103
0x811	              0x55	                                push rbp	        99	revision.c	FUNCTION_5
0x812	          0x4889e5	                            mov rbp, rsp	        99	revision.c	FUNCTION_5
0x815	        0x4883ec30	                           sub rsp, 0x30	        99	revision.c	FUNCTION_5
0x819	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        99	revision.c	FUNCTION_5
0x81d	    0x64488b042528	                mov rax, qword fs:[0x28]	        99	revision.c	FUNCTION_5
0x826	        0x488945f8	                mov qword [rbp - 8], rax	        99	revision.c	FUNCTION_5
0x82a	            0x31c0	                            xor eax, eax	        99	revision.c	FUNCTION_5
0x82c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       100	revision.c	FUNCTION_5
0x834	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       102	revision.c	FUNCTION_5	FOR_1
0x838	        0x488b4030	            mov rax, qword [rax + 0x30] 	       102	revision.c	FUNCTION_5	FOR_1
0x83c	        0x488945e8	             mov qword [rbp - 0x18], rax	       102	revision.c	FUNCTION_5	FOR_1
0x840	            0xeb22	                           jmp 0x40008a4	       102	revision.c	FUNCTION_5	FOR_1
0x842	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       103	revision.c	FUNCTION_5	CALL_1
0x846	          0x488b00	                    mov rax, qword [rax]	       103	revision.c	FUNCTION_5	CALL_1
0x849	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       103	revision.c	FUNCTION_5	CALL_1
0x84d	          0x4889d6	                            mov rsi, rdx	       103	revision.c	FUNCTION_5	CALL_1
0x850	          0x4889c7	                            mov rdi, rax	       103	revision.c	FUNCTION_5	CALL_1
0x853	      0xe800000000	                          call 0x4000898	       103	revision.c	FUNCTION_5	CALL_1
0x858	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       102	revision.c	FUNCTION_5	FOR_1
0x85c	        0x488b4008	                mov rax, qword [rax + 8]	       102	revision.c	FUNCTION_5	FOR_1
0x860	        0x488945e8	             mov qword [rbp - 0x18], rax	       102	revision.c	FUNCTION_5	FOR_1
0x864	      0x48837de800	               cmp qword [rbp - 0x18], 0	       102	revision.c	FUNCTION_5	FOR_1
0x869	            0x75d7	                           jne 0x4000882	       102	revision.c	FUNCTION_5	FOR_1
0x86b	      0xe9ef000000	                           jmp 0x400099f	       105	revision.c	FUNCTION_5	WHILE_1
0x870	        0x488d45e0	                   lea rax, [rbp - 0x20]	       106	revision.c	FUNCTION_5	WHILE_1	CALL_2
0x874	          0x4889c7	                            mov rdi, rax	       106	revision.c	FUNCTION_5	WHILE_1	CALL_2
0x877	      0xe800000000	                          call 0x40008bc	       106	revision.c	FUNCTION_5	WHILE_1	CALL_2
0x87c	        0x488945f0	             mov qword [rbp - 0x10], rax	       106	revision.c	FUNCTION_5	WHILE_1	CALL_2
0x880	      0xe9cf000000	                           jmp 0x4000994	       108	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x885	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       117	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x889	           0xfb600	                   movzx eax, byte [rax]	       117	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x88c	          0x83e001	                              and eax, 1	       117	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x88f	            0x84c0	                             test al, al	       117	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x891	            0x7520	                           jne 0x40008f3	       117	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x893	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       118	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_3
0x897	        0x4883c004	                              add rax, 4	       118	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_3
0x89b	          0x4889c7	                            mov rdi, rax	       118	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_3
0x89e	      0xe800000000	                          call 0x40008e3	       118	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_3
0x8a3	            0x85c0	                           test eax, eax	       117	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x8a5	            0x750c	                           jne 0x40008f3	       117	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x8a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       119	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x8ab	           0xfb610	                   movzx edx, byte [rax]	       119	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x8ae	          0x83ca01	                               or edx, 1	       119	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x8b1	            0x8810	                      mov byte [rax], dl	       119	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x8b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       121	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x8b7	            0x8b00	                    mov eax, dword [rax]	       121	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x8b9	          0xc1e804	                              shr eax, 4	       121	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x8bc	      0x25ffffff07	                      and eax, 0x7ffffff	       121	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x8c1	          0x83e002	                              and eax, 2	       121	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x8c4	            0x85c0	                           test eax, eax	       121	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x8c6	            0x7405	                            je 0x400090d	       121	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x8c8	      0xe992000000	                           jmp 0x400099f	       122	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x8cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       124	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x8d1	            0x8b00	                    mov eax, dword [rax]	       124	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x8d3	          0xc1e804	                              shr eax, 4	       124	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x8d6	      0x25ffffff07	                      and eax, 0x7ffffff	       124	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x8db	          0x83c802	                               or eax, 2	       124	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x8de	            0x89c2	                            mov edx, eax	       124	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x8e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       124	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x8e4	    0x81e2ffffff07	                      and edx, 0x7ffffff	       124	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x8ea	            0x89d1	                            mov ecx, edx	       124	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x8ec	          0xc1e104	                              shl ecx, 4	       124	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x8ef	            0x8b10	                    mov edx, dword [rax]	       124	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x8f1	    0x81e20f000080	                     and edx, 0x8000000f	       124	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x8f7	             0x9ca	                             or edx, ecx	       124	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x8f9	            0x8910	                    mov dword [rax], edx	       124	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x8fb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       134	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_3
0x8ff	        0x488b4030	            mov rax, qword [rax + 0x30] 	       134	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_3
0x903	          0x4885c0	                           test rax, rax	       134	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_3
0x906	            0x7502	                           jne 0x400094a	       134	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_3
0x908	            0xeb55	                           jmp 0x400099f	       135	revision.c	FUNCTION_5	WHILE_1	WHILE_2	IF_3
0x90a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       137	revision.c	FUNCTION_5	WHILE_1	WHILE_2	FOR_2
0x90e	        0x488b4030	            mov rax, qword [rax + 0x30] 	       137	revision.c	FUNCTION_5	WHILE_1	WHILE_2	FOR_2
0x912	        0x488b4008	                mov rax, qword [rax + 8]	       137	revision.c	FUNCTION_5	WHILE_1	WHILE_2	FOR_2
0x916	        0x488945e8	             mov qword [rbp - 0x18], rax	       137	revision.c	FUNCTION_5	WHILE_1	WHILE_2	FOR_2
0x91a	            0xeb22	                           jmp 0x400097e	       137	revision.c	FUNCTION_5	WHILE_1	WHILE_2	FOR_2
0x91c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       138	revision.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_4
0x920	          0x488b00	                    mov rax, qword [rax]	       138	revision.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_4
0x923	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       138	revision.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_4
0x927	          0x4889d6	                            mov rsi, rdx	       138	revision.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_4
0x92a	          0x4889c7	                            mov rdi, rax	       138	revision.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_4
0x92d	      0xe800000000	                          call 0x4000972	       138	revision.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_4
0x932	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       137	revision.c	FUNCTION_5	WHILE_1	WHILE_2	FOR_2
0x936	        0x488b4008	                mov rax, qword [rax + 8]	       137	revision.c	FUNCTION_5	WHILE_1	WHILE_2	FOR_2
0x93a	        0x488945e8	             mov qword [rbp - 0x18], rax	       137	revision.c	FUNCTION_5	WHILE_1	WHILE_2	FOR_2
0x93e	      0x48837de800	               cmp qword [rbp - 0x18], 0	       137	revision.c	FUNCTION_5	WHILE_1	WHILE_2	FOR_2
0x943	            0x75d7	                           jne 0x400095c	       137	revision.c	FUNCTION_5	WHILE_1	WHILE_2	FOR_2
0x945	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       139	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x949	        0x488b4030	            mov rax, qword [rax + 0x30] 	       139	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x94d	          0x488b00	                    mov rax, qword [rax]	       139	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x950	        0x488945f0	             mov qword [rbp - 0x10], rax	       139	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x954	      0x48837df000	               cmp qword [rbp - 0x10], 0	       108	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x959	     0xf8526ffffff	                           jne 0x40008c5	       108	revision.c	FUNCTION_5	WHILE_1	WHILE_2
0x95f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       105	revision.c	FUNCTION_5	WHILE_1
0x963	          0x4885c0	                           test rax, rax	       105	revision.c	FUNCTION_5	WHILE_1
0x966	     0xf8504ffffff	                           jne 0x40008b0	       105	revision.c	FUNCTION_5	WHILE_1
0x96c	              0x90	                                     nop	       142	revision.c	FUNCTION_5
0x96d	        0x488b45f8	                mov rax, qword [rbp - 8]	       142	revision.c	FUNCTION_5
0x971	    0x644833042528	                xor rax, qword fs:[0x28]	       142	revision.c	FUNCTION_5
0x97a	            0x7405	                            je 0x40009c1	       142	revision.c	FUNCTION_5
0x97c	      0xe800000000	                          call 0x40009c1	       142	revision.c	FUNCTION_5
0x981	              0xc9	                                   leave	       142	revision.c	FUNCTION_5
0x982	              0xc3	                                     ret	       142	revision.c	FUNCTION_5
handle_revision_arg	FOR,0:functions,0:WHILE,0:CALL,15:IF,14:ELSE,0:DO,0:SWITCH,0	217
0x4217	              0x55	                                push rbp	      1622	revision.c	FUNCTION_56
0x4218	          0x4889e5	                            mov rbp, rsp	      1622	revision.c	FUNCTION_56
0x421b	    0x4881ecb00000	                           sub rsp, 0xb0	      1622	revision.c	FUNCTION_56
0x4222	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      1622	revision.c	FUNCTION_56
0x4229	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      1622	revision.c	FUNCTION_56
0x4230	    0x89955cffffff	             mov dword [rbp - 0xa4], edx	      1622	revision.c	FUNCTION_56
0x4236	    0x898d58ffffff	             mov dword [rbp - 0xa8], ecx	      1622	revision.c	FUNCTION_56
0x423c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1622	revision.c	FUNCTION_56
0x4245	        0x488945f8	                mov qword [rbp - 8], rax	      1622	revision.c	FUNCTION_56
0x4249	            0x31c0	                            xor eax, eax	      1622	revision.c	FUNCTION_56
0x424b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1628	revision.c	FUNCTION_56
0x4252	        0x48894588	             mov qword [rbp - 0x78], rax	      1628	revision.c	FUNCTION_56
0x4256	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      1629	revision.c	FUNCTION_56
0x425c	          0x83e001	                              and eax, 1	      1629	revision.c	FUNCTION_56
0x425f	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      1629	revision.c	FUNCTION_56
0x4265	    0xc78574ffffff	           mov dword [rbp - 0x8c], 0x80 	      1630	revision.c	FUNCTION_56
0x426f	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1632	revision.c	FUNCTION_56
0x4275	          0x83e002	                              and eax, 2	      1632	revision.c	FUNCTION_56
0x4278	            0x85c0	                           test eax, eax	      1632	revision.c	FUNCTION_56
0x427a	            0x740b	                            je 0x40042c7	      1632	revision.c	FUNCTION_56
0x427c	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1632	revision.c	FUNCTION_56
0x4282	          0x80cc04	                                or ah, 4	      1632	revision.c	FUNCTION_56
0x4285	            0xeb09	                           jmp 0x40042d0	      1632	revision.c	FUNCTION_56
0x4287	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1632	revision.c	FUNCTION_56
0x428d	          0x80e4fb	                            and ah, 0xfb	      1632	revision.c	FUNCTION_56
0x4290	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      1632	revision.c	FUNCTION_56
0x4296	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      1634	revision.c	FUNCTION_56	IF_1	CALL_1
0x429d	            0x751f	                           jne 0x40042fe	      1634	revision.c	FUNCTION_56	IF_1	CALL_1
0x429f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1634	revision.c	FUNCTION_56	IF_1	CALL_1
0x42a3	      0xbe00000000	                              mov esi, 0	      1634	revision.c	FUNCTION_56	IF_1	CALL_1
0x42a8	          0x4889c7	                            mov rdi, rax	      1634	revision.c	FUNCTION_56	IF_1	CALL_1
0x42ab	      0xe800000000	                          call 0x40042f0	      1634	revision.c	FUNCTION_56	IF_1	CALL_1
0x42b0	            0x85c0	                           test eax, eax	      1634	revision.c	FUNCTION_56	IF_1	CALL_1
0x42b2	            0x750a	                           jne 0x40042fe	      1634	revision.c	FUNCTION_56	IF_1	CALL_1
0x42b4	      0xb8ffffffff	                     mov eax, 0xffffffff	      1639	revision.c	FUNCTION_56	IF_1
0x42b9	      0xe9d3020000	                           jmp 0x40045d1	      1639	revision.c	FUNCTION_56	IF_1
0x42be	    0x8b8d58ffffff	             mov ecx, dword [rbp - 0xa8]	      1642	revision.c	FUNCTION_56	IF_2	CALL_2
0x42c4	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      1642	revision.c	FUNCTION_56	IF_2	CALL_2
0x42ca	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	      1642	revision.c	FUNCTION_56	IF_2	CALL_2
0x42d1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1642	revision.c	FUNCTION_56	IF_2	CALL_2
0x42d5	          0x4889c7	                            mov rdi, rax	      1642	revision.c	FUNCTION_56	IF_2	CALL_2
0x42d8	      0xe822feffff	                  call sym.handle_dotdot	      1642	revision.c	FUNCTION_56	IF_2	CALL_2
0x42dd	            0x85c0	                           test eax, eax	      1642	revision.c	FUNCTION_56	IF_2	CALL_2
0x42df	            0x750a	                           jne 0x400432b	      1642	revision.c	FUNCTION_56	IF_2	CALL_2
0x42e1	      0xb800000000	                              mov eax, 0	      1643	revision.c	FUNCTION_56	IF_2
0x42e6	      0xe9a6020000	                           jmp 0x40045d1	      1643	revision.c	FUNCTION_56	IF_2
0x42eb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1645	revision.c	FUNCTION_56	CALL_3
0x42ef	      0xbe00000000	                              mov esi, 0	      1645	revision.c	FUNCTION_56	CALL_3
0x42f4	          0x4889c7	                            mov rdi, rax	      1645	revision.c	FUNCTION_56	CALL_3
0x42f7	      0xe800000000	                          call 0x400433c	      1645	revision.c	FUNCTION_56	CALL_3
0x42fc	        0x48894590	             mov qword [rbp - 0x70], rax	      1645	revision.c	FUNCTION_56	CALL_3
0x4300	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      1646	revision.c	FUNCTION_56	IF_3
0x4305	            0x7449	                            je 0x4004390	      1646	revision.c	FUNCTION_56	IF_3
0x4307	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1646	revision.c	FUNCTION_56	IF_3
0x430b	        0x4883c002	                              add rax, 2	      1646	revision.c	FUNCTION_56	IF_3
0x430f	           0xfb600	                   movzx eax, byte [rax]	      1646	revision.c	FUNCTION_56	IF_3
0x4312	            0x84c0	                             test al, al	      1646	revision.c	FUNCTION_56	IF_3
0x4314	            0x753a	                           jne 0x4004390	      1646	revision.c	FUNCTION_56	IF_3
0x4316	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1647	revision.c	FUNCTION_56	IF_3
0x431a	          0xc60000	                       mov byte [rax], 0	      1647	revision.c	FUNCTION_56	IF_3
0x431d	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      1648	revision.c	FUNCTION_56	IF_3	IF_4	CALL_4
0x4323	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      1648	revision.c	FUNCTION_56	IF_3	IF_4	CALL_4
0x4327	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1648	revision.c	FUNCTION_56	IF_3	IF_4	CALL_4
0x432e	      0xb900000000	                              mov ecx, 0	      1648	revision.c	FUNCTION_56	IF_3	IF_4	CALL_4
0x4333	          0x4889c7	                            mov rdi, rax	      1648	revision.c	FUNCTION_56	IF_3	IF_4	CALL_4
0x4336	      0xe865f2ffff	               call sym.add_parents_only	      1648	revision.c	FUNCTION_56	IF_3	IF_4	CALL_4
0x433b	            0x85c0	                           test eax, eax	      1648	revision.c	FUNCTION_56	IF_3	IF_4	CALL_4
0x433d	            0x740a	                            je 0x4004389	      1648	revision.c	FUNCTION_56	IF_3	IF_4	CALL_4
0x433f	      0xb800000000	                              mov eax, 0	      1649	revision.c	FUNCTION_56	IF_3	IF_4
0x4344	      0xe948020000	                           jmp 0x40045d1	      1649	revision.c	FUNCTION_56	IF_3	IF_4
0x4349	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1650	revision.c	FUNCTION_56	IF_3
0x434d	          0xc6005e	                    mov byte [rax], 0x5e	      1650	revision.c	FUNCTION_56	IF_3
0x4350	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1652	revision.c	FUNCTION_56	CALL_5
0x4354	      0xbe00000000	                              mov esi, 0	      1652	revision.c	FUNCTION_56	CALL_5
0x4359	          0x4889c7	                            mov rdi, rax	      1652	revision.c	FUNCTION_56	CALL_5
0x435c	      0xe800000000	                          call 0x40043a1	      1652	revision.c	FUNCTION_56	CALL_5
0x4361	        0x48894590	             mov qword [rbp - 0x70], rax	      1652	revision.c	FUNCTION_56	CALL_5
0x4365	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      1653	revision.c	FUNCTION_56	IF_5
0x436a	            0x7446	                            je 0x40043f2	      1653	revision.c	FUNCTION_56	IF_5
0x436c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1653	revision.c	FUNCTION_56	IF_5
0x4370	        0x4883c002	                              add rax, 2	      1653	revision.c	FUNCTION_56	IF_5
0x4374	           0xfb600	                   movzx eax, byte [rax]	      1653	revision.c	FUNCTION_56	IF_5
0x4377	            0x84c0	                             test al, al	      1653	revision.c	FUNCTION_56	IF_5
0x4379	            0x7537	                           jne 0x40043f2	      1653	revision.c	FUNCTION_56	IF_5
0x437b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1654	revision.c	FUNCTION_56	IF_5
0x437f	          0xc60000	                       mov byte [rax], 0	      1654	revision.c	FUNCTION_56	IF_5
0x4382	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1655	revision.c	FUNCTION_56	IF_5	IF_6	CALL_6
0x4388	      0x3502040000	                          xor eax, 0x402	      1655	revision.c	FUNCTION_56	IF_5	IF_6	CALL_6
0x438d	            0x89c2	                            mov edx, eax	      1655	revision.c	FUNCTION_56	IF_5	IF_6	CALL_6
0x438f	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      1655	revision.c	FUNCTION_56	IF_5	IF_6	CALL_6
0x4393	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1655	revision.c	FUNCTION_56	IF_5	IF_6	CALL_6
0x439a	      0xb900000000	                              mov ecx, 0	      1655	revision.c	FUNCTION_56	IF_5	IF_6	CALL_6
0x439f	          0x4889c7	                            mov rdi, rax	      1655	revision.c	FUNCTION_56	IF_5	IF_6	CALL_6
0x43a2	      0xe8f9f1ffff	               call sym.add_parents_only	      1655	revision.c	FUNCTION_56	IF_5	IF_6	CALL_6
0x43a7	            0x85c0	                           test eax, eax	      1655	revision.c	FUNCTION_56	IF_5	IF_6	CALL_6
0x43a9	            0x7507	                           jne 0x40043f2	      1655	revision.c	FUNCTION_56	IF_5	IF_6	CALL_6
0x43ab	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1656	revision.c	FUNCTION_56	IF_5	IF_6
0x43af	          0xc6005e	                    mov byte [rax], 0x5e	      1656	revision.c	FUNCTION_56	IF_5	IF_6
0x43b2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1658	revision.c	FUNCTION_56	CALL_7
0x43b6	      0xbe00000000	                              mov esi, 0	      1658	revision.c	FUNCTION_56	CALL_7
0x43bb	          0x4889c7	                            mov rdi, rax	      1658	revision.c	FUNCTION_56	CALL_7
0x43be	      0xe800000000	                          call 0x4004403	      1658	revision.c	FUNCTION_56	CALL_7
0x43c3	        0x48894590	             mov qword [rbp - 0x70], rax	      1658	revision.c	FUNCTION_56	CALL_7
0x43c7	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      1659	revision.c	FUNCTION_56	IF_7
0x43cc	     0xf8495000000	                            je 0x40044a7	      1659	revision.c	FUNCTION_56	IF_7
0x43d2	    0xc78578ffffff	               mov dword [rbp - 0x88], 1	      1660	revision.c	FUNCTION_56	IF_7
0x43dc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1662	revision.c	FUNCTION_56	IF_7	IF_8
0x43e0	        0x4883c002	                              add rax, 2	      1662	revision.c	FUNCTION_56	IF_7	IF_8
0x43e4	           0xfb600	                   movzx eax, byte [rax]	      1662	revision.c	FUNCTION_56	IF_7	IF_8
0x43e7	            0x84c0	                             test al, al	      1662	revision.c	FUNCTION_56	IF_7	IF_8
0x43e9	            0x7440	                            je 0x400446b	      1662	revision.c	FUNCTION_56	IF_7	IF_8
0x43eb	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1664	revision.c	FUNCTION_56	IF_7	IF_8	CALL_8
0x43ef	        0x488d4802	                      lea rcx, [rax + 2]	      1664	revision.c	FUNCTION_56	IF_7	IF_8	CALL_8
0x43f3	        0x488d4580	                   lea rax, [rbp - 0x80]	      1664	revision.c	FUNCTION_56	IF_7	IF_8	CALL_8
0x43f7	      0xba0a000000	                            mov edx, 0xa	      1664	revision.c	FUNCTION_56	IF_7	IF_8	CALL_8
0x43fc	          0x4889c6	                            mov rsi, rax	      1664	revision.c	FUNCTION_56	IF_7	IF_8	CALL_8
0x43ff	          0x4889cf	                            mov rdi, rcx	      1664	revision.c	FUNCTION_56	IF_7	IF_8	CALL_8
0x4402	      0xe800000000	                          call 0x4004447	      1664	revision.c	FUNCTION_56	IF_7	IF_8	CALL_8
0x4407	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      1664	revision.c	FUNCTION_56	IF_7	IF_8	CALL_8
0x440d	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1665	revision.c	FUNCTION_56	IF_7	IF_8	IF_9
0x4411	           0xfb600	                   movzx eax, byte [rax]	      1665	revision.c	FUNCTION_56	IF_7	IF_8	IF_9
0x4414	            0x84c0	                             test al, al	      1665	revision.c	FUNCTION_56	IF_7	IF_8	IF_9
0x4416	            0x7509	                           jne 0x4004461	      1665	revision.c	FUNCTION_56	IF_7	IF_8	IF_9
0x4418	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      1665	revision.c	FUNCTION_56	IF_7	IF_8	IF_9
0x441f	            0x750a	                           jne 0x400446b	      1665	revision.c	FUNCTION_56	IF_7	IF_8	IF_9
0x4421	      0xb8ffffffff	                     mov eax, 0xffffffff	      1666	revision.c	FUNCTION_56	IF_7	IF_8	IF_9
0x4426	      0xe966010000	                           jmp 0x40045d1	      1666	revision.c	FUNCTION_56	IF_7	IF_8	IF_9
0x442b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1669	revision.c	FUNCTION_56	IF_7
0x442f	          0xc60000	                       mov byte [rax], 0	      1669	revision.c	FUNCTION_56	IF_7
0x4432	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1670	revision.c	FUNCTION_56	IF_7	IF_10	CALL_9
0x4438	      0x3502040000	                          xor eax, 0x402	      1670	revision.c	FUNCTION_56	IF_7	IF_10	CALL_9
0x443d	            0x89c7	                            mov edi, eax	      1670	revision.c	FUNCTION_56	IF_7	IF_10	CALL_9
0x443f	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      1670	revision.c	FUNCTION_56	IF_7	IF_10	CALL_9
0x4445	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      1670	revision.c	FUNCTION_56	IF_7	IF_10	CALL_9
0x4449	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1670	revision.c	FUNCTION_56	IF_7	IF_10	CALL_9
0x4450	            0x89d1	                            mov ecx, edx	      1670	revision.c	FUNCTION_56	IF_7	IF_10	CALL_9
0x4452	            0x89fa	                            mov edx, edi	      1670	revision.c	FUNCTION_56	IF_7	IF_10	CALL_9
0x4454	          0x4889c7	                            mov rdi, rax	      1670	revision.c	FUNCTION_56	IF_7	IF_10	CALL_9
0x4457	      0xe844f1ffff	               call sym.add_parents_only	      1670	revision.c	FUNCTION_56	IF_7	IF_10	CALL_9
0x445c	            0x85c0	                           test eax, eax	      1670	revision.c	FUNCTION_56	IF_7	IF_10	CALL_9
0x445e	            0x7507	                           jne 0x40044a7	      1670	revision.c	FUNCTION_56	IF_7	IF_10	CALL_9
0x4460	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1671	revision.c	FUNCTION_56	IF_7	IF_10
0x4464	          0xc6005e	                    mov byte [rax], 0x5e	      1671	revision.c	FUNCTION_56	IF_7	IF_10
0x4467	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	      1674	revision.c	FUNCTION_56
0x4471	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1675	revision.c	FUNCTION_56	IF_11
0x4475	           0xfb600	                   movzx eax, byte [rax]	      1675	revision.c	FUNCTION_56	IF_11
0x4478	            0x3c5e	                            cmp al, 0x5e	      1675	revision.c	FUNCTION_56	IF_11
0x447a	            0x750f	                           jne 0x40044cb	      1675	revision.c	FUNCTION_56	IF_11
0x447c	    0xc78570ffffff	          mov dword [rbp - 0x90], 0x402 	      1676	revision.c	FUNCTION_56	IF_11
0x4486	      0x4883458801	               add qword [rbp - 0x78], 1	      1677	revision.c	FUNCTION_56	IF_11
0x448b	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      1680	revision.c	FUNCTION_56	IF_12
0x4491	          0x83e002	                              and eax, 2	      1680	revision.c	FUNCTION_56	IF_12
0x4494	            0x85c0	                           test eax, eax	      1680	revision.c	FUNCTION_56	IF_12
0x4496	            0x7407	                            je 0x40044df	      1680	revision.c	FUNCTION_56	IF_12
0x4498	    0x838d74ffffff	                or dword [rbp - 0x8c], 4	      1681	revision.c	FUNCTION_56	IF_12
0x449f	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1683	revision.c	FUNCTION_56	IF_13	CALL_10
0x44a3	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      1683	revision.c	FUNCTION_56	IF_13	CALL_10
0x44a7	    0x8bb574ffffff	             mov esi, dword [rbp - 0x8c]	      1683	revision.c	FUNCTION_56	IF_13	CALL_10
0x44ad	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1683	revision.c	FUNCTION_56	IF_13	CALL_10
0x44b1	          0x4889c7	                            mov rdi, rax	      1683	revision.c	FUNCTION_56	IF_13	CALL_10
0x44b4	      0xe800000000	                          call 0x40044f9	      1683	revision.c	FUNCTION_56	IF_13	CALL_10
0x44b9	            0x85c0	                           test eax, eax	      1683	revision.c	FUNCTION_56	IF_13	CALL_10
0x44bb	            0x7426	                            je 0x4004523	      1683	revision.c	FUNCTION_56	IF_13	CALL_10
0x44bd	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1684	revision.c	FUNCTION_56	IF_13
0x44c4	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      1684	revision.c	FUNCTION_56	IF_13
0x44c8	          0x83e001	                              and eax, 1	      1684	revision.c	FUNCTION_56	IF_13
0x44cb	            0x84c0	                             test al, al	      1684	revision.c	FUNCTION_56	IF_13
0x44cd	            0x740a	                            je 0x4004519	      1684	revision.c	FUNCTION_56	IF_13
0x44cf	      0xb800000000	                              mov eax, 0	      1684	revision.c	FUNCTION_56	IF_13
0x44d4	      0xe9b8000000	                           jmp 0x40045d1	      1684	revision.c	FUNCTION_56	IF_13
0x44d9	      0xb8ffffffff	                     mov eax, 0xffffffff	      1684	revision.c	FUNCTION_56	IF_13
0x44de	      0xe9ae000000	                           jmp 0x40045d1	      1684	revision.c	FUNCTION_56	IF_13
0x44e3	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      1685	revision.c	FUNCTION_56	IF_14
0x44ea	            0x751a	                           jne 0x4004546	      1685	revision.c	FUNCTION_56	IF_14
0x44ec	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1686	revision.c	FUNCTION_56	CALL_11
0x44f3	        0x488b4040	            mov rax, qword [rax + 0x40] 	      1686	revision.c	FUNCTION_56	CALL_11
0x44f7	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1686	revision.c	FUNCTION_56	CALL_11
0x44fb	          0x4889d6	                            mov rsi, rdx	      1686	revision.c	FUNCTION_56	CALL_11
0x44fe	          0x4889c7	                            mov rdi, rax	      1686	revision.c	FUNCTION_56	CALL_11
0x4501	      0xe800000000	                          call 0x4004546	      1686	revision.c	FUNCTION_56	CALL_11
0x4506	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1687	revision.c	FUNCTION_56	CALL_12
0x450c	    0x338570ffffff	             xor eax, dword [rbp - 0x90]	      1687	revision.c	FUNCTION_56	CALL_12
0x4512	            0x89c1	                            mov ecx, eax	      1687	revision.c	FUNCTION_56	CALL_12
0x4514	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      1687	revision.c	FUNCTION_56	CALL_12
0x4518	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      1687	revision.c	FUNCTION_56	CALL_12
0x451c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1687	revision.c	FUNCTION_56	CALL_12
0x4523	          0x4889c7	                            mov rdi, rax	      1687	revision.c	FUNCTION_56	CALL_12
0x4526	      0xe8b9c6ffff	                  call sym.get_reference	      1687	revision.c	FUNCTION_56	CALL_12
0x452b	        0x48894598	             mov qword [rbp - 0x68], rax	      1687	revision.c	FUNCTION_56	CALL_12
0x452f	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      1688	revision.c	FUNCTION_56	CALL_13
0x4535	    0x338570ffffff	             xor eax, dword [rbp - 0x90]	      1688	revision.c	FUNCTION_56	CALL_13
0x453b	            0x89c1	                            mov ecx, eax	      1688	revision.c	FUNCTION_56	CALL_13
0x453d	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      1688	revision.c	FUNCTION_56	CALL_13
0x4544	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      1688	revision.c	FUNCTION_56	CALL_13
0x4548	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1688	revision.c	FUNCTION_56	CALL_13
0x454f	          0x4189c8	                            mov r8d, ecx	      1688	revision.c	FUNCTION_56	CALL_13
0x4552	      0xb905000000	                              mov ecx, 5	      1688	revision.c	FUNCTION_56	CALL_13
0x4557	          0x4889c7	                            mov rdi, rax	      1688	revision.c	FUNCTION_56	CALL_13
0x455a	      0xe8b9e5ffff	                call sym.add_rev_cmdline	      1688	revision.c	FUNCTION_56	CALL_13
0x455f	        0x488b7df0	             mov rdi, qword [rbp - 0x10]	      1689	revision.c	FUNCTION_56	CALL_14
0x4563	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      1689	revision.c	FUNCTION_56	CALL_14
0x4566	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1689	revision.c	FUNCTION_56	CALL_14
0x456a	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      1689	revision.c	FUNCTION_56	CALL_14
0x456e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1689	revision.c	FUNCTION_56	CALL_14
0x4575	          0x4989f8	                             mov r8, rdi	      1689	revision.c	FUNCTION_56	CALL_14
0x4578	          0x4889c7	                            mov rdi, rax	      1689	revision.c	FUNCTION_56	CALL_14
0x457b	      0xe803c4ffff	   call sym.add_pending_object_with_path	      1689	revision.c	FUNCTION_56	CALL_14
0x4580	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1690	revision.c	FUNCTION_56	CALL_15
0x4584	          0x4889c7	                            mov rdi, rax	      1690	revision.c	FUNCTION_56	CALL_15
0x4587	      0xe800000000	                          call 0x40045cc	      1690	revision.c	FUNCTION_56	CALL_15
0x458c	      0xb800000000	                              mov eax, 0	      1691	revision.c	FUNCTION_56
0x4591	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1692	revision.c	FUNCTION_56
0x4595	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1692	revision.c	FUNCTION_56
0x459e	            0x7405	                            je 0x40045e5	      1692	revision.c	FUNCTION_56
0x45a0	      0xe800000000	                          call 0x40045e5	      1692	revision.c	FUNCTION_56
0x45a5	              0xc9	                                   leave	      1692	revision.c	FUNCTION_56
0x45a6	              0xc3	                                     ret	      1692	revision.c	FUNCTION_56
save_parents	FOR,0:functions,0:WHILE,0:CALL,4:IF,3:ELSE,1:DO,0:SWITCH,0	47
0x8e43	              0x55	                                push rbp	      3139	revision.c	FUNCTION_90
0x8e44	          0x4889e5	                            mov rbp, rsp	      3139	revision.c	FUNCTION_90
0x8e47	        0x4883ec20	                           sub rsp, 0x20	      3139	revision.c	FUNCTION_90
0x8e4b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3139	revision.c	FUNCTION_90
0x8e4f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3139	revision.c	FUNCTION_90
0x8e53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3142	revision.c	FUNCTION_90	IF_1
0x8e57	    0x488b80980800	           mov rax, qword [rax + 0x898] 	      3142	revision.c	FUNCTION_90	IF_1
0x8e5e	          0x4885c0	                           test rax, rax	      3142	revision.c	FUNCTION_90	IF_1
0x8e61	            0x752b	                           jne 0x4008ece	      3142	revision.c	FUNCTION_90	IF_1
0x8e63	      0xbf18000000	                           mov edi, 0x18	      3143	revision.c	FUNCTION_90	IF_1	CALL_1
0x8e68	      0xe800000000	                          call 0x4008ead	      3143	revision.c	FUNCTION_90	IF_1	CALL_1
0x8e6d	          0x4889c2	                            mov rdx, rax	      3143	revision.c	FUNCTION_90	IF_1	CALL_1
0x8e70	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3143	revision.c	FUNCTION_90	IF_1	CALL_1
0x8e74	    0x488990980800	            mov qword [rax + 0x898], rdx	      3143	revision.c	FUNCTION_90	IF_1	CALL_1
0x8e7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3144	revision.c	FUNCTION_90	IF_1	CALL_2
0x8e7f	    0x488b80980800	           mov rax, qword [rax + 0x898] 	      3144	revision.c	FUNCTION_90	IF_1	CALL_2
0x8e86	          0x4889c7	                            mov rdi, rax	      3144	revision.c	FUNCTION_90	IF_1	CALL_2
0x8e89	      0xe85ffdffff	             call sym.init_saved_parents	      3144	revision.c	FUNCTION_90	IF_1	CALL_2
0x8e8e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3147	revision.c	FUNCTION_90	CALL_3
0x8e92	    0x488b80980800	           mov rax, qword [rax + 0x898] 	      3147	revision.c	FUNCTION_90	CALL_3
0x8e99	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3147	revision.c	FUNCTION_90	CALL_3
0x8e9d	          0x4889d6	                            mov rsi, rdx	      3147	revision.c	FUNCTION_90	CALL_3
0x8ea0	          0x4889c7	                            mov rdi, rax	      3147	revision.c	FUNCTION_90	CALL_3
0x8ea3	      0xe847ffffff	               call sym.saved_parents_at	      3147	revision.c	FUNCTION_90	CALL_3
0x8ea8	        0x488945f8	                mov qword [rbp - 8], rax	      3147	revision.c	FUNCTION_90	CALL_3
0x8eac	        0x488b45f8	                mov rax, qword [rbp - 8]	      3158	revision.c	FUNCTION_90	IF_2
0x8eb0	          0x488b00	                    mov rax, qword [rax]	      3158	revision.c	FUNCTION_90	IF_2
0x8eb3	          0x4885c0	                           test rax, rax	      3158	revision.c	FUNCTION_90	IF_2
0x8eb6	            0x7536	                           jne 0x4008f2e	      3158	revision.c	FUNCTION_90	IF_2
0x8eb8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3160	revision.c	FUNCTION_90	IF_3
0x8ebc	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3160	revision.c	FUNCTION_90	IF_3
0x8ec0	          0x4885c0	                           test rax, rax	      3160	revision.c	FUNCTION_90	IF_3
0x8ec3	            0x741c	                            je 0x4008f21	      3160	revision.c	FUNCTION_90	IF_3
0x8ec5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3161	revision.c	FUNCTION_90	CALL_4
0x8ec9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3161	revision.c	FUNCTION_90	CALL_4
0x8ecd	          0x4889c7	                            mov rdi, rax	      3161	revision.c	FUNCTION_90	CALL_4
0x8ed0	      0xe800000000	                          call 0x4008f15	      3161	revision.c	FUNCTION_90	CALL_4
0x8ed5	          0x4889c2	                            mov rdx, rax	      3161	revision.c	FUNCTION_90	CALL_4
0x8ed8	        0x488b45f8	                mov rax, qword [rbp - 8]	      3161	revision.c	FUNCTION_90	CALL_4
0x8edc	          0x488910	                    mov qword [rax], rdx	      3161	revision.c	FUNCTION_90	CALL_4
0x8edf	            0xeb0e	                           jmp 0x4008f2f	      3161	revision.c	FUNCTION_90	CALL_4
0x8ee1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3163	revision.c	FUNCTION_90	ELSE_1
0x8ee5	    0x48c700ffffff	     mov qword [rax], 0xffffffffffffffff	      3163	revision.c	FUNCTION_90	ELSE_1
0x8eec	            0xeb01	                           jmp 0x4008f2f	      3163	revision.c	FUNCTION_90	ELSE_1
0x8eee	              0x90	                                     nop	      3159	revision.c	FUNCTION_90	IF_2
0x8eef	              0xc9	                                   leave	      3164	revision.c	FUNCTION_90	ELSE_1
0x8ef0	              0xc3	                                     ret	      3164	revision.c	FUNCTION_90	ELSE_1
add_parents_only	FOR,1:functions,0:WHILE,1:CALL,6:IF,8:ELSE,0:DO,0:SWITCH,0	143
0x35a0	              0x55	                                push rbp	      1372	revision.c	FUNCTION_49
0x35a1	          0x4889e5	                            mov rbp, rsp	      1372	revision.c	FUNCTION_49
0x35a4	        0x4883ec70	                           sub rsp, 0x70	      1372	revision.c	FUNCTION_49
0x35a8	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1372	revision.c	FUNCTION_49
0x35ac	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1372	revision.c	FUNCTION_49
0x35b0	          0x89559c	             mov dword [rbp - 0x64], edx	      1372	revision.c	FUNCTION_49
0x35b3	          0x894d98	             mov dword [rbp - 0x68], ecx	      1372	revision.c	FUNCTION_49
0x35b6	    0x64488b042528	                mov rax, qword fs:[0x28]	      1372	revision.c	FUNCTION_49
0x35bf	        0x488945f8	                mov qword [rbp - 8], rax	      1372	revision.c	FUNCTION_49
0x35c3	            0x31c0	                            xor eax, eax	      1372	revision.c	FUNCTION_49
0x35c5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1378	revision.c	FUNCTION_49
0x35c9	        0x488945c8	             mov qword [rbp - 0x38], rax	      1378	revision.c	FUNCTION_49
0x35cd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1380	revision.c	FUNCTION_49	IF_1
0x35d1	           0xfb600	                   movzx eax, byte [rax]	      1380	revision.c	FUNCTION_49	IF_1
0x35d4	            0x3c5e	                            cmp al, 0x5e	      1380	revision.c	FUNCTION_49	IF_1
0x35d6	            0x7510	                           jne 0x4003628	      1380	revision.c	FUNCTION_49	IF_1
0x35d8	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1381	revision.c	FUNCTION_49	IF_1
0x35db	      0x3502040000	                          xor eax, 0x402	      1381	revision.c	FUNCTION_49	IF_1
0x35e0	          0x89459c	             mov dword [rbp - 0x64], eax	      1381	revision.c	FUNCTION_49	IF_1
0x35e3	      0x488345c801	               add qword [rbp - 0x38], 1	      1382	revision.c	FUNCTION_49	IF_1
0x35e8	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1384	revision.c	FUNCTION_49	IF_2	CALL_1
0x35ec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1384	revision.c	FUNCTION_49	IF_2	CALL_1
0x35f0	          0x4889d6	                            mov rsi, rdx	      1384	revision.c	FUNCTION_49	IF_2	CALL_1
0x35f3	          0x4889c7	                            mov rdi, rax	      1384	revision.c	FUNCTION_49	IF_2	CALL_1
0x35f6	      0xe800000000	                          call 0x400363b	      1384	revision.c	FUNCTION_49	IF_2	CALL_1
0x35fb	            0x85c0	                           test eax, eax	      1384	revision.c	FUNCTION_49	IF_2	CALL_1
0x35fd	            0x740a	                            je 0x4003649	      1384	revision.c	FUNCTION_49	IF_2	CALL_1
0x35ff	      0xb800000000	                              mov eax, 0	      1385	revision.c	FUNCTION_49	IF_2
0x3604	      0xe986010000	                           jmp 0x40037cf	      1385	revision.c	FUNCTION_49	IF_2
0x3609	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1387	revision.c	FUNCTION_49	WHILE_1	CALL_2
0x360d	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      1387	revision.c	FUNCTION_49	WHILE_1	CALL_2
0x3611	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1387	revision.c	FUNCTION_49	WHILE_1	CALL_2
0x3615	      0xb900000000	                              mov ecx, 0	      1387	revision.c	FUNCTION_49	WHILE_1	CALL_2
0x361a	          0x4889c7	                            mov rdi, rax	      1387	revision.c	FUNCTION_49	WHILE_1	CALL_2
0x361d	      0xe8c2d5ffff	                  call sym.get_reference	      1387	revision.c	FUNCTION_49	WHILE_1	CALL_2
0x3622	        0x488945d0	             mov qword [rbp - 0x30], rax	      1387	revision.c	FUNCTION_49	WHILE_1	CALL_2
0x3626	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1388	revision.c	FUNCTION_49	WHILE_1	IF_3
0x362b	            0x7519	                           jne 0x4003686	      1388	revision.c	FUNCTION_49	WHILE_1	IF_3
0x362d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1388	revision.c	FUNCTION_49	WHILE_1	IF_3
0x3631	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      1388	revision.c	FUNCTION_49	WHILE_1	IF_3
0x3635	          0x83e001	                              and eax, 1	      1388	revision.c	FUNCTION_49	WHILE_1	IF_3
0x3638	            0x84c0	                             test al, al	      1388	revision.c	FUNCTION_49	WHILE_1	IF_3
0x363a	            0x740a	                            je 0x4003686	      1388	revision.c	FUNCTION_49	WHILE_1	IF_3
0x363c	      0xb800000000	                              mov eax, 0	      1389	revision.c	FUNCTION_49	WHILE_1	IF_3
0x3641	      0xe949010000	                           jmp 0x40037cf	      1389	revision.c	FUNCTION_49	WHILE_1	IF_3
0x3646	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1390	revision.c	FUNCTION_49	WHILE_1	IF_4
0x364a	           0xfb600	                   movzx eax, byte [rax]	      1390	revision.c	FUNCTION_49	WHILE_1	IF_4
0x364d	          0x83e00e	                            and eax, 0xe	      1390	revision.c	FUNCTION_49	WHILE_1	IF_4
0x3650	            0x3c08	                               cmp al, 8	      1390	revision.c	FUNCTION_49	WHILE_1	IF_4
0x3652	            0x7534	                           jne 0x40036c8	      1390	revision.c	FUNCTION_49	WHILE_1	IF_4
0x3654	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1392	revision.c	FUNCTION_49	WHILE_1	IF_5
0x3658	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1392	revision.c	FUNCTION_49	WHILE_1	IF_5
0x365c	          0x4885c0	                           test rax, rax	      1392	revision.c	FUNCTION_49	WHILE_1	IF_5
0x365f	            0x750a	                           jne 0x40036ab	      1392	revision.c	FUNCTION_49	WHILE_1	IF_5
0x3661	      0xb800000000	                              mov eax, 0	      1393	revision.c	FUNCTION_49	WHILE_1	IF_5
0x3666	      0xe924010000	                           jmp 0x40037cf	      1393	revision.c	FUNCTION_49	WHILE_1	IF_5
0x366b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1394	revision.c	FUNCTION_49	WHILE_1	CALL_3
0x366f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1394	revision.c	FUNCTION_49	WHILE_1	CALL_3
0x3673	        0x488d5004	                      lea rdx, [rax + 4]	      1394	revision.c	FUNCTION_49	WHILE_1	CALL_3
0x3677	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1394	revision.c	FUNCTION_49	WHILE_1	CALL_3
0x367b	          0x4889d6	                            mov rsi, rdx	      1394	revision.c	FUNCTION_49	WHILE_1	CALL_3
0x367e	          0x4889c7	                            mov rdi, rax	      1394	revision.c	FUNCTION_49	WHILE_1	CALL_3
0x3681	      0xe84aceffff	                         call sym.oidcpy	      1394	revision.c	FUNCTION_49	WHILE_1	CALL_3
0x3686	            0xeb81	                           jmp 0x4003649	      1395	revision.c	FUNCTION_49	WHILE_1
0x3688	              0x90	                                     nop	      1391	revision.c	FUNCTION_49	WHILE_1	IF_4
0x3689	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1396	revision.c	FUNCTION_49	IF_6
0x368d	           0xfb600	                   movzx eax, byte [rax]	      1396	revision.c	FUNCTION_49	IF_6
0x3690	          0x83e00e	                            and eax, 0xe	      1396	revision.c	FUNCTION_49	IF_6
0x3693	            0x3c02	                               cmp al, 2	      1396	revision.c	FUNCTION_49	IF_6
0x3695	            0x740a	                            je 0x40036e1	      1396	revision.c	FUNCTION_49	IF_6
0x3697	      0xb800000000	                              mov eax, 0	      1397	revision.c	FUNCTION_49	IF_6
0x369c	      0xe9ee000000	                           jmp 0x40037cf	      1397	revision.c	FUNCTION_49	IF_6
0x36a1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1398	revision.c	FUNCTION_49
0x36a5	        0x488945d8	             mov qword [rbp - 0x28], rax	      1398	revision.c	FUNCTION_49
0x36a9	        0x837d9800	               cmp dword [rbp - 0x68], 0	      1399	revision.c	FUNCTION_49	IF_7
0x36ad	            0x7423	                            je 0x4003712	      1399	revision.c	FUNCTION_49	IF_7
0x36af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1400	revision.c	FUNCTION_49	IF_7	CALL_4
0x36b3	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1400	revision.c	FUNCTION_49	IF_7	CALL_4
0x36b7	          0x4889c7	                            mov rdi, rax	      1400	revision.c	FUNCTION_49	IF_7	CALL_4
0x36ba	      0xe800000000	                          call 0x40036ff	      1400	revision.c	FUNCTION_49	IF_7	CALL_4
0x36bf	            0x89c2	                            mov edx, eax	      1400	revision.c	FUNCTION_49	IF_7	CALL_4
0x36c1	          0x8b4598	             mov eax, dword [rbp - 0x68]	      1400	revision.c	FUNCTION_49	IF_7	CALL_4
0x36c4	            0x39c2	                            cmp edx, eax	      1399	revision.c	FUNCTION_49	IF_7
0x36c6	            0x730a	                           jae 0x4003712	      1399	revision.c	FUNCTION_49	IF_7
0x36c8	      0xb800000000	                              mov eax, 0	      1401	revision.c	FUNCTION_49	IF_7
0x36cd	      0xe9bd000000	                           jmp 0x40037cf	      1401	revision.c	FUNCTION_49	IF_7
0x36d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1402	revision.c	FUNCTION_49	FOR_1
0x36d6	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1402	revision.c	FUNCTION_49	FOR_1
0x36da	        0x488945c0	             mov qword [rbp - 0x40], rax	      1402	revision.c	FUNCTION_49	FOR_1
0x36de	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      1402	revision.c	FUNCTION_49	FOR_1
0x36e5	      0xe995000000	                           jmp 0x40037bf	      1402	revision.c	FUNCTION_49	FOR_1
0x36ea	        0x837d9800	               cmp dword [rbp - 0x68], 0	      1405	revision.c	FUNCTION_49	FOR_1	IF_8
0x36ee	            0x7408	                            je 0x4003738	      1405	revision.c	FUNCTION_49	FOR_1	IF_8
0x36f0	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1405	revision.c	FUNCTION_49	FOR_1	IF_8
0x36f3	          0x3b4598	             cmp eax, dword [rbp - 0x68]	      1405	revision.c	FUNCTION_49	FOR_1	IF_8
0x36f6	            0x7576	                           jne 0x40037ae	      1405	revision.c	FUNCTION_49	FOR_1	IF_8
0x36f8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1408	revision.c	FUNCTION_49	FOR_1
0x36fc	          0x488b00	                    mov rax, qword [rax]	      1408	revision.c	FUNCTION_49	FOR_1
0x36ff	        0x488945d0	             mov qword [rbp - 0x30], rax	      1408	revision.c	FUNCTION_49	FOR_1
0x3703	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1409	revision.c	FUNCTION_49	FOR_1
0x3707	            0x8b00	                    mov eax, dword [rax]	      1409	revision.c	FUNCTION_49	FOR_1
0x3709	          0xc1e804	                              shr eax, 4	      1409	revision.c	FUNCTION_49	FOR_1
0x370c	      0x25ffffff07	                      and eax, 0x7ffffff	      1409	revision.c	FUNCTION_49	FOR_1
0x3711	           0xb459c	              or eax, dword [rbp - 0x64]	      1409	revision.c	FUNCTION_49	FOR_1
0x3714	      0x25ffffff07	                      and eax, 0x7ffffff	      1409	revision.c	FUNCTION_49	FOR_1
0x3719	            0x89c2	                            mov edx, eax	      1409	revision.c	FUNCTION_49	FOR_1
0x371b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1409	revision.c	FUNCTION_49	FOR_1
0x371f	    0x81e2ffffff07	                      and edx, 0x7ffffff	      1409	revision.c	FUNCTION_49	FOR_1
0x3725	            0x89d1	                            mov ecx, edx	      1409	revision.c	FUNCTION_49	FOR_1
0x3727	          0xc1e104	                              shl ecx, 4	      1409	revision.c	FUNCTION_49	FOR_1
0x372a	            0x8b10	                    mov edx, dword [rax]	      1409	revision.c	FUNCTION_49	FOR_1
0x372c	    0x81e20f000080	                     and edx, 0x8000000f	      1409	revision.c	FUNCTION_49	FOR_1
0x3732	             0x9ca	                             or edx, ecx	      1409	revision.c	FUNCTION_49	FOR_1
0x3734	            0x8910	                    mov dword [rax], edx	      1409	revision.c	FUNCTION_49	FOR_1
0x3736	          0x8b4d9c	             mov ecx, dword [rbp - 0x64]	      1410	revision.c	FUNCTION_49	FOR_1	CALL_5
0x3739	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1410	revision.c	FUNCTION_49	FOR_1	CALL_5
0x373d	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1410	revision.c	FUNCTION_49	FOR_1	CALL_5
0x3741	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1410	revision.c	FUNCTION_49	FOR_1	CALL_5
0x3745	          0x4189c8	                            mov r8d, ecx	      1410	revision.c	FUNCTION_49	FOR_1	CALL_5
0x3748	      0xb901000000	                              mov ecx, 1	      1410	revision.c	FUNCTION_49	FOR_1	CALL_5
0x374d	          0x4889c7	                            mov rdi, rax	      1410	revision.c	FUNCTION_49	FOR_1	CALL_5
0x3750	      0xe8c3f3ffff	                call sym.add_rev_cmdline	      1410	revision.c	FUNCTION_49	FOR_1	CALL_5
0x3755	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1411	revision.c	FUNCTION_49	FOR_1	CALL_6
0x3759	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1411	revision.c	FUNCTION_49	FOR_1	CALL_6
0x375d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1411	revision.c	FUNCTION_49	FOR_1	CALL_6
0x3761	          0x4889ce	                            mov rsi, rcx	      1411	revision.c	FUNCTION_49	FOR_1	CALL_6
0x3764	          0x4889c7	                            mov rdi, rax	      1411	revision.c	FUNCTION_49	FOR_1	CALL_6
0x3767	      0xe800000000	                          call 0x40037ac	      1411	revision.c	FUNCTION_49	FOR_1	CALL_6
0x376c	            0xeb01	                           jmp 0x40037af	      1411	revision.c	FUNCTION_49	FOR_1	CALL_6
0x376e	              0x90	                                     nop	      1406	revision.c	FUNCTION_49	FOR_1	IF_8
0x376f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1404	revision.c	FUNCTION_49	FOR_1
0x3773	        0x488b4008	                mov rax, qword [rax + 8]	      1404	revision.c	FUNCTION_49	FOR_1
0x3777	        0x488945c0	             mov qword [rbp - 0x40], rax	      1404	revision.c	FUNCTION_49	FOR_1
0x377b	        0x8345bc01	               add dword [rbp - 0x44], 1	      1404	revision.c	FUNCTION_49	FOR_1
0x377f	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1402	revision.c	FUNCTION_49	FOR_1
0x3784	     0xf8560ffffff	                           jne 0x400372a	      1402	revision.c	FUNCTION_49	FOR_1
0x378a	      0xb801000000	                              mov eax, 1	      1413	revision.c	FUNCTION_49
0x378f	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1414	revision.c	FUNCTION_49
0x3793	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1414	revision.c	FUNCTION_49
0x379c	            0x7405	                            je 0x40037e3	      1414	revision.c	FUNCTION_49
0x379e	      0xe800000000	                          call 0x40037e3	      1414	revision.c	FUNCTION_49
0x37a3	              0xc9	                                   leave	      1414	revision.c	FUNCTION_49
0x37a4	              0xc3	                                     ret	      1414	revision.c	FUNCTION_49
st_add	FOR,0:functions,0:WHILE,0:CALL,2:IF,1:ELSE,0:DO,0:SWITCH,0	20
0x61	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_131
0x62	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_131
0x65	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_131
0x69	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_131
0x6d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_131
0x71	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x75	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x78	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x7c	            0x731a	                           jae 0x40000d8	       785	git-compat-util.h	FUNCTION_131	IF_1	CALL_1
0x7e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_2
0x82	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_2
0x86	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_2
0x89	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_2
0x8e	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_2
0x93	      0xe800000000	                          call 0x40000d8	       786	git-compat-util.h	FUNCTION_131	IF_1	CALL_2
0x98	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_131
0x9c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_131
0xa0	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_131
0xa3	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_131
0xa4	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_131
simplify_merges	FOR,1:functions,0:WHILE,3:CALL,6:IF,2:ELSE,0:DO,0:SWITCH,0	97
0x7e63	              0x55	                                push rbp	      2798	revision.c	FUNCTION_78
0x7e64	          0x4889e5	                            mov rbp, rsp	      2798	revision.c	FUNCTION_78
0x7e67	        0x4883ec50	                           sub rsp, 0x50	      2798	revision.c	FUNCTION_78
0x7e6b	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2798	revision.c	FUNCTION_78
0x7e6f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2798	revision.c	FUNCTION_78
0x7e78	        0x488945f8	                mov qword [rbp - 8], rax	      2798	revision.c	FUNCTION_78
0x7e7c	            0x31c0	                            xor eax, eax	      2798	revision.c	FUNCTION_78
0x7e7e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2803	revision.c	FUNCTION_78	IF_1
0x7e82	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      2803	revision.c	FUNCTION_78	IF_1
0x7e86	          0x83e008	                              and eax, 8	      2803	revision.c	FUNCTION_78	IF_1
0x7e89	            0x84c0	                             test al, al	      2803	revision.c	FUNCTION_78	IF_1
0x7e8b	     0xf8423010000	                            je 0x4007ff4	      2803	revision.c	FUNCTION_78	IF_1
0x7e91	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2807	revision.c	FUNCTION_78
0x7e99	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2808	revision.c	FUNCTION_78	FOR_1
0x7e9d	          0x488b00	                    mov rax, qword [rax]	      2808	revision.c	FUNCTION_78	FOR_1
0x7ea0	        0x488945c8	             mov qword [rbp - 0x38], rax	      2808	revision.c	FUNCTION_78	FOR_1
0x7ea4	            0xeb32	                           jmp 0x4007f18	      2808	revision.c	FUNCTION_78	FOR_1
0x7ea6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2809	revision.c	FUNCTION_78	FOR_1
0x7eaa	          0x488b00	                    mov rax, qword [rax]	      2809	revision.c	FUNCTION_78	FOR_1
0x7ead	        0x488945e0	             mov qword [rbp - 0x20], rax	      2809	revision.c	FUNCTION_78	FOR_1
0x7eb1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2810	revision.c	FUNCTION_78	FOR_1
0x7eb5	        0x488b4008	                mov rax, qword [rax + 8]	      2810	revision.c	FUNCTION_78	FOR_1
0x7eb9	        0x488945e8	             mov qword [rbp - 0x18], rax	      2810	revision.c	FUNCTION_78	FOR_1
0x7ebd	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2815	revision.c	FUNCTION_78	FOR_1	CALL_1
0x7ec1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2815	revision.c	FUNCTION_78	FOR_1	CALL_1
0x7ec5	          0x4889d6	                            mov rsi, rdx	      2815	revision.c	FUNCTION_78	FOR_1	CALL_1
0x7ec8	          0x4889c7	                            mov rdi, rax	      2815	revision.c	FUNCTION_78	FOR_1	CALL_1
0x7ecb	      0xe800000000	                          call 0x4007f10	      2815	revision.c	FUNCTION_78	FOR_1	CALL_1
0x7ed0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2808	revision.c	FUNCTION_78	FOR_1
0x7ed4	        0x488945c8	             mov qword [rbp - 0x38], rax	      2808	revision.c	FUNCTION_78	FOR_1
0x7ed8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2808	revision.c	FUNCTION_78	FOR_1
0x7edc	          0x4885c0	                           test rax, rax	      2808	revision.c	FUNCTION_78	FOR_1
0x7edf	            0x75c5	                           jne 0x4007ee6	      2808	revision.c	FUNCTION_78	FOR_1
0x7ee1	            0xeb4e	                           jmp 0x4007f71	      2817	revision.c	FUNCTION_78	WHILE_1
0x7ee3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2818	revision.c	FUNCTION_78	WHILE_1
0x7ee7	        0x488945c8	             mov qword [rbp - 0x38], rax	      2818	revision.c	FUNCTION_78	WHILE_1
0x7eeb	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2819	revision.c	FUNCTION_78	WHILE_1
0x7ef3	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2820	revision.c	FUNCTION_78	WHILE_1
0x7ef7	        0x488945d8	             mov qword [rbp - 0x28], rax	      2820	revision.c	FUNCTION_78	WHILE_1
0x7efb	            0xeb2b	                           jmp 0x4007f68	      2821	revision.c	FUNCTION_78	WHILE_1	WHILE_2
0x7efd	        0x488d45c8	                   lea rax, [rbp - 0x38]	      2822	revision.c	FUNCTION_78	WHILE_1	WHILE_2	CALL_2
0x7f01	          0x4889c7	                            mov rdi, rax	      2822	revision.c	FUNCTION_78	WHILE_1	WHILE_2	CALL_2
0x7f04	      0xe800000000	                          call 0x4007f49	      2822	revision.c	FUNCTION_78	WHILE_1	WHILE_2	CALL_2
0x7f09	        0x488945e0	             mov qword [rbp - 0x20], rax	      2822	revision.c	FUNCTION_78	WHILE_1	WHILE_2	CALL_2
0x7f0d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2823	revision.c	FUNCTION_78	WHILE_1	WHILE_2	CALL_3
0x7f11	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2823	revision.c	FUNCTION_78	WHILE_1	WHILE_2	CALL_3
0x7f15	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2823	revision.c	FUNCTION_78	WHILE_1	WHILE_2	CALL_3
0x7f19	          0x4889ce	                            mov rsi, rcx	      2823	revision.c	FUNCTION_78	WHILE_1	WHILE_2	CALL_3
0x7f1c	          0x4889c7	                            mov rdi, rax	      2823	revision.c	FUNCTION_78	WHILE_1	WHILE_2	CALL_3
0x7f1f	      0xe8a0fcffff	                   call sym.simplify_one	      2823	revision.c	FUNCTION_78	WHILE_1	WHILE_2	CALL_3
0x7f24	        0x488945d8	             mov qword [rbp - 0x28], rax	      2823	revision.c	FUNCTION_78	WHILE_1	WHILE_2	CALL_3
0x7f28	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2821	revision.c	FUNCTION_78	WHILE_1	WHILE_2
0x7f2c	          0x4885c0	                           test rax, rax	      2821	revision.c	FUNCTION_78	WHILE_1	WHILE_2
0x7f2f	            0x75cc	                           jne 0x4007f3d	      2821	revision.c	FUNCTION_78	WHILE_1	WHILE_2
0x7f31	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2817	revision.c	FUNCTION_78	WHILE_1
0x7f35	          0x4885c0	                           test rax, rax	      2817	revision.c	FUNCTION_78	WHILE_1
0x7f38	            0x75a9	                           jne 0x4007f23	      2817	revision.c	FUNCTION_78	WHILE_1
0x7f3a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2828	revision.c	FUNCTION_78
0x7f3e	          0x488b00	                    mov rax, qword [rax]	      2828	revision.c	FUNCTION_78
0x7f41	        0x488945c8	             mov qword [rbp - 0x38], rax	      2828	revision.c	FUNCTION_78
0x7f45	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2829	revision.c	FUNCTION_78
0x7f49	    0x48c700000000	                      mov qword [rax], 0	      2829	revision.c	FUNCTION_78
0x7f50	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2830	revision.c	FUNCTION_78
0x7f54	        0x488945d8	             mov qword [rbp - 0x28], rax	      2830	revision.c	FUNCTION_78
0x7f58	            0xeb4f	                           jmp 0x4007fe9	      2831	revision.c	FUNCTION_78	WHILE_3
0x7f5a	        0x488d45c8	                   lea rax, [rbp - 0x38]	      2834	revision.c	FUNCTION_78	WHILE_3	CALL_4
0x7f5e	          0x4889c7	                            mov rdi, rax	      2834	revision.c	FUNCTION_78	WHILE_3	CALL_4
0x7f61	      0xe800000000	                          call 0x4007fa6	      2834	revision.c	FUNCTION_78	WHILE_3	CALL_4
0x7f66	        0x488945e0	             mov qword [rbp - 0x20], rax	      2834	revision.c	FUNCTION_78	WHILE_3	CALL_4
0x7f6a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2835	revision.c	FUNCTION_78	WHILE_3	CALL_5
0x7f6e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2835	revision.c	FUNCTION_78	WHILE_3	CALL_5
0x7f72	          0x4889d6	                            mov rsi, rdx	      2835	revision.c	FUNCTION_78	WHILE_3	CALL_5
0x7f75	          0x4889c7	                            mov rdi, rax	      2835	revision.c	FUNCTION_78	WHILE_3	CALL_5
0x7f78	      0xe80bf8ffff	          call sym.locate_simplify_state	      2835	revision.c	FUNCTION_78	WHILE_3	CALL_5
0x7f7d	        0x488945f0	             mov qword [rbp - 0x10], rax	      2835	revision.c	FUNCTION_78	WHILE_3	CALL_5
0x7f81	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2836	revision.c	FUNCTION_78	WHILE_3	IF_2
0x7f85	          0x488b00	                    mov rax, qword [rax]	      2836	revision.c	FUNCTION_78	WHILE_3	IF_2
0x7f88	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      2836	revision.c	FUNCTION_78	WHILE_3	IF_2
0x7f8c	            0x751b	                           jne 0x4007fe9	      2836	revision.c	FUNCTION_78	WHILE_3	IF_2
0x7f8e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2837	revision.c	FUNCTION_78	WHILE_3	CALL_6
0x7f92	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2837	revision.c	FUNCTION_78	WHILE_3	CALL_6
0x7f96	          0x4889d6	                            mov rsi, rdx	      2837	revision.c	FUNCTION_78	WHILE_3	CALL_6
0x7f99	          0x4889c7	                            mov rdi, rax	      2837	revision.c	FUNCTION_78	WHILE_3	CALL_6
0x7f9c	      0xe800000000	                          call 0x4007fe1	      2837	revision.c	FUNCTION_78	WHILE_3	CALL_6
0x7fa1	        0x4883c008	                              add rax, 8	      2837	revision.c	FUNCTION_78	WHILE_3	CALL_6
0x7fa5	        0x488945d8	             mov qword [rbp - 0x28], rax	      2837	revision.c	FUNCTION_78	WHILE_3	CALL_6
0x7fa9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2831	revision.c	FUNCTION_78	WHILE_3
0x7fad	          0x4885c0	                           test rax, rax	      2831	revision.c	FUNCTION_78	WHILE_3
0x7fb0	            0x75a8	                           jne 0x4007f9a	      2831	revision.c	FUNCTION_78	WHILE_3
0x7fb2	            0xeb01	                           jmp 0x4007ff5	      2831	revision.c	FUNCTION_78	WHILE_3
0x7fb4	              0x90	                                     nop	      2804	revision.c	FUNCTION_78	IF_1
0x7fb5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2839	revision.c	FUNCTION_78
0x7fb9	    0x644833042528	                xor rax, qword fs:[0x28]	      2839	revision.c	FUNCTION_78
0x7fc2	            0x7405	                            je 0x4008009	      2839	revision.c	FUNCTION_78
0x7fc4	      0xe800000000	                          call 0x4008009	      2839	revision.c	FUNCTION_78
0x7fc9	              0xc9	                                   leave	      2839	revision.c	FUNCTION_78
0x7fca	              0xc3	                                     ret	      2839	revision.c	FUNCTION_78
mark_tree_contents_uninteresting	FOR,0:functions,0:WHILE,1:CALL,12:IF,2:ELSE,0:DO,0:SWITCH,1	76
0x692	              0x55	                                push rbp	        52	revision.c	FUNCTION_3
0x693	          0x4889e5	                            mov rbp, rsp	        52	revision.c	FUNCTION_3
0x696	        0x4883ec70	                           sub rsp, 0x70	        52	revision.c	FUNCTION_3
0x69a	        0x48897d98	             mov qword [rbp - 0x68], rdi	        52	revision.c	FUNCTION_3
0x69e	    0x64488b042528	                mov rax, qword fs:[0x28]	        52	revision.c	FUNCTION_3
0x6a7	        0x488945f8	                mov qword [rbp - 8], rax	        52	revision.c	FUNCTION_3
0x6ab	            0x31c0	                            xor eax, eax	        52	revision.c	FUNCTION_3
0x6ad	        0x488b4598	             mov rax, qword [rbp - 0x68]	        55	revision.c	FUNCTION_3
0x6b1	        0x488945a8	             mov qword [rbp - 0x58], rax	        55	revision.c	FUNCTION_3
0x6b5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        57	revision.c	FUNCTION_3	IF_1	CALL_1
0x6b9	        0x4883c004	                              add rax, 4	        57	revision.c	FUNCTION_3	IF_1	CALL_1
0x6bd	          0x4889c7	                            mov rdi, rax	        57	revision.c	FUNCTION_3	IF_1	CALL_1
0x6c0	      0xe800000000	                          call 0x4000705	        57	revision.c	FUNCTION_3	IF_1	CALL_1
0x6c5	            0x85c0	                           test eax, eax	        57	revision.c	FUNCTION_3	IF_1	CALL_1
0x6c7	     0xf84bb000000	                            je 0x40007c8	        57	revision.c	FUNCTION_3	IF_1	CALL_1
0x6cd	        0x488b4598	             mov rax, qword [rbp - 0x68]	        59	revision.c	FUNCTION_3	IF_2	CALL_2
0x6d1	          0x4889c7	                            mov rdi, rax	        59	revision.c	FUNCTION_3	IF_2	CALL_2
0x6d4	      0xe81dfeffff	                     call sym.parse_tree	        59	revision.c	FUNCTION_3	IF_2	CALL_2
0x6d9	            0x85c0	                           test eax, eax	        59	revision.c	FUNCTION_3	IF_2	CALL_2
0x6db	            0x7922	                           jns 0x400073f	        59	revision.c	FUNCTION_3	IF_2	CALL_2
0x6dd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        60	revision.c	FUNCTION_3	CALL_4
0x6e1	        0x4883c004	                              add rax, 4	        60	revision.c	FUNCTION_3	CALL_4
0x6e5	          0x4889c7	                            mov rdi, rax	        60	revision.c	FUNCTION_3	CALL_4
0x6e8	      0xe800000000	                          call 0x400072d	        60	revision.c	FUNCTION_3	CALL_4
0x6ed	          0x4889c6	                            mov rsi, rax	        60	revision.c	FUNCTION_3	CALL_4
0x6f0	      0xbf00000000	                              mov edi, 0	        60	revision.c	FUNCTION_3	CALL_4
0x6f5	      0xb800000000	                              mov eax, 0	        60	revision.c	FUNCTION_3	CALL_4
0x6fa	      0xe800000000	                          call 0x400073f	        60	revision.c	FUNCTION_3	CALL_4
0x6ff	        0x488b4598	             mov rax, qword [rbp - 0x68]	        62	revision.c	FUNCTION_3	CALL_5
0x703	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        62	revision.c	FUNCTION_3	CALL_5
0x707	        0x488b4598	             mov rax, qword [rbp - 0x68]	        62	revision.c	FUNCTION_3	CALL_5
0x70b	        0x488b4818	            mov rcx, qword [rax + 0x18] 	        62	revision.c	FUNCTION_3	CALL_5
0x70f	        0x488d45d0	                   lea rax, [rbp - 0x30]	        62	revision.c	FUNCTION_3	CALL_5
0x713	          0x4889ce	                            mov rsi, rcx	        62	revision.c	FUNCTION_3	CALL_5
0x716	          0x4889c7	                            mov rdi, rax	        62	revision.c	FUNCTION_3	CALL_5
0x719	      0xe800000000	                          call 0x400075e	        62	revision.c	FUNCTION_3	CALL_5
0x71e	            0xeb43	                           jmp 0x40007a3	        63	revision.c	FUNCTION_3	WHILE_1	CALL_6
0x720	          0x8b45c0	             mov eax, dword [rbp - 0x40]	        64	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x723	            0x89c7	                            mov edi, eax	        64	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x725	      0xe8cbfcffff	                    call sym.object_type	        64	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x72a	          0x83f802	                              cmp eax, 2	        64	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x72d	            0x7407	                            je 0x4000776	        64	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x72f	          0x83f803	                              cmp eax, 3	        64	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x732	            0x7418	                            je 0x400078c	        64	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x734	            0xeb2c	                           jmp 0x40007a2	        64	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x736	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        66	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_9
0x73a	          0x4889c7	                            mov rdi, rax	        66	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_9
0x73d	      0xe800000000	                          call 0x4000782	        66	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_9
0x742	          0x4889c7	                            mov rdi, rax	        66	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_9
0x745	      0xe800000000	                          call 0x400078a	        66	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_9
0x74a	            0xeb17	                           jmp 0x40007a3	        67	revision.c	FUNCTION_3	WHILE_1	SWITCH_1
0x74c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        69	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x750	          0x4889c7	                            mov rdi, rax	        69	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x753	      0xe800000000	                          call 0x4000798	        69	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x758	          0x4889c7	                            mov rdi, rax	        69	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x75b	      0xe8d8feffff	        call sym.mark_blob_uninteresting	        69	revision.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_11
0x760	            0xeb01	                           jmp 0x40007a3	        70	revision.c	FUNCTION_3	WHILE_1	SWITCH_1
0x762	              0x90	                                     nop	        73	revision.c	FUNCTION_3	WHILE_1	SWITCH_1
0x763	        0x488d55b0	                   lea rdx, [rbp - 0x50]	        63	revision.c	FUNCTION_3	WHILE_1	CALL_6
0x767	        0x488d45d0	                   lea rax, [rbp - 0x30]	        63	revision.c	FUNCTION_3	WHILE_1	CALL_6
0x76b	          0x4889d6	                            mov rsi, rdx	        63	revision.c	FUNCTION_3	WHILE_1	CALL_6
0x76e	          0x4889c7	                            mov rdi, rax	        63	revision.c	FUNCTION_3	WHILE_1	CALL_6
0x771	      0xe800000000	                          call 0x40007b6	        63	revision.c	FUNCTION_3	WHILE_1	CALL_6
0x776	            0x85c0	                           test eax, eax	        63	revision.c	FUNCTION_3	WHILE_1	CALL_6
0x778	            0x75a6	                           jne 0x4000760	        63	revision.c	FUNCTION_3	WHILE_1	CALL_6
0x77a	        0x488b4598	             mov rax, qword [rbp - 0x68]	        81	revision.c	FUNCTION_3	CALL_12
0x77e	          0x4889c7	                            mov rdi, rax	        81	revision.c	FUNCTION_3	CALL_12
0x781	      0xe800000000	                          call 0x40007c6	        81	revision.c	FUNCTION_3	CALL_12
0x786	            0xeb01	                           jmp 0x40007c9	        81	revision.c	FUNCTION_3	CALL_12
0x788	              0x90	                                     nop	        58	revision.c	FUNCTION_3	IF_1
0x789	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	revision.c	FUNCTION_3
0x78d	    0x644833042528	                xor rax, qword fs:[0x28]	        82	revision.c	FUNCTION_3
0x796	            0x7405	                            je 0x40007dd	        82	revision.c	FUNCTION_3
0x798	      0xe800000000	                          call 0x40007dd	        82	revision.c	FUNCTION_3
0x79d	              0xc9	                                   leave	        82	revision.c	FUNCTION_3
0x79e	              0xc3	                                     ret	        82	revision.c	FUNCTION_3
show_object_with_name	FOR,1:functions,0:WHILE,0:CALL,4:IF,0:ELSE,0:DO,0:SWITCH,0	42
0x5aa	              0x55	                                push rbp	        33	revision.c	FUNCTION_1
0x5ab	          0x4889e5	                            mov rbp, rsp	        33	revision.c	FUNCTION_1
0x5ae	        0x4883ec30	                           sub rsp, 0x30	        33	revision.c	FUNCTION_1
0x5b2	        0x48897de8	             mov qword [rbp - 0x18], rdi	        33	revision.c	FUNCTION_1
0x5b6	        0x488975e0	             mov qword [rbp - 0x20], rsi	        33	revision.c	FUNCTION_1
0x5ba	        0x488955d8	             mov qword [rbp - 0x28], rdx	        33	revision.c	FUNCTION_1
0x5be	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        36	revision.c	FUNCTION_1	CALL_2
0x5c2	        0x4883c004	                              add rax, 4	        36	revision.c	FUNCTION_1	CALL_2
0x5c6	          0x4889c7	                            mov rdi, rax	        36	revision.c	FUNCTION_1	CALL_2
0x5c9	      0xe800000000	                          call 0x400060e	        36	revision.c	FUNCTION_1	CALL_2
0x5ce	          0x4889c2	                            mov rdx, rax	        36	revision.c	FUNCTION_1	CALL_2
0x5d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        36	revision.c	FUNCTION_1	CALL_2
0x5d5	      0xbe00000000	                              mov esi, 0	        36	revision.c	FUNCTION_1	CALL_2
0x5da	          0x4889c7	                            mov rdi, rax	        36	revision.c	FUNCTION_1	CALL_2
0x5dd	      0xb800000000	                              mov eax, 0	        36	revision.c	FUNCTION_1	CALL_2
0x5e2	      0xe800000000	                          call 0x4000627	        36	revision.c	FUNCTION_1	CALL_2
0x5e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        37	revision.c	FUNCTION_1	FOR_1
0x5eb	        0x488945f8	                mov qword [rbp - 8], rax	        37	revision.c	FUNCTION_1	FOR_1
0x5ef	            0xeb1d	                           jmp 0x400064e	        37	revision.c	FUNCTION_1	FOR_1
0x5f1	        0x488b45f8	                mov rax, qword [rbp - 8]	        38	revision.c	FUNCTION_1	CALL_3
0x5f5	           0xfb600	                   movzx eax, byte [rax]	        38	revision.c	FUNCTION_1	CALL_3
0x5f8	           0xfbec0	                           movsx eax, al	        38	revision.c	FUNCTION_1	CALL_3
0x5fb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        38	revision.c	FUNCTION_1	CALL_3
0x5ff	          0x4889d6	                            mov rsi, rdx	        38	revision.c	FUNCTION_1	CALL_3
0x602	            0x89c7	                            mov edi, eax	        38	revision.c	FUNCTION_1	CALL_3
0x604	      0xe800000000	                          call 0x4000649	        38	revision.c	FUNCTION_1	CALL_3
0x609	      0x488345f801	                  add qword [rbp - 8], 1	        37	revision.c	FUNCTION_1	FOR_1
0x60e	        0x488b45f8	                mov rax, qword [rbp - 8]	        37	revision.c	FUNCTION_1	FOR_1
0x612	           0xfb600	                   movzx eax, byte [rax]	        37	revision.c	FUNCTION_1	FOR_1
0x615	            0x84c0	                             test al, al	        37	revision.c	FUNCTION_1	FOR_1
0x617	            0x740b	                            je 0x4000664	        37	revision.c	FUNCTION_1	FOR_1
0x619	        0x488b45f8	                mov rax, qword [rbp - 8]	        37	revision.c	FUNCTION_1	FOR_1
0x61d	           0xfb600	                   movzx eax, byte [rax]	        37	revision.c	FUNCTION_1	FOR_1
0x620	            0x3c0a	                             cmp al, 0xa	        37	revision.c	FUNCTION_1	FOR_1
0x622	            0x75cd	                           jne 0x4000631	        37	revision.c	FUNCTION_1	FOR_1
0x624	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        39	revision.c	FUNCTION_1	CALL_4
0x628	          0x4889c6	                            mov rsi, rax	        39	revision.c	FUNCTION_1	CALL_4
0x62b	      0xbf0a000000	                            mov edi, 0xa	        39	revision.c	FUNCTION_1	CALL_4
0x630	      0xe800000000	                          call 0x4000675	        39	revision.c	FUNCTION_1	CALL_4
0x635	              0x90	                                     nop	        40	revision.c	FUNCTION_1
0x636	              0xc9	                                   leave	        40	revision.c	FUNCTION_1
0x637	              0xc3	                                     ret	        40	revision.c	FUNCTION_1
diagnose_missing_default	FOR,0:functions,0:WHILE,0:CALL,6:IF,1:ELSE,0:DO,0:SWITCH,0	44
0x6b06	              0x55	                                push rbp	      2272	revision.c	FUNCTION_68
0x6b07	          0x4889e5	                            mov rbp, rsp	      2272	revision.c	FUNCTION_68
0x6b0a	              0x53	                                push rbx	      2272	revision.c	FUNCTION_68
0x6b0b	        0x4883ec38	                           sub rsp, 0x38	      2272	revision.c	FUNCTION_68
0x6b0f	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2272	revision.c	FUNCTION_68
0x6b13	    0x64488b042528	                mov rax, qword fs:[0x28]	      2272	revision.c	FUNCTION_68
0x6b1c	        0x488945e8	             mov qword [rbp - 0x18], rax	      2272	revision.c	FUNCTION_68
0x6b20	            0x31c0	                            xor eax, eax	      2272	revision.c	FUNCTION_68
0x6b22	        0x488d55dc	                   lea rdx, [rbp - 0x24]	      2276	revision.c	FUNCTION_68	CALL_1
0x6b26	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2276	revision.c	FUNCTION_68	CALL_1
0x6b2a	          0x4889d1	                            mov rcx, rdx	      2276	revision.c	FUNCTION_68	CALL_1
0x6b2d	      0xba00000000	                              mov edx, 0	      2276	revision.c	FUNCTION_68	CALL_1
0x6b32	      0xbe00000000	                              mov esi, 0	      2276	revision.c	FUNCTION_68	CALL_1
0x6b37	          0x4889c7	                            mov rdi, rax	      2276	revision.c	FUNCTION_68	CALL_1
0x6b3a	      0xe800000000	                          call 0x4006b7f	      2276	revision.c	FUNCTION_68	CALL_1
0x6b3f	        0x488945e0	             mov qword [rbp - 0x20], rax	      2276	revision.c	FUNCTION_68	CALL_1
0x6b43	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2277	revision.c	FUNCTION_68	IF_1
0x6b47	          0x4885c0	                           test rax, rax	      2277	revision.c	FUNCTION_68	IF_1
0x6b4a	            0x7414	                            je 0x4006ba0	      2277	revision.c	FUNCTION_68	IF_1
0x6b4c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2277	revision.c	FUNCTION_68	IF_1
0x6b4f	          0x83e001	                              and eax, 1	      2277	revision.c	FUNCTION_68	IF_1
0x6b52	            0x85c0	                           test eax, eax	      2277	revision.c	FUNCTION_68	IF_1
0x6b54	            0x740a	                            je 0x4006ba0	      2277	revision.c	FUNCTION_68	IF_1
0x6b56	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2277	revision.c	FUNCTION_68	IF_1
0x6b59	          0x83e004	                              and eax, 4	      2277	revision.c	FUNCTION_68	IF_1
0x6b5c	            0x85c0	                           test eax, eax	      2277	revision.c	FUNCTION_68	IF_1
0x6b5e	            0x7417	                            je 0x4006bb7	      2277	revision.c	FUNCTION_68	IF_1
0x6b60	      0xbf00000000	                              mov edi, 0	      2278	revision.c	FUNCTION_68	CALL_3
0x6b65	      0xe85f98ffff	                               call sym.	      2278	revision.c	FUNCTION_68	CALL_3
0x6b6a	          0x4889c7	                            mov rdi, rax	      2278	revision.c	FUNCTION_68	CALL_3
0x6b6d	      0xb800000000	                              mov eax, 0	      2278	revision.c	FUNCTION_68	CALL_3
0x6b72	      0xe800000000	                          call 0x4006bb7	      2278	revision.c	FUNCTION_68	CALL_3
0x6b77	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2280	revision.c	FUNCTION_68	CALL_4
0x6b7b	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2280	revision.c	FUNCTION_68	CALL_4
0x6b7f	      0xbe00000000	                              mov esi, 0	      2280	revision.c	FUNCTION_68	CALL_4
0x6b84	          0x4889c7	                            mov rdi, rax	      2280	revision.c	FUNCTION_68	CALL_4
0x6b87	      0xe87f94ffff	                    call sym.skip_prefix	      2280	revision.c	FUNCTION_68	CALL_4
0x6b8c	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	      2281	revision.c	FUNCTION_68	CALL_6
0x6b90	      0xbf00000000	                              mov edi, 0	      2281	revision.c	FUNCTION_68	CALL_6
0x6b95	      0xe82f98ffff	                               call sym.	      2281	revision.c	FUNCTION_68	CALL_6
0x6b9a	          0x4889de	                            mov rsi, rbx	      2281	revision.c	FUNCTION_68	CALL_6
0x6b9d	          0x4889c7	                            mov rdi, rax	      2281	revision.c	FUNCTION_68	CALL_6
0x6ba0	      0xb800000000	                              mov eax, 0	      2281	revision.c	FUNCTION_68	CALL_6
0x6ba5	      0xe800000000	                call sym.setup_revisions	      2281	revision.c	FUNCTION_68	CALL_6
read_pathspec_from_stdin	FOR,0:functions,0:WHILE,1:CALL,2:IF,0:ELSE,0:DO,0:SWITCH,0	23
0x45a7	              0x55	                                push rbp	      1696	revision.c	FUNCTION_57
0x45a8	          0x4889e5	                            mov rbp, rsp	      1696	revision.c	FUNCTION_57
0x45ab	        0x4883ec20	                           sub rsp, 0x20	      1696	revision.c	FUNCTION_57
0x45af	        0x48897df8	                mov qword [rbp - 8], rdi	      1696	revision.c	FUNCTION_57
0x45b3	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1696	revision.c	FUNCTION_57
0x45b7	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1696	revision.c	FUNCTION_57
0x45bb	            0xeb17	                           jmp 0x4004614	      1697	revision.c	FUNCTION_57	WHILE_1	CALL_1
0x45bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1698	revision.c	FUNCTION_57	CALL_2
0x45c1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1698	revision.c	FUNCTION_57	CALL_2
0x45c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1698	revision.c	FUNCTION_57	CALL_2
0x45c9	          0x4889d6	                            mov rsi, rdx	      1698	revision.c	FUNCTION_57	CALL_2
0x45cc	          0x4889c7	                            mov rdi, rax	      1698	revision.c	FUNCTION_57	CALL_2
0x45cf	      0xe800000000	                          call 0x4004614	      1698	revision.c	FUNCTION_57	CALL_2
0x45d4	    0x488b15000000	            mov rdx, qword [0x0400461b] 	      1697	revision.c	FUNCTION_57	WHILE_1	CALL_1
0x45db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1697	revision.c	FUNCTION_57	WHILE_1	CALL_1
0x45df	          0x4889d6	                            mov rsi, rdx	      1697	revision.c	FUNCTION_57	WHILE_1	CALL_1
0x45e2	          0x4889c7	                            mov rdi, rax	      1697	revision.c	FUNCTION_57	WHILE_1	CALL_1
0x45e5	      0xe800000000	                          call 0x400462a	      1697	revision.c	FUNCTION_57	WHILE_1	CALL_1
0x45ea	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1697	revision.c	FUNCTION_57	WHILE_1	CALL_1
0x45ed	            0x75ce	                           jne 0x40045fd	      1697	revision.c	FUNCTION_57	WHILE_1	CALL_1
0x45ef	              0x90	                                     nop	      1699	revision.c	FUNCTION_57
0x45f0	              0xc9	                                   leave	      1699	revision.c	FUNCTION_57
0x45f1	              0xc3	                                     ret	      1699	revision.c	FUNCTION_57
handle_revision_pseudo_opt	FOR,0:functions,0:WHILE,0:CALL,52:IF,22:ELSE,20:DO,0:SWITCH,0	409
0x651e	              0x55	                                push rbp	      2163	revision.c	FUNCTION_67
0x651f	          0x4889e5	                            mov rbp, rsp	      2163	revision.c	FUNCTION_67
0x6522	        0x4883c480	             add rsp, 0xffffffffffffff80	      2163	revision.c	FUNCTION_67
0x6526	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2163	revision.c	FUNCTION_67
0x652a	        0x488975a0	             mov qword [rbp - 0x60], rsi	      2163	revision.c	FUNCTION_67
0x652e	          0x89559c	             mov dword [rbp - 0x64], edx	      2163	revision.c	FUNCTION_67
0x6531	        0x48894d90	             mov qword [rbp - 0x70], rcx	      2163	revision.c	FUNCTION_67
0x6535	        0x4c894588	              mov qword [rbp - 0x78], r8	      2163	revision.c	FUNCTION_67
0x6539	    0x64488b042528	                mov rax, qword fs:[0x28]	      2163	revision.c	FUNCTION_67
0x6542	        0x488945f8	                mov qword [rbp - 8], rax	      2163	revision.c	FUNCTION_67
0x6546	            0x31c0	                            xor eax, eax	      2163	revision.c	FUNCTION_67
0x6548	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2164	revision.c	FUNCTION_67
0x654c	          0x488b00	                    mov rax, qword [rax]	      2164	revision.c	FUNCTION_67
0x654f	        0x488945c8	             mov qword [rbp - 0x38], rax	      2164	revision.c	FUNCTION_67
0x6553	      0x48837da800	               cmp qword [rbp - 0x58], 0	      2169	revision.c	FUNCTION_67	IF_1
0x6558	            0x7430	                            je 0x40065ca	      2169	revision.c	FUNCTION_67	IF_1
0x655a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2176	revision.c	FUNCTION_67	IF_1	IF_2
0x655e	         0xfb64075	           movzx eax, byte [rax + 0x75] 	      2176	revision.c	FUNCTION_67	IF_1	IF_2
0x6562	          0x83e008	                              and eax, 8	      2176	revision.c	FUNCTION_67	IF_1	IF_2
0x6565	            0x84c0	                             test al, al	      2176	revision.c	FUNCTION_67	IF_1	IF_2
0x6567	            0x750f	                           jne 0x40065b8	      2176	revision.c	FUNCTION_67	IF_1	IF_2
0x6569	      0xbf00000000	                              mov edi, 0	      2177	revision.c	FUNCTION_67	IF_1	CALL_1
0x656e	      0xb800000000	                              mov eax, 0	      2177	revision.c	FUNCTION_67	IF_1	CALL_1
0x6573	      0xe800000000	                          call 0x40065b8	      2177	revision.c	FUNCTION_67	IF_1	CALL_1
0x6578	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2178	revision.c	FUNCTION_67	IF_1	CALL_2
0x657c	          0x4889c7	                            mov rdi, rax	      2178	revision.c	FUNCTION_67	IF_1	CALL_2
0x657f	      0xe800000000	                          call 0x40065c4	      2178	revision.c	FUNCTION_67	IF_1	CALL_2
0x6584	        0x488945c0	             mov qword [rbp - 0x40], rax	      2178	revision.c	FUNCTION_67	IF_1	CALL_2
0x6588	            0xeb13	                           jmp 0x40065dd	      2178	revision.c	FUNCTION_67	IF_1	CALL_2
0x658a	    0x488b05000000	            mov rax, qword [0x040065d1] 	      2180	revision.c	FUNCTION_67	CALL_3
0x6591	          0x4889c7	                            mov rdi, rax	      2180	revision.c	FUNCTION_67	CALL_3
0x6594	      0xe800000000	                          call 0x40065d9	      2180	revision.c	FUNCTION_67	CALL_3
0x6599	        0x488945c0	             mov qword [rbp - 0x40], rax	      2180	revision.c	FUNCTION_67	CALL_3
0x659d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2192	revision.c	FUNCTION_67	IF_3	CALL_4
0x65a1	      0xbe00000000	                              mov esi, 0	      2192	revision.c	FUNCTION_67	IF_3	CALL_4
0x65a6	          0x4889c7	                            mov rdi, rax	      2192	revision.c	FUNCTION_67	IF_3	CALL_4
0x65a9	      0xe800000000	                          call 0x40065ee	      2192	revision.c	FUNCTION_67	IF_3	CALL_4
0x65ae	            0x85c0	                           test eax, eax	      2192	revision.c	FUNCTION_67	IF_3	CALL_4
0x65b0	     0xf858a000000	                           jne 0x4006680	      2192	revision.c	FUNCTION_67	IF_3	CALL_4
0x65b6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2193	revision.c	FUNCTION_67	IF_3	CALL_5
0x65ba	            0x8b00	                    mov eax, dword [rax]	      2193	revision.c	FUNCTION_67	IF_3	CALL_5
0x65bc	            0x89c2	                            mov edx, eax	      2193	revision.c	FUNCTION_67	IF_3	CALL_5
0x65be	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      2193	revision.c	FUNCTION_67	IF_3	CALL_5
0x65c2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2193	revision.c	FUNCTION_67	IF_3	CALL_5
0x65c6	      0xb900000000	                              mov ecx, 0	      2193	revision.c	FUNCTION_67	IF_3	CALL_5
0x65cb	          0x4889c7	                            mov rdi, rax	      2193	revision.c	FUNCTION_67	IF_3	CALL_5
0x65ce	      0xe839c9ffff	                    call sym.handle_refs	      2193	revision.c	FUNCTION_67	IF_3	CALL_5
0x65d3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2194	revision.c	FUNCTION_67	IF_3	CALL_6
0x65d7	            0x8b00	                    mov eax, dword [rax]	      2194	revision.c	FUNCTION_67	IF_3	CALL_6
0x65d9	            0x89c2	                            mov edx, eax	      2194	revision.c	FUNCTION_67	IF_3	CALL_6
0x65db	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      2194	revision.c	FUNCTION_67	IF_3	CALL_6
0x65df	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2194	revision.c	FUNCTION_67	IF_3	CALL_6
0x65e3	      0xb900000000	                              mov ecx, 0	      2194	revision.c	FUNCTION_67	IF_3	CALL_6
0x65e8	          0x4889c7	                            mov rdi, rax	      2194	revision.c	FUNCTION_67	IF_3	CALL_6
0x65eb	      0xe81cc9ffff	                    call sym.handle_refs	      2194	revision.c	FUNCTION_67	IF_3	CALL_6
0x65f0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2195	revision.c	FUNCTION_67	IF_3	IF_4
0x65f4	         0xfb64075	           movzx eax, byte [rax + 0x75] 	      2195	revision.c	FUNCTION_67	IF_3	IF_4
0x65f8	          0x83e008	                              and eax, 8	      2195	revision.c	FUNCTION_67	IF_3	IF_4
0x65fb	            0x84c0	                             test al, al	      2195	revision.c	FUNCTION_67	IF_3	IF_4
0x65fd	            0x752c	                           jne 0x400666b	      2195	revision.c	FUNCTION_67	IF_3	IF_4
0x65ff	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2198	revision.c	FUNCTION_67	IF_3	IF_4	CALL_7
0x6603	            0x8b00	                    mov eax, dword [rax]	      2198	revision.c	FUNCTION_67	IF_3	IF_4	CALL_7
0x6605	            0x89c2	                            mov edx, eax	      2198	revision.c	FUNCTION_67	IF_3	IF_4	CALL_7
0x6607	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      2198	revision.c	FUNCTION_67	IF_3	IF_4	CALL_7
0x660b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2198	revision.c	FUNCTION_67	IF_3	IF_4	CALL_7
0x660f	          0x4889ce	                            mov rsi, rcx	      2198	revision.c	FUNCTION_67	IF_3	IF_4	CALL_7
0x6612	          0x4889c7	                            mov rdi, rax	      2198	revision.c	FUNCTION_67	IF_3	IF_4	CALL_7
0x6615	      0xe80cc8ffff	               call sym.init_all_refs_cb	      2198	revision.c	FUNCTION_67	IF_3	IF_4	CALL_7
0x661a	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2199	revision.c	FUNCTION_67	IF_3	IF_4	CALL_8
0x661e	          0x4889c6	                            mov rsi, rax	      2199	revision.c	FUNCTION_67	IF_3	IF_4	CALL_8
0x6621	      0xbf00000000	                              mov edi, 0	      2199	revision.c	FUNCTION_67	IF_3	IF_4	CALL_8
0x6626	      0xe800000000	                          call 0x400666b	      2199	revision.c	FUNCTION_67	IF_3	IF_4	CALL_8
0x662b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2201	revision.c	FUNCTION_67	IF_3	CALL_9
0x662f	        0x4883c038	                           add rax, 0x38	      2201	revision.c	FUNCTION_67	IF_3	CALL_9
0x6633	          0x4889c7	                            mov rdi, rax	      2201	revision.c	FUNCTION_67	IF_3	CALL_9
0x6636	      0xe800000000	                          call 0x400667b	      2201	revision.c	FUNCTION_67	IF_3	CALL_9
0x663b	      0xe9ab040000	                           jmp 0x4006b2b	      2201	revision.c	FUNCTION_67	IF_3	CALL_9
0x6640	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2202	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_10
0x6644	      0xbe00000000	                              mov esi, 0	      2202	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_10
0x6649	          0x4889c7	                            mov rdi, rax	      2202	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_10
0x664c	      0xe800000000	                          call 0x4006691	      2202	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_10
0x6651	            0x85c0	                           test eax, eax	      2202	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_10
0x6653	            0x7532	                           jne 0x40066c7	      2202	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_10
0x6655	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2203	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_11
0x6659	            0x8b00	                    mov eax, dword [rax]	      2203	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_11
0x665b	            0x89c2	                            mov edx, eax	      2203	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_11
0x665d	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      2203	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_11
0x6661	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2203	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_11
0x6665	      0xb900000000	                              mov ecx, 0	      2203	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_11
0x666a	          0x4889c7	                            mov rdi, rax	      2203	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_11
0x666d	      0xe89ac8ffff	                    call sym.handle_refs	      2203	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_11
0x6672	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2204	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_12
0x6676	        0x4883c038	                           add rax, 0x38	      2204	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_12
0x667a	          0x4889c7	                            mov rdi, rax	      2204	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_12
0x667d	      0xe800000000	                          call 0x40066c2	      2204	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_12
0x6682	      0xe964040000	                           jmp 0x4006b2b	      2204	revision.c	FUNCTION_67	ELSE_2	IF_5	CALL_12
0x6687	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2205	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_13
0x668b	      0xbe00000000	                              mov esi, 0	      2205	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_13
0x6690	          0x4889c7	                            mov rdi, rax	      2205	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_13
0x6693	      0xe800000000	                          call 0x40066d8	      2205	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_13
0x6698	            0x85c0	                           test eax, eax	      2205	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_13
0x669a	            0x7561	                           jne 0x400673d	      2205	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_13
0x669c	      0xbe00000000	                              mov esi, 0	      2206	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_14
0x66a1	      0xbf00000000	                              mov edi, 0	      2206	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_14
0x66a6	      0xe800000000	                          call 0x40066eb	      2206	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_14
0x66ab	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2207	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_15
0x66af	            0x8b00	                    mov eax, dword [rax]	      2207	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_15
0x66b1	            0x89c2	                            mov edx, eax	      2207	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_15
0x66b3	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      2207	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_15
0x66b7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2207	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_15
0x66bb	      0xb900000000	                              mov ecx, 0	      2207	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_15
0x66c0	          0x4889c7	                            mov rdi, rax	      2207	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_15
0x66c3	      0xe844c8ffff	                    call sym.handle_refs	      2207	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_15
0x66c8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2208	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_16
0x66cc	            0x8b00	                    mov eax, dword [rax]	      2208	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_16
0x66ce	      0x3502040000	                          xor eax, 0x402	      2208	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_16
0x66d3	            0x89c2	                            mov edx, eax	      2208	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_16
0x66d5	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      2208	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_16
0x66d9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2208	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_16
0x66dd	      0xb900000000	                              mov ecx, 0	      2208	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_16
0x66e2	          0x4889c7	                            mov rdi, rax	      2208	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_16
0x66e5	      0xe822c8ffff	                    call sym.handle_refs	      2208	revision.c	FUNCTION_67	ELSE_3	IF_6	CALL_16
0x66ea	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2210	revision.c	FUNCTION_67	ELSE_3	IF_6
0x66ee	         0xfb65078	           movzx edx, byte [rax + 0x78] 	      2210	revision.c	FUNCTION_67	ELSE_3	IF_6
0x66f2	          0x83ca04	                               or edx, 4	      2210	revision.c	FUNCTION_67	ELSE_3	IF_6
0x66f5	          0x885078	               mov byte [rax + 0x78], dl	      2210	revision.c	FUNCTION_67	ELSE_3	IF_6
0x66f8	      0xe9ee030000	                           jmp 0x4006b2b	      2210	revision.c	FUNCTION_67	ELSE_3	IF_6
0x66fd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2211	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_17
0x6701	      0xbe00000000	                              mov esi, 0	      2211	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_17
0x6706	          0x4889c7	                            mov rdi, rax	      2211	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_17
0x6709	      0xe800000000	                          call 0x400674e	      2211	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_17
0x670e	            0x85c0	                           test eax, eax	      2211	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_17
0x6710	            0x7532	                           jne 0x4006784	      2211	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_17
0x6712	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2212	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_18
0x6716	            0x8b00	                    mov eax, dword [rax]	      2212	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_18
0x6718	            0x89c2	                            mov edx, eax	      2212	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_18
0x671a	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      2212	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_18
0x671e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2212	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_18
0x6722	      0xb900000000	                              mov ecx, 0	      2212	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_18
0x6727	          0x4889c7	                            mov rdi, rax	      2212	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_18
0x672a	      0xe8ddc7ffff	                    call sym.handle_refs	      2212	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_18
0x672f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2213	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_19
0x6733	        0x4883c038	                           add rax, 0x38	      2213	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_19
0x6737	          0x4889c7	                            mov rdi, rax	      2213	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_19
0x673a	      0xe800000000	                          call 0x400677f	      2213	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_19
0x673f	      0xe9a7030000	                           jmp 0x4006b2b	      2213	revision.c	FUNCTION_67	ELSE_4	IF_7	CALL_19
0x6744	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2214	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_20
0x6748	      0xbe00000000	                              mov esi, 0	      2214	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_20
0x674d	          0x4889c7	                            mov rdi, rax	      2214	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_20
0x6750	      0xe800000000	                          call 0x4006795	      2214	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_20
0x6755	            0x85c0	                           test eax, eax	      2214	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_20
0x6757	            0x7532	                           jne 0x40067cb	      2214	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_20
0x6759	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2215	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_21
0x675d	            0x8b00	                    mov eax, dword [rax]	      2215	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_21
0x675f	            0x89c2	                            mov edx, eax	      2215	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_21
0x6761	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      2215	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_21
0x6765	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2215	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_21
0x6769	      0xb900000000	                              mov ecx, 0	      2215	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_21
0x676e	          0x4889c7	                            mov rdi, rax	      2215	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_21
0x6771	      0xe896c7ffff	                    call sym.handle_refs	      2215	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_21
0x6776	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2216	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_22
0x677a	        0x4883c038	                           add rax, 0x38	      2216	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_22
0x677e	          0x4889c7	                            mov rdi, rax	      2216	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_22
0x6781	      0xe800000000	                          call 0x40067c6	      2216	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_22
0x6786	      0xe960030000	                           jmp 0x4006b2b	      2216	revision.c	FUNCTION_67	ELSE_5	IF_8	CALL_22
0x678b	        0x488d55b8	                   lea rdx, [rbp - 0x48]	      2217	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_23
0x678f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2217	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_23
0x6793	          0x4889c6	                            mov rsi, rax	      2217	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_23
0x6796	      0xbf00000000	                              mov edi, 0	      2217	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_23
0x679b	      0xe800000000	                          call 0x40067e0	      2217	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_23
0x67a0	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2217	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_23
0x67a3	        0x837db400	               cmp dword [rbp - 0x4c], 0	      2217	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_23
0x67a7	            0x7448	                            je 0x4006831	      2217	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_23
0x67a9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2219	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_24
0x67ad	            0x8b00	                    mov eax, dword [rax]	      2219	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_24
0x67af	            0x89c2	                            mov edx, eax	      2219	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_24
0x67b1	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      2219	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_24
0x67b5	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2219	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_24
0x67b9	          0x4889ce	                            mov rsi, rcx	      2219	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_24
0x67bc	          0x4889c7	                            mov rdi, rax	      2219	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_24
0x67bf	      0xe862c6ffff	               call sym.init_all_refs_cb	      2219	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_24
0x67c4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2220	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_25
0x67c8	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2220	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_25
0x67cc	          0x4889c6	                            mov rsi, rax	      2220	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_25
0x67cf	      0xbf00000000	                              mov edi, 0	      2220	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_25
0x67d4	      0xe800000000	                          call 0x4006819	      2220	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_25
0x67d9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2221	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_26
0x67dd	        0x4883c038	                           add rax, 0x38	      2221	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_26
0x67e1	          0x4889c7	                            mov rdi, rax	      2221	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_26
0x67e4	      0xe800000000	                          call 0x4006829	      2221	revision.c	FUNCTION_67	ELSE_6	IF_9	CALL_26
0x67e9	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2222	revision.c	FUNCTION_67	ELSE_6	IF_9
0x67ec	      0xe9ff020000	                           jmp 0x4006b30	      2222	revision.c	FUNCTION_67	ELSE_6	IF_9
0x67f1	        0x488d55b8	                   lea rdx, [rbp - 0x48]	      2223	revision.c	FUNCTION_67	ELSE_7	IF_10	CALL_27
0x67f5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2223	revision.c	FUNCTION_67	ELSE_7	IF_10	CALL_27
0x67f9	          0x4889c6	                            mov rsi, rax	      2223	revision.c	FUNCTION_67	ELSE_7	IF_10	CALL_27
0x67fc	      0xbf00000000	                              mov edi, 0	      2223	revision.c	FUNCTION_67	ELSE_7	IF_10	CALL_27
0x6801	      0xe800000000	                          call 0x4006846	      2223	revision.c	FUNCTION_67	ELSE_7	IF_10	CALL_27
0x6806	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2223	revision.c	FUNCTION_67	ELSE_7	IF_10	CALL_27
0x6809	        0x837db400	               cmp dword [rbp - 0x4c], 0	      2223	revision.c	FUNCTION_67	ELSE_7	IF_10	CALL_27
0x680d	            0x741f	                            je 0x400686e	      2223	revision.c	FUNCTION_67	ELSE_7	IF_10	CALL_27
0x680f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2224	revision.c	FUNCTION_67	ELSE_7	IF_10	CALL_28
0x6813	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2224	revision.c	FUNCTION_67	ELSE_7	IF_10	CALL_28
0x6817	        0x4883c238	                           add rdx, 0x38	      2224	revision.c	FUNCTION_67	ELSE_7	IF_10	CALL_28
0x681b	          0x4889c6	                            mov rsi, rax	      2224	revision.c	FUNCTION_67	ELSE_7	IF_10	CALL_28
0x681e	          0x4889d7	                            mov rdi, rdx	      2224	revision.c	FUNCTION_67	ELSE_7	IF_10	CALL_28
0x6821	      0xe800000000	                          call 0x4006866	      2224	revision.c	FUNCTION_67	ELSE_7	IF_10	CALL_28
0x6826	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2225	revision.c	FUNCTION_67	ELSE_7	IF_10
0x6829	      0xe9c2020000	                           jmp 0x4006b30	      2225	revision.c	FUNCTION_67	ELSE_7	IF_10
0x682e	        0x488d55b8	                   lea rdx, [rbp - 0x48]	      2226	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_29
0x6832	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2226	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_29
0x6836	      0xbe00000000	                              mov esi, 0	      2226	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_29
0x683b	          0x4889c7	                            mov rdi, rax	      2226	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_29
0x683e	      0xe8c897ffff	                    call sym.skip_prefix	      2226	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_29
0x6843	            0x85c0	                           test eax, eax	      2226	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_29
0x6845	            0x744d	                            je 0x40068d4	      2226	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_29
0x6847	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2228	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_30
0x684b	            0x8b00	                    mov eax, dword [rax]	      2228	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_30
0x684d	            0x89c2	                            mov edx, eax	      2228	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_30
0x684f	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      2228	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_30
0x6853	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2228	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_30
0x6857	          0x4889ce	                            mov rsi, rcx	      2228	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_30
0x685a	          0x4889c7	                            mov rdi, rax	      2228	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_30
0x685d	      0xe8c4c5ffff	               call sym.init_all_refs_cb	      2228	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_30
0x6862	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2229	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_31
0x6866	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2229	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_31
0x686a	          0x4889d1	                            mov rcx, rdx	      2229	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_31
0x686d	      0xba00000000	                              mov edx, 0	      2229	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_31
0x6872	          0x4889c6	                            mov rsi, rax	      2229	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_31
0x6875	      0xbf00000000	                              mov edi, 0	      2229	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_31
0x687a	      0xe800000000	                          call 0x40068bf	      2229	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_31
0x687f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2230	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_32
0x6883	        0x4883c038	                           add rax, 0x38	      2230	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_32
0x6887	          0x4889c7	                            mov rdi, rax	      2230	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_32
0x688a	      0xe800000000	                          call 0x40068cf	      2230	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_32
0x688f	      0xe957020000	                           jmp 0x4006b2b	      2230	revision.c	FUNCTION_67	ELSE_8	IF_11	CALL_32
0x6894	        0x488d55b8	                   lea rdx, [rbp - 0x48]	      2231	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_33
0x6898	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2231	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_33
0x689c	      0xbe00000000	                              mov esi, 0	      2231	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_33
0x68a1	          0x4889c7	                            mov rdi, rax	      2231	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_33
0x68a4	      0xe86297ffff	                    call sym.skip_prefix	      2231	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_33
0x68a9	            0x85c0	                           test eax, eax	      2231	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_33
0x68ab	            0x744d	                            je 0x400693a	      2231	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_33
0x68ad	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2233	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_34
0x68b1	            0x8b00	                    mov eax, dword [rax]	      2233	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_34
0x68b3	            0x89c2	                            mov edx, eax	      2233	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_34
0x68b5	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      2233	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_34
0x68b9	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2233	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_34
0x68bd	          0x4889ce	                            mov rsi, rcx	      2233	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_34
0x68c0	          0x4889c7	                            mov rdi, rax	      2233	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_34
0x68c3	      0xe85ec5ffff	               call sym.init_all_refs_cb	      2233	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_34
0x68c8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2234	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_35
0x68cc	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2234	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_35
0x68d0	          0x4889d1	                            mov rcx, rdx	      2234	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_35
0x68d3	      0xba00000000	                              mov edx, 0	      2234	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_35
0x68d8	          0x4889c6	                            mov rsi, rax	      2234	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_35
0x68db	      0xbf00000000	                              mov edi, 0	      2234	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_35
0x68e0	      0xe800000000	                          call 0x4006925	      2234	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_35
0x68e5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2235	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_36
0x68e9	        0x4883c038	                           add rax, 0x38	      2235	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_36
0x68ed	          0x4889c7	                            mov rdi, rax	      2235	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_36
0x68f0	      0xe800000000	                          call 0x4006935	      2235	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_36
0x68f5	      0xe9f1010000	                           jmp 0x4006b2b	      2235	revision.c	FUNCTION_67	ELSE_9	IF_12	CALL_36
0x68fa	        0x488d55b8	                   lea rdx, [rbp - 0x48]	      2236	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_37
0x68fe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2236	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_37
0x6902	      0xbe00000000	                              mov esi, 0	      2236	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_37
0x6907	          0x4889c7	                            mov rdi, rax	      2236	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_37
0x690a	      0xe8fc96ffff	                    call sym.skip_prefix	      2236	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_37
0x690f	            0x85c0	                           test eax, eax	      2236	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_37
0x6911	            0x744d	                            je 0x40069a0	      2236	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_37
0x6913	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2238	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_38
0x6917	            0x8b00	                    mov eax, dword [rax]	      2238	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_38
0x6919	            0x89c2	                            mov edx, eax	      2238	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_38
0x691b	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      2238	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_38
0x691f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2238	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_38
0x6923	          0x4889ce	                            mov rsi, rcx	      2238	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_38
0x6926	          0x4889c7	                            mov rdi, rax	      2238	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_38
0x6929	      0xe8f8c4ffff	               call sym.init_all_refs_cb	      2238	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_38
0x692e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2239	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_39
0x6932	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      2239	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_39
0x6936	          0x4889d1	                            mov rcx, rdx	      2239	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_39
0x6939	      0xba00000000	                              mov edx, 0	      2239	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_39
0x693e	          0x4889c6	                            mov rsi, rax	      2239	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_39
0x6941	      0xbf00000000	                              mov edi, 0	      2239	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_39
0x6946	      0xe800000000	                          call 0x400698b	      2239	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_39
0x694b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2240	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_40
0x694f	        0x4883c038	                           add rax, 0x38	      2240	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_40
0x6953	          0x4889c7	                            mov rdi, rax	      2240	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_40
0x6956	      0xe800000000	                          call 0x400699b	      2240	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_40
0x695b	      0xe98b010000	                           jmp 0x4006b2b	      2240	revision.c	FUNCTION_67	ELSE_10	IF_13	CALL_40
0x6960	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2241	revision.c	FUNCTION_67	ELSE_11	IF_14	CALL_41
0x6964	      0xbe00000000	                              mov esi, 0	      2241	revision.c	FUNCTION_67	ELSE_11	IF_14	CALL_41
0x6969	          0x4889c7	                            mov rdi, rax	      2241	revision.c	FUNCTION_67	ELSE_11	IF_14	CALL_41
0x696c	      0xe800000000	                          call 0x40069b1	      2241	revision.c	FUNCTION_67	ELSE_11	IF_14	CALL_41
0x6971	            0x85c0	                           test eax, eax	      2241	revision.c	FUNCTION_67	ELSE_11	IF_14	CALL_41
0x6973	            0x751b	                           jne 0x40069d0	      2241	revision.c	FUNCTION_67	ELSE_11	IF_14	CALL_41
0x6975	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2242	revision.c	FUNCTION_67	ELSE_11	IF_14	CALL_42
0x6979	            0x8b00	                    mov eax, dword [rax]	      2242	revision.c	FUNCTION_67	ELSE_11	IF_14	CALL_42
0x697b	            0x89c2	                            mov edx, eax	      2242	revision.c	FUNCTION_67	ELSE_11	IF_14	CALL_42
0x697d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2242	revision.c	FUNCTION_67	ELSE_11	IF_14	CALL_42
0x6981	            0x89d6	                            mov esi, edx	      2242	revision.c	FUNCTION_67	ELSE_11	IF_14	CALL_42
0x6983	          0x4889c7	                            mov rdi, rax	      2242	revision.c	FUNCTION_67	ELSE_11	IF_14	CALL_42
0x6986	      0xe800000000	                          call 0x40069cb	      2242	revision.c	FUNCTION_67	ELSE_11	IF_14	CALL_42
0x698b	      0xe95b010000	                           jmp 0x4006b2b	      2242	revision.c	FUNCTION_67	ELSE_11	IF_14	CALL_42
0x6990	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2243	revision.c	FUNCTION_67	ELSE_12	IF_15	CALL_43
0x6994	      0xbe00000000	                              mov esi, 0	      2243	revision.c	FUNCTION_67	ELSE_12	IF_15	CALL_43
0x6999	          0x4889c7	                            mov rdi, rax	      2243	revision.c	FUNCTION_67	ELSE_12	IF_15	CALL_43
0x699c	      0xe800000000	                          call 0x40069e1	      2243	revision.c	FUNCTION_67	ELSE_12	IF_15	CALL_43
0x69a1	            0x85c0	                           test eax, eax	      2243	revision.c	FUNCTION_67	ELSE_12	IF_15	CALL_43
0x69a3	            0x751b	                           jne 0x4006a00	      2243	revision.c	FUNCTION_67	ELSE_12	IF_15	CALL_43
0x69a5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2244	revision.c	FUNCTION_67	ELSE_12	IF_15	CALL_44
0x69a9	            0x8b00	                    mov eax, dword [rax]	      2244	revision.c	FUNCTION_67	ELSE_12	IF_15	CALL_44
0x69ab	            0x89c2	                            mov edx, eax	      2244	revision.c	FUNCTION_67	ELSE_12	IF_15	CALL_44
0x69ad	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2244	revision.c	FUNCTION_67	ELSE_12	IF_15	CALL_44
0x69b1	            0x89d6	                            mov esi, edx	      2244	revision.c	FUNCTION_67	ELSE_12	IF_15	CALL_44
0x69b3	          0x4889c7	                            mov rdi, rax	      2244	revision.c	FUNCTION_67	ELSE_12	IF_15	CALL_44
0x69b6	      0xe800000000	                          call 0x40069fb	      2244	revision.c	FUNCTION_67	ELSE_12	IF_15	CALL_44
0x69bb	      0xe92b010000	                           jmp 0x4006b2b	      2244	revision.c	FUNCTION_67	ELSE_12	IF_15	CALL_44
0x69c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2245	revision.c	FUNCTION_67	ELSE_13	IF_16	CALL_45
0x69c4	      0xbe00000000	                              mov esi, 0	      2245	revision.c	FUNCTION_67	ELSE_13	IF_16	CALL_45
0x69c9	          0x4889c7	                            mov rdi, rax	      2245	revision.c	FUNCTION_67	ELSE_13	IF_16	CALL_45
0x69cc	      0xe800000000	                          call 0x4006a11	      2245	revision.c	FUNCTION_67	ELSE_13	IF_16	CALL_45
0x69d1	            0x85c0	                           test eax, eax	      2245	revision.c	FUNCTION_67	ELSE_13	IF_16	CALL_45
0x69d3	            0x7518	                           jne 0x4006a2d	      2245	revision.c	FUNCTION_67	ELSE_13	IF_16	CALL_45
0x69d5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2246	revision.c	FUNCTION_67	ELSE_13	IF_16
0x69d9	            0x8b00	                    mov eax, dword [rax]	      2246	revision.c	FUNCTION_67	ELSE_13	IF_16
0x69db	      0x3502040000	                          xor eax, 0x402	      2246	revision.c	FUNCTION_67	ELSE_13	IF_16
0x69e0	            0x89c2	                            mov edx, eax	      2246	revision.c	FUNCTION_67	ELSE_13	IF_16
0x69e2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2246	revision.c	FUNCTION_67	ELSE_13	IF_16
0x69e6	            0x8910	                    mov dword [rax], edx	      2246	revision.c	FUNCTION_67	ELSE_13	IF_16
0x69e8	      0xe9fe000000	                           jmp 0x4006b2b	      2246	revision.c	FUNCTION_67	ELSE_13	IF_16
0x69ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2247	revision.c	FUNCTION_67	ELSE_14	IF_17	CALL_46
0x69f1	      0xbe00000000	                              mov esi, 0	      2247	revision.c	FUNCTION_67	ELSE_14	IF_17	CALL_46
0x69f6	          0x4889c7	                            mov rdi, rax	      2247	revision.c	FUNCTION_67	ELSE_14	IF_17	CALL_46
0x69f9	      0xe800000000	                          call 0x4006a3e	      2247	revision.c	FUNCTION_67	ELSE_14	IF_17	CALL_46
0x69fe	            0x85c0	                           test eax, eax	      2247	revision.c	FUNCTION_67	ELSE_14	IF_17	CALL_46
0x6a00	            0x7516	                           jne 0x4006a58	      2247	revision.c	FUNCTION_67	ELSE_14	IF_17	CALL_46
0x6a02	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2248	revision.c	FUNCTION_67	ELSE_14	IF_17
0x6a06	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      2248	revision.c	FUNCTION_67	ELSE_14	IF_17
0x6a0a	          0x83e2cf	                     and edx, 0xffffffcf	      2248	revision.c	FUNCTION_67	ELSE_14	IF_17
0x6a0d	          0x83ca10	                            or edx, 0x10	      2248	revision.c	FUNCTION_67	ELSE_14	IF_17
0x6a10	          0x885074	               mov byte [rax + 0x74], dl	      2248	revision.c	FUNCTION_67	ELSE_14	IF_17
0x6a13	      0xe9d3000000	                           jmp 0x4006b2b	      2248	revision.c	FUNCTION_67	ELSE_14	IF_17
0x6a18	        0x488d55b8	                   lea rdx, [rbp - 0x48]	      2249	revision.c	FUNCTION_67	ELSE_15	IF_18	CALL_47
0x6a1c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2249	revision.c	FUNCTION_67	ELSE_15	IF_18	CALL_47
0x6a20	      0xbe00000000	                              mov esi, 0	      2249	revision.c	FUNCTION_67	ELSE_15	IF_18	CALL_47
0x6a25	          0x4889c7	                            mov rdi, rax	      2249	revision.c	FUNCTION_67	ELSE_15	IF_18	CALL_47
0x6a28	      0xe8de95ffff	                    call sym.skip_prefix	      2249	revision.c	FUNCTION_67	ELSE_15	IF_18	CALL_47
0x6a2d	            0x85c0	                           test eax, eax	      2249	revision.c	FUNCTION_67	ELSE_15	IF_18	CALL_47
0x6a2f	            0x7469	                            je 0x4006ada	      2249	revision.c	FUNCTION_67	ELSE_15	IF_18	CALL_47
0x6a31	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2254	revision.c	FUNCTION_67	ELSE_15	IF_18	IF_19	CALL_48
0x6a35	      0xbe00000000	                              mov esi, 0	      2254	revision.c	FUNCTION_67	ELSE_15	IF_18	IF_19	CALL_48
0x6a3a	          0x4889c7	                            mov rdi, rax	      2254	revision.c	FUNCTION_67	ELSE_15	IF_18	IF_19	CALL_48
0x6a3d	      0xe800000000	                          call 0x4006a82	      2254	revision.c	FUNCTION_67	ELSE_15	IF_18	IF_19	CALL_48
0x6a42	            0x85c0	                           test eax, eax	      2254	revision.c	FUNCTION_67	ELSE_15	IF_18	IF_19	CALL_48
0x6a44	            0x7516	                           jne 0x4006a9c	      2254	revision.c	FUNCTION_67	ELSE_15	IF_18	IF_19	CALL_48
0x6a46	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2255	revision.c	FUNCTION_67	ELSE_15	IF_18	IF_19
0x6a4a	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      2255	revision.c	FUNCTION_67	ELSE_15	IF_18	IF_19
0x6a4e	          0x83e2cf	                     and edx, 0xffffffcf	      2255	revision.c	FUNCTION_67	ELSE_15	IF_18	IF_19
0x6a51	          0x83ca10	                            or edx, 0x10	      2255	revision.c	FUNCTION_67	ELSE_15	IF_18	IF_19
0x6a54	          0x885074	               mov byte [rax + 0x74], dl	      2255	revision.c	FUNCTION_67	ELSE_15	IF_18	IF_19
0x6a57	      0xe98f000000	                           jmp 0x4006b2b	      2255	revision.c	FUNCTION_67	ELSE_15	IF_18	IF_19
0x6a5c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2256	revision.c	FUNCTION_67	ELSE_15	IF_18	ELSE_16	IF_20	CALL_49
0x6a60	      0xbe00000000	                              mov esi, 0	      2256	revision.c	FUNCTION_67	ELSE_15	IF_18	ELSE_16	IF_20	CALL_49
0x6a65	          0x4889c7	                            mov rdi, rax	      2256	revision.c	FUNCTION_67	ELSE_15	IF_18	ELSE_16	IF_20	CALL_49
0x6a68	      0xe800000000	                          call 0x4006aad	      2256	revision.c	FUNCTION_67	ELSE_15	IF_18	ELSE_16	IF_20	CALL_49
0x6a6d	            0x85c0	                           test eax, eax	      2256	revision.c	FUNCTION_67	ELSE_15	IF_18	ELSE_16	IF_20	CALL_49
0x6a6f	            0x7513	                           jne 0x4006ac4	      2256	revision.c	FUNCTION_67	ELSE_15	IF_18	ELSE_16	IF_20	CALL_49
0x6a71	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2257	revision.c	FUNCTION_67	ELSE_15	IF_18	ELSE_16	IF_20
0x6a75	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      2257	revision.c	FUNCTION_67	ELSE_15	IF_18	ELSE_16	IF_20
0x6a79	          0x83e2cf	                     and edx, 0xffffffcf	      2257	revision.c	FUNCTION_67	ELSE_15	IF_18	ELSE_16	IF_20
0x6a7c	          0x83ca20	                            or edx, 0x20	      2257	revision.c	FUNCTION_67	ELSE_15	IF_18	ELSE_16	IF_20
0x6a7f	          0x885074	               mov byte [rax + 0x74], dl	      2257	revision.c	FUNCTION_67	ELSE_15	IF_18	ELSE_16	IF_20
0x6a82	            0xeb67	                           jmp 0x4006b2b	      2257	revision.c	FUNCTION_67	ELSE_15	IF_18	ELSE_16	IF_20
0x6a84	      0xbf00000000	                              mov edi, 0	      2259	revision.c	FUNCTION_67	ELSE_15	IF_18	CALL_50
0x6a89	      0xb800000000	                              mov eax, 0	      2259	revision.c	FUNCTION_67	ELSE_15	IF_18	CALL_50
0x6a8e	      0xe800000000	                          call 0x4006ad3	      2259	revision.c	FUNCTION_67	ELSE_15	IF_18	CALL_50
0x6a93	      0xe86895ffff	                    call sym.const_error	      2259	revision.c	FUNCTION_67	ELSE_15	IF_18	CALL_50
0x6a98	            0xeb56	                           jmp 0x4006b30	      2259	revision.c	FUNCTION_67	ELSE_15	IF_18	CALL_50
0x6a9a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2260	revision.c	FUNCTION_67	ELSE_18	IF_21	CALL_51
0x6a9e	      0xbe00000000	                              mov esi, 0	      2260	revision.c	FUNCTION_67	ELSE_18	IF_21	CALL_51
0x6aa3	          0x4889c7	                            mov rdi, rax	      2260	revision.c	FUNCTION_67	ELSE_18	IF_21	CALL_51
0x6aa6	      0xe800000000	                          call 0x4006aeb	      2260	revision.c	FUNCTION_67	ELSE_18	IF_21	CALL_51
0x6aab	            0x85c0	                           test eax, eax	      2260	revision.c	FUNCTION_67	ELSE_18	IF_21	CALL_51
0x6aad	            0x7510	                           jne 0x4006aff	      2260	revision.c	FUNCTION_67	ELSE_18	IF_21	CALL_51
0x6aaf	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2261	revision.c	FUNCTION_67	ELSE_18	IF_21
0x6ab3	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      2261	revision.c	FUNCTION_67	ELSE_18	IF_21
0x6ab7	          0x83e2cf	                     and edx, 0xffffffcf	      2261	revision.c	FUNCTION_67	ELSE_18	IF_21
0x6aba	          0x885074	               mov byte [rax + 0x74], dl	      2261	revision.c	FUNCTION_67	ELSE_18	IF_21
0x6abd	            0xeb2c	                           jmp 0x4006b2b	      2261	revision.c	FUNCTION_67	ELSE_18	IF_21
0x6abf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2262	revision.c	FUNCTION_67	ELSE_19	IF_22	CALL_52
0x6ac3	      0xbe00000000	                              mov esi, 0	      2262	revision.c	FUNCTION_67	ELSE_19	IF_22	CALL_52
0x6ac8	          0x4889c7	                            mov rdi, rax	      2262	revision.c	FUNCTION_67	ELSE_19	IF_22	CALL_52
0x6acb	      0xe800000000	                          call 0x4006b10	      2262	revision.c	FUNCTION_67	ELSE_19	IF_22	CALL_52
0x6ad0	            0x85c0	                           test eax, eax	      2262	revision.c	FUNCTION_67	ELSE_19	IF_22	CALL_52
0x6ad2	            0x7510	                           jne 0x4006b24	      2262	revision.c	FUNCTION_67	ELSE_19	IF_22	CALL_52
0x6ad4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2263	revision.c	FUNCTION_67	ELSE_19	IF_22
0x6ad8	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      2263	revision.c	FUNCTION_67	ELSE_19	IF_22
0x6adc	          0x83ca08	                               or edx, 8	      2263	revision.c	FUNCTION_67	ELSE_19	IF_22
0x6adf	          0x885075	               mov byte [rax + 0x75], dl	      2263	revision.c	FUNCTION_67	ELSE_19	IF_22
0x6ae2	            0xeb07	                           jmp 0x4006b2b	      2263	revision.c	FUNCTION_67	ELSE_19	IF_22
0x6ae4	      0xb800000000	                              mov eax, 0	      2265	revision.c	FUNCTION_67	ELSE_20
0x6ae9	            0xeb05	                           jmp 0x4006b30	      2265	revision.c	FUNCTION_67	ELSE_20
0x6aeb	      0xb801000000	                              mov eax, 1	      2268	revision.c	FUNCTION_67
0x6af0	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2269	revision.c	FUNCTION_67
0x6af4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2269	revision.c	FUNCTION_67
0x6afd	            0x7405	                            je 0x4006b44	      2269	revision.c	FUNCTION_67
0x6aff	      0xe800000000	                          call 0x4006b44	      2269	revision.c	FUNCTION_67
0x6b04	              0xc9	                                   leave	      2269	revision.c	FUNCTION_67
0x6b05	              0xc3	                                     ret	      2269	revision.c	FUNCTION_67
comparison_date	FOR,0:functions,0:WHILE,0:CALL,1:IF,0:ELSE,0:DO,0:SWITCH,0	18
0x896a	              0x55	                                push rbp	      3080	revision.c	FUNCTION_88
0x896b	          0x4889e5	                            mov rbp, rsp	      3080	revision.c	FUNCTION_88
0x896e	        0x4883ec10	                           sub rsp, 0x10	      3080	revision.c	FUNCTION_88
0x8972	        0x48897df8	                mov qword [rbp - 8], rdi	      3080	revision.c	FUNCTION_88
0x8976	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3080	revision.c	FUNCTION_88
0x897a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3081	revision.c	FUNCTION_88
0x897e	    0x488b80f80700	           mov rax, qword [rax + 0x7f8] 	      3081	revision.c	FUNCTION_88
0x8985	          0x4885c0	                           test rax, rax	      3082	revision.c	FUNCTION_88	CALL_1
0x8988	            0x7415	                            je 0x40089df	      3082	revision.c	FUNCTION_88	CALL_1
0x898a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3082	revision.c	FUNCTION_88	CALL_1
0x898e	    0x488b80f80700	           mov rax, qword [rax + 0x7f8] 	      3082	revision.c	FUNCTION_88	CALL_1
0x8995	          0x4889c7	                            mov rdi, rax	      3082	revision.c	FUNCTION_88	CALL_1
0x8998	      0xe800000000	                          call 0x40089dd	      3082	revision.c	FUNCTION_88	CALL_1
0x899d	            0xeb08	                           jmp 0x40089e7	      3081	revision.c	FUNCTION_88
0x899f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3082	revision.c	FUNCTION_88	CALL_1
0x89a3	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3082	revision.c	FUNCTION_88	CALL_1
0x89a7	              0xc9	                                   leave	      3084	revision.c	FUNCTION_88
0x89a8	              0xc3	                                     ret	      3084	revision.c	FUNCTION_88
simplify_commit	FOR,0:functions,0:WHILE,0:CALL,4:IF,3:ELSE,0:DO,0:SWITCH,0	51
0x8f82	              0x55	                                push rbp	      3186	revision.c	FUNCTION_93
0x8f83	          0x4889e5	                            mov rbp, rsp	      3186	revision.c	FUNCTION_93
0x8f86	        0x4883ec20	                           sub rsp, 0x20	      3186	revision.c	FUNCTION_93
0x8f8a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3186	revision.c	FUNCTION_93
0x8f8e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3186	revision.c	FUNCTION_93
0x8f92	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3187	revision.c	FUNCTION_93	CALL_1
0x8f96	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3187	revision.c	FUNCTION_93	CALL_1
0x8f9a	          0x4889d6	                            mov rsi, rdx	      3187	revision.c	FUNCTION_93	CALL_1
0x8f9d	          0x4889c7	                            mov rdi, rax	      3187	revision.c	FUNCTION_93	CALL_1
0x8fa0	      0xe800000000	                          call 0x4008fe5	      3187	revision.c	FUNCTION_93	CALL_1
0x8fa5	          0x8945fc	                mov dword [rbp - 4], eax	      3187	revision.c	FUNCTION_93	CALL_1
0x8fa8	        0x837dfc01	                  cmp dword [rbp - 4], 1	      3189	revision.c	FUNCTION_93	IF_1
0x8fac	            0x7573	                           jne 0x4009061	      3189	revision.c	FUNCTION_93	IF_1
0x8fae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3189	revision.c	FUNCTION_93	IF_1
0x8fb2	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      3189	revision.c	FUNCTION_93	IF_1
0x8fb6	          0x83e008	                              and eax, 8	      3189	revision.c	FUNCTION_93	IF_1
0x8fb9	            0x84c0	                             test al, al	      3189	revision.c	FUNCTION_93	IF_1
0x8fbb	            0x7464	                            je 0x4009061	      3189	revision.c	FUNCTION_93	IF_1
0x8fbd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3190	revision.c	FUNCTION_93	IF_1	CALL_2
0x8fc1	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      3190	revision.c	FUNCTION_93	IF_1	CALL_2
0x8fc5	          0x83e004	                              and eax, 4	      3190	revision.c	FUNCTION_93	IF_1	CALL_2
0x8fc8	            0x84c0	                             test al, al	      3190	revision.c	FUNCTION_93	IF_1	CALL_2
0x8fca	            0x7455	                            je 0x4009061	      3190	revision.c	FUNCTION_93	IF_1	CALL_2
0x8fcc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3190	revision.c	FUNCTION_93	IF_1	CALL_2
0x8fd0	          0x4889c7	                            mov rdi, rax	      3190	revision.c	FUNCTION_93	IF_1	CALL_2
0x8fd3	      0xe85df9ffff	                  call sym.want_ancestry	      3190	revision.c	FUNCTION_93	IF_1	CALL_2
0x8fd8	            0x85c0	                           test eax, eax	      3190	revision.c	FUNCTION_93	IF_1	CALL_2
0x8fda	            0x7445	                            je 0x4009061	      3190	revision.c	FUNCTION_93	IF_1	CALL_2
0x8fdc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3197	revision.c	FUNCTION_93	IF_1	IF_2
0x8fe0	         0xfb64079	           movzx eax, byte [rax + 0x79] 	      3197	revision.c	FUNCTION_93	IF_1	IF_2
0x8fe4	          0x83e002	                              and eax, 2	      3197	revision.c	FUNCTION_93	IF_1	IF_2
0x8fe7	            0x84c0	                             test al, al	      3197	revision.c	FUNCTION_93	IF_1	IF_2
0x8fe9	            0x7413	                            je 0x400903e	      3197	revision.c	FUNCTION_93	IF_1	IF_2
0x8feb	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3198	revision.c	FUNCTION_93	IF_1	CALL_3
0x8fef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3198	revision.c	FUNCTION_93	IF_1	CALL_3
0x8ff3	          0x4889d6	                            mov rsi, rdx	      3198	revision.c	FUNCTION_93	IF_1	CALL_3
0x8ff6	          0x4889c7	                            mov rdi, rax	      3198	revision.c	FUNCTION_93	IF_1	CALL_3
0x8ff9	      0xe845feffff	                   call sym.save_parents	      3198	revision.c	FUNCTION_93	IF_1	CALL_3
0x8ffe	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3199	revision.c	FUNCTION_93	IF_1	IF_3	CALL_4
0x9002	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3199	revision.c	FUNCTION_93	IF_1	IF_3	CALL_4
0x9006	      0xba00000000	                              mov edx, 0	      3199	revision.c	FUNCTION_93	IF_1	IF_3	CALL_4
0x900b	          0x4889ce	                            mov rsi, rcx	      3199	revision.c	FUNCTION_93	IF_1	IF_3	CALL_4
0x900e	          0x4889c7	                            mov rdi, rax	      3199	revision.c	FUNCTION_93	IF_1	IF_3	CALL_4
0x9011	      0xe800000000	                          call 0x4009056	      3199	revision.c	FUNCTION_93	IF_1	IF_3	CALL_4
0x9016	            0x85c0	                           test eax, eax	      3199	revision.c	FUNCTION_93	IF_1	IF_3	CALL_4
0x9018	            0x7907	                           jns 0x4009061	      3199	revision.c	FUNCTION_93	IF_1	IF_3	CALL_4
0x901a	      0xb802000000	                              mov eax, 2	      3200	revision.c	FUNCTION_93	IF_1	IF_3
0x901f	            0xeb03	                           jmp 0x4009064	      3200	revision.c	FUNCTION_93	IF_1	IF_3
0x9021	          0x8b45fc	                mov eax, dword [rbp - 4]	      3202	revision.c	FUNCTION_93
0x9024	              0xc9	                                   leave	      3203	revision.c	FUNCTION_93
0x9025	              0xc3	                                     ret	      3203	revision.c	FUNCTION_93
handle_one_reflog	FOR,0:functions,0:WHILE,0:CALL,1:IF,0:ELSE,0:DO,0:SWITCH,0	25
0x3093	              0x55	                                push rbp	      1255	revision.c	FUNCTION_43
0x3094	          0x4889e5	                            mov rbp, rsp	      1255	revision.c	FUNCTION_43
0x3097	        0x4883ec30	                           sub rsp, 0x30	      1255	revision.c	FUNCTION_43
0x309b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1255	revision.c	FUNCTION_43
0x309f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1255	revision.c	FUNCTION_43
0x30a3	          0x8955dc	             mov dword [rbp - 0x24], edx	      1255	revision.c	FUNCTION_43
0x30a6	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1255	revision.c	FUNCTION_43
0x30aa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1256	revision.c	FUNCTION_43
0x30ae	        0x488945f8	                mov qword [rbp - 8], rax	      1256	revision.c	FUNCTION_43
0x30b2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1257	revision.c	FUNCTION_43
0x30b6	    0xc74004000000	                  mov dword [rax + 4], 0	      1257	revision.c	FUNCTION_43
0x30bd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1258	revision.c	FUNCTION_43
0x30c1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1258	revision.c	FUNCTION_43
0x30c5	        0x48895010	             mov qword [rax + 0x10], rdx	      1258	revision.c	FUNCTION_43
0x30c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1259	revision.c	FUNCTION_43	CALL_1
0x30cd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1259	revision.c	FUNCTION_43	CALL_1
0x30d1	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1259	revision.c	FUNCTION_43	CALL_1
0x30d5	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1259	revision.c	FUNCTION_43	CALL_1
0x30d9	          0x4889d1	                            mov rcx, rdx	      1259	revision.c	FUNCTION_43	CALL_1
0x30dc	      0xba00000000	                              mov edx, 0	      1259	revision.c	FUNCTION_43	CALL_1
0x30e1	          0x4889c7	                            mov rdi, rax	      1259	revision.c	FUNCTION_43	CALL_1
0x30e4	      0xe800000000	                          call 0x4003129	      1259	revision.c	FUNCTION_43	CALL_1
0x30e9	      0xb800000000	                              mov eax, 0	      1261	revision.c	FUNCTION_43
0x30ee	              0xc9	                                   leave	      1262	revision.c	FUNCTION_43
0x30ef	              0xc3	                                     ret	      1262	revision.c	FUNCTION_43
prepare_show_merge	FOR,1:functions,0:WHILE,1:CALL,19:IF,5:ELSE,0:DO,0:SWITCH,0	193
0x3a02	              0x55	                                push rbp	      1467	revision.c	FUNCTION_52
0x3a03	          0x4889e5	                            mov rbp, rsp	      1467	revision.c	FUNCTION_52
0x3a06	        0x4883ec60	                           sub rsp, 0x60	      1467	revision.c	FUNCTION_52
0x3a0a	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1467	revision.c	FUNCTION_52
0x3a0e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1467	revision.c	FUNCTION_52
0x3a17	        0x488945f8	                mov qword [rbp - 8], rax	      1467	revision.c	FUNCTION_52
0x3a1b	            0x31c0	                            xor eax, eax	      1467	revision.c	FUNCTION_52
0x3a1d	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1471	revision.c	FUNCTION_52
0x3a25	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      1472	revision.c	FUNCTION_52
0x3a2c	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1474	revision.c	FUNCTION_52	IF_1	CALL_1
0x3a30	          0x4889c6	                            mov rsi, rax	      1474	revision.c	FUNCTION_52	IF_1	CALL_1
0x3a33	      0xbf00000000	                              mov edi, 0	      1474	revision.c	FUNCTION_52	IF_1	CALL_1
0x3a38	      0xe800000000	                          call 0x4003a7d	      1474	revision.c	FUNCTION_52	IF_1	CALL_1
0x3a3d	            0x85c0	                           test eax, eax	      1474	revision.c	FUNCTION_52	IF_1	CALL_1
0x3a3f	            0x740f	                            je 0x4003a90	      1474	revision.c	FUNCTION_52	IF_1	CALL_1
0x3a41	      0xbf00000000	                              mov edi, 0	      1475	revision.c	FUNCTION_52	CALL_2
0x3a46	      0xb800000000	                              mov eax, 0	      1475	revision.c	FUNCTION_52	CALL_2
0x3a4b	      0xe800000000	                          call 0x4003a90	      1475	revision.c	FUNCTION_52	CALL_2
0x3a50	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1476	revision.c	FUNCTION_52	CALL_3
0x3a54	      0xbe00000000	                              mov esi, 0	      1476	revision.c	FUNCTION_52	CALL_3
0x3a59	          0x4889c7	                            mov rdi, rax	      1476	revision.c	FUNCTION_52	CALL_3
0x3a5c	      0xe800000000	                          call 0x4003aa1	      1476	revision.c	FUNCTION_52	CALL_3
0x3a61	        0x488945c0	             mov qword [rbp - 0x40], rax	      1476	revision.c	FUNCTION_52	CALL_3
0x3a65	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1477	revision.c	FUNCTION_52	IF_2	CALL_4
0x3a69	          0x4889c6	                            mov rsi, rax	      1477	revision.c	FUNCTION_52	IF_2	CALL_4
0x3a6c	      0xbf00000000	                              mov edi, 0	      1477	revision.c	FUNCTION_52	IF_2	CALL_4
0x3a71	      0xe800000000	                          call 0x4003ab6	      1477	revision.c	FUNCTION_52	IF_2	CALL_4
0x3a76	            0x85c0	                           test eax, eax	      1477	revision.c	FUNCTION_52	IF_2	CALL_4
0x3a78	            0x740f	                            je 0x4003ac9	      1477	revision.c	FUNCTION_52	IF_2	CALL_4
0x3a7a	      0xbf00000000	                              mov edi, 0	      1478	revision.c	FUNCTION_52	CALL_5
0x3a7f	      0xb800000000	                              mov eax, 0	      1478	revision.c	FUNCTION_52	CALL_5
0x3a84	      0xe800000000	                          call 0x4003ac9	      1478	revision.c	FUNCTION_52	CALL_5
0x3a89	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1479	revision.c	FUNCTION_52	CALL_6
0x3a8d	      0xbe00000000	                              mov esi, 0	      1479	revision.c	FUNCTION_52	CALL_6
0x3a92	          0x4889c7	                            mov rdi, rax	      1479	revision.c	FUNCTION_52	CALL_6
0x3a95	      0xe800000000	                          call 0x4003ada	      1479	revision.c	FUNCTION_52	CALL_6
0x3a9a	        0x488945c8	             mov qword [rbp - 0x38], rax	      1479	revision.c	FUNCTION_52	CALL_6
0x3a9e	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      1480	revision.c	FUNCTION_52	CALL_7
0x3aa2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1480	revision.c	FUNCTION_52	CALL_7
0x3aa6	      0xba00000000	                              mov edx, 0	      1480	revision.c	FUNCTION_52	CALL_7
0x3aab	          0x4889ce	                            mov rsi, rcx	      1480	revision.c	FUNCTION_52	CALL_7
0x3aae	          0x4889c7	                            mov rdi, rax	      1480	revision.c	FUNCTION_52	CALL_7
0x3ab1	      0xe800000000	                          call 0x4003af6	      1480	revision.c	FUNCTION_52	CALL_7
0x3ab6	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1481	revision.c	FUNCTION_52	CALL_8
0x3aba	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1481	revision.c	FUNCTION_52	CALL_8
0x3abe	      0xba00000000	                              mov edx, 0	      1481	revision.c	FUNCTION_52	CALL_8
0x3ac3	          0x4889ce	                            mov rsi, rcx	      1481	revision.c	FUNCTION_52	CALL_8
0x3ac6	          0x4889c7	                            mov rdi, rax	      1481	revision.c	FUNCTION_52	CALL_8
0x3ac9	      0xe800000000	                          call 0x4003b0e	      1481	revision.c	FUNCTION_52	CALL_8
0x3ace	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1482	revision.c	FUNCTION_52	CALL_9
0x3ad2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1482	revision.c	FUNCTION_52	CALL_9
0x3ad6	          0x4889d6	                            mov rsi, rdx	      1482	revision.c	FUNCTION_52	CALL_9
0x3ad9	          0x4889c7	                            mov rdi, rax	      1482	revision.c	FUNCTION_52	CALL_9
0x3adc	      0xe800000000	                          call 0x4003b21	      1482	revision.c	FUNCTION_52	CALL_9
0x3ae1	        0x488945d0	             mov qword [rbp - 0x30], rax	      1482	revision.c	FUNCTION_52	CALL_9
0x3ae5	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1483	revision.c	FUNCTION_52	CALL_10
0x3ae9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1483	revision.c	FUNCTION_52	CALL_10
0x3aed	      0xb902040000	                          mov ecx, 0x402	      1483	revision.c	FUNCTION_52	CALL_10
0x3af2	      0xba04000000	                              mov edx, 4	      1483	revision.c	FUNCTION_52	CALL_10
0x3af7	          0x4889c7	                            mov rdi, rax	      1483	revision.c	FUNCTION_52	CALL_10
0x3afa	      0xe884f1ffff	           call sym.add_rev_cmdline_list	      1483	revision.c	FUNCTION_52	CALL_10
0x3aff	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1484	revision.c	FUNCTION_52	CALL_11
0x3b03	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1484	revision.c	FUNCTION_52	CALL_11
0x3b07	      0xba02040000	                          mov edx, 0x402	      1484	revision.c	FUNCTION_52	CALL_11
0x3b0c	          0x4889ce	                            mov rsi, rcx	      1484	revision.c	FUNCTION_52	CALL_11
0x3b0f	          0x4889c7	                            mov rdi, rax	      1484	revision.c	FUNCTION_52	CALL_11
0x3b12	      0xe85cfeffff	        call sym.add_pending_commit_list	      1484	revision.c	FUNCTION_52	CALL_11
0x3b17	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1485	revision.c	FUNCTION_52	CALL_12
0x3b1b	          0x4889c7	                            mov rdi, rax	      1485	revision.c	FUNCTION_52	CALL_12
0x3b1e	      0xe800000000	                          call 0x4003b63	      1485	revision.c	FUNCTION_52	CALL_12
0x3b23	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1486	revision.c	FUNCTION_52
0x3b27	            0x8b00	                    mov eax, dword [rax]	      1486	revision.c	FUNCTION_52
0x3b29	          0xc1e804	                              shr eax, 4	      1486	revision.c	FUNCTION_52
0x3b2c	      0x25ffffff07	                      and eax, 0x7ffffff	      1486	revision.c	FUNCTION_52
0x3b31	          0x80cc01	                                or ah, 1	      1486	revision.c	FUNCTION_52
0x3b34	            0x89c2	                            mov edx, eax	      1486	revision.c	FUNCTION_52
0x3b36	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1486	revision.c	FUNCTION_52
0x3b3a	    0x81e2ffffff07	                      and edx, 0x7ffffff	      1486	revision.c	FUNCTION_52
0x3b40	            0x89d1	                            mov ecx, edx	      1486	revision.c	FUNCTION_52
0x3b42	          0xc1e104	                              shl ecx, 4	      1486	revision.c	FUNCTION_52
0x3b45	            0x8b10	                    mov edx, dword [rax]	      1486	revision.c	FUNCTION_52
0x3b47	    0x81e20f000080	                     and edx, 0x8000000f	      1486	revision.c	FUNCTION_52
0x3b4d	             0x9ca	                             or edx, ecx	      1486	revision.c	FUNCTION_52
0x3b4f	            0x8910	                    mov dword [rax], edx	      1486	revision.c	FUNCTION_52
0x3b51	    0x8b0500000000	            mov eax, dword [0x04003b97] 	      1488	revision.c	FUNCTION_52	IF_3
0x3b57	            0x85c0	                           test eax, eax	      1488	revision.c	FUNCTION_52	IF_3
0x3b59	            0x750a	                           jne 0x4003ba5	      1488	revision.c	FUNCTION_52	IF_3
0x3b5b	      0xbf00000000	                              mov edi, 0	      1489	revision.c	FUNCTION_52	CALL_13
0x3b60	      0xe800000000	                          call 0x4003ba5	      1489	revision.c	FUNCTION_52	CALL_13
0x3b65	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      1490	revision.c	FUNCTION_52	FOR_1
0x3b6c	      0xe905010000	                           jmp 0x4003cb6	      1490	revision.c	FUNCTION_52	FOR_1
0x3b71	    0x488b05000000	            mov rax, qword [0x04003bb8] 	      1491	revision.c	FUNCTION_52	FOR_1
0x3b78	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1491	revision.c	FUNCTION_52	FOR_1
0x3b7b	          0x4863d2	                         movsxd rdx, edx	      1491	revision.c	FUNCTION_52	FOR_1
0x3b7e	        0x48c1e203	                              shl rdx, 3	      1491	revision.c	FUNCTION_52	FOR_1
0x3b82	          0x4801d0	                            add rax, rdx	      1491	revision.c	FUNCTION_52	FOR_1
0x3b85	          0x488b00	                    mov rax, qword [rax]	      1491	revision.c	FUNCTION_52	FOR_1
0x3b88	        0x488945d8	             mov qword [rbp - 0x28], rax	      1491	revision.c	FUNCTION_52	FOR_1
0x3b8c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1492	revision.c	FUNCTION_52	FOR_1	IF_4	CALL_14
0x3b90	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1492	revision.c	FUNCTION_52	FOR_1	IF_4	CALL_14
0x3b93	      0x2500300000	                         and eax, 0x3000	      1492	revision.c	FUNCTION_52	FOR_1	IF_4	CALL_14
0x3b98	          0xc1e80c	                            shr eax, 0xc	      1492	revision.c	FUNCTION_52	FOR_1	IF_4	CALL_14
0x3b9b	            0x85c0	                           test eax, eax	      1492	revision.c	FUNCTION_52	FOR_1	IF_4	CALL_14
0x3b9d	     0xf84ce000000	                            je 0x4003cb1	      1492	revision.c	FUNCTION_52	FOR_1	IF_4	CALL_14
0x3ba3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1494	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_15
0x3ba7	        0x488d4850	                   lea rcx, [rax + 0x50]	      1494	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_15
0x3bab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1494	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_15
0x3baf	      0xba00000000	                              mov edx, 0	      1494	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_15
0x3bb4	          0x4889ce	                            mov rsi, rcx	      1494	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_15
0x3bb7	          0x4889c7	                            mov rdi, rax	      1494	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_15
0x3bba	      0xe875c9ffff	                  call sym.ce_path_match	      1494	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_15
0x3bbf	            0x85c0	                           test eax, eax	      1494	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_15
0x3bc1	            0x746c	                            je 0x4003c6f	      1494	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_15
0x3bc3	        0x8345b401	               add dword [rbp - 0x4c], 1	      1495	revision.c	FUNCTION_52	FOR_1	IF_5
0x3bc7	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1496	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_16
0x3bca	            0x4898	                                    cdqe	      1496	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_16
0x3bcc	          0x4889c6	                            mov rsi, rax	      1496	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_16
0x3bcf	      0xbf08000000	                              mov edi, 8	      1496	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_16
0x3bd4	      0xe8ccc4ffff	                        call sym.st_mult	      1496	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_16
0x3bd9	          0x4889c2	                            mov rdx, rax	      1496	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_16
0x3bdc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1496	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_16
0x3be0	          0x4889d6	                            mov rsi, rdx	      1496	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_16
0x3be3	          0x4889c7	                            mov rdi, rax	      1496	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_16
0x3be6	      0xe800000000	                          call 0x4003c2b	      1496	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_16
0x3beb	        0x488945b8	             mov qword [rbp - 0x48], rax	      1496	revision.c	FUNCTION_52	FOR_1	IF_5	CALL_16
0x3bef	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1497	revision.c	FUNCTION_52	FOR_1	IF_5
0x3bf2	            0x4898	                                    cdqe	      1497	revision.c	FUNCTION_52	FOR_1	IF_5
0x3bf4	        0x48c1e003	                              shl rax, 3	      1497	revision.c	FUNCTION_52	FOR_1	IF_5
0x3bf8	        0x488d50f0	                   lea rdx, [rax - 0x10]	      1497	revision.c	FUNCTION_52	FOR_1	IF_5
0x3bfc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1497	revision.c	FUNCTION_52	FOR_1	IF_5
0x3c00	          0x4801d0	                            add rax, rdx	      1497	revision.c	FUNCTION_52	FOR_1	IF_5
0x3c03	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1497	revision.c	FUNCTION_52	FOR_1	IF_5
0x3c07	        0x4883c258	                           add rdx, 0x58	      1497	revision.c	FUNCTION_52	FOR_1	IF_5
0x3c0b	          0x488910	                    mov qword [rax], rdx	      1497	revision.c	FUNCTION_52	FOR_1	IF_5
0x3c0e	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1498	revision.c	FUNCTION_52	FOR_1	IF_5
0x3c11	            0x4898	                                    cdqe	      1498	revision.c	FUNCTION_52	FOR_1	IF_5
0x3c13	        0x48c1e003	                              shl rax, 3	      1498	revision.c	FUNCTION_52	FOR_1	IF_5
0x3c17	        0x488d50f8	                      lea rdx, [rax - 8]	      1498	revision.c	FUNCTION_52	FOR_1	IF_5
0x3c1b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1498	revision.c	FUNCTION_52	FOR_1	IF_5
0x3c1f	          0x4801d0	                            add rax, rdx	      1498	revision.c	FUNCTION_52	FOR_1	IF_5
0x3c22	    0x48c700000000	                      mov qword [rax], 0	      1498	revision.c	FUNCTION_52	FOR_1	IF_5
0x3c29	            0xeb04	                           jmp 0x4003c6f	      1500	revision.c	FUNCTION_52	FOR_1	WHILE_1
0x3c2b	        0x8345b001	               add dword [rbp - 0x50], 1	      1502	revision.c	FUNCTION_52	FOR_1	WHILE_1
0x3c2f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1500	revision.c	FUNCTION_52	FOR_1	WHILE_1
0x3c32	          0x83c001	                              add eax, 1	      1500	revision.c	FUNCTION_52	FOR_1	WHILE_1
0x3c35	            0x89c2	                            mov edx, eax	      1500	revision.c	FUNCTION_52	FOR_1	WHILE_1
0x3c37	    0x8b0500000000	            mov eax, dword [0x04003c7d] 	      1500	revision.c	FUNCTION_52	FOR_1	WHILE_1
0x3c3d	            0x39c2	                            cmp edx, eax	      1500	revision.c	FUNCTION_52	FOR_1	WHILE_1
0x3c3f	            0x7331	                           jae 0x4003cb2	      1500	revision.c	FUNCTION_52	FOR_1	WHILE_1
0x3c41	    0x488b05000000	            mov rax, qword [0x04003c88] 	      1501	revision.c	FUNCTION_52	FOR_1	WHILE_1	CALL_17
0x3c48	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1501	revision.c	FUNCTION_52	FOR_1	WHILE_1	CALL_17
0x3c4b	          0x4863d2	                         movsxd rdx, edx	      1501	revision.c	FUNCTION_52	FOR_1	WHILE_1	CALL_17
0x3c4e	        0x4883c201	                              add rdx, 1	      1501	revision.c	FUNCTION_52	FOR_1	WHILE_1	CALL_17
0x3c52	        0x48c1e203	                              shl rdx, 3	      1501	revision.c	FUNCTION_52	FOR_1	WHILE_1	CALL_17
0x3c56	          0x4801d0	                            add rax, rdx	      1501	revision.c	FUNCTION_52	FOR_1	WHILE_1	CALL_17
0x3c59	          0x488b10	                    mov rdx, qword [rax]	      1501	revision.c	FUNCTION_52	FOR_1	WHILE_1	CALL_17
0x3c5c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1501	revision.c	FUNCTION_52	FOR_1	WHILE_1	CALL_17
0x3c60	          0x4889d6	                            mov rsi, rdx	      1501	revision.c	FUNCTION_52	FOR_1	WHILE_1	CALL_17
0x3c63	          0x4889c7	                            mov rdi, rax	      1501	revision.c	FUNCTION_52	FOR_1	WHILE_1	CALL_17
0x3c66	      0xe800000000	                          call 0x4003cab	      1501	revision.c	FUNCTION_52	FOR_1	WHILE_1	CALL_17
0x3c6b	            0x85c0	                           test eax, eax	      1500	revision.c	FUNCTION_52	FOR_1	WHILE_1
0x3c6d	            0x75bc	                           jne 0x4003c6b	      1500	revision.c	FUNCTION_52	FOR_1	WHILE_1
0x3c6f	            0xeb01	                           jmp 0x4003cb2	      1500	revision.c	FUNCTION_52	FOR_1	WHILE_1
0x3c71	              0x90	                                     nop	      1493	revision.c	FUNCTION_52	FOR_1	IF_4
0x3c72	        0x8345b001	               add dword [rbp - 0x50], 1	      1490	revision.c	FUNCTION_52	FOR_1
0x3c76	    0x8b1500000000	            mov edx, dword [0x04003cbc] 	      1490	revision.c	FUNCTION_52	FOR_1
0x3c7c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1490	revision.c	FUNCTION_52	FOR_1
0x3c7f	            0x39c2	                            cmp edx, eax	      1490	revision.c	FUNCTION_52	FOR_1
0x3c81	     0xf87eafeffff	                            ja 0x4003bb1	      1490	revision.c	FUNCTION_52	FOR_1
0x3c87	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1504	revision.c	FUNCTION_52	CALL_18
0x3c8b	        0x4883c050	                           add rax, 0x50	      1504	revision.c	FUNCTION_52	CALL_18
0x3c8f	          0x4889c7	                            mov rdi, rax	      1504	revision.c	FUNCTION_52	CALL_18
0x3c92	      0xe800000000	                          call 0x4003cd7	      1504	revision.c	FUNCTION_52	CALL_18
0x3c97	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1505	revision.c	FUNCTION_52	CALL_19
0x3c9b	        0x4883c050	                           add rax, 0x50	      1505	revision.c	FUNCTION_52	CALL_19
0x3c9f	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1505	revision.c	FUNCTION_52	CALL_19
0x3ca3	          0x4989d0	                             mov r8, rdx	      1505	revision.c	FUNCTION_52	CALL_19
0x3ca6	      0xb900000000	                              mov ecx, 0	      1505	revision.c	FUNCTION_52	CALL_19
0x3cab	      0xba42000000	                           mov edx, 0x42	      1505	revision.c	FUNCTION_52	CALL_19
0x3cb0	      0xbe7b000000	                           mov esi, 0x7b	      1505	revision.c	FUNCTION_52	CALL_19
0x3cb5	          0x4889c7	                            mov rdi, rax	      1505	revision.c	FUNCTION_52	CALL_19
0x3cb8	      0xe800000000	                          call 0x4003cfd	      1505	revision.c	FUNCTION_52	CALL_19
0x3cbd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1507	revision.c	FUNCTION_52
0x3cc1	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      1507	revision.c	FUNCTION_52
0x3cc5	          0x83ca04	                               or edx, 4	      1507	revision.c	FUNCTION_52
0x3cc8	          0x885076	               mov byte [rax + 0x76], dl	      1507	revision.c	FUNCTION_52
0x3ccb	              0x90	                                     nop	      1508	revision.c	FUNCTION_52
0x3ccc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1508	revision.c	FUNCTION_52
0x3cd0	    0x644833042528	                xor rax, qword fs:[0x28]	      1508	revision.c	FUNCTION_52
0x3cd9	            0x7405	                            je 0x4003d20	      1508	revision.c	FUNCTION_52
0x3cdb	      0xe800000000	                          call 0x4003d20	      1508	revision.c	FUNCTION_52
0x3ce0	              0xc9	                                   leave	      1508	revision.c	FUNCTION_52
0x3ce1	              0xc3	                                     ret	      1508	revision.c	FUNCTION_52
add_parents_to_list	FOR,1:functions,0:WHILE,1:CALL,8:IF,14:ELSE,0:DO,0:SWITCH,0	269
0x1c8c	              0x55	                                push rbp	       749	revision.c	FUNCTION_26
0x1c8d	          0x4889e5	                            mov rbp, rsp	       749	revision.c	FUNCTION_26
0x1c90	        0x4883ec50	                           sub rsp, 0x50	       749	revision.c	FUNCTION_26
0x1c94	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       749	revision.c	FUNCTION_26
0x1c98	        0x488975c0	             mov qword [rbp - 0x40], rsi	       749	revision.c	FUNCTION_26
0x1c9c	        0x488955b8	             mov qword [rbp - 0x48], rdx	       749	revision.c	FUNCTION_26
0x1ca0	        0x48894db0	             mov qword [rbp - 0x50], rcx	       749	revision.c	FUNCTION_26
0x1ca4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       750	revision.c	FUNCTION_26
0x1ca8	        0x488b4030	            mov rax, qword [rax + 0x30] 	       750	revision.c	FUNCTION_26
0x1cac	        0x488945e0	             mov qword [rbp - 0x20], rax	       750	revision.c	FUNCTION_26
0x1cb0	      0x48837db000	               cmp qword [rbp - 0x50], 0	       752	revision.c	FUNCTION_26
0x1cb5	            0x7409	                            je 0x4001d00	       752	revision.c	FUNCTION_26
0x1cb7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       752	revision.c	FUNCTION_26
0x1cbb	          0x488b00	                    mov rax, qword [rax]	       752	revision.c	FUNCTION_26
0x1cbe	            0xeb05	                           jmp 0x4001d05	       752	revision.c	FUNCTION_26
0x1cc0	      0xb800000000	                              mov eax, 0	       752	revision.c	FUNCTION_26
0x1cc5	        0x488945e8	             mov qword [rbp - 0x18], rax	       752	revision.c	FUNCTION_26
0x1cc9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       754	revision.c	FUNCTION_26	IF_1
0x1ccd	            0x8b00	                    mov eax, dword [rax]	       754	revision.c	FUNCTION_26	IF_1
0x1ccf	          0xc1e804	                              shr eax, 4	       754	revision.c	FUNCTION_26	IF_1
0x1cd2	      0x25ffffff07	                      and eax, 0x7ffffff	       754	revision.c	FUNCTION_26	IF_1
0x1cd7	      0x2580000000	                           and eax, 0x80	       754	revision.c	FUNCTION_26	IF_1
0x1cdc	            0x85c0	                           test eax, eax	       754	revision.c	FUNCTION_26	IF_1
0x1cde	            0x740a	                            je 0x4001d2a	       754	revision.c	FUNCTION_26	IF_1
0x1ce0	      0xb800000000	                              mov eax, 0	       755	revision.c	FUNCTION_26	IF_1
0x1ce5	      0xe949030000	                           jmp 0x4002073	       755	revision.c	FUNCTION_26	IF_1
0x1cea	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       756	revision.c	FUNCTION_26
0x1cee	            0x8b00	                    mov eax, dword [rax]	       756	revision.c	FUNCTION_26
0x1cf0	          0xc1e804	                              shr eax, 4	       756	revision.c	FUNCTION_26
0x1cf3	      0x25ffffff07	                      and eax, 0x7ffffff	       756	revision.c	FUNCTION_26
0x1cf8	             0xc80	                             or al, 0x80	       756	revision.c	FUNCTION_26
0x1cfa	            0x89c2	                            mov edx, eax	       756	revision.c	FUNCTION_26
0x1cfc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       756	revision.c	FUNCTION_26
0x1d00	    0x81e2ffffff07	                      and edx, 0x7ffffff	       756	revision.c	FUNCTION_26
0x1d06	            0x89d1	                            mov ecx, edx	       756	revision.c	FUNCTION_26
0x1d08	          0xc1e104	                              shl ecx, 4	       756	revision.c	FUNCTION_26
0x1d0b	            0x8b10	                    mov edx, dword [rax]	       756	revision.c	FUNCTION_26
0x1d0d	    0x81e20f000080	                     and edx, 0x8000000f	       756	revision.c	FUNCTION_26
0x1d13	             0x9ca	                             or edx, ecx	       756	revision.c	FUNCTION_26
0x1d15	            0x8910	                    mov dword [rax], edx	       756	revision.c	FUNCTION_26
0x1d17	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       758	revision.c	FUNCTION_26	IF_2
0x1d1b	    0x488b80e80400	           mov rax, qword [rax + 0x4e8] 	       758	revision.c	FUNCTION_26	IF_2
0x1d22	          0x4885c0	                           test rax, rax	       758	revision.c	FUNCTION_26	IF_2
0x1d25	            0x7430	                            je 0x4001d97	       758	revision.c	FUNCTION_26	IF_2
0x1d27	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       759	revision.c	FUNCTION_26	IF_2	CALL_1
0x1d2b	    0x488b80e80400	           mov rax, qword [rax + 0x4e8] 	       759	revision.c	FUNCTION_26	IF_2	CALL_1
0x1d32	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       759	revision.c	FUNCTION_26	IF_2	CALL_1
0x1d36	    0x488b8af00400	           mov rcx, qword [rdx + 0x4f0] 	       759	revision.c	FUNCTION_26	IF_2	CALL_1
0x1d3d	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       759	revision.c	FUNCTION_26	IF_2	CALL_1
0x1d41	          0x4889ce	                            mov rsi, rcx	       759	revision.c	FUNCTION_26	IF_2	CALL_1
0x1d44	          0x4889d7	                            mov rdi, rdx	       759	revision.c	FUNCTION_26	IF_2	CALL_1
0x1d47	            0xffd0	                                call rax	       759	revision.c	FUNCTION_26	IF_2	CALL_1
0x1d49	            0x85c0	                           test eax, eax	       758	revision.c	FUNCTION_26	IF_2
0x1d4b	            0x750a	                           jne 0x4001d97	       758	revision.c	FUNCTION_26	IF_2
0x1d4d	      0xb800000000	                              mov eax, 0	       760	revision.c	FUNCTION_26	IF_2
0x1d52	      0xe9dc020000	                           jmp 0x4002073	       760	revision.c	FUNCTION_26	IF_2
0x1d57	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       774	revision.c	FUNCTION_26	IF_3
0x1d5b	            0x8b00	                    mov eax, dword [rax]	       774	revision.c	FUNCTION_26	IF_3
0x1d5d	          0xc1e804	                              shr eax, 4	       774	revision.c	FUNCTION_26	IF_3
0x1d60	      0x25ffffff07	                      and eax, 0x7ffffff	       774	revision.c	FUNCTION_26	IF_3
0x1d65	          0x83e002	                              and eax, 2	       774	revision.c	FUNCTION_26	IF_3
0x1d68	            0x85c0	                           test eax, eax	       774	revision.c	FUNCTION_26	IF_3
0x1d6a	     0xf84f3000000	                            je 0x4001ea3	       774	revision.c	FUNCTION_26	IF_3
0x1d70	      0xe9d9000000	                           jmp 0x4001e8e	       775	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1d75	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       776	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1d79	          0x488b00	                    mov rax, qword [rax]	       776	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1d7c	        0x488945f0	             mov qword [rbp - 0x10], rax	       776	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1d80	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       777	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1d84	        0x488b4008	                mov rax, qword [rax + 8]	       777	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1d88	        0x488945e0	             mov qword [rbp - 0x20], rax	       777	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1d8c	      0x48837df000	               cmp qword [rbp - 0x10], 0	       778	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1d91	            0x742e	                            je 0x4001e01	       778	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1d93	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       779	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1d97	            0x8b00	                    mov eax, dword [rax]	       779	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1d99	          0xc1e804	                              shr eax, 4	       779	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1d9c	      0x25ffffff07	                      and eax, 0x7ffffff	       779	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1da1	          0x83c802	                               or eax, 2	       779	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1da4	            0x89c2	                            mov edx, eax	       779	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1da6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       779	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1daa	    0x81e2ffffff07	                      and edx, 0x7ffffff	       779	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1db0	            0x89d1	                            mov ecx, edx	       779	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1db2	          0xc1e104	                              shl ecx, 4	       779	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1db5	            0x8b10	                    mov edx, dword [rax]	       779	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1db7	    0x81e20f000080	                     and edx, 0x8000000f	       779	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1dbd	             0x9ca	                             or edx, ecx	       779	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1dbf	            0x8910	                    mov dword [rax], edx	       779	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_4
0x1dc1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       780	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_5	CALL_2
0x1dc5	      0xbe01000000	                              mov esi, 1	       780	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_5	CALL_2
0x1dca	          0x4889c7	                            mov rdi, rax	       780	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_5	CALL_2
0x1dcd	      0xe800000000	                          call 0x4001e12	       780	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_5	CALL_2
0x1dd2	            0x85c0	                           test eax, eax	       780	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_5	CALL_2
0x1dd4	            0x7902	                           jns 0x4001e18	       780	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_5	CALL_2
0x1dd6	            0xeb76	                           jmp 0x4001e8e	       781	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_5
0x1dd8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       782	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_6
0x1ddc	        0x488b4030	            mov rax, qword [rax + 0x30] 	       782	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_6
0x1de0	          0x4885c0	                           test rax, rax	       782	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_6
0x1de3	            0x740c	                            je 0x4001e31	       782	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_6
0x1de5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       783	revision.c	FUNCTION_26	IF_3	WHILE_1	CALL_3
0x1de9	          0x4889c7	                            mov rdi, rax	       783	revision.c	FUNCTION_26	IF_3	WHILE_1	CALL_3
0x1dec	      0xe800000000	                          call 0x4001e31	       783	revision.c	FUNCTION_26	IF_3	WHILE_1	CALL_3
0x1df1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       784	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_7
0x1df5	            0x8b00	                    mov eax, dword [rax]	       784	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_7
0x1df7	          0xc1e804	                              shr eax, 4	       784	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_7
0x1dfa	      0x25ffffff07	                      and eax, 0x7ffffff	       784	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_7
0x1dff	          0x83e001	                              and eax, 1	       784	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_7
0x1e02	            0x85c0	                           test eax, eax	       784	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_7
0x1e04	            0x7402	                            je 0x4001e48	       784	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_7
0x1e06	            0xeb46	                           jmp 0x4001e8e	       785	revision.c	FUNCTION_26	IF_3	WHILE_1	IF_7
0x1e08	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       786	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e0c	            0x8b00	                    mov eax, dword [rax]	       786	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e0e	          0xc1e804	                              shr eax, 4	       786	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e11	      0x25ffffff07	                      and eax, 0x7ffffff	       786	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e16	          0x83c801	                               or eax, 1	       786	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e19	            0x89c2	                            mov edx, eax	       786	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       786	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e1f	    0x81e2ffffff07	                      and edx, 0x7ffffff	       786	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e25	            0x89d1	                            mov ecx, edx	       786	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e27	          0xc1e104	                              shl ecx, 4	       786	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e2a	            0x8b10	                    mov edx, dword [rax]	       786	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e2c	    0x81e20f000080	                     and edx, 0x8000000f	       786	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e32	             0x9ca	                             or edx, ecx	       786	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e34	            0x8910	                    mov dword [rax], edx	       786	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e36	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       787	revision.c	FUNCTION_26	IF_3	WHILE_1	CALL_4
0x1e3a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       787	revision.c	FUNCTION_26	IF_3	WHILE_1	CALL_4
0x1e3e	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       787	revision.c	FUNCTION_26	IF_3	WHILE_1	CALL_4
0x1e42	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       787	revision.c	FUNCTION_26	IF_3	WHILE_1	CALL_4
0x1e46	          0x4889c7	                            mov rdi, rax	       787	revision.c	FUNCTION_26	IF_3	WHILE_1	CALL_4
0x1e49	      0xe897fdffff	call sym.commit_list_insert_by_date_cached	       787	revision.c	FUNCTION_26	IF_3	WHILE_1	CALL_4
0x1e4e	      0x48837de000	               cmp qword [rbp - 0x20], 0	       775	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e53	     0xf851cffffff	                           jne 0x4001db5	       775	revision.c	FUNCTION_26	IF_3	WHILE_1
0x1e59	      0xb800000000	                              mov eax, 0	       789	revision.c	FUNCTION_26	IF_3
0x1e5e	      0xe9d0010000	                           jmp 0x4002073	       789	revision.c	FUNCTION_26	IF_3
0x1e63	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       797	revision.c	FUNCTION_26	CALL_5
0x1e67	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       797	revision.c	FUNCTION_26	CALL_5
0x1e6b	          0x4889d6	                            mov rsi, rdx	       797	revision.c	FUNCTION_26	CALL_5
0x1e6e	          0x4889c7	                            mov rdi, rax	       797	revision.c	FUNCTION_26	CALL_5
0x1e71	      0xe89cf9ffff	         call sym.try_to_simplify_commit	       797	revision.c	FUNCTION_26	CALL_5
0x1e76	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       799	revision.c	FUNCTION_26	IF_8
0x1e7a	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       799	revision.c	FUNCTION_26	IF_8
0x1e7e	          0x83e030	                           and eax, 0x30	       799	revision.c	FUNCTION_26	IF_8
0x1e81	            0x84c0	                             test al, al	       799	revision.c	FUNCTION_26	IF_8
0x1e83	            0x740a	                            je 0x4001ecf	       799	revision.c	FUNCTION_26	IF_8
0x1e85	      0xb800000000	                              mov eax, 0	       800	revision.c	FUNCTION_26	IF_8
0x1e8a	      0xe9a4010000	                           jmp 0x4002073	       800	revision.c	FUNCTION_26	IF_8
0x1e8f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       802	revision.c	FUNCTION_26
0x1e93	            0x8b00	                    mov eax, dword [rax]	       802	revision.c	FUNCTION_26
0x1e95	          0xc1e804	                              shr eax, 4	       802	revision.c	FUNCTION_26
0x1e98	      0x25ffffff07	                      and eax, 0x7ffffff	       802	revision.c	FUNCTION_26
0x1e9d	      0x2500010000	                          and eax, 0x100	       802	revision.c	FUNCTION_26
0x1ea2	          0x8945d8	             mov dword [rbp - 0x28], eax	       802	revision.c	FUNCTION_26
0x1ea5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       804	revision.c	FUNCTION_26	FOR_1
0x1ea9	        0x488b4030	            mov rax, qword [rax + 0x30] 	       804	revision.c	FUNCTION_26	FOR_1
0x1ead	        0x488945e0	             mov qword [rbp - 0x20], rax	       804	revision.c	FUNCTION_26	FOR_1
0x1eb1	      0xe96a010000	                           jmp 0x4002060	       804	revision.c	FUNCTION_26	FOR_1
0x1eb6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       805	revision.c	FUNCTION_26	FOR_1
0x1eba	          0x488b00	                    mov rax, qword [rax]	       805	revision.c	FUNCTION_26	FOR_1
0x1ebd	        0x488945f8	                mov qword [rbp - 8], rax	       805	revision.c	FUNCTION_26	FOR_1
0x1ec1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       806	revision.c	FUNCTION_26	FOR_1
0x1ec5	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       806	revision.c	FUNCTION_26	FOR_1
0x1ec9	          0x83e002	                              and eax, 2	       806	revision.c	FUNCTION_26	FOR_1
0x1ecc	            0x84c0	                             test al, al	       806	revision.c	FUNCTION_26	FOR_1
0x1ece	            0x750f	                           jne 0x4001f1f	       806	revision.c	FUNCTION_26	FOR_1
0x1ed0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       806	revision.c	FUNCTION_26	FOR_1
0x1ed4	         0xfb64078	           movzx eax, byte [rax + 0x78] 	       806	revision.c	FUNCTION_26	FOR_1
0x1ed8	          0x83e080	                     and eax, 0xffffff80	       806	revision.c	FUNCTION_26	FOR_1
0x1edb	            0x84c0	                             test al, al	       806	revision.c	FUNCTION_26	FOR_1
0x1edd	            0x7407	                            je 0x4001f26	       806	revision.c	FUNCTION_26	FOR_1
0x1edf	      0xb801000000	                              mov eax, 1	       806	revision.c	FUNCTION_26	FOR_1
0x1ee4	            0xeb05	                           jmp 0x4001f2b	       806	revision.c	FUNCTION_26	FOR_1
0x1ee6	      0xb800000000	                              mov eax, 0	       806	revision.c	FUNCTION_26	FOR_1
0x1eeb	          0x8945dc	             mov dword [rbp - 0x24], eax	       806	revision.c	FUNCTION_26	FOR_1
0x1eee	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       808	revision.c	FUNCTION_26	FOR_1	IF_9	CALL_6
0x1ef1	        0x488b45f8	                mov rax, qword [rbp - 8]	       808	revision.c	FUNCTION_26	FOR_1	IF_9	CALL_6
0x1ef5	            0x89d6	                            mov esi, edx	       808	revision.c	FUNCTION_26	FOR_1	IF_9	CALL_6
0x1ef7	          0x4889c7	                            mov rdi, rax	       808	revision.c	FUNCTION_26	FOR_1	IF_9	CALL_6
0x1efa	      0xe800000000	                          call 0x4001f3f	       808	revision.c	FUNCTION_26	FOR_1	IF_9	CALL_6
0x1eff	            0x85c0	                           test eax, eax	       808	revision.c	FUNCTION_26	FOR_1	IF_9	CALL_6
0x1f01	            0x7945	                           jns 0x4001f88	       808	revision.c	FUNCTION_26	FOR_1	IF_9	CALL_6
0x1f03	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       809	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10
0x1f07	         0xfb64078	           movzx eax, byte [rax + 0x78] 	       809	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10
0x1f0b	          0x83e080	                     and eax, 0xffffff80	       809	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10
0x1f0e	            0x84c0	                             test al, al	       809	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10
0x1f10	            0x742c	                            je 0x4001f7e	       809	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10
0x1f12	        0x488b45f8	                mov rax, qword [rbp - 8]	       810	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10	CALL_7
0x1f16	        0x4883c004	                              add rax, 4	       810	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10	CALL_7
0x1f1a	          0x4889c7	                            mov rdi, rax	       810	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10	CALL_7
0x1f1d	      0xe800000000	                          call 0x4001f62	       810	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10	CALL_7
0x1f22	            0x85c0	                           test eax, eax	       809	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10
0x1f24	            0x7418	                            je 0x4001f7e	       809	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10
0x1f26	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       811	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10	IF_11
0x1f2a	         0xfb64078	           movzx eax, byte [rax + 0x78] 	       811	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10	IF_11
0x1f2e	          0x83e010	                           and eax, 0x10	       811	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10	IF_11
0x1f31	            0x84c0	                             test al, al	       811	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10	IF_11
0x1f33	     0xf84da000000	                            je 0x4002053	       811	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10	IF_11
0x1f39	      0xe9f0000000	                           jmp 0x400206e	       812	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10	IF_11
0x1f3e	      0xb8ffffffff	                     mov eax, 0xffffffff	       815	revision.c	FUNCTION_26	FOR_1	IF_9
0x1f43	      0xe9eb000000	                           jmp 0x4002073	       815	revision.c	FUNCTION_26	FOR_1	IF_9
0x1f48	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       817	revision.c	FUNCTION_26	FOR_1	IF_12
0x1f4c	         0xfb64077	           movzx eax, byte [rax + 0x77] 	       817	revision.c	FUNCTION_26	FOR_1	IF_12
0x1f50	          0x83e010	                           and eax, 0x10	       817	revision.c	FUNCTION_26	FOR_1	IF_12
0x1f53	            0x84c0	                             test al, al	       817	revision.c	FUNCTION_26	FOR_1	IF_12
0x1f55	            0x741d	                            je 0x4001fb4	       817	revision.c	FUNCTION_26	FOR_1	IF_12
0x1f57	        0x488b45f8	                mov rax, qword [rbp - 8]	       817	revision.c	FUNCTION_26	FOR_1	IF_12
0x1f5b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       817	revision.c	FUNCTION_26	FOR_1	IF_12
0x1f5f	          0x4885c0	                           test rax, rax	       817	revision.c	FUNCTION_26	FOR_1	IF_12
0x1f62	            0x7510	                           jne 0x4001fb4	       817	revision.c	FUNCTION_26	FOR_1	IF_12
0x1f64	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       818	revision.c	FUNCTION_26	FOR_1	IF_12
0x1f68	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       818	revision.c	FUNCTION_26	FOR_1	IF_12
0x1f6c	        0x488b45f8	                mov rax, qword [rbp - 8]	       818	revision.c	FUNCTION_26	FOR_1	IF_12
0x1f70	        0x48895018	             mov qword [rax + 0x18], rdx	       818	revision.c	FUNCTION_26	FOR_1	IF_12
0x1f74	        0x488b45f8	                mov rax, qword [rbp - 8]	       819	revision.c	FUNCTION_26	FOR_1
0x1f78	            0x8b00	                    mov eax, dword [rax]	       819	revision.c	FUNCTION_26	FOR_1
0x1f7a	          0xc1e804	                              shr eax, 4	       819	revision.c	FUNCTION_26	FOR_1
0x1f7d	      0x25ffffff07	                      and eax, 0x7ffffff	       819	revision.c	FUNCTION_26	FOR_1
0x1f82	           0xb45d8	              or eax, dword [rbp - 0x28]	       819	revision.c	FUNCTION_26	FOR_1
0x1f85	      0x25ffffff07	                      and eax, 0x7ffffff	       819	revision.c	FUNCTION_26	FOR_1
0x1f8a	            0x89c2	                            mov edx, eax	       819	revision.c	FUNCTION_26	FOR_1
0x1f8c	        0x488b45f8	                mov rax, qword [rbp - 8]	       819	revision.c	FUNCTION_26	FOR_1
0x1f90	    0x81e2ffffff07	                      and edx, 0x7ffffff	       819	revision.c	FUNCTION_26	FOR_1
0x1f96	            0x89d1	                            mov ecx, edx	       819	revision.c	FUNCTION_26	FOR_1
0x1f98	          0xc1e104	                              shl ecx, 4	       819	revision.c	FUNCTION_26	FOR_1
0x1f9b	            0x8b10	                    mov edx, dword [rax]	       819	revision.c	FUNCTION_26	FOR_1
0x1f9d	    0x81e20f000080	                     and edx, 0x8000000f	       819	revision.c	FUNCTION_26	FOR_1
0x1fa3	             0x9ca	                             or edx, ecx	       819	revision.c	FUNCTION_26	FOR_1
0x1fa5	            0x8910	                    mov dword [rax], edx	       819	revision.c	FUNCTION_26	FOR_1
0x1fa7	        0x488b45f8	                mov rax, qword [rbp - 8]	       820	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fab	            0x8b00	                    mov eax, dword [rax]	       820	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fad	          0xc1e804	                              shr eax, 4	       820	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fb0	      0x25ffffff07	                      and eax, 0x7ffffff	       820	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fb5	          0x83e001	                              and eax, 1	       820	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fb8	            0x85c0	                           test eax, eax	       820	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fba	            0x7546	                           jne 0x4002042	       820	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fbc	        0x488b45f8	                mov rax, qword [rbp - 8]	       821	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fc0	            0x8b00	                    mov eax, dword [rax]	       821	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fc2	          0xc1e804	                              shr eax, 4	       821	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fc5	      0x25ffffff07	                      and eax, 0x7ffffff	       821	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fca	          0x83c801	                               or eax, 1	       821	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fcd	            0x89c2	                            mov edx, eax	       821	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fcf	        0x488b45f8	                mov rax, qword [rbp - 8]	       821	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fd3	    0x81e2ffffff07	                      and edx, 0x7ffffff	       821	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fd9	            0x89d1	                            mov ecx, edx	       821	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fdb	          0xc1e104	                              shl ecx, 4	       821	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fde	            0x8b10	                    mov edx, dword [rax]	       821	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fe0	    0x81e20f000080	                     and edx, 0x8000000f	       821	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fe6	             0x9ca	                             or edx, ecx	       821	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fe8	            0x8910	                    mov dword [rax], edx	       821	revision.c	FUNCTION_26	FOR_1	IF_13
0x1fea	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       822	revision.c	FUNCTION_26	FOR_1	IF_13	CALL_8
0x1fee	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       822	revision.c	FUNCTION_26	FOR_1	IF_13	CALL_8
0x1ff2	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       822	revision.c	FUNCTION_26	FOR_1	IF_13	CALL_8
0x1ff6	        0x488b45f8	                mov rax, qword [rbp - 8]	       822	revision.c	FUNCTION_26	FOR_1	IF_13	CALL_8
0x1ffa	          0x4889c7	                            mov rdi, rax	       822	revision.c	FUNCTION_26	FOR_1	IF_13	CALL_8
0x1ffd	      0xe8e3fbffff	call sym.commit_list_insert_by_date_cached	       822	revision.c	FUNCTION_26	FOR_1	IF_13	CALL_8
0x2002	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       824	revision.c	FUNCTION_26	FOR_1	IF_14
0x2006	         0xfb64078	           movzx eax, byte [rax + 0x78] 	       824	revision.c	FUNCTION_26	FOR_1	IF_14
0x200a	          0x83e010	                           and eax, 0x10	       824	revision.c	FUNCTION_26	FOR_1	IF_14
0x200d	            0x84c0	                             test al, al	       824	revision.c	FUNCTION_26	FOR_1	IF_14
0x200f	            0x751c	                           jne 0x400206d	       824	revision.c	FUNCTION_26	FOR_1	IF_14
0x2011	            0xeb01	                           jmp 0x4002054	       824	revision.c	FUNCTION_26	FOR_1	IF_14
0x2013	              0x90	                                     nop	       813	revision.c	FUNCTION_26	FOR_1	IF_9	IF_10
0x2014	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       804	revision.c	FUNCTION_26	FOR_1
0x2018	        0x488b4008	                mov rax, qword [rax + 8]	       804	revision.c	FUNCTION_26	FOR_1
0x201c	        0x488945e0	             mov qword [rbp - 0x20], rax	       804	revision.c	FUNCTION_26	FOR_1
0x2020	      0x48837de000	               cmp qword [rbp - 0x20], 0	       804	revision.c	FUNCTION_26	FOR_1
0x2025	     0xf858bfeffff	                           jne 0x4001ef6	       804	revision.c	FUNCTION_26	FOR_1
0x202b	            0xeb01	                           jmp 0x400206e	       804	revision.c	FUNCTION_26	FOR_1
0x202d	              0x90	                                     nop	       825	revision.c	FUNCTION_26	FOR_1	IF_14
0x202e	      0xb800000000	                              mov eax, 0	       827	revision.c	FUNCTION_26
0x2033	              0xc9	                                   leave	       828	revision.c	FUNCTION_26
0x2034	              0xc3	                                     ret	       828	revision.c	FUNCTION_26
file_add_remove	FOR,0:functions,0:WHILE,0:CALL,0:IF,1:ELSE,0:DO,0:SWITCH,0	35
0x113f	              0x55	                                push rbp	       420	revision.c	FUNCTION_16
0x1140	          0x4889e5	                            mov rbp, rsp	       420	revision.c	FUNCTION_16
0x1143	        0x48897de8	             mov qword [rbp - 0x18], rdi	       420	revision.c	FUNCTION_16
0x1147	          0x8975e4	             mov dword [rbp - 0x1c], esi	       420	revision.c	FUNCTION_16
0x114a	          0x8955e0	             mov dword [rbp - 0x20], edx	       420	revision.c	FUNCTION_16
0x114d	        0x48894dd8	             mov qword [rbp - 0x28], rcx	       420	revision.c	FUNCTION_16
0x1151	        0x448945d4	             mov dword [rbp - 0x2c], r8d	       420	revision.c	FUNCTION_16
0x1155	        0x4c894dc8	              mov qword [rbp - 0x38], r9	       420	revision.c	FUNCTION_16
0x1159	        0x837de42b	           cmp dword [rbp - 0x1c], 0x2b 	       421	revision.c	FUNCTION_16
0x115d	            0x7507	                           jne 0x40011a6	       421	revision.c	FUNCTION_16
0x115f	      0xb801000000	                              mov eax, 1	       421	revision.c	FUNCTION_16
0x1164	            0xeb05	                           jmp 0x40011ab	       421	revision.c	FUNCTION_16
0x1166	      0xb802000000	                              mov eax, 2	       421	revision.c	FUNCTION_16
0x116b	          0x8945f4	              mov dword [rbp - 0xc], eax	       421	revision.c	FUNCTION_16
0x116e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       422	revision.c	FUNCTION_16
0x1172	    0x488b80400100	           mov rax, qword [rax + 0x140] 	       422	revision.c	FUNCTION_16
0x1179	        0x488945f8	                mov qword [rbp - 8], rax	       422	revision.c	FUNCTION_16
0x117d	    0x8b0500000000	            mov eax, dword [0x040011c3] 	       424	revision.c	FUNCTION_16
0x1183	           0xb45f4	               or eax, dword [rbp - 0xc]	       424	revision.c	FUNCTION_16
0x1186	    0x890500000000	            mov dword [0x040011cc], eax 	       424	revision.c	FUNCTION_16
0x118c	        0x488b45f8	                mov rax, qword [rbp - 8]	       425	revision.c	FUNCTION_16	IF_1
0x1190	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       425	revision.c	FUNCTION_16	IF_1
0x1194	          0x83e040	                           and eax, 0x40	       425	revision.c	FUNCTION_16	IF_1
0x1197	            0x84c0	                             test al, al	       425	revision.c	FUNCTION_16	IF_1
0x1199	            0x740b	                            je 0x40011e6	       425	revision.c	FUNCTION_16	IF_1
0x119b	    0x8b0500000000	            mov eax, dword [0x040011e1] 	       425	revision.c	FUNCTION_16	IF_1
0x11a1	          0x83f801	                              cmp eax, 1	       425	revision.c	FUNCTION_16	IF_1
0x11a4	            0x740e	                            je 0x40011f4	       425	revision.c	FUNCTION_16	IF_1
0x11a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       426	revision.c	FUNCTION_16	IF_1
0x11aa	         0xfb65039	           movzx edx, byte [rax + 0x39] 	       426	revision.c	FUNCTION_16	IF_1
0x11ae	          0x83ca02	                               or edx, 2	       426	revision.c	FUNCTION_16	IF_1
0x11b1	          0x885039	               mov byte [rax + 0x39], dl	       426	revision.c	FUNCTION_16	IF_1
0x11b4	              0x90	                                     nop	       427	revision.c	FUNCTION_16
0x11b5	              0x5d	                                 pop rbp	       427	revision.c	FUNCTION_16
0x11b6	              0xc3	                                     ret	       427	revision.c	FUNCTION_16
strbuf_avail	FOR,0:functions,0:WHILE,0:CALL,0:IF,0:ELSE,0:DO,0:SWITCH,0	18
0x256	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_104
0x257	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_104
0x25a	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_104
0x25e	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_104
0x262	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_104
0x265	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_104
0x268	            0x741b	                            je 0x40002c5	       141	strbuf.h	FUNCTION_104
0x26a	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_104
0x26e	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_104
0x271	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_104
0x275	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_104
0x279	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_104
0x27c	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_104
0x27f	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_104
0x283	            0xeb05	                           jmp 0x40002ca	       141	strbuf.h	FUNCTION_104
0x285	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_104
0x28a	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_104
0x28b	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_104
_	FOR,0:functions,0:WHILE,0:CALL,2:IF,1:ELSE,0:DO,0:SWITCH,0	15
0x3c9	              0x55	                                push rbp	        51	gettext.h	FUNCTION_116
0x3ca	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_116
0x3cd	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_116
0x3d1	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_116
0x3d5	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_116	IF_1
0x3d9	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_116	IF_1
0x3dc	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_116	IF_1
0x3de	            0x7507	                           jne 0x4000427	        52	gettext.h	FUNCTION_116	IF_1
0x3e0	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_116	IF_1
0x3e5	            0xeb0c	                           jmp 0x4000433	        53	gettext.h	FUNCTION_116	IF_1
0x3e7	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_116	CALL_2
0x3eb	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_116	CALL_2
0x3ee	      0xe800000000	                          call 0x4000433	        54	gettext.h	FUNCTION_116	CALL_2
0x3f3	              0xc9	                                   leave	        55	gettext.h	FUNCTION_116
0x3f4	              0xc3	                                     ret	        55	gettext.h	FUNCTION_116
initialise_treesame	FOR,0:functions,0:WHILE,0:CALL,4:IF,0:ELSE,0:DO,0:SWITCH,0	31
0x136d	              0x55	                                push rbp	       499	revision.c	FUNCTION_20
0x136e	          0x4889e5	                            mov rbp, rsp	       499	revision.c	FUNCTION_20
0x1371	        0x4883ec20	                           sub rsp, 0x20	       499	revision.c	FUNCTION_20
0x1375	        0x48897de8	             mov qword [rbp - 0x18], rdi	       499	revision.c	FUNCTION_20
0x1379	        0x488975e0	             mov qword [rbp - 0x20], rsi	       499	revision.c	FUNCTION_20
0x137d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       500	revision.c	FUNCTION_20	CALL_1
0x1381	        0x488b4030	            mov rax, qword [rax + 0x30] 	       500	revision.c	FUNCTION_20	CALL_1
0x1385	          0x4889c7	                            mov rdi, rax	       500	revision.c	FUNCTION_20	CALL_1
0x1388	      0xe800000000	                          call 0x40013cd	       500	revision.c	FUNCTION_20	CALL_1
0x138d	          0x8945f4	              mov dword [rbp - 0xc], eax	       500	revision.c	FUNCTION_20	CALL_1
0x1390	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       501	revision.c	FUNCTION_20	CALL_3
0x1393	          0x4889c6	                            mov rsi, rax	       501	revision.c	FUNCTION_20	CALL_3
0x1396	      0xbf04000000	                              mov edi, 4	       501	revision.c	FUNCTION_20	CALL_3
0x139b	      0xe8c1ecffff	                         call sym.st_add	       501	revision.c	FUNCTION_20	CALL_3
0x13a0	          0x4889c6	                            mov rsi, rax	       501	revision.c	FUNCTION_20	CALL_3
0x13a3	      0xbf01000000	                              mov edi, 1	       501	revision.c	FUNCTION_20	CALL_3
0x13a8	      0xe800000000	                          call 0x40013ed	       501	revision.c	FUNCTION_20	CALL_3
0x13ad	        0x488945f8	                mov qword [rbp - 8], rax	       501	revision.c	FUNCTION_20	CALL_3
0x13b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       502	revision.c	FUNCTION_20
0x13b5	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       502	revision.c	FUNCTION_20
0x13b8	            0x8910	                    mov dword [rax], edx	       502	revision.c	FUNCTION_20
0x13ba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       503	revision.c	FUNCTION_20	CALL_4
0x13be	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       503	revision.c	FUNCTION_20	CALL_4
0x13c2	    0x488d8a300800	                  lea rcx, [rdx + 0x830]	       503	revision.c	FUNCTION_20	CALL_4
0x13c9	        0x488b55f8	                mov rdx, qword [rbp - 8]	       503	revision.c	FUNCTION_20	CALL_4
0x13cd	          0x4889c6	                            mov rsi, rax	       503	revision.c	FUNCTION_20	CALL_4
0x13d0	          0x4889cf	                            mov rdi, rcx	       503	revision.c	FUNCTION_20	CALL_4
0x13d3	      0xe800000000	                          call 0x4001418	       503	revision.c	FUNCTION_20	CALL_4
0x13d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       504	revision.c	FUNCTION_20
0x13dc	              0xc9	                                   leave	       505	revision.c	FUNCTION_20
0x13dd	              0xc3	                                     ret	       505	revision.c	FUNCTION_20
compact_treesame	FOR,0:functions,0:WHILE,0:CALL,8:IF,7:ELSE,2:DO,0:SWITCH,0	172
0x13de	              0x55	                                push rbp	       515	revision.c	FUNCTION_21
0x13df	          0x4889e5	                            mov rbp, rsp	       515	revision.c	FUNCTION_21
0x13e2	        0x4883ec30	                           sub rsp, 0x30	       515	revision.c	FUNCTION_21
0x13e6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       515	revision.c	FUNCTION_21
0x13ea	        0x488975e0	             mov qword [rbp - 0x20], rsi	       515	revision.c	FUNCTION_21
0x13ee	          0x8955dc	             mov dword [rbp - 0x24], edx	       515	revision.c	FUNCTION_21
0x13f1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       519	revision.c	FUNCTION_21	IF_1
0x13f5	        0x488b4030	            mov rax, qword [rax + 0x30] 	       519	revision.c	FUNCTION_21	IF_1
0x13f9	          0x4885c0	                           test rax, rax	       519	revision.c	FUNCTION_21	IF_1
0x13fc	     0xf85b5000000	                           jne 0x40014f7	       519	revision.c	FUNCTION_21	IF_1
0x1402	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       524	revision.c	FUNCTION_21	IF_1	IF_2
0x1406	            0x7414	                            je 0x400145c	       524	revision.c	FUNCTION_21	IF_1	IF_2
0x1408	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       525	revision.c	FUNCTION_21	IF_1	CALL_1
0x140b	            0x89c6	                            mov esi, eax	       525	revision.c	FUNCTION_21	IF_1	CALL_1
0x140d	      0xbf00000000	                              mov edi, 0	       525	revision.c	FUNCTION_21	IF_1	CALL_1
0x1412	      0xb800000000	                              mov eax, 0	       525	revision.c	FUNCTION_21	IF_1	CALL_1
0x1417	      0xe800000000	                          call 0x400145c	       525	revision.c	FUNCTION_21	IF_1	CALL_1
0x141c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       526	revision.c	FUNCTION_21	IF_1
0x1420	            0x8b00	                    mov eax, dword [rax]	       526	revision.c	FUNCTION_21	IF_1
0x1422	          0xc1e804	                              shr eax, 4	       526	revision.c	FUNCTION_21	IF_1
0x1425	      0x25ffffff07	                      and eax, 0x7ffffff	       526	revision.c	FUNCTION_21	IF_1
0x142a	          0x83e004	                              and eax, 4	       526	revision.c	FUNCTION_21	IF_1
0x142d	            0x85c0	                           test eax, eax	       526	revision.c	FUNCTION_21	IF_1
0x142f	           0xf95c0	                                setne al	       526	revision.c	FUNCTION_21	IF_1
0x1432	           0xfb6c0	                           movzx eax, al	       526	revision.c	FUNCTION_21	IF_1
0x1435	          0x8945f4	              mov dword [rbp - 0xc], eax	       526	revision.c	FUNCTION_21	IF_1
0x1438	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       527	revision.c	FUNCTION_21	IF_1	IF_3	CALL_2
0x143c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       527	revision.c	FUNCTION_21	IF_1	IF_3	CALL_2
0x1440	          0x4889d6	                            mov rsi, rdx	       527	revision.c	FUNCTION_21	IF_1	IF_3	CALL_2
0x1443	          0x4889c7	                            mov rdi, rax	       527	revision.c	FUNCTION_21	IF_1	IF_3	CALL_2
0x1446	      0xe88cfeffff	         call sym.rev_same_tree_as_empty	       527	revision.c	FUNCTION_21	IF_1	IF_3	CALL_2
0x144b	            0x85c0	                           test eax, eax	       527	revision.c	FUNCTION_21	IF_1	IF_3	CALL_2
0x144d	            0x7430	                            je 0x40014bf	       527	revision.c	FUNCTION_21	IF_1	IF_3	CALL_2
0x144f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       528	revision.c	FUNCTION_21	IF_1	IF_3
0x1453	            0x8b00	                    mov eax, dword [rax]	       528	revision.c	FUNCTION_21	IF_1	IF_3
0x1455	          0xc1e804	                              shr eax, 4	       528	revision.c	FUNCTION_21	IF_1	IF_3
0x1458	      0x25ffffff07	                      and eax, 0x7ffffff	       528	revision.c	FUNCTION_21	IF_1	IF_3
0x145d	          0x83c804	                               or eax, 4	       528	revision.c	FUNCTION_21	IF_1	IF_3
0x1460	            0x89c2	                            mov edx, eax	       528	revision.c	FUNCTION_21	IF_1	IF_3
0x1462	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       528	revision.c	FUNCTION_21	IF_1	IF_3
0x1466	    0x81e2ffffff07	                      and edx, 0x7ffffff	       528	revision.c	FUNCTION_21	IF_1	IF_3
0x146c	            0x89d1	                            mov ecx, edx	       528	revision.c	FUNCTION_21	IF_1	IF_3
0x146e	          0xc1e104	                              shl ecx, 4	       528	revision.c	FUNCTION_21	IF_1	IF_3
0x1471	            0x8b10	                    mov edx, dword [rax]	       528	revision.c	FUNCTION_21	IF_1	IF_3
0x1473	    0x81e20f000080	                     and edx, 0x8000000f	       528	revision.c	FUNCTION_21	IF_1	IF_3
0x1479	             0x9ca	                             or edx, ecx	       528	revision.c	FUNCTION_21	IF_1	IF_3
0x147b	            0x8910	                    mov dword [rax], edx	       528	revision.c	FUNCTION_21	IF_1	IF_3
0x147d	            0xeb30	                           jmp 0x40014ef	       528	revision.c	FUNCTION_21	IF_1	IF_3
0x147f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       530	revision.c	FUNCTION_21	IF_1	ELSE_1
0x1483	            0x8b00	                    mov eax, dword [rax]	       530	revision.c	FUNCTION_21	IF_1	ELSE_1
0x1485	          0xc1e804	                              shr eax, 4	       530	revision.c	FUNCTION_21	IF_1	ELSE_1
0x1488	      0x25ffffff07	                      and eax, 0x7ffffff	       530	revision.c	FUNCTION_21	IF_1	ELSE_1
0x148d	      0x25fbffff07	                      and eax, 0x7fffffb	       530	revision.c	FUNCTION_21	IF_1	ELSE_1
0x1492	            0x89c2	                            mov edx, eax	       530	revision.c	FUNCTION_21	IF_1	ELSE_1
0x1494	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       530	revision.c	FUNCTION_21	IF_1	ELSE_1
0x1498	    0x81e2ffffff07	                      and edx, 0x7ffffff	       530	revision.c	FUNCTION_21	IF_1	ELSE_1
0x149e	            0x89d1	                            mov ecx, edx	       530	revision.c	FUNCTION_21	IF_1	ELSE_1
0x14a0	          0xc1e104	                              shl ecx, 4	       530	revision.c	FUNCTION_21	IF_1	ELSE_1
0x14a3	            0x8b10	                    mov edx, dword [rax]	       530	revision.c	FUNCTION_21	IF_1	ELSE_1
0x14a5	    0x81e20f000080	                     and edx, 0x8000000f	       530	revision.c	FUNCTION_21	IF_1	ELSE_1
0x14ab	             0x9ca	                             or edx, ecx	       530	revision.c	FUNCTION_21	IF_1	ELSE_1
0x14ad	            0x8910	                    mov dword [rax], edx	       530	revision.c	FUNCTION_21	IF_1	ELSE_1
0x14af	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       531	revision.c	FUNCTION_21	IF_1
0x14b2	      0xe976010000	                           jmp 0x400166d	       531	revision.c	FUNCTION_21	IF_1
0x14b7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       534	revision.c	FUNCTION_21	CALL_3
0x14bb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       534	revision.c	FUNCTION_21	CALL_3
0x14bf	    0x4881c2300800	                          add rdx, 0x830	       534	revision.c	FUNCTION_21	CALL_3
0x14c6	          0x4889c6	                            mov rsi, rax	       534	revision.c	FUNCTION_21	CALL_3
0x14c9	          0x4889d7	                            mov rdi, rdx	       534	revision.c	FUNCTION_21	CALL_3
0x14cc	      0xe800000000	                          call 0x4001511	       534	revision.c	FUNCTION_21	CALL_3
0x14d1	        0x488945f8	                mov qword [rbp - 8], rax	       534	revision.c	FUNCTION_21	CALL_3
0x14d5	      0x48837df800	                  cmp qword [rbp - 8], 0	       535	revision.c	FUNCTION_21	IF_4
0x14da	            0x740b	                            je 0x4001527	       535	revision.c	FUNCTION_21	IF_4
0x14dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       535	revision.c	FUNCTION_21	IF_4
0x14e0	            0x8b00	                    mov eax, dword [rax]	       535	revision.c	FUNCTION_21	IF_4
0x14e2	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       535	revision.c	FUNCTION_21	IF_4
0x14e5	            0x7714	                            ja 0x400153b	       535	revision.c	FUNCTION_21	IF_4
0x14e7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       536	revision.c	FUNCTION_21	CALL_4
0x14ea	            0x89c6	                            mov esi, eax	       536	revision.c	FUNCTION_21	CALL_4
0x14ec	      0xbf00000000	                              mov edi, 0	       536	revision.c	FUNCTION_21	CALL_4
0x14f1	      0xb800000000	                              mov eax, 0	       536	revision.c	FUNCTION_21	CALL_4
0x14f6	      0xe800000000	                          call 0x400153b	       536	revision.c	FUNCTION_21	CALL_4
0x14fb	        0x488b55f8	                mov rdx, qword [rbp - 8]	       538	revision.c	FUNCTION_21
0x14ff	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       538	revision.c	FUNCTION_21
0x1502	       0xfb6440204	        movzx eax, byte [rdx + rax + 4] 	       538	revision.c	FUNCTION_21
0x1507	           0xfb6c0	                           movzx eax, al	       538	revision.c	FUNCTION_21
0x150a	          0x8945f4	              mov dword [rbp - 0xc], eax	       538	revision.c	FUNCTION_21
0x150d	        0x488b45f8	                mov rax, qword [rbp - 8]	       541	revision.c	FUNCTION_21
0x1511	            0x8b00	                    mov eax, dword [rax]	       541	revision.c	FUNCTION_21
0x1513	          0x2b45dc	             sub eax, dword [rbp - 0x24]	       541	revision.c	FUNCTION_21
0x1516	          0x83e801	                              sub eax, 1	       541	revision.c	FUNCTION_21
0x1519	            0x89c6	                            mov esi, eax	       539	revision.c	FUNCTION_21	CALL_5
0x151b	        0x488b45f8	                mov rax, qword [rbp - 8]	       540	revision.c	FUNCTION_21
0x151f	        0x488d5004	                      lea rdx, [rax + 4]	       540	revision.c	FUNCTION_21
0x1523	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       540	revision.c	FUNCTION_21
0x1526	        0x4883c001	                              add rax, 1	       540	revision.c	FUNCTION_21
0x152a	        0x488d0c02	                    lea rcx, [rdx + rax]	       539	revision.c	FUNCTION_21	CALL_5
0x152e	        0x488b45f8	                mov rax, qword [rbp - 8]	       539	revision.c	FUNCTION_21	CALL_5
0x1532	        0x488d5004	                      lea rdx, [rax + 4]	       539	revision.c	FUNCTION_21	CALL_5
0x1536	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       539	revision.c	FUNCTION_21	CALL_5
0x1539	          0x4801d0	                            add rax, rdx	       539	revision.c	FUNCTION_21	CALL_5
0x153c	          0x4889f2	                            mov rdx, rsi	       539	revision.c	FUNCTION_21	CALL_5
0x153f	          0x4889ce	                            mov rsi, rcx	       539	revision.c	FUNCTION_21	CALL_5
0x1542	          0x4889c7	                            mov rdi, rax	       539	revision.c	FUNCTION_21	CALL_5
0x1545	      0xe800000000	                          call 0x400158a	       539	revision.c	FUNCTION_21	CALL_5
0x154a	        0x488b45f8	                mov rax, qword [rbp - 8]	       548	revision.c	FUNCTION_21	IF_5
0x154e	            0x8b00	                    mov eax, dword [rax]	       548	revision.c	FUNCTION_21	IF_5
0x1550	          0x8d50ff	                      lea edx, [rax - 1]	       548	revision.c	FUNCTION_21	IF_5
0x1553	        0x488b45f8	                mov rax, qword [rbp - 8]	       548	revision.c	FUNCTION_21	IF_5
0x1557	            0x8910	                    mov dword [rax], edx	       548	revision.c	FUNCTION_21	IF_5
0x1559	        0x488b45f8	                mov rax, qword [rbp - 8]	       548	revision.c	FUNCTION_21	IF_5
0x155d	            0x8b00	                    mov eax, dword [rax]	       548	revision.c	FUNCTION_21	IF_5
0x155f	          0x83f801	                              cmp eax, 1	       548	revision.c	FUNCTION_21	IF_5
0x1562	     0xf85c2000000	                           jne 0x400166a	       548	revision.c	FUNCTION_21	IF_5
0x1568	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       549	revision.c	FUNCTION_21	IF_5	IF_6
0x156c	        0x488b4030	            mov rax, qword [rax + 0x30] 	       549	revision.c	FUNCTION_21	IF_5	IF_6
0x1570	        0x488b4008	                mov rax, qword [rax + 8]	       549	revision.c	FUNCTION_21	IF_5	IF_6
0x1574	          0x4885c0	                           test rax, rax	       549	revision.c	FUNCTION_21	IF_5	IF_6
0x1577	            0x740f	                            je 0x40015c8	       549	revision.c	FUNCTION_21	IF_5	IF_6
0x1579	      0xbf00000000	                              mov edi, 0	       550	revision.c	FUNCTION_21	IF_5	CALL_6
0x157e	      0xb800000000	                              mov eax, 0	       550	revision.c	FUNCTION_21	IF_5	CALL_6
0x1583	      0xe800000000	                          call 0x40015c8	       550	revision.c	FUNCTION_21	IF_5	CALL_6
0x1588	        0x488b45f8	                mov rax, qword [rbp - 8]	       551	revision.c	FUNCTION_21	IF_5	IF_7
0x158c	         0xfb64004	               movzx eax, byte [rax + 4]	       551	revision.c	FUNCTION_21	IF_5	IF_7
0x1590	            0x84c0	                             test al, al	       551	revision.c	FUNCTION_21	IF_5	IF_7
0x1592	            0x743f	                            je 0x4001613	       551	revision.c	FUNCTION_21	IF_5	IF_7
0x1594	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       551	revision.c	FUNCTION_21	IF_5	IF_7
0x1598	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       551	revision.c	FUNCTION_21	IF_5	IF_7
0x159c	          0x83e004	                              and eax, 4	       551	revision.c	FUNCTION_21	IF_5	IF_7
0x159f	            0x84c0	                             test al, al	       551	revision.c	FUNCTION_21	IF_5	IF_7
0x15a1	            0x7430	                            je 0x4001613	       551	revision.c	FUNCTION_21	IF_5	IF_7
0x15a3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       552	revision.c	FUNCTION_21	IF_5	IF_7
0x15a7	            0x8b00	                    mov eax, dword [rax]	       552	revision.c	FUNCTION_21	IF_5	IF_7
0x15a9	          0xc1e804	                              shr eax, 4	       552	revision.c	FUNCTION_21	IF_5	IF_7
0x15ac	      0x25ffffff07	                      and eax, 0x7ffffff	       552	revision.c	FUNCTION_21	IF_5	IF_7
0x15b1	          0x83c804	                               or eax, 4	       552	revision.c	FUNCTION_21	IF_5	IF_7
0x15b4	            0x89c2	                            mov edx, eax	       552	revision.c	FUNCTION_21	IF_5	IF_7
0x15b6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       552	revision.c	FUNCTION_21	IF_5	IF_7
0x15ba	    0x81e2ffffff07	                      and edx, 0x7ffffff	       552	revision.c	FUNCTION_21	IF_5	IF_7
0x15c0	            0x89d1	                            mov ecx, edx	       552	revision.c	FUNCTION_21	IF_5	IF_7
0x15c2	          0xc1e104	                              shl ecx, 4	       552	revision.c	FUNCTION_21	IF_5	IF_7
0x15c5	            0x8b10	                    mov edx, dword [rax]	       552	revision.c	FUNCTION_21	IF_5	IF_7
0x15c7	    0x81e20f000080	                     and edx, 0x8000000f	       552	revision.c	FUNCTION_21	IF_5	IF_7
0x15cd	             0x9ca	                             or edx, ecx	       552	revision.c	FUNCTION_21	IF_5	IF_7
0x15cf	            0x8910	                    mov dword [rax], edx	       552	revision.c	FUNCTION_21	IF_5	IF_7
0x15d1	            0xeb30	                           jmp 0x4001643	       552	revision.c	FUNCTION_21	IF_5	IF_7
0x15d3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       554	revision.c	FUNCTION_21	IF_5	ELSE_2
0x15d7	            0x8b00	                    mov eax, dword [rax]	       554	revision.c	FUNCTION_21	IF_5	ELSE_2
0x15d9	          0xc1e804	                              shr eax, 4	       554	revision.c	FUNCTION_21	IF_5	ELSE_2
0x15dc	      0x25ffffff07	                      and eax, 0x7ffffff	       554	revision.c	FUNCTION_21	IF_5	ELSE_2
0x15e1	      0x25fbffff07	                      and eax, 0x7fffffb	       554	revision.c	FUNCTION_21	IF_5	ELSE_2
0x15e6	            0x89c2	                            mov edx, eax	       554	revision.c	FUNCTION_21	IF_5	ELSE_2
0x15e8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       554	revision.c	FUNCTION_21	IF_5	ELSE_2
0x15ec	    0x81e2ffffff07	                      and edx, 0x7ffffff	       554	revision.c	FUNCTION_21	IF_5	ELSE_2
0x15f2	            0x89d1	                            mov ecx, edx	       554	revision.c	FUNCTION_21	IF_5	ELSE_2
0x15f4	          0xc1e104	                              shl ecx, 4	       554	revision.c	FUNCTION_21	IF_5	ELSE_2
0x15f7	            0x8b10	                    mov edx, dword [rax]	       554	revision.c	FUNCTION_21	IF_5	ELSE_2
0x15f9	    0x81e20f000080	                     and edx, 0x8000000f	       554	revision.c	FUNCTION_21	IF_5	ELSE_2
0x15ff	             0x9ca	                             or edx, ecx	       554	revision.c	FUNCTION_21	IF_5	ELSE_2
0x1601	            0x8910	                    mov dword [rax], edx	       554	revision.c	FUNCTION_21	IF_5	ELSE_2
0x1603	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       555	revision.c	FUNCTION_21	IF_5	CALL_8
0x1607	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       555	revision.c	FUNCTION_21	IF_5	CALL_8
0x160b	    0x488d8a300800	                  lea rcx, [rdx + 0x830]	       555	revision.c	FUNCTION_21	IF_5	CALL_8
0x1612	      0xba00000000	                              mov edx, 0	       555	revision.c	FUNCTION_21	IF_5	CALL_8
0x1617	          0x4889c6	                            mov rsi, rax	       555	revision.c	FUNCTION_21	IF_5	CALL_8
0x161a	          0x4889cf	                            mov rdi, rcx	       555	revision.c	FUNCTION_21	IF_5	CALL_8
0x161d	      0xe800000000	                          call 0x4001662	       555	revision.c	FUNCTION_21	IF_5	CALL_8
0x1622	          0x4889c7	                            mov rdi, rax	       555	revision.c	FUNCTION_21	IF_5	CALL_8
0x1625	      0xe800000000	                          call 0x400166a	       555	revision.c	FUNCTION_21	IF_5	CALL_8
0x162a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       558	revision.c	FUNCTION_21
0x162d	              0xc9	                                   leave	       559	revision.c	FUNCTION_21
0x162e	              0xc3	                                     ret	       559	revision.c	FUNCTION_21
init_all_refs_cb	FOR,0:functions,0:WHILE,0:CALL,0:IF,0:ELSE,0:DO,0:SWITCH,0	18
0x2e26	              0x55	                                push rbp	      1186	revision.c	FUNCTION_37
0x2e27	          0x4889e5	                            mov rbp, rsp	      1186	revision.c	FUNCTION_37
0x2e2a	        0x48897df8	                mov qword [rbp - 8], rdi	      1186	revision.c	FUNCTION_37
0x2e2e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1186	revision.c	FUNCTION_37
0x2e32	          0x8955ec	             mov dword [rbp - 0x14], edx	      1186	revision.c	FUNCTION_37
0x2e35	        0x488b45f8	                mov rax, qword [rbp - 8]	      1187	revision.c	FUNCTION_37
0x2e39	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1187	revision.c	FUNCTION_37
0x2e3d	        0x48895008	                mov qword [rax + 8], rdx	      1187	revision.c	FUNCTION_37
0x2e41	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1188	revision.c	FUNCTION_37
0x2e44	        0x488b45f8	                mov rax, qword [rbp - 8]	      1188	revision.c	FUNCTION_37
0x2e48	            0x8910	                    mov dword [rax], edx	      1188	revision.c	FUNCTION_37
0x2e4a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1189	revision.c	FUNCTION_37
0x2e4e	    0xc74068010000	               mov dword [rax + 0x68], 1	      1189	revision.c	FUNCTION_37
0x2e55	        0x488b45f8	                mov rax, qword [rbp - 8]	      1190	revision.c	FUNCTION_37
0x2e59	    0x48c740180000	               mov qword [rax + 0x18], 0	      1190	revision.c	FUNCTION_37
0x2e61	              0x90	                                     nop	      1191	revision.c	FUNCTION_37
0x2e62	              0x5d	                                 pop rbp	      1191	revision.c	FUNCTION_37
0x2e63	              0xc3	                                     ret	      1191	revision.c	FUNCTION_37
commit_match	FOR,0:functions,0:WHILE,0:CALL,16:IF,8:ELSE,1:DO,0:SWITCH,0	150
0x86e5	              0x55	                                push rbp	      3006	revision.c	FUNCTION_86
0x86e6	          0x4889e5	                            mov rbp, rsp	      3006	revision.c	FUNCTION_86
0x86e9	        0x4883ec50	                           sub rsp, 0x50	      3006	revision.c	FUNCTION_86
0x86ed	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3006	revision.c	FUNCTION_86
0x86f1	        0x488975b0	             mov qword [rbp - 0x50], rsi	      3006	revision.c	FUNCTION_86
0x86f5	    0x64488b042528	                mov rax, qword fs:[0x28]	      3006	revision.c	FUNCTION_86
0x86fe	        0x488945f8	                mov qword [rbp - 8], rax	      3006	revision.c	FUNCTION_86
0x8702	            0x31c0	                            xor eax, eax	      3006	revision.c	FUNCTION_86
0x8704	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3010	revision.c	FUNCTION_86
0x870c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      3010	revision.c	FUNCTION_86
0x8714	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      3010	revision.c	FUNCTION_86
0x871c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3012	revision.c	FUNCTION_86	IF_1
0x8720	    0x488b80500100	           mov rax, qword [rax + 0x150] 	      3012	revision.c	FUNCTION_86	IF_1
0x8727	          0x4885c0	                           test rax, rax	      3012	revision.c	FUNCTION_86	IF_1
0x872a	            0x751a	                           jne 0x4008786	      3012	revision.c	FUNCTION_86	IF_1
0x872c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3012	revision.c	FUNCTION_86	IF_1
0x8730	    0x488b80600100	           mov rax, qword [rax + 0x160] 	      3012	revision.c	FUNCTION_86	IF_1
0x8737	          0x4885c0	                           test rax, rax	      3012	revision.c	FUNCTION_86	IF_1
0x873a	            0x750a	                           jne 0x4008786	      3012	revision.c	FUNCTION_86	IF_1
0x873c	      0xb801000000	                              mov eax, 1	      3013	revision.c	FUNCTION_86	IF_1
0x8741	      0xe9d9010000	                           jmp 0x400895f	      3013	revision.c	FUNCTION_86	IF_1
0x8746	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3016	revision.c	FUNCTION_86	IF_2
0x874a	    0x8b8000020000	           mov eax, dword [rax + 0x200] 	      3016	revision.c	FUNCTION_86	IF_2
0x8750	            0x85c0	                           test eax, eax	      3016	revision.c	FUNCTION_86	IF_2
0x8752	            0x743c	                            je 0x40087d0	      3016	revision.c	FUNCTION_86	IF_2
0x8754	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3017	revision.c	FUNCTION_86	IF_2	CALL_1
0x8758	      0xbe00000000	                              mov esi, 0	      3017	revision.c	FUNCTION_86	IF_2	CALL_1
0x875d	          0x4889c7	                            mov rdi, rax	      3017	revision.c	FUNCTION_86	IF_2	CALL_1
0x8760	      0xe82f7cffff	                  call sym.strbuf_addstr	      3017	revision.c	FUNCTION_86	IF_2	CALL_1
0x8765	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3018	revision.c	FUNCTION_86	IF_2	CALL_2
0x8769	    0x488b90f80700	           mov rdx, qword [rax + 0x7f8] 	      3018	revision.c	FUNCTION_86	IF_2	CALL_2
0x8770	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3018	revision.c	FUNCTION_86	IF_2	CALL_2
0x8774	          0x4889d6	                            mov rsi, rdx	      3018	revision.c	FUNCTION_86	IF_2	CALL_2
0x8777	          0x4889c7	                            mov rdi, rax	      3018	revision.c	FUNCTION_86	IF_2	CALL_2
0x877a	      0xe800000000	                          call 0x40087bf	      3018	revision.c	FUNCTION_86	IF_2	CALL_2
0x877f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3019	revision.c	FUNCTION_86	IF_2	CALL_3
0x8783	      0xbe0a000000	                            mov esi, 0xa	      3019	revision.c	FUNCTION_86	IF_2	CALL_3
0x8788	          0x4889c7	                            mov rdi, rax	      3019	revision.c	FUNCTION_86	IF_2	CALL_3
0x878b	      0xe8967bffff	                   call sym.strbuf_addch	      3019	revision.c	FUNCTION_86	IF_2	CALL_3
0x8790	      0xe800000000	                          call 0x40087d5	      3029	revision.c	FUNCTION_86	CALL_4
0x8795	        0x488945d0	             mov qword [rbp - 0x30], rax	      3029	revision.c	FUNCTION_86	CALL_4
0x8799	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3030	revision.c	FUNCTION_86	CALL_5
0x879d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3030	revision.c	FUNCTION_86	CALL_5
0x87a1	      0xbe00000000	                              mov esi, 0	      3030	revision.c	FUNCTION_86	CALL_5
0x87a6	          0x4889c7	                            mov rdi, rax	      3030	revision.c	FUNCTION_86	CALL_5
0x87a9	      0xe800000000	                          call 0x40087ee	      3030	revision.c	FUNCTION_86	CALL_5
0x87ae	        0x488945d8	             mov qword [rbp - 0x28], rax	      3030	revision.c	FUNCTION_86	CALL_5
0x87b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3033	revision.c	FUNCTION_86	IF_3
0x87b6	          0x4885c0	                           test rax, rax	      3033	revision.c	FUNCTION_86	IF_3
0x87b9	            0x7413	                            je 0x400880e	      3033	revision.c	FUNCTION_86	IF_3
0x87bb	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3034	revision.c	FUNCTION_86	CALL_6
0x87bf	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3034	revision.c	FUNCTION_86	CALL_6
0x87c3	          0x4889d6	                            mov rsi, rdx	      3034	revision.c	FUNCTION_86	CALL_6
0x87c6	          0x4889c7	                            mov rdi, rax	      3034	revision.c	FUNCTION_86	CALL_6
0x87c9	      0xe8c67bffff	                  call sym.strbuf_addstr	      3034	revision.c	FUNCTION_86	CALL_6
0x87ce	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3036	revision.c	FUNCTION_86	IF_4
0x87d2	    0x488b80600100	           mov rax, qword [rax + 0x160] 	      3036	revision.c	FUNCTION_86	IF_4
0x87d9	          0x4885c0	                           test rax, rax	      3036	revision.c	FUNCTION_86	IF_4
0x87dc	            0x7464	                            je 0x4008882	      3036	revision.c	FUNCTION_86	IF_4
0x87de	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3036	revision.c	FUNCTION_86	IF_4
0x87e2	    0x488b80480100	           mov rax, qword [rax + 0x148] 	      3036	revision.c	FUNCTION_86	IF_4
0x87e9	          0x4885c0	                           test rax, rax	      3036	revision.c	FUNCTION_86	IF_4
0x87ec	            0x7454	                            je 0x4008882	      3036	revision.c	FUNCTION_86	IF_4
0x87ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3037	revision.c	FUNCTION_86	IF_4	IF_5
0x87f2	          0x4885c0	                           test rax, rax	      3037	revision.c	FUNCTION_86	IF_4	IF_5
0x87f5	            0x7513	                           jne 0x400884a	      3037	revision.c	FUNCTION_86	IF_4	IF_5
0x87f7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3038	revision.c	FUNCTION_86	IF_4	CALL_7
0x87fb	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3038	revision.c	FUNCTION_86	IF_4	CALL_7
0x87ff	          0x4889d6	                            mov rsi, rdx	      3038	revision.c	FUNCTION_86	IF_4	CALL_7
0x8802	          0x4889c7	                            mov rdi, rax	      3038	revision.c	FUNCTION_86	IF_4	CALL_7
0x8805	      0xe88a7bffff	                  call sym.strbuf_addstr	      3038	revision.c	FUNCTION_86	IF_4	CALL_7
0x880a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3040	revision.c	FUNCTION_86	IF_4	CALL_8
0x880e	    0x488b90480100	           mov rdx, qword [rax + 0x148] 	      3040	revision.c	FUNCTION_86	IF_4	CALL_8
0x8815	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3040	revision.c	FUNCTION_86	IF_4	CALL_8
0x8819	      0xbe00000000	                              mov esi, 0	      3040	revision.c	FUNCTION_86	IF_4	CALL_8
0x881e	          0x4889c7	                            mov rdi, rax	      3040	revision.c	FUNCTION_86	IF_4	CALL_8
0x8821	      0xe884fcffff	          call sym.commit_rewrite_person	      3040	revision.c	FUNCTION_86	IF_4	CALL_8
0x8826	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3041	revision.c	FUNCTION_86	IF_4	CALL_9
0x882a	    0x488b90480100	           mov rdx, qword [rax + 0x148] 	      3041	revision.c	FUNCTION_86	IF_4	CALL_9
0x8831	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3041	revision.c	FUNCTION_86	IF_4	CALL_9
0x8835	      0xbe00000000	                              mov esi, 0	      3041	revision.c	FUNCTION_86	IF_4	CALL_9
0x883a	          0x4889c7	                            mov rdi, rax	      3041	revision.c	FUNCTION_86	IF_4	CALL_9
0x883d	      0xe868fcffff	          call sym.commit_rewrite_person	      3041	revision.c	FUNCTION_86	IF_4	CALL_9
0x8842	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3045	revision.c	FUNCTION_86	IF_6
0x8846	         0xfb6407a	           movzx eax, byte [rax + 0x7a] 	      3045	revision.c	FUNCTION_86	IF_6
0x884a	          0x83e010	                           and eax, 0x10	      3045	revision.c	FUNCTION_86	IF_6
0x884d	            0x84c0	                             test al, al	      3045	revision.c	FUNCTION_86	IF_6
0x884f	            0x7439	                            je 0x40088ca	      3045	revision.c	FUNCTION_86	IF_6
0x8851	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3046	revision.c	FUNCTION_86	IF_6	IF_7
0x8855	          0x4885c0	                           test rax, rax	      3046	revision.c	FUNCTION_86	IF_6	IF_7
0x8858	            0x7513	                           jne 0x40088ad	      3046	revision.c	FUNCTION_86	IF_6	IF_7
0x885a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3047	revision.c	FUNCTION_86	IF_6	CALL_10
0x885e	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3047	revision.c	FUNCTION_86	IF_6	CALL_10
0x8862	          0x4889d6	                            mov rsi, rdx	      3047	revision.c	FUNCTION_86	IF_6	CALL_10
0x8865	          0x4889c7	                            mov rdi, rax	      3047	revision.c	FUNCTION_86	IF_6	CALL_10
0x8868	      0xe8277bffff	                  call sym.strbuf_addstr	      3047	revision.c	FUNCTION_86	IF_6	CALL_10
0x886d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3048	revision.c	FUNCTION_86	IF_6	CALL_11
0x8871	        0x488d7804	                      lea rdi, [rax + 4]	      3048	revision.c	FUNCTION_86	IF_6	CALL_11
0x8875	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3048	revision.c	FUNCTION_86	IF_6	CALL_11
0x8879	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3048	revision.c	FUNCTION_86	IF_6	CALL_11
0x887d	      0xb901000000	                              mov ecx, 1	      3048	revision.c	FUNCTION_86	IF_6	CALL_11
0x8882	          0x4889c6	                            mov rsi, rax	      3048	revision.c	FUNCTION_86	IF_6	CALL_11
0x8885	      0xe800000000	                          call 0x40088ca	      3048	revision.c	FUNCTION_86	IF_6	CALL_11
0x888a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3059	revision.c	FUNCTION_86	IF_8
0x888e	          0x4885c0	                           test rax, rax	      3059	revision.c	FUNCTION_86	IF_8
0x8891	            0x7423	                            je 0x40088f6	      3059	revision.c	FUNCTION_86	IF_8
0x8893	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3060	revision.c	FUNCTION_86	CALL_12
0x8897	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3060	revision.c	FUNCTION_86	CALL_12
0x889b	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      3060	revision.c	FUNCTION_86	CALL_12
0x889f	    0x4881c1500100	                          add rcx, 0x150	      3060	revision.c	FUNCTION_86	CALL_12
0x88a6	          0x4889c6	                            mov rsi, rax	      3060	revision.c	FUNCTION_86	CALL_12
0x88a9	          0x4889cf	                            mov rdi, rcx	      3060	revision.c	FUNCTION_86	CALL_12
0x88ac	      0xe800000000	                          call 0x40088f1	      3060	revision.c	FUNCTION_86	CALL_12
0x88b1	          0x8945cc	             mov dword [rbp - 0x34], eax	      3060	revision.c	FUNCTION_86	CALL_12
0x88b4	            0xeb2c	                           jmp 0x4008922	      3060	revision.c	FUNCTION_86	CALL_12
0x88b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3062	revision.c	FUNCTION_86	ELSE_1	CALL_13
0x88ba	          0x4889c7	                            mov rdi, rax	      3062	revision.c	FUNCTION_86	ELSE_1	CALL_13
0x88bd	      0xe800000000	                          call 0x4008902	      3062	revision.c	FUNCTION_86	ELSE_1	CALL_13
0x88c2	          0x4889c2	                            mov rdx, rax	      3062	revision.c	FUNCTION_86	ELSE_1	CALL_13
0x88c5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3062	revision.c	FUNCTION_86	ELSE_1	CALL_13
0x88c9	    0x488d88500100	                  lea rcx, [rax + 0x150]	      3062	revision.c	FUNCTION_86	ELSE_1	CALL_13
0x88d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3062	revision.c	FUNCTION_86	ELSE_1	CALL_13
0x88d4	          0x4889c6	                            mov rsi, rax	      3062	revision.c	FUNCTION_86	ELSE_1	CALL_13
0x88d7	          0x4889cf	                            mov rdi, rcx	      3062	revision.c	FUNCTION_86	ELSE_1	CALL_13
0x88da	      0xe800000000	                          call 0x400891f	      3062	revision.c	FUNCTION_86	ELSE_1	CALL_13
0x88df	          0x8945cc	             mov dword [rbp - 0x34], eax	      3062	revision.c	FUNCTION_86	ELSE_1	CALL_13
0x88e2	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3064	revision.c	FUNCTION_86	CALL_15
0x88e6	          0x4889c7	                            mov rdi, rax	      3064	revision.c	FUNCTION_86	CALL_15
0x88e9	      0xe800000000	                          call 0x400892e	      3064	revision.c	FUNCTION_86	CALL_15
0x88ee	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3065	revision.c	FUNCTION_86	CALL_16
0x88f2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3065	revision.c	FUNCTION_86	CALL_16
0x88f6	          0x4889d6	                            mov rsi, rdx	      3065	revision.c	FUNCTION_86	CALL_16
0x88f9	          0x4889c7	                            mov rdi, rax	      3065	revision.c	FUNCTION_86	CALL_16
0x88fc	      0xe800000000	                          call 0x4008941	      3065	revision.c	FUNCTION_86	CALL_16
0x8901	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3066	revision.c	FUNCTION_86
0x8905	    0x8b80b8040000	           mov eax, dword [rax + 0x4b8] 	      3066	revision.c	FUNCTION_86
0x890b	            0x85c0	                           test eax, eax	      3066	revision.c	FUNCTION_86
0x890d	            0x740c	                            je 0x400895b	      3066	revision.c	FUNCTION_86
0x890f	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      3066	revision.c	FUNCTION_86
0x8913	           0xf94c0	                                 sete al	      3066	revision.c	FUNCTION_86
0x8916	           0xfb6c0	                           movzx eax, al	      3066	revision.c	FUNCTION_86
0x8919	            0xeb04	                           jmp 0x400895f	      3066	revision.c	FUNCTION_86
0x891b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      3066	revision.c	FUNCTION_86
0x891e	              0x90	                                     nop	      3066	revision.c	FUNCTION_86
0x891f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3067	revision.c	FUNCTION_86
0x8923	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3067	revision.c	FUNCTION_86
0x892c	            0x7405	                            je 0x4008973	      3067	revision.c	FUNCTION_86
0x892e	      0xe800000000	                          call 0x4008973	      3067	revision.c	FUNCTION_86
0x8933	              0xc9	                                   leave	      3067	revision.c	FUNCTION_86
0x8934	              0xc3	                                     ret	      3067	revision.c	FUNCTION_86
for_each_bad_bisect_ref	FOR,0:functions,0:WHILE,0:CALL,1:IF,0:ELSE,0:DO,0:SWITCH,0	14
0x64bc	              0x55	                                push rbp	      2151	revision.c	FUNCTION_65
0x64bd	          0x4889e5	                            mov rbp, rsp	      2151	revision.c	FUNCTION_65
0x64c0	        0x4883ec20	                           sub rsp, 0x20	      2151	revision.c	FUNCTION_65
0x64c4	        0x48897df8	                mov qword [rbp - 8], rdi	      2151	revision.c	FUNCTION_65
0x64c8	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2151	revision.c	FUNCTION_65
0x64cc	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2151	revision.c	FUNCTION_65
0x64d0	    0x488b0d000000	            mov rcx, qword [0x04006517] 	      2152	revision.c	FUNCTION_65	CALL_1
0x64d7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2152	revision.c	FUNCTION_65	CALL_1
0x64db	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2152	revision.c	FUNCTION_65	CALL_1
0x64df	        0x488b45f8	                mov rax, qword [rbp - 8]	      2152	revision.c	FUNCTION_65	CALL_1
0x64e3	          0x4889c7	                            mov rdi, rax	      2152	revision.c	FUNCTION_65	CALL_1
0x64e6	      0xe832ffffff	            call sym.for_each_bisect_ref	      2152	revision.c	FUNCTION_65	CALL_1
0x64eb	              0xc9	                                   leave	      2153	revision.c	FUNCTION_65
0x64ec	              0xc3	                                     ret	      2153	revision.c	FUNCTION_65
mark_blob_uninteresting	FOR,0:functions,0:WHILE,0:CALL,0:IF,2:ELSE,0:DO,0:SWITCH,0	32
0x638	              0x55	                                push rbp	        43	revision.c	FUNCTION_2
0x639	          0x4889e5	                            mov rbp, rsp	        43	revision.c	FUNCTION_2
0x63c	        0x48897df8	                mov qword [rbp - 8], rdi	        43	revision.c	FUNCTION_2
0x640	      0x48837df800	                  cmp qword [rbp - 8], 0	        44	revision.c	FUNCTION_2	IF_1
0x645	            0x7445	                            je 0x40006cc	        44	revision.c	FUNCTION_2	IF_1
0x647	        0x488b45f8	                mov rax, qword [rbp - 8]	        46	revision.c	FUNCTION_2	IF_2
0x64b	            0x8b00	                    mov eax, dword [rax]	        46	revision.c	FUNCTION_2	IF_2
0x64d	          0xc1e804	                              shr eax, 4	        46	revision.c	FUNCTION_2	IF_2
0x650	      0x25ffffff07	                      and eax, 0x7ffffff	        46	revision.c	FUNCTION_2	IF_2
0x655	          0x83e002	                              and eax, 2	        46	revision.c	FUNCTION_2	IF_2
0x658	            0x85c0	                           test eax, eax	        46	revision.c	FUNCTION_2	IF_2
0x65a	            0x7533	                           jne 0x40006cf	        46	revision.c	FUNCTION_2	IF_2
0x65c	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	revision.c	FUNCTION_2
0x660	            0x8b00	                    mov eax, dword [rax]	        48	revision.c	FUNCTION_2
0x662	          0xc1e804	                              shr eax, 4	        48	revision.c	FUNCTION_2
0x665	      0x25ffffff07	                      and eax, 0x7ffffff	        48	revision.c	FUNCTION_2
0x66a	          0x83c802	                               or eax, 2	        48	revision.c	FUNCTION_2
0x66d	            0x89c2	                            mov edx, eax	        48	revision.c	FUNCTION_2
0x66f	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	revision.c	FUNCTION_2
0x673	    0x81e2ffffff07	                      and edx, 0x7ffffff	        48	revision.c	FUNCTION_2
0x679	            0x89d1	                            mov ecx, edx	        48	revision.c	FUNCTION_2
0x67b	          0xc1e104	                              shl ecx, 4	        48	revision.c	FUNCTION_2
0x67e	            0x8b10	                    mov edx, dword [rax]	        48	revision.c	FUNCTION_2
0x680	    0x81e20f000080	                     and edx, 0x8000000f	        48	revision.c	FUNCTION_2
0x686	             0x9ca	                             or edx, ecx	        48	revision.c	FUNCTION_2
0x688	            0x8910	                    mov dword [rax], edx	        48	revision.c	FUNCTION_2
0x68a	            0xeb04	                           jmp 0x40006d0	        48	revision.c	FUNCTION_2
0x68c	              0x90	                                     nop	        45	revision.c	FUNCTION_2	IF_1
0x68d	            0xeb01	                           jmp 0x40006d0	        45	revision.c	FUNCTION_2	IF_1
0x68f	              0x90	                                     nop	        47	revision.c	FUNCTION_2	IF_2
0x690	              0x5d	                                 pop rbp	        49	revision.c	FUNCTION_2
0x691	              0xc3	                                     ret	        49	revision.c	FUNCTION_2
add_child	FOR,0:functions,0:WHILE,0:CALL,2:IF,0:ELSE,0:DO,0:SWITCH,0	26
0x75ea	              0x55	                                push rbp	      2487	revision.c	FUNCTION_70
0x75eb	          0x4889e5	                            mov rbp, rsp	      2487	revision.c	FUNCTION_70
0x75ee	        0x4883ec30	                           sub rsp, 0x30	      2487	revision.c	FUNCTION_70
0x75f2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2487	revision.c	FUNCTION_70
0x75f6	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2487	revision.c	FUNCTION_70
0x75fa	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2487	revision.c	FUNCTION_70
0x75fe	      0xbe10000000	                           mov esi, 0x10	      2488	revision.c	FUNCTION_70	CALL_1
0x7603	      0xbf01000000	                              mov edi, 1	      2488	revision.c	FUNCTION_70	CALL_1
0x7608	      0xe800000000	                          call 0x400764d	      2488	revision.c	FUNCTION_70	CALL_1
0x760d	        0x488945f8	                mov qword [rbp - 8], rax	      2488	revision.c	FUNCTION_70	CALL_1
0x7611	        0x488b45f8	                mov rax, qword [rbp - 8]	      2490	revision.c	FUNCTION_70
0x7615	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2490	revision.c	FUNCTION_70
0x7619	          0x488910	                    mov qword [rax], rdx	      2490	revision.c	FUNCTION_70
0x761c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2491	revision.c	FUNCTION_70	CALL_2
0x7620	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2491	revision.c	FUNCTION_70	CALL_2
0x7624	    0x488d8a000800	                  lea rcx, [rdx + 0x800]	      2491	revision.c	FUNCTION_70	CALL_2
0x762b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2491	revision.c	FUNCTION_70	CALL_2
0x762f	          0x4889c6	                            mov rsi, rax	      2491	revision.c	FUNCTION_70	CALL_2
0x7632	          0x4889cf	                            mov rdi, rcx	      2491	revision.c	FUNCTION_70	CALL_2
0x7635	      0xe800000000	                          call 0x400767a	      2491	revision.c	FUNCTION_70	CALL_2
0x763a	          0x4889c2	                            mov rdx, rax	      2491	revision.c	FUNCTION_70	CALL_2
0x763d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2491	revision.c	FUNCTION_70	CALL_2
0x7641	        0x48895008	                mov qword [rax + 8], rdx	      2491	revision.c	FUNCTION_70	CALL_2
0x7645	              0x90	                                     nop	      2492	revision.c	FUNCTION_70
0x7646	              0xc9	                                   leave	      2492	revision.c	FUNCTION_70
0x7647	              0xc3	                                     ret	      2492	revision.c	FUNCTION_70
st_mult	FOR,0:functions,0:WHILE,0:CALL,2:IF,1:ELSE,0:DO,0:SWITCH,0	22
0xa5	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_132
0xa6	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_132
0xa9	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_132
0xad	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_132
0xb1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_132
0xb5	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0xba	            0x7430	                            je 0x400012c	       795	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0xbc	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0xc3	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0xc8	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0xcc	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0xd0	            0x731a	                           jae 0x400012c	       795	git-compat-util.h	FUNCTION_132	IF_1	CALL_1
0xd2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_2
0xd6	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_2
0xda	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_2
0xdd	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_2
0xe2	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_2
0xe7	      0xe800000000	                          call 0x400012c	       796	git-compat-util.h	FUNCTION_132	IF_1	CALL_2
0xec	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_132
0xf0	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_132
0xf5	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_132
0xf6	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_132
strbuf_addstr	FOR,0:functions,0:WHILE,0:CALL,2:IF,0:ELSE,0:DO,0:SWITCH,0	17
0x394	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_107
0x395	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_107
0x398	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_107
0x39c	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_107
0x3a0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_107
0x3a4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_107	CALL_2
0x3a8	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_107	CALL_2
0x3ab	      0xe800000000	                          call 0x40003f0	       279	strbuf.h	FUNCTION_107	CALL_2
0x3b0	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_107	CALL_2
0x3b3	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_107	CALL_2
0x3b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_107	CALL_2
0x3bb	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_107	CALL_2
0x3be	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_107	CALL_2
0x3c1	      0xe800000000	                          call 0x4000406	       279	strbuf.h	FUNCTION_107	CALL_2
0x3c6	              0x90	                                     nop	       280	strbuf.h	FUNCTION_107
0x3c7	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_107
0x3c8	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_107
handle_revision_opt	FOR,0:functions,0:WHILE,0:CALL,174:IF,118:ELSE,102:DO,0:SWITCH,0	1832
0x47c0	              0x55	                                push rbp	      1751	revision.c	FUNCTION_62
0x47c1	          0x4889e5	                            mov rbp, rsp	      1751	revision.c	FUNCTION_62
0x47c4	        0x4883ec70	                           sub rsp, 0x70	      1751	revision.c	FUNCTION_62
0x47c8	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1751	revision.c	FUNCTION_62
0x47cc	          0x8975b4	             mov dword [rbp - 0x4c], esi	      1751	revision.c	FUNCTION_62
0x47cf	        0x488955a8	             mov qword [rbp - 0x58], rdx	      1751	revision.c	FUNCTION_62
0x47d3	        0x48894da0	             mov qword [rbp - 0x60], rcx	      1751	revision.c	FUNCTION_62
0x47d7	        0x4c894598	              mov qword [rbp - 0x68], r8	      1751	revision.c	FUNCTION_62
0x47db	    0x64488b042528	                mov rax, qword fs:[0x28]	      1751	revision.c	FUNCTION_62
0x47e4	        0x488945f8	                mov qword [rbp - 8], rax	      1751	revision.c	FUNCTION_62
0x47e8	            0x31c0	                            xor eax, eax	      1751	revision.c	FUNCTION_62
0x47ea	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1752	revision.c	FUNCTION_62
0x47ee	          0x488b00	                    mov rax, qword [rax]	      1752	revision.c	FUNCTION_62
0x47f1	        0x488945d0	             mov qword [rbp - 0x30], rax	      1752	revision.c	FUNCTION_62
0x47f5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1757	revision.c	FUNCTION_62	IF_1	CALL_2
0x47f9	      0xbe00000000	                              mov esi, 0	      1757	revision.c	FUNCTION_62	IF_1	CALL_2
0x47fe	          0x4889c7	                            mov rdi, rax	      1757	revision.c	FUNCTION_62	IF_1	CALL_2
0x4801	      0xe800000000	                          call 0x4004846	      1757	revision.c	FUNCTION_62	IF_1	CALL_2
0x4806	            0x85c0	                           test eax, eax	      1757	revision.c	FUNCTION_62	IF_1	CALL_2
0x4808	     0xf845b010000	                            je 0x40049a9	      1757	revision.c	FUNCTION_62	IF_1	CALL_2
0x480e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1757	revision.c	FUNCTION_62	IF_1	CALL_2
0x4812	      0xbe00000000	                              mov esi, 0	      1757	revision.c	FUNCTION_62	IF_1	CALL_2
0x4817	          0x4889c7	                            mov rdi, rax	      1757	revision.c	FUNCTION_62	IF_1	CALL_2
0x481a	      0xe800000000	                          call 0x400485f	      1757	revision.c	FUNCTION_62	IF_1	CALL_2
0x481f	            0x85c0	                           test eax, eax	      1757	revision.c	FUNCTION_62	IF_1	CALL_2
0x4821	     0xf8442010000	                            je 0x40049a9	      1757	revision.c	FUNCTION_62	IF_1	CALL_2
0x4827	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1758	revision.c	FUNCTION_62	IF_1	CALL_4
0x482b	      0xbe00000000	                              mov esi, 0	      1758	revision.c	FUNCTION_62	IF_1	CALL_4
0x4830	          0x4889c7	                            mov rdi, rax	      1758	revision.c	FUNCTION_62	IF_1	CALL_4
0x4833	      0xe800000000	                          call 0x4004878	      1758	revision.c	FUNCTION_62	IF_1	CALL_4
0x4838	            0x85c0	                           test eax, eax	      1757	revision.c	FUNCTION_62	IF_1	CALL_2
0x483a	     0xf8429010000	                            je 0x40049a9	      1757	revision.c	FUNCTION_62	IF_1	CALL_2
0x4840	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1758	revision.c	FUNCTION_62	IF_1	CALL_4
0x4844	      0xbe00000000	                              mov esi, 0	      1758	revision.c	FUNCTION_62	IF_1	CALL_4
0x4849	          0x4889c7	                            mov rdi, rax	      1758	revision.c	FUNCTION_62	IF_1	CALL_4
0x484c	      0xe800000000	                          call 0x4004891	      1758	revision.c	FUNCTION_62	IF_1	CALL_4
0x4851	            0x85c0	                           test eax, eax	      1758	revision.c	FUNCTION_62	IF_1	CALL_4
0x4853	     0xf8410010000	                            je 0x40049a9	      1758	revision.c	FUNCTION_62	IF_1	CALL_4
0x4859	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1759	revision.c	FUNCTION_62	IF_1	CALL_6
0x485d	      0xbe00000000	                              mov esi, 0	      1759	revision.c	FUNCTION_62	IF_1	CALL_6
0x4862	          0x4889c7	                            mov rdi, rax	      1759	revision.c	FUNCTION_62	IF_1	CALL_6
0x4865	      0xe800000000	                          call 0x40048aa	      1759	revision.c	FUNCTION_62	IF_1	CALL_6
0x486a	            0x85c0	                           test eax, eax	      1758	revision.c	FUNCTION_62	IF_1	CALL_4
0x486c	     0xf84f7000000	                            je 0x40049a9	      1758	revision.c	FUNCTION_62	IF_1	CALL_4
0x4872	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1759	revision.c	FUNCTION_62	IF_1	CALL_6
0x4876	      0xbe00000000	                              mov esi, 0	      1759	revision.c	FUNCTION_62	IF_1	CALL_6
0x487b	          0x4889c7	                            mov rdi, rax	      1759	revision.c	FUNCTION_62	IF_1	CALL_6
0x487e	      0xe800000000	                          call 0x40048c3	      1759	revision.c	FUNCTION_62	IF_1	CALL_6
0x4883	            0x85c0	                           test eax, eax	      1759	revision.c	FUNCTION_62	IF_1	CALL_6
0x4885	     0xf84de000000	                            je 0x40049a9	      1759	revision.c	FUNCTION_62	IF_1	CALL_6
0x488b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1760	revision.c	FUNCTION_62	IF_1	CALL_8
0x488f	      0xbe00000000	                              mov esi, 0	      1760	revision.c	FUNCTION_62	IF_1	CALL_8
0x4894	          0x4889c7	                            mov rdi, rax	      1760	revision.c	FUNCTION_62	IF_1	CALL_8
0x4897	      0xe800000000	                          call 0x40048dc	      1760	revision.c	FUNCTION_62	IF_1	CALL_8
0x489c	            0x85c0	                           test eax, eax	      1759	revision.c	FUNCTION_62	IF_1	CALL_6
0x489e	     0xf84c5000000	                            je 0x40049a9	      1759	revision.c	FUNCTION_62	IF_1	CALL_6
0x48a4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1760	revision.c	FUNCTION_62	IF_1	CALL_8
0x48a8	      0xbe00000000	                              mov esi, 0	      1760	revision.c	FUNCTION_62	IF_1	CALL_8
0x48ad	          0x4889c7	                            mov rdi, rax	      1760	revision.c	FUNCTION_62	IF_1	CALL_8
0x48b0	      0xe800000000	                          call 0x40048f5	      1760	revision.c	FUNCTION_62	IF_1	CALL_8
0x48b5	            0x85c0	                           test eax, eax	      1760	revision.c	FUNCTION_62	IF_1	CALL_8
0x48b7	     0xf84ac000000	                            je 0x40049a9	      1760	revision.c	FUNCTION_62	IF_1	CALL_8
0x48bd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1761	revision.c	FUNCTION_62	IF_1	CALL_10
0x48c1	      0xbe00000000	                              mov esi, 0	      1761	revision.c	FUNCTION_62	IF_1	CALL_10
0x48c6	          0x4889c7	                            mov rdi, rax	      1761	revision.c	FUNCTION_62	IF_1	CALL_10
0x48c9	      0xe800000000	                          call 0x400490e	      1761	revision.c	FUNCTION_62	IF_1	CALL_10
0x48ce	            0x85c0	                           test eax, eax	      1760	revision.c	FUNCTION_62	IF_1	CALL_8
0x48d0	     0xf8493000000	                            je 0x40049a9	      1760	revision.c	FUNCTION_62	IF_1	CALL_8
0x48d6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1761	revision.c	FUNCTION_62	IF_1	CALL_10
0x48da	      0xbe00000000	                              mov esi, 0	      1761	revision.c	FUNCTION_62	IF_1	CALL_10
0x48df	          0x4889c7	                            mov rdi, rax	      1761	revision.c	FUNCTION_62	IF_1	CALL_10
0x48e2	      0xe800000000	                          call 0x4004927	      1761	revision.c	FUNCTION_62	IF_1	CALL_10
0x48e7	            0x85c0	                           test eax, eax	      1761	revision.c	FUNCTION_62	IF_1	CALL_10
0x48e9	            0x757e	                           jne 0x40049a9	      1761	revision.c	FUNCTION_62	IF_1	CALL_10
0x48eb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1762	revision.c	FUNCTION_62	IF_1	CALL_11
0x48ef	      0xbe00000000	                              mov esi, 0	      1762	revision.c	FUNCTION_62	IF_1	CALL_11
0x48f4	          0x4889c7	                            mov rdi, rax	      1762	revision.c	FUNCTION_62	IF_1	CALL_11
0x48f7	      0xe800000000	                          call 0x400493c	      1762	revision.c	FUNCTION_62	IF_1	CALL_11
0x48fc	            0x85c0	                           test eax, eax	      1761	revision.c	FUNCTION_62	IF_1	CALL_10
0x48fe	            0x7469	                            je 0x40049a9	      1761	revision.c	FUNCTION_62	IF_1	CALL_10
0x4900	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1763	revision.c	FUNCTION_62	IF_1	CALL_12
0x4904	      0xbe00000000	                              mov esi, 0	      1763	revision.c	FUNCTION_62	IF_1	CALL_12
0x4909	          0x4889c7	                            mov rdi, rax	      1763	revision.c	FUNCTION_62	IF_1	CALL_12
0x490c	      0xe800000000	                          call 0x4004951	      1763	revision.c	FUNCTION_62	IF_1	CALL_12
0x4911	            0x85c0	                           test eax, eax	      1762	revision.c	FUNCTION_62	IF_1	CALL_11
0x4913	            0x7554	                           jne 0x40049a9	      1762	revision.c	FUNCTION_62	IF_1	CALL_11
0x4915	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1764	revision.c	FUNCTION_62	IF_1	CALL_14
0x4919	      0xbe00000000	                              mov esi, 0	      1764	revision.c	FUNCTION_62	IF_1	CALL_14
0x491e	          0x4889c7	                            mov rdi, rax	      1764	revision.c	FUNCTION_62	IF_1	CALL_14
0x4921	      0xe800000000	                          call 0x4004966	      1764	revision.c	FUNCTION_62	IF_1	CALL_14
0x4926	            0x85c0	                           test eax, eax	      1763	revision.c	FUNCTION_62	IF_1	CALL_12
0x4928	            0x753f	                           jne 0x40049a9	      1763	revision.c	FUNCTION_62	IF_1	CALL_12
0x492a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1764	revision.c	FUNCTION_62	IF_1	CALL_14
0x492e	      0xbe00000000	                              mov esi, 0	      1764	revision.c	FUNCTION_62	IF_1	CALL_14
0x4933	          0x4889c7	                            mov rdi, rax	      1764	revision.c	FUNCTION_62	IF_1	CALL_14
0x4936	      0xe800000000	                          call 0x400497b	      1764	revision.c	FUNCTION_62	IF_1	CALL_14
0x493b	            0x85c0	                           test eax, eax	      1764	revision.c	FUNCTION_62	IF_1	CALL_14
0x493d	            0x752a	                           jne 0x40049a9	      1764	revision.c	FUNCTION_62	IF_1	CALL_14
0x493f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1765	revision.c	FUNCTION_62	IF_1	CALL_16
0x4943	      0xbe00000000	                              mov esi, 0	      1765	revision.c	FUNCTION_62	IF_1	CALL_16
0x4948	          0x4889c7	                            mov rdi, rax	      1765	revision.c	FUNCTION_62	IF_1	CALL_16
0x494b	      0xe800000000	                          call 0x4004990	      1765	revision.c	FUNCTION_62	IF_1	CALL_16
0x4950	            0x85c0	                           test eax, eax	      1764	revision.c	FUNCTION_62	IF_1	CALL_14
0x4952	            0x7515	                           jne 0x40049a9	      1764	revision.c	FUNCTION_62	IF_1	CALL_14
0x4954	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1765	revision.c	FUNCTION_62	IF_1	CALL_16
0x4958	      0xbe00000000	                              mov esi, 0	      1765	revision.c	FUNCTION_62	IF_1	CALL_16
0x495d	          0x4889c7	                            mov rdi, rax	      1765	revision.c	FUNCTION_62	IF_1	CALL_16
0x4960	      0xe800000000	                          call 0x40049a5	      1765	revision.c	FUNCTION_62	IF_1	CALL_16
0x4965	            0x85c0	                           test eax, eax	      1765	revision.c	FUNCTION_62	IF_1	CALL_16
0x4967	            0x7431	                            je 0x40049da	      1765	revision.c	FUNCTION_62	IF_1	CALL_16
0x4969	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1767	revision.c	FUNCTION_62	IF_1
0x496d	            0x8b00	                    mov eax, dword [rax]	      1767	revision.c	FUNCTION_62	IF_1
0x496f	          0x8d4801	                      lea ecx, [rax + 1]	      1767	revision.c	FUNCTION_62	IF_1
0x4972	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1767	revision.c	FUNCTION_62	IF_1
0x4976	            0x890a	                    mov dword [rdx], ecx	      1767	revision.c	FUNCTION_62	IF_1
0x4978	            0x4898	                                    cdqe	      1767	revision.c	FUNCTION_62	IF_1
0x497a	    0x488d14c50000	                        lea rdx, [rax*8]	      1767	revision.c	FUNCTION_62	IF_1
0x4982	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1767	revision.c	FUNCTION_62	IF_1
0x4986	          0x4801c2	                            add rdx, rax	      1767	revision.c	FUNCTION_62	IF_1
0x4989	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1767	revision.c	FUNCTION_62	IF_1
0x498d	          0x488902	                    mov qword [rdx], rax	      1767	revision.c	FUNCTION_62	IF_1
0x4990	      0xb801000000	                              mov eax, 1	      1768	revision.c	FUNCTION_62	IF_1
0x4995	      0xe9ba190000	                           jmp 0x4006394	      1768	revision.c	FUNCTION_62	IF_1
0x499a	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1771	revision.c	FUNCTION_62	IF_2	CALL_17
0x499e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1771	revision.c	FUNCTION_62	IF_2	CALL_17
0x49a2	          0x4889c6	                            mov rsi, rax	      1771	revision.c	FUNCTION_62	IF_2	CALL_17
0x49a5	      0xbf00000000	                              mov edi, 0	      1771	revision.c	FUNCTION_62	IF_2	CALL_17
0x49aa	      0xe800000000	                          call 0x40049ef	      1771	revision.c	FUNCTION_62	IF_2	CALL_17
0x49af	          0x8945c8	             mov dword [rbp - 0x38], eax	      1771	revision.c	FUNCTION_62	IF_2	CALL_17
0x49b2	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1771	revision.c	FUNCTION_62	IF_2	CALL_17
0x49b6	            0x742e	                            je 0x4004a26	      1771	revision.c	FUNCTION_62	IF_2	CALL_17
0x49b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1772	revision.c	FUNCTION_62	IF_2	CALL_18
0x49bc	          0x4889c7	                            mov rdi, rax	      1772	revision.c	FUNCTION_62	IF_2	CALL_18
0x49bf	      0xe800000000	                          call 0x4004a04	      1772	revision.c	FUNCTION_62	IF_2	CALL_18
0x49c4	            0x89c2	                            mov edx, eax	      1772	revision.c	FUNCTION_62	IF_2	CALL_18
0x49c6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1772	revision.c	FUNCTION_62	IF_2	CALL_18
0x49ca	    0x8990cc040000	            mov dword [rax + 0x4cc], edx	      1772	revision.c	FUNCTION_62	IF_2	CALL_18
0x49d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1773	revision.c	FUNCTION_62	IF_2
0x49d4	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      1773	revision.c	FUNCTION_62	IF_2
0x49d8	          0x83e2cf	                     and edx, 0xffffffcf	      1773	revision.c	FUNCTION_62	IF_2
0x49db	          0x885074	               mov byte [rax + 0x74], dl	      1773	revision.c	FUNCTION_62	IF_2
0x49de	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1774	revision.c	FUNCTION_62	IF_2
0x49e1	      0xe96e190000	                           jmp 0x4006394	      1774	revision.c	FUNCTION_62	IF_2
0x49e6	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1775	revision.c	FUNCTION_62	ELSE_1	IF_3	CALL_19
0x49ea	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1775	revision.c	FUNCTION_62	ELSE_1	IF_3	CALL_19
0x49ee	          0x4889c6	                            mov rsi, rax	      1775	revision.c	FUNCTION_62	ELSE_1	IF_3	CALL_19
0x49f1	      0xbf00000000	                              mov edi, 0	      1775	revision.c	FUNCTION_62	ELSE_1	IF_3	CALL_19
0x49f6	      0xe800000000	                          call 0x4004a3b	      1775	revision.c	FUNCTION_62	ELSE_1	IF_3	CALL_19
0x49fb	          0x8945c8	             mov dword [rbp - 0x38], eax	      1775	revision.c	FUNCTION_62	ELSE_1	IF_3	CALL_19
0x49fe	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1775	revision.c	FUNCTION_62	ELSE_1	IF_3	CALL_19
0x4a02	            0x7420	                            je 0x4004a64	      1775	revision.c	FUNCTION_62	ELSE_1	IF_3	CALL_19
0x4a04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1776	revision.c	FUNCTION_62	ELSE_1	IF_3	CALL_20
0x4a08	          0x4889c7	                            mov rdi, rax	      1776	revision.c	FUNCTION_62	ELSE_1	IF_3	CALL_20
0x4a0b	      0xe800000000	                          call 0x4004a50	      1776	revision.c	FUNCTION_62	ELSE_1	IF_3	CALL_20
0x4a10	            0x89c2	                            mov edx, eax	      1776	revision.c	FUNCTION_62	ELSE_1	IF_3	CALL_20
0x4a12	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1776	revision.c	FUNCTION_62	ELSE_1	IF_3	CALL_20
0x4a16	    0x8990c8040000	            mov dword [rax + 0x4c8], edx	      1776	revision.c	FUNCTION_62	ELSE_1	IF_3	CALL_20
0x4a1c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1777	revision.c	FUNCTION_62	ELSE_1	IF_3
0x4a1f	      0xe930190000	                           jmp 0x4006394	      1777	revision.c	FUNCTION_62	ELSE_1	IF_3
0x4a24	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1778	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_21
0x4a28	           0xfb600	                   movzx eax, byte [rax]	      1778	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_21
0x4a2b	            0x3c2d	                            cmp al, 0x2d	      1778	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_21
0x4a2d	     0xf8580000000	                           jne 0x4004af3	      1778	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_21
0x4a33	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1778	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_21
0x4a37	        0x4883c001	                              add rax, 1	      1778	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_21
0x4a3b	           0xfb600	                   movzx eax, byte [rax]	      1778	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_21
0x4a3e	           0xfb6c0	                           movzx eax, al	      1778	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_21
0x4a41	            0x4898	                                    cdqe	      1778	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_21
0x4a43	     0xfb680000000	                   movzx eax, byte [rax]	      1778	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_21
0x4a4a	           0xfb6c0	                           movzx eax, al	      1778	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_21
0x4a4d	          0x83e002	                              and eax, 2	      1778	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_21
0x4a50	            0x85c0	                           test eax, eax	      1778	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_21
0x4a52	            0x745f	                            je 0x4004af3	      1778	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_21
0x4a54	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1780	revision.c	FUNCTION_62	ELSE_2	IF_4	IF_5	CALL_22
0x4a58	    0x488d90cc0400	                  lea rdx, [rax + 0x4cc]	      1780	revision.c	FUNCTION_62	ELSE_2	IF_4	IF_5	CALL_22
0x4a5f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1780	revision.c	FUNCTION_62	ELSE_2	IF_4	IF_5	CALL_22
0x4a63	        0x4883c001	                              add rax, 1	      1780	revision.c	FUNCTION_62	ELSE_2	IF_4	IF_5	CALL_22
0x4a67	      0xbe0a000000	                            mov esi, 0xa	      1780	revision.c	FUNCTION_62	ELSE_2	IF_4	IF_5	CALL_22
0x4a6c	          0x4889c7	                            mov rdi, rax	      1780	revision.c	FUNCTION_62	ELSE_2	IF_4	IF_5	CALL_22
0x4a6f	      0xe841b7ffff	                       call sym.strtol_i	      1780	revision.c	FUNCTION_62	ELSE_2	IF_4	IF_5	CALL_22
0x4a74	            0x85c0	                           test eax, eax	      1780	revision.c	FUNCTION_62	ELSE_2	IF_4	IF_5	CALL_22
0x4a76	            0x780e	                            js 0x4004ac6	      1780	revision.c	FUNCTION_62	ELSE_2	IF_4	IF_5	CALL_22
0x4a78	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1781	revision.c	FUNCTION_62	ELSE_2	IF_4	IF_5
0x4a7c	    0x8b80cc040000	           mov eax, dword [rax + 0x4cc] 	      1781	revision.c	FUNCTION_62	ELSE_2	IF_4	IF_5
0x4a82	            0x85c0	                           test eax, eax	      1780	revision.c	FUNCTION_62	ELSE_2	IF_4	IF_5	CALL_22
0x4a84	            0x791a	                           jns 0x4004ae0	      1780	revision.c	FUNCTION_62	ELSE_2	IF_4	IF_5	CALL_22
0x4a86	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1782	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_23
0x4a8a	        0x4883c001	                              add rax, 1	      1782	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_23
0x4a8e	          0x4889c6	                            mov rsi, rax	      1782	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_23
0x4a91	      0xbf00000000	                              mov edi, 0	      1782	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_23
0x4a96	      0xb800000000	                              mov eax, 0	      1782	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_23
0x4a9b	      0xe800000000	                          call 0x4004ae0	      1782	revision.c	FUNCTION_62	ELSE_2	IF_4	CALL_23
0x4aa0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1783	revision.c	FUNCTION_62	ELSE_2	IF_4
0x4aa4	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      1783	revision.c	FUNCTION_62	ELSE_2	IF_4
0x4aa8	          0x83e2cf	                     and edx, 0xffffffcf	      1783	revision.c	FUNCTION_62	ELSE_2	IF_4
0x4aab	          0x885074	               mov byte [rax + 0x74], dl	      1783	revision.c	FUNCTION_62	ELSE_2	IF_4
0x4aae	      0xe96e180000	                           jmp 0x4006361	      1783	revision.c	FUNCTION_62	ELSE_2	IF_4
0x4ab3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1784	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_24
0x4ab7	      0xbe00000000	                              mov esi, 0	      1784	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_24
0x4abc	          0x4889c7	                            mov rdi, rax	      1784	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_24
0x4abf	      0xe800000000	                          call 0x4004b04	      1784	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_24
0x4ac4	            0x85c0	                           test eax, eax	      1784	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_24
0x4ac6	            0x7556	                           jne 0x4004b5e	      1784	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_24
0x4ac8	        0x837db401	               cmp dword [rbp - 0x4c], 1	      1785	revision.c	FUNCTION_62	ELSE_3	IF_6	IF_7
0x4acc	            0x7f19	                            jg 0x4004b27	      1785	revision.c	FUNCTION_62	ELSE_3	IF_6	IF_7
0x4ace	      0xbf00000000	                              mov edi, 0	      1786	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_25
0x4ad3	      0xb800000000	                              mov eax, 0	      1786	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_25
0x4ad8	      0xe800000000	                          call 0x4004b1d	      1786	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_25
0x4add	      0xe81eb5ffff	                    call sym.const_error	      1786	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_25
0x4ae2	      0xe96d180000	                           jmp 0x4006394	      1786	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_25
0x4ae7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1787	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_26
0x4aeb	        0x4883c008	                              add rax, 8	      1787	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_26
0x4aef	          0x488b00	                    mov rax, qword [rax]	      1787	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_26
0x4af2	          0x4889c7	                            mov rdi, rax	      1787	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_26
0x4af5	      0xe800000000	                          call 0x4004b3a	      1787	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_26
0x4afa	            0x89c2	                            mov edx, eax	      1787	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_26
0x4afc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1787	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_26
0x4b00	    0x8990cc040000	            mov dword [rax + 0x4cc], edx	      1787	revision.c	FUNCTION_62	ELSE_3	IF_6	CALL_26
0x4b06	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1788	revision.c	FUNCTION_62	ELSE_3	IF_6
0x4b0a	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      1788	revision.c	FUNCTION_62	ELSE_3	IF_6
0x4b0e	          0x83e2cf	                     and edx, 0xffffffcf	      1788	revision.c	FUNCTION_62	ELSE_3	IF_6
0x4b11	          0x885074	               mov byte [rax + 0x74], dl	      1788	revision.c	FUNCTION_62	ELSE_3	IF_6
0x4b14	      0xb802000000	                              mov eax, 2	      1789	revision.c	FUNCTION_62	ELSE_3	IF_6
0x4b19	      0xe936180000	                           jmp 0x4006394	      1789	revision.c	FUNCTION_62	ELSE_3	IF_6
0x4b1e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1790	revision.c	FUNCTION_62	ELSE_4	IF_8	CALL_27
0x4b22	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1790	revision.c	FUNCTION_62	ELSE_4	IF_8	CALL_27
0x4b26	      0xbe00000000	                              mov esi, 0	      1790	revision.c	FUNCTION_62	ELSE_4	IF_8	CALL_27
0x4b2b	          0x4889c7	                            mov rdi, rax	      1790	revision.c	FUNCTION_62	ELSE_4	IF_8	CALL_27
0x4b2e	      0xe8d8b4ffff	                    call sym.skip_prefix	      1790	revision.c	FUNCTION_62	ELSE_4	IF_8	CALL_27
0x4b33	            0x85c0	                           test eax, eax	      1790	revision.c	FUNCTION_62	ELSE_4	IF_8	CALL_27
0x4b35	            0x742b	                            je 0x4004ba2	      1790	revision.c	FUNCTION_62	ELSE_4	IF_8	CALL_27
0x4b37	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1791	revision.c	FUNCTION_62	ELSE_4	IF_8	CALL_28
0x4b3b	          0x4889c7	                            mov rdi, rax	      1791	revision.c	FUNCTION_62	ELSE_4	IF_8	CALL_28
0x4b3e	      0xe800000000	                          call 0x4004b83	      1791	revision.c	FUNCTION_62	ELSE_4	IF_8	CALL_28
0x4b43	            0x89c2	                            mov edx, eax	      1791	revision.c	FUNCTION_62	ELSE_4	IF_8	CALL_28
0x4b45	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1791	revision.c	FUNCTION_62	ELSE_4	IF_8	CALL_28
0x4b49	    0x8990cc040000	            mov dword [rax + 0x4cc], edx	      1791	revision.c	FUNCTION_62	ELSE_4	IF_8	CALL_28
0x4b4f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1792	revision.c	FUNCTION_62	ELSE_4	IF_8
0x4b53	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      1792	revision.c	FUNCTION_62	ELSE_4	IF_8
0x4b57	          0x83e2cf	                     and edx, 0xffffffcf	      1792	revision.c	FUNCTION_62	ELSE_4	IF_8
0x4b5a	          0x885074	               mov byte [rax + 0x74], dl	      1792	revision.c	FUNCTION_62	ELSE_4	IF_8
0x4b5d	      0xe9bf170000	                           jmp 0x4006361	      1792	revision.c	FUNCTION_62	ELSE_4	IF_8
0x4b62	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1793	revision.c	FUNCTION_62	ELSE_5	IF_9	CALL_29
0x4b66	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1793	revision.c	FUNCTION_62	ELSE_5	IF_9	CALL_29
0x4b6a	          0x4889c6	                            mov rsi, rax	      1793	revision.c	FUNCTION_62	ELSE_5	IF_9	CALL_29
0x4b6d	      0xbf00000000	                              mov edi, 0	      1793	revision.c	FUNCTION_62	ELSE_5	IF_9	CALL_29
0x4b72	      0xe800000000	                          call 0x4004bb7	      1793	revision.c	FUNCTION_62	ELSE_5	IF_9	CALL_29
0x4b77	          0x8945c8	             mov dword [rbp - 0x38], eax	      1793	revision.c	FUNCTION_62	ELSE_5	IF_9	CALL_29
0x4b7a	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1793	revision.c	FUNCTION_62	ELSE_5	IF_9	CALL_29
0x4b7e	            0x7422	                            je 0x4004be2	      1793	revision.c	FUNCTION_62	ELSE_5	IF_9	CALL_29
0x4b80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1794	revision.c	FUNCTION_62	ELSE_5	IF_9	CALL_30
0x4b84	          0x4889c7	                            mov rdi, rax	      1794	revision.c	FUNCTION_62	ELSE_5	IF_9	CALL_30
0x4b87	      0xe800000000	                          call 0x4004bcc	      1794	revision.c	FUNCTION_62	ELSE_5	IF_9	CALL_30
0x4b8c	          0x4863d0	                         movsxd rdx, eax	      1794	revision.c	FUNCTION_62	ELSE_5	IF_9	CALL_30
0x4b8f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1794	revision.c	FUNCTION_62	ELSE_5	IF_9	CALL_30
0x4b93	    0x488990d00400	            mov qword [rax + 0x4d0], rdx	      1794	revision.c	FUNCTION_62	ELSE_5	IF_9	CALL_30
0x4b9a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1795	revision.c	FUNCTION_62	ELSE_5	IF_9
0x4b9d	      0xe9b2170000	                           jmp 0x4006394	      1795	revision.c	FUNCTION_62	ELSE_5	IF_9
0x4ba2	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1796	revision.c	FUNCTION_62	ELSE_6	IF_10	CALL_31
0x4ba6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1796	revision.c	FUNCTION_62	ELSE_6	IF_10	CALL_31
0x4baa	          0x4889c6	                            mov rsi, rax	      1796	revision.c	FUNCTION_62	ELSE_6	IF_10	CALL_31
0x4bad	      0xbf00000000	                              mov edi, 0	      1796	revision.c	FUNCTION_62	ELSE_6	IF_10	CALL_31
0x4bb2	      0xe800000000	                          call 0x4004bf7	      1796	revision.c	FUNCTION_62	ELSE_6	IF_10	CALL_31
0x4bb7	          0x8945c8	             mov dword [rbp - 0x38], eax	      1796	revision.c	FUNCTION_62	ELSE_6	IF_10	CALL_31
0x4bba	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1796	revision.c	FUNCTION_62	ELSE_6	IF_10	CALL_31
0x4bbe	            0x7427	                            je 0x4004c27	      1796	revision.c	FUNCTION_62	ELSE_6	IF_10	CALL_31
0x4bc0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1797	revision.c	FUNCTION_62	ELSE_6	IF_10	CALL_32
0x4bc4	      0xbe00000000	                              mov esi, 0	      1797	revision.c	FUNCTION_62	ELSE_6	IF_10	CALL_32
0x4bc9	          0x4889c7	                            mov rdi, rax	      1797	revision.c	FUNCTION_62	ELSE_6	IF_10	CALL_32
0x4bcc	      0xe800000000	                          call 0x4004c11	      1797	revision.c	FUNCTION_62	ELSE_6	IF_10	CALL_32
0x4bd1	          0x4889c2	                            mov rdx, rax	      1797	revision.c	FUNCTION_62	ELSE_6	IF_10	CALL_32
0x4bd4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1797	revision.c	FUNCTION_62	ELSE_6	IF_10	CALL_32
0x4bd8	    0x488990d00400	            mov qword [rax + 0x4d0], rdx	      1797	revision.c	FUNCTION_62	ELSE_6	IF_10	CALL_32
0x4bdf	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1798	revision.c	FUNCTION_62	ELSE_6	IF_10
0x4be2	      0xe96d170000	                           jmp 0x4006394	      1798	revision.c	FUNCTION_62	ELSE_6	IF_10
0x4be7	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1799	revision.c	FUNCTION_62	ELSE_7	IF_11	CALL_33
0x4beb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1799	revision.c	FUNCTION_62	ELSE_7	IF_11	CALL_33
0x4bef	          0x4889c6	                            mov rsi, rax	      1799	revision.c	FUNCTION_62	ELSE_7	IF_11	CALL_33
0x4bf2	      0xbf00000000	                              mov edi, 0	      1799	revision.c	FUNCTION_62	ELSE_7	IF_11	CALL_33
0x4bf7	      0xe800000000	                          call 0x4004c3c	      1799	revision.c	FUNCTION_62	ELSE_7	IF_11	CALL_33
0x4bfc	          0x8945c8	             mov dword [rbp - 0x38], eax	      1799	revision.c	FUNCTION_62	ELSE_7	IF_11	CALL_33
0x4bff	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1799	revision.c	FUNCTION_62	ELSE_7	IF_11	CALL_33
0x4c03	            0x7427	                            je 0x4004c6c	      1799	revision.c	FUNCTION_62	ELSE_7	IF_11	CALL_33
0x4c05	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1800	revision.c	FUNCTION_62	ELSE_7	IF_11	CALL_34
0x4c09	      0xbe00000000	                              mov esi, 0	      1800	revision.c	FUNCTION_62	ELSE_7	IF_11	CALL_34
0x4c0e	          0x4889c7	                            mov rdi, rax	      1800	revision.c	FUNCTION_62	ELSE_7	IF_11	CALL_34
0x4c11	      0xe800000000	                          call 0x4004c56	      1800	revision.c	FUNCTION_62	ELSE_7	IF_11	CALL_34
0x4c16	          0x4889c2	                            mov rdx, rax	      1800	revision.c	FUNCTION_62	ELSE_7	IF_11	CALL_34
0x4c19	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1800	revision.c	FUNCTION_62	ELSE_7	IF_11	CALL_34
0x4c1d	    0x488990d00400	            mov qword [rax + 0x4d0], rdx	      1800	revision.c	FUNCTION_62	ELSE_7	IF_11	CALL_34
0x4c24	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1801	revision.c	FUNCTION_62	ELSE_7	IF_11
0x4c27	      0xe928170000	                           jmp 0x4006394	      1801	revision.c	FUNCTION_62	ELSE_7	IF_11
0x4c2c	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1802	revision.c	FUNCTION_62	ELSE_8	IF_12	CALL_35
0x4c30	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1802	revision.c	FUNCTION_62	ELSE_8	IF_12	CALL_35
0x4c34	          0x4889c6	                            mov rsi, rax	      1802	revision.c	FUNCTION_62	ELSE_8	IF_12	CALL_35
0x4c37	      0xbf00000000	                              mov edi, 0	      1802	revision.c	FUNCTION_62	ELSE_8	IF_12	CALL_35
0x4c3c	      0xe800000000	                          call 0x4004c81	      1802	revision.c	FUNCTION_62	ELSE_8	IF_12	CALL_35
0x4c41	          0x8945c8	             mov dword [rbp - 0x38], eax	      1802	revision.c	FUNCTION_62	ELSE_8	IF_12	CALL_35
0x4c44	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1802	revision.c	FUNCTION_62	ELSE_8	IF_12	CALL_35
0x4c48	            0x7422	                            je 0x4004cac	      1802	revision.c	FUNCTION_62	ELSE_8	IF_12	CALL_35
0x4c4a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1803	revision.c	FUNCTION_62	ELSE_8	IF_12	CALL_36
0x4c4e	          0x4889c7	                            mov rdi, rax	      1803	revision.c	FUNCTION_62	ELSE_8	IF_12	CALL_36
0x4c51	      0xe800000000	                          call 0x4004c96	      1803	revision.c	FUNCTION_62	ELSE_8	IF_12	CALL_36
0x4c56	          0x4863d0	                         movsxd rdx, eax	      1803	revision.c	FUNCTION_62	ELSE_8	IF_12	CALL_36
0x4c59	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1803	revision.c	FUNCTION_62	ELSE_8	IF_12	CALL_36
0x4c5d	    0x488990d80400	            mov qword [rax + 0x4d8], rdx	      1803	revision.c	FUNCTION_62	ELSE_8	IF_12	CALL_36
0x4c64	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1804	revision.c	FUNCTION_62	ELSE_8	IF_12
0x4c67	      0xe9e8160000	                           jmp 0x4006394	      1804	revision.c	FUNCTION_62	ELSE_8	IF_12
0x4c6c	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1805	revision.c	FUNCTION_62	ELSE_9	IF_13	CALL_37
0x4c70	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1805	revision.c	FUNCTION_62	ELSE_9	IF_13	CALL_37
0x4c74	          0x4889c6	                            mov rsi, rax	      1805	revision.c	FUNCTION_62	ELSE_9	IF_13	CALL_37
0x4c77	      0xbf00000000	                              mov edi, 0	      1805	revision.c	FUNCTION_62	ELSE_9	IF_13	CALL_37
0x4c7c	      0xe800000000	                          call 0x4004cc1	      1805	revision.c	FUNCTION_62	ELSE_9	IF_13	CALL_37
0x4c81	          0x8945c8	             mov dword [rbp - 0x38], eax	      1805	revision.c	FUNCTION_62	ELSE_9	IF_13	CALL_37
0x4c84	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1805	revision.c	FUNCTION_62	ELSE_9	IF_13	CALL_37
0x4c88	            0x7427	                            je 0x4004cf1	      1805	revision.c	FUNCTION_62	ELSE_9	IF_13	CALL_37
0x4c8a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1806	revision.c	FUNCTION_62	ELSE_9	IF_13	CALL_38
0x4c8e	      0xbe00000000	                              mov esi, 0	      1806	revision.c	FUNCTION_62	ELSE_9	IF_13	CALL_38
0x4c93	          0x4889c7	                            mov rdi, rax	      1806	revision.c	FUNCTION_62	ELSE_9	IF_13	CALL_38
0x4c96	      0xe800000000	                          call 0x4004cdb	      1806	revision.c	FUNCTION_62	ELSE_9	IF_13	CALL_38
0x4c9b	          0x4889c2	                            mov rdx, rax	      1806	revision.c	FUNCTION_62	ELSE_9	IF_13	CALL_38
0x4c9e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1806	revision.c	FUNCTION_62	ELSE_9	IF_13	CALL_38
0x4ca2	    0x488990d80400	            mov qword [rax + 0x4d8], rdx	      1806	revision.c	FUNCTION_62	ELSE_9	IF_13	CALL_38
0x4ca9	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1807	revision.c	FUNCTION_62	ELSE_9	IF_13
0x4cac	      0xe9a3160000	                           jmp 0x4006394	      1807	revision.c	FUNCTION_62	ELSE_9	IF_13
0x4cb1	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1808	revision.c	FUNCTION_62	ELSE_10	IF_14	CALL_39
0x4cb5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1808	revision.c	FUNCTION_62	ELSE_10	IF_14	CALL_39
0x4cb9	          0x4889c6	                            mov rsi, rax	      1808	revision.c	FUNCTION_62	ELSE_10	IF_14	CALL_39
0x4cbc	      0xbf00000000	                              mov edi, 0	      1808	revision.c	FUNCTION_62	ELSE_10	IF_14	CALL_39
0x4cc1	      0xe800000000	                          call 0x4004d06	      1808	revision.c	FUNCTION_62	ELSE_10	IF_14	CALL_39
0x4cc6	          0x8945c8	             mov dword [rbp - 0x38], eax	      1808	revision.c	FUNCTION_62	ELSE_10	IF_14	CALL_39
0x4cc9	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1808	revision.c	FUNCTION_62	ELSE_10	IF_14	CALL_39
0x4ccd	            0x7427	                            je 0x4004d36	      1808	revision.c	FUNCTION_62	ELSE_10	IF_14	CALL_39
0x4ccf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1809	revision.c	FUNCTION_62	ELSE_10	IF_14	CALL_40
0x4cd3	      0xbe00000000	                              mov esi, 0	      1809	revision.c	FUNCTION_62	ELSE_10	IF_14	CALL_40
0x4cd8	          0x4889c7	                            mov rdi, rax	      1809	revision.c	FUNCTION_62	ELSE_10	IF_14	CALL_40
0x4cdb	      0xe800000000	                          call 0x4004d20	      1809	revision.c	FUNCTION_62	ELSE_10	IF_14	CALL_40
0x4ce0	          0x4889c2	                            mov rdx, rax	      1809	revision.c	FUNCTION_62	ELSE_10	IF_14	CALL_40
0x4ce3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1809	revision.c	FUNCTION_62	ELSE_10	IF_14	CALL_40
0x4ce7	    0x488990d80400	            mov qword [rax + 0x4d8], rdx	      1809	revision.c	FUNCTION_62	ELSE_10	IF_14	CALL_40
0x4cee	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1810	revision.c	FUNCTION_62	ELSE_10	IF_14
0x4cf1	      0xe95e160000	                           jmp 0x4006394	      1810	revision.c	FUNCTION_62	ELSE_10	IF_14
0x4cf6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1811	revision.c	FUNCTION_62	ELSE_11	IF_15	CALL_41
0x4cfa	      0xbe00000000	                              mov esi, 0	      1811	revision.c	FUNCTION_62	ELSE_11	IF_15	CALL_41
0x4cff	          0x4889c7	                            mov rdi, rax	      1811	revision.c	FUNCTION_62	ELSE_11	IF_15	CALL_41
0x4d02	      0xe800000000	                          call 0x4004d47	      1811	revision.c	FUNCTION_62	ELSE_11	IF_15	CALL_41
0x4d07	            0x85c0	                           test eax, eax	      1811	revision.c	FUNCTION_62	ELSE_11	IF_15	CALL_41
0x4d09	            0x7513	                           jne 0x4004d5e	      1811	revision.c	FUNCTION_62	ELSE_11	IF_15	CALL_41
0x4d0b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1812	revision.c	FUNCTION_62	ELSE_11	IF_15
0x4d0f	         0xfb65078	           movzx edx, byte [rax + 0x78] 	      1812	revision.c	FUNCTION_62	ELSE_11	IF_15
0x4d13	          0x83ca10	                            or edx, 0x10	      1812	revision.c	FUNCTION_62	ELSE_11	IF_15
0x4d16	          0x885078	               mov byte [rax + 0x78], dl	      1812	revision.c	FUNCTION_62	ELSE_11	IF_15
0x4d19	      0xe903160000	                           jmp 0x4006361	      1812	revision.c	FUNCTION_62	ELSE_11	IF_15
0x4d1e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1813	revision.c	FUNCTION_62	ELSE_12	IF_16	CALL_42
0x4d22	      0xbe00000000	                              mov esi, 0	      1813	revision.c	FUNCTION_62	ELSE_12	IF_16	CALL_42
0x4d27	          0x4889c7	                            mov rdi, rax	      1813	revision.c	FUNCTION_62	ELSE_12	IF_16	CALL_42
0x4d2a	      0xe800000000	                          call 0x4004d6f	      1813	revision.c	FUNCTION_62	ELSE_12	IF_16	CALL_42
0x4d2f	            0x85c0	                           test eax, eax	      1813	revision.c	FUNCTION_62	ELSE_12	IF_16	CALL_42
0x4d31	            0x752f	                           jne 0x4004da2	      1813	revision.c	FUNCTION_62	ELSE_12	IF_16	CALL_42
0x4d33	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1814	revision.c	FUNCTION_62	ELSE_12	IF_16
0x4d37	         0xfb65078	           movzx edx, byte [rax + 0x78] 	      1814	revision.c	FUNCTION_62	ELSE_12	IF_16
0x4d3b	          0x83ca08	                               or edx, 8	      1814	revision.c	FUNCTION_62	ELSE_12	IF_16
0x4d3e	          0x885078	               mov byte [rax + 0x78], dl	      1814	revision.c	FUNCTION_62	ELSE_12	IF_16
0x4d41	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1815	revision.c	FUNCTION_62	ELSE_12	IF_16
0x4d45	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      1815	revision.c	FUNCTION_62	ELSE_12	IF_16
0x4d49	          0x83e27f	                           and edx, 0x7f	      1815	revision.c	FUNCTION_62	ELSE_12	IF_16
0x4d4c	          0x885074	               mov byte [rax + 0x74], dl	      1815	revision.c	FUNCTION_62	ELSE_12	IF_16
0x4d4f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1816	revision.c	FUNCTION_62	ELSE_12	IF_16
0x4d53	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      1816	revision.c	FUNCTION_62	ELSE_12	IF_16
0x4d57	          0x83ca04	                               or edx, 4	      1816	revision.c	FUNCTION_62	ELSE_12	IF_16
0x4d5a	          0x885076	               mov byte [rax + 0x76], dl	      1816	revision.c	FUNCTION_62	ELSE_12	IF_16
0x4d5d	      0xe9bf150000	                           jmp 0x4006361	      1816	revision.c	FUNCTION_62	ELSE_12	IF_16
0x4d62	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1817	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_44
0x4d66	      0xbe00000000	                              mov esi, 0	      1817	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_44
0x4d6b	          0x4889c7	                            mov rdi, rax	      1817	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_44
0x4d6e	      0xe800000000	                          call 0x4004db3	      1817	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_44
0x4d73	            0x85c0	                           test eax, eax	      1817	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_44
0x4d75	            0x7415	                            je 0x4004dcc	      1817	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_44
0x4d77	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1817	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_44
0x4d7b	      0xbe00000000	                              mov esi, 0	      1817	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_44
0x4d80	          0x4889c7	                            mov rdi, rax	      1817	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_44
0x4d83	      0xe800000000	                          call 0x4004dc8	      1817	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_44
0x4d88	            0x85c0	                           test eax, eax	      1817	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_44
0x4d8a	            0x7517	                           jne 0x4004de3	      1817	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_44
0x4d8c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1818	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_45
0x4d90	    0x4805f8070000	                          add rax, 0x7f8	      1818	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_45
0x4d96	          0x4889c7	                            mov rdi, rax	      1818	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_45
0x4d99	      0xe800000000	                          call 0x4004dde	      1818	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_45
0x4d9e	      0xe97e150000	                           jmp 0x4006361	      1818	revision.c	FUNCTION_62	ELSE_13	IF_17	CALL_45
0x4da3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1819	revision.c	FUNCTION_62	ELSE_14	IF_18	CALL_46
0x4da7	      0xbe00000000	                              mov esi, 0	      1819	revision.c	FUNCTION_62	ELSE_14	IF_18	CALL_46
0x4dac	          0x4889c7	                            mov rdi, rax	      1819	revision.c	FUNCTION_62	ELSE_14	IF_18	CALL_46
0x4daf	      0xe800000000	                          call 0x4004df4	      1819	revision.c	FUNCTION_62	ELSE_14	IF_18	CALL_46
0x4db4	            0x85c0	                           test eax, eax	      1819	revision.c	FUNCTION_62	ELSE_14	IF_18	CALL_46
0x4db6	            0x7539	                           jne 0x4004e31	      1819	revision.c	FUNCTION_62	ELSE_14	IF_18	CALL_46
0x4db8	        0x837db401	               cmp dword [rbp - 0x4c], 1	      1820	revision.c	FUNCTION_62	ELSE_14	IF_18	IF_19
0x4dbc	            0x7f19	                            jg 0x4004e17	      1820	revision.c	FUNCTION_62	ELSE_14	IF_18	IF_19
0x4dbe	      0xbf00000000	                              mov edi, 0	      1821	revision.c	FUNCTION_62	ELSE_14	IF_18	CALL_47
0x4dc3	      0xb800000000	                              mov eax, 0	      1821	revision.c	FUNCTION_62	ELSE_14	IF_18	CALL_47
0x4dc8	      0xe800000000	                          call 0x4004e0d	      1821	revision.c	FUNCTION_62	ELSE_14	IF_18	CALL_47
0x4dcd	      0xe82eb2ffff	                    call sym.const_error	      1821	revision.c	FUNCTION_62	ELSE_14	IF_18	CALL_47
0x4dd2	      0xe97d150000	                           jmp 0x4006394	      1821	revision.c	FUNCTION_62	ELSE_14	IF_18	CALL_47
0x4dd7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1822	revision.c	FUNCTION_62	ELSE_14	IF_18
0x4ddb	        0x488b5008	                mov rdx, qword [rax + 8]	      1822	revision.c	FUNCTION_62	ELSE_14	IF_18
0x4ddf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1822	revision.c	FUNCTION_62	ELSE_14	IF_18
0x4de3	        0x48895048	             mov qword [rax + 0x48], rdx	      1822	revision.c	FUNCTION_62	ELSE_14	IF_18
0x4de7	      0xb802000000	                              mov eax, 2	      1823	revision.c	FUNCTION_62	ELSE_14	IF_18
0x4dec	      0xe963150000	                           jmp 0x4006394	      1823	revision.c	FUNCTION_62	ELSE_14	IF_18
0x4df1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1824	revision.c	FUNCTION_62	ELSE_15	IF_20	CALL_48
0x4df5	      0xbe00000000	                              mov esi, 0	      1824	revision.c	FUNCTION_62	ELSE_15	IF_20	CALL_48
0x4dfa	          0x4889c7	                            mov rdi, rax	      1824	revision.c	FUNCTION_62	ELSE_15	IF_20	CALL_48
0x4dfd	      0xe800000000	                          call 0x4004e42	      1824	revision.c	FUNCTION_62	ELSE_15	IF_20	CALL_48
0x4e02	            0x85c0	                           test eax, eax	      1824	revision.c	FUNCTION_62	ELSE_15	IF_20	CALL_48
0x4e04	            0x7513	                           jne 0x4004e59	      1824	revision.c	FUNCTION_62	ELSE_15	IF_20	CALL_48
0x4e06	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1825	revision.c	FUNCTION_62	ELSE_15	IF_20
0x4e0a	         0xfb6507a	           movzx edx, byte [rax + 0x7a] 	      1825	revision.c	FUNCTION_62	ELSE_15	IF_20
0x4e0e	          0x83ca08	                               or edx, 8	      1825	revision.c	FUNCTION_62	ELSE_15	IF_20
0x4e11	          0x88507a	               mov byte [rax + 0x7a], dl	      1825	revision.c	FUNCTION_62	ELSE_15	IF_20
0x4e14	      0xe908150000	                           jmp 0x4006361	      1825	revision.c	FUNCTION_62	ELSE_15	IF_20
0x4e19	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1826	revision.c	FUNCTION_62	ELSE_16	IF_21	CALL_49
0x4e1d	      0xbe00000000	                              mov esi, 0	      1826	revision.c	FUNCTION_62	ELSE_16	IF_21	CALL_49
0x4e22	          0x4889c7	                            mov rdi, rax	      1826	revision.c	FUNCTION_62	ELSE_16	IF_21	CALL_49
0x4e25	      0xe800000000	                          call 0x4004e6a	      1826	revision.c	FUNCTION_62	ELSE_16	IF_21	CALL_49
0x4e2a	            0x85c0	                           test eax, eax	      1826	revision.c	FUNCTION_62	ELSE_16	IF_21	CALL_49
0x4e2c	            0x751e	                           jne 0x4004e8c	      1826	revision.c	FUNCTION_62	ELSE_16	IF_21	CALL_49
0x4e2e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1827	revision.c	FUNCTION_62	ELSE_16	IF_21
0x4e32	    0xc7406c000000	               mov dword [rax + 0x6c], 0	      1827	revision.c	FUNCTION_62	ELSE_16	IF_21
0x4e39	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1828	revision.c	FUNCTION_62	ELSE_16	IF_21
0x4e3d	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1828	revision.c	FUNCTION_62	ELSE_16	IF_21
0x4e41	          0x83ca01	                               or edx, 1	      1828	revision.c	FUNCTION_62	ELSE_16	IF_21
0x4e44	          0x885075	               mov byte [rax + 0x75], dl	      1828	revision.c	FUNCTION_62	ELSE_16	IF_21
0x4e47	      0xe9d5140000	                           jmp 0x4006361	      1828	revision.c	FUNCTION_62	ELSE_16	IF_21
0x4e4c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1829	revision.c	FUNCTION_62	ELSE_17	IF_22	CALL_50
0x4e50	      0xbe00000000	                              mov esi, 0	      1829	revision.c	FUNCTION_62	ELSE_17	IF_22	CALL_50
0x4e55	          0x4889c7	                            mov rdi, rax	      1829	revision.c	FUNCTION_62	ELSE_17	IF_22	CALL_50
0x4e58	      0xe800000000	                          call 0x4004e9d	      1829	revision.c	FUNCTION_62	ELSE_17	IF_22	CALL_50
0x4e5d	            0x85c0	                           test eax, eax	      1829	revision.c	FUNCTION_62	ELSE_17	IF_22	CALL_50
0x4e5f	            0x754b	                           jne 0x4004eec	      1829	revision.c	FUNCTION_62	ELSE_17	IF_22	CALL_50
0x4e61	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1830	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e65	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1830	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e69	          0x83ca02	                               or edx, 2	      1830	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e6c	          0x885075	               mov byte [rax + 0x75], dl	      1830	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e6f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1831	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e73	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1831	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e77	          0x83ca01	                               or edx, 1	      1831	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e7a	          0x885075	               mov byte [rax + 0x75], dl	      1831	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e7d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1832	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e81	         0xfb65077	           movzx edx, byte [rax + 0x77] 	      1832	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e85	          0x83ca04	                               or edx, 4	      1832	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e88	          0x885077	               mov byte [rax + 0x77], dl	      1832	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e8b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1833	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e8f	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      1833	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e93	          0x83e27f	                           and edx, 0x7f	      1833	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e96	          0x885074	               mov byte [rax + 0x74], dl	      1833	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e99	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1834	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4e9d	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      1834	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4ea1	          0x83ca04	                               or edx, 4	      1834	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4ea4	          0x885076	               mov byte [rax + 0x76], dl	      1834	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4ea7	      0xe975140000	                           jmp 0x4006361	      1834	revision.c	FUNCTION_62	ELSE_17	IF_22
0x4eac	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1835	revision.c	FUNCTION_62	ELSE_18	IF_23	CALL_51
0x4eb0	      0xbe00000000	                              mov esi, 0	      1835	revision.c	FUNCTION_62	ELSE_18	IF_23	CALL_51
0x4eb5	          0x4889c7	                            mov rdi, rax	      1835	revision.c	FUNCTION_62	ELSE_18	IF_23	CALL_51
0x4eb8	      0xe800000000	                          call 0x4004efd	      1835	revision.c	FUNCTION_62	ELSE_18	IF_23	CALL_51
0x4ebd	            0x85c0	                           test eax, eax	      1835	revision.c	FUNCTION_62	ELSE_18	IF_23	CALL_51
0x4ebf	            0x7576	                           jne 0x4004f77	      1835	revision.c	FUNCTION_62	ELSE_18	IF_23	CALL_51
0x4ec1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1836	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4ec5	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1836	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4ec9	          0x83ca02	                               or edx, 2	      1836	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4ecc	          0x885075	               mov byte [rax + 0x75], dl	      1836	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4ecf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1837	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4ed3	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1837	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4ed7	          0x83ca01	                               or edx, 1	      1837	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4eda	          0x885075	               mov byte [rax + 0x75], dl	      1837	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4edd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1838	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4ee1	         0xfb65077	           movzx edx, byte [rax + 0x77] 	      1838	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4ee5	          0x83ca04	                               or edx, 4	      1838	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4ee8	          0x885077	               mov byte [rax + 0x77], dl	      1838	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4eeb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1839	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4eef	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      1839	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4ef3	          0x83e27f	                           and edx, 0x7f	      1839	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4ef6	          0x885074	               mov byte [rax + 0x74], dl	      1839	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4ef9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1840	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4efd	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1840	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4f01	          0x83ca04	                               or edx, 4	      1840	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4f04	          0x885075	               mov byte [rax + 0x75], dl	      1840	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4f07	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1841	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4f0b	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      1841	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4f0f	          0x83ca04	                               or edx, 4	      1841	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4f12	          0x885076	               mov byte [rax + 0x76], dl	      1841	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4f15	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1842	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4f19	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      1842	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4f1d	          0x83ca08	                               or edx, 8	      1842	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4f20	          0x885074	               mov byte [rax + 0x74], dl	      1842	revision.c	FUNCTION_62	ELSE_18	IF_23
0x4f23	      0xbe01000000	                              mov esi, 1	      1843	revision.c	FUNCTION_62	ELSE_18	IF_23	CALL_52
0x4f28	      0xbf00000000	                              mov edi, 0	      1843	revision.c	FUNCTION_62	ELSE_18	IF_23	CALL_52
0x4f2d	      0xe800000000	                          call 0x4004f72	      1843	revision.c	FUNCTION_62	ELSE_18	IF_23	CALL_52
0x4f32	      0xe9ea130000	                           jmp 0x4006361	      1843	revision.c	FUNCTION_62	ELSE_18	IF_23	CALL_52
0x4f37	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1844	revision.c	FUNCTION_62	ELSE_19	IF_24	CALL_53
0x4f3b	      0xbe00000000	                              mov esi, 0	      1844	revision.c	FUNCTION_62	ELSE_19	IF_24	CALL_53
0x4f40	          0x4889c7	                            mov rdi, rax	      1844	revision.c	FUNCTION_62	ELSE_19	IF_24	CALL_53
0x4f43	      0xe800000000	                          call 0x4004f88	      1844	revision.c	FUNCTION_62	ELSE_19	IF_24	CALL_53
0x4f48	            0x85c0	                           test eax, eax	      1844	revision.c	FUNCTION_62	ELSE_19	IF_24	CALL_53
0x4f4a	            0x751e	                           jne 0x4004faa	      1844	revision.c	FUNCTION_62	ELSE_19	IF_24	CALL_53
0x4f4c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1845	revision.c	FUNCTION_62	ELSE_19	IF_24
0x4f50	    0xc7406c010000	               mov dword [rax + 0x6c], 1	      1845	revision.c	FUNCTION_62	ELSE_19	IF_24
0x4f57	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1846	revision.c	FUNCTION_62	ELSE_19	IF_24
0x4f5b	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1846	revision.c	FUNCTION_62	ELSE_19	IF_24
0x4f5f	          0x83ca01	                               or edx, 1	      1846	revision.c	FUNCTION_62	ELSE_19	IF_24
0x4f62	          0x885075	               mov byte [rax + 0x75], dl	      1846	revision.c	FUNCTION_62	ELSE_19	IF_24
0x4f65	      0xe9b7130000	                           jmp 0x4006361	      1846	revision.c	FUNCTION_62	ELSE_19	IF_24
0x4f6a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1847	revision.c	FUNCTION_62	ELSE_20	IF_25	CALL_54
0x4f6e	      0xbe00000000	                              mov esi, 0	      1847	revision.c	FUNCTION_62	ELSE_20	IF_25	CALL_54
0x4f73	          0x4889c7	                            mov rdi, rax	      1847	revision.c	FUNCTION_62	ELSE_20	IF_25	CALL_54
0x4f76	      0xe800000000	                          call 0x4004fbb	      1847	revision.c	FUNCTION_62	ELSE_20	IF_25	CALL_54
0x4f7b	            0x85c0	                           test eax, eax	      1847	revision.c	FUNCTION_62	ELSE_20	IF_25	CALL_54
0x4f7d	            0x751e	                           jne 0x4004fdd	      1847	revision.c	FUNCTION_62	ELSE_20	IF_25	CALL_54
0x4f7f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1848	revision.c	FUNCTION_62	ELSE_20	IF_25
0x4f83	    0xc7406c020000	               mov dword [rax + 0x6c], 2	      1848	revision.c	FUNCTION_62	ELSE_20	IF_25
0x4f8a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1849	revision.c	FUNCTION_62	ELSE_20	IF_25
0x4f8e	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1849	revision.c	FUNCTION_62	ELSE_20	IF_25
0x4f92	          0x83ca01	                               or edx, 1	      1849	revision.c	FUNCTION_62	ELSE_20	IF_25
0x4f95	          0x885075	               mov byte [rax + 0x75], dl	      1849	revision.c	FUNCTION_62	ELSE_20	IF_25
0x4f98	      0xe984130000	                           jmp 0x4006361	      1849	revision.c	FUNCTION_62	ELSE_20	IF_25
0x4f9d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1850	revision.c	FUNCTION_62	ELSE_21	IF_26	CALL_55
0x4fa1	      0xbe00000000	                              mov esi, 0	      1850	revision.c	FUNCTION_62	ELSE_21	IF_26	CALL_55
0x4fa6	          0x4889c7	                            mov rdi, rax	      1850	revision.c	FUNCTION_62	ELSE_21	IF_26	CALL_55
0x4fa9	      0xe800000000	                          call 0x4004fee	      1850	revision.c	FUNCTION_62	ELSE_21	IF_26	CALL_55
0x4fae	            0x85c0	                           test eax, eax	      1850	revision.c	FUNCTION_62	ELSE_21	IF_26	CALL_55
0x4fb0	            0x751e	                           jne 0x4005010	      1850	revision.c	FUNCTION_62	ELSE_21	IF_26	CALL_55
0x4fb2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1851	revision.c	FUNCTION_62	ELSE_21	IF_26
0x4fb6	    0xc74070640000	           mov dword [rax + 0x70], 0x64 	      1851	revision.c	FUNCTION_62	ELSE_21	IF_26
0x4fbd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1852	revision.c	FUNCTION_62	ELSE_21	IF_26
0x4fc1	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1852	revision.c	FUNCTION_62	ELSE_21	IF_26
0x4fc5	          0x83ca01	                               or edx, 1	      1852	revision.c	FUNCTION_62	ELSE_21	IF_26
0x4fc8	          0x885075	               mov byte [rax + 0x75], dl	      1852	revision.c	FUNCTION_62	ELSE_21	IF_26
0x4fcb	      0xe951130000	                           jmp 0x4006361	      1852	revision.c	FUNCTION_62	ELSE_21	IF_26
0x4fd0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1853	revision.c	FUNCTION_62	ELSE_22	IF_27	CALL_56
0x4fd4	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1853	revision.c	FUNCTION_62	ELSE_22	IF_27	CALL_56
0x4fd8	      0xbe00000000	                              mov esi, 0	      1853	revision.c	FUNCTION_62	ELSE_22	IF_27	CALL_56
0x4fdd	          0x4889c7	                            mov rdi, rax	      1853	revision.c	FUNCTION_62	ELSE_22	IF_27	CALL_56
0x4fe0	      0xe826b0ffff	                    call sym.skip_prefix	      1853	revision.c	FUNCTION_62	ELSE_22	IF_27	CALL_56
0x4fe5	            0x85c0	                           test eax, eax	      1853	revision.c	FUNCTION_62	ELSE_22	IF_27	CALL_56
0x4fe7	            0x7446	                            je 0x400506f	      1853	revision.c	FUNCTION_62	ELSE_22	IF_27	CALL_56
0x4fe9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1854	revision.c	FUNCTION_62	ELSE_22	IF_27	IF_28	CALL_57
0x4fed	        0x488d5070	                   lea rdx, [rax + 0x70]	      1854	revision.c	FUNCTION_62	ELSE_22	IF_27	IF_28	CALL_57
0x4ff1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1854	revision.c	FUNCTION_62	ELSE_22	IF_27	IF_28	CALL_57
0x4ff5	      0xbe0a000000	                            mov esi, 0xa	      1854	revision.c	FUNCTION_62	ELSE_22	IF_27	IF_28	CALL_57
0x4ffa	          0x4889c7	                            mov rdi, rax	      1854	revision.c	FUNCTION_62	ELSE_22	IF_27	IF_28	CALL_57
0x4ffd	      0xe8f5b0ffff	                     call sym.strtoul_ui	      1854	revision.c	FUNCTION_62	ELSE_22	IF_27	IF_28	CALL_57
0x5002	            0x85c0	                           test eax, eax	      1854	revision.c	FUNCTION_62	ELSE_22	IF_27	IF_28	CALL_57
0x5004	            0x7916	                           jns 0x400505c	      1854	revision.c	FUNCTION_62	ELSE_22	IF_27	IF_28	CALL_57
0x5006	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1855	revision.c	FUNCTION_62	ELSE_22	IF_27	CALL_58
0x500a	          0x4889c6	                            mov rsi, rax	      1855	revision.c	FUNCTION_62	ELSE_22	IF_27	CALL_58
0x500d	      0xbf00000000	                              mov edi, 0	      1855	revision.c	FUNCTION_62	ELSE_22	IF_27	CALL_58
0x5012	      0xb800000000	                              mov eax, 0	      1855	revision.c	FUNCTION_62	ELSE_22	IF_27	CALL_58
0x5017	      0xe800000000	                          call 0x400505c	      1855	revision.c	FUNCTION_62	ELSE_22	IF_27	CALL_58
0x501c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1856	revision.c	FUNCTION_62	ELSE_22	IF_27
0x5020	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1856	revision.c	FUNCTION_62	ELSE_22	IF_27
0x5024	          0x83ca01	                               or edx, 1	      1856	revision.c	FUNCTION_62	ELSE_22	IF_27
0x5027	          0x885075	               mov byte [rax + 0x75], dl	      1856	revision.c	FUNCTION_62	ELSE_22	IF_27
0x502a	      0xe9f2120000	                           jmp 0x4006361	      1856	revision.c	FUNCTION_62	ELSE_22	IF_27
0x502f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1857	revision.c	FUNCTION_62	ELSE_23	IF_29	CALL_59
0x5033	      0xbe00000000	                              mov esi, 0	      1857	revision.c	FUNCTION_62	ELSE_23	IF_29	CALL_59
0x5038	          0x4889c7	                            mov rdi, rax	      1857	revision.c	FUNCTION_62	ELSE_23	IF_29	CALL_59
0x503b	      0xe800000000	                          call 0x4005080	      1857	revision.c	FUNCTION_62	ELSE_23	IF_29	CALL_59
0x5040	            0x85c0	                           test eax, eax	      1857	revision.c	FUNCTION_62	ELSE_23	IF_29	CALL_59
0x5042	            0x7521	                           jne 0x40050a5	      1857	revision.c	FUNCTION_62	ELSE_23	IF_29	CALL_59
0x5044	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1858	revision.c	FUNCTION_62	ELSE_23	IF_29
0x5048	         0xfb65077	           movzx edx, byte [rax + 0x77] 	      1858	revision.c	FUNCTION_62	ELSE_23	IF_29
0x504c	          0x83ca04	                               or edx, 4	      1858	revision.c	FUNCTION_62	ELSE_23	IF_29
0x504f	          0x885077	               mov byte [rax + 0x77], dl	      1858	revision.c	FUNCTION_62	ELSE_23	IF_29
0x5052	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1859	revision.c	FUNCTION_62	ELSE_23	IF_29
0x5056	         0xfb65077	           movzx edx, byte [rax + 0x77] 	      1859	revision.c	FUNCTION_62	ELSE_23	IF_29
0x505a	          0x83ca08	                               or edx, 8	      1859	revision.c	FUNCTION_62	ELSE_23	IF_29
0x505d	          0x885077	               mov byte [rax + 0x77], dl	      1859	revision.c	FUNCTION_62	ELSE_23	IF_29
0x5060	      0xe9bc120000	                           jmp 0x4006361	      1859	revision.c	FUNCTION_62	ELSE_23	IF_29
0x5065	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1860	revision.c	FUNCTION_62	ELSE_24	IF_30	CALL_60
0x5069	      0xbe00000000	                              mov esi, 0	      1860	revision.c	FUNCTION_62	ELSE_24	IF_30	CALL_60
0x506e	          0x4889c7	                            mov rdi, rax	      1860	revision.c	FUNCTION_62	ELSE_24	IF_30	CALL_60
0x5071	      0xe800000000	                          call 0x40050b6	      1860	revision.c	FUNCTION_62	ELSE_24	IF_30	CALL_60
0x5076	            0x85c0	                           test eax, eax	      1860	revision.c	FUNCTION_62	ELSE_24	IF_30	CALL_60
0x5078	            0x7513	                           jne 0x40050cd	      1860	revision.c	FUNCTION_62	ELSE_24	IF_30	CALL_60
0x507a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1861	revision.c	FUNCTION_62	ELSE_24	IF_30
0x507e	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      1861	revision.c	FUNCTION_62	ELSE_24	IF_30
0x5082	          0x83ca04	                               or edx, 4	      1861	revision.c	FUNCTION_62	ELSE_24	IF_30
0x5085	          0x885074	               mov byte [rax + 0x74], dl	      1861	revision.c	FUNCTION_62	ELSE_24	IF_30
0x5088	      0xe994120000	                           jmp 0x4006361	      1861	revision.c	FUNCTION_62	ELSE_24	IF_30
0x508d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1862	revision.c	FUNCTION_62	ELSE_25	IF_31	CALL_61
0x5091	      0xbe00000000	                              mov esi, 0	      1862	revision.c	FUNCTION_62	ELSE_25	IF_31	CALL_61
0x5096	          0x4889c7	                            mov rdi, rax	      1862	revision.c	FUNCTION_62	ELSE_25	IF_31	CALL_61
0x5099	      0xe800000000	                          call 0x40050de	      1862	revision.c	FUNCTION_62	ELSE_25	IF_31	CALL_61
0x509e	            0x85c0	                           test eax, eax	      1862	revision.c	FUNCTION_62	ELSE_25	IF_31	CALL_61
0x50a0	            0x7513	                           jne 0x40050f5	      1862	revision.c	FUNCTION_62	ELSE_25	IF_31	CALL_61
0x50a2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1863	revision.c	FUNCTION_62	ELSE_25	IF_31
0x50a6	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      1863	revision.c	FUNCTION_62	ELSE_25	IF_31
0x50aa	          0x83e2fb	                     and edx, 0xfffffffb	      1863	revision.c	FUNCTION_62	ELSE_25	IF_31
0x50ad	          0x885074	               mov byte [rax + 0x74], dl	      1863	revision.c	FUNCTION_62	ELSE_25	IF_31
0x50b0	      0xe96c120000	                           jmp 0x4006361	      1863	revision.c	FUNCTION_62	ELSE_25	IF_31
0x50b5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1864	revision.c	FUNCTION_62	ELSE_26	IF_32	CALL_62
0x50b9	      0xbe00000000	                              mov esi, 0	      1864	revision.c	FUNCTION_62	ELSE_26	IF_32	CALL_62
0x50be	          0x4889c7	                            mov rdi, rax	      1864	revision.c	FUNCTION_62	ELSE_26	IF_32	CALL_62
0x50c1	      0xe800000000	                          call 0x4005106	      1864	revision.c	FUNCTION_62	ELSE_26	IF_32	CALL_62
0x50c6	            0x85c0	                           test eax, eax	      1864	revision.c	FUNCTION_62	ELSE_26	IF_32	CALL_62
0x50c8	            0x7513	                           jne 0x400511d	      1864	revision.c	FUNCTION_62	ELSE_26	IF_32	CALL_62
0x50ca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1865	revision.c	FUNCTION_62	ELSE_26	IF_32
0x50ce	         0xfb65078	           movzx edx, byte [rax + 0x78] 	      1865	revision.c	FUNCTION_62	ELSE_26	IF_32
0x50d2	          0x83ca40	                            or edx, 0x40	      1865	revision.c	FUNCTION_62	ELSE_26	IF_32
0x50d5	          0x885078	               mov byte [rax + 0x78], dl	      1865	revision.c	FUNCTION_62	ELSE_26	IF_32
0x50d8	      0xe944120000	                           jmp 0x4006361	      1865	revision.c	FUNCTION_62	ELSE_26	IF_32
0x50dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1866	revision.c	FUNCTION_62	ELSE_27	IF_33	CALL_63
0x50e1	      0xbe00000000	                              mov esi, 0	      1866	revision.c	FUNCTION_62	ELSE_27	IF_33	CALL_63
0x50e6	          0x4889c7	                            mov rdi, rax	      1866	revision.c	FUNCTION_62	ELSE_27	IF_33	CALL_63
0x50e9	      0xe800000000	                          call 0x400512e	      1866	revision.c	FUNCTION_62	ELSE_27	IF_33	CALL_63
0x50ee	            0x85c0	                           test eax, eax	      1866	revision.c	FUNCTION_62	ELSE_27	IF_33	CALL_63
0x50f0	            0x7513	                           jne 0x4005145	      1866	revision.c	FUNCTION_62	ELSE_27	IF_33	CALL_63
0x50f2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1867	revision.c	FUNCTION_62	ELSE_27	IF_33
0x50f6	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      1867	revision.c	FUNCTION_62	ELSE_27	IF_33
0x50fa	          0x83ca40	                            or edx, 0x40	      1867	revision.c	FUNCTION_62	ELSE_27	IF_33
0x50fd	          0x885074	               mov byte [rax + 0x74], dl	      1867	revision.c	FUNCTION_62	ELSE_27	IF_33
0x5100	      0xe91c120000	                           jmp 0x4006361	      1867	revision.c	FUNCTION_62	ELSE_27	IF_33
0x5105	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1868	revision.c	FUNCTION_62	ELSE_28	IF_34	CALL_64
0x5109	      0xbe00000000	                              mov esi, 0	      1868	revision.c	FUNCTION_62	ELSE_28	IF_34	CALL_64
0x510e	          0x4889c7	                            mov rdi, rax	      1868	revision.c	FUNCTION_62	ELSE_28	IF_34	CALL_64
0x5111	      0xe800000000	                          call 0x4005156	      1868	revision.c	FUNCTION_62	ELSE_28	IF_34	CALL_64
0x5116	            0x85c0	                           test eax, eax	      1868	revision.c	FUNCTION_62	ELSE_28	IF_34	CALL_64
0x5118	            0x7513	                           jne 0x400516d	      1868	revision.c	FUNCTION_62	ELSE_28	IF_34	CALL_64
0x511a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1869	revision.c	FUNCTION_62	ELSE_28	IF_34
0x511e	    0xc780e0040000	              mov dword [rax + 0x4e0], 2	      1869	revision.c	FUNCTION_62	ELSE_28	IF_34
0x5128	      0xe9f4110000	                           jmp 0x4006361	      1869	revision.c	FUNCTION_62	ELSE_28	IF_34
0x512d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1870	revision.c	FUNCTION_62	ELSE_29	IF_35	CALL_65
0x5131	      0xbe00000000	                              mov esi, 0	      1870	revision.c	FUNCTION_62	ELSE_29	IF_35	CALL_65
0x5136	          0x4889c7	                            mov rdi, rax	      1870	revision.c	FUNCTION_62	ELSE_29	IF_35	CALL_65
0x5139	      0xe800000000	                          call 0x400517e	      1870	revision.c	FUNCTION_62	ELSE_29	IF_35	CALL_65
0x513e	            0x85c0	                           test eax, eax	      1870	revision.c	FUNCTION_62	ELSE_29	IF_35	CALL_65
0x5140	            0x7513	                           jne 0x4005195	      1870	revision.c	FUNCTION_62	ELSE_29	IF_35	CALL_65
0x5142	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1871	revision.c	FUNCTION_62	ELSE_29	IF_35
0x5146	    0xc780e4040000	              mov dword [rax + 0x4e4], 1	      1871	revision.c	FUNCTION_62	ELSE_29	IF_35
0x5150	      0xe9cc110000	                           jmp 0x4006361	      1871	revision.c	FUNCTION_62	ELSE_29	IF_35
0x5155	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1872	revision.c	FUNCTION_62	ELSE_30	IF_36	CALL_66
0x5159	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1872	revision.c	FUNCTION_62	ELSE_30	IF_36	CALL_66
0x515d	      0xbe00000000	                              mov esi, 0	      1872	revision.c	FUNCTION_62	ELSE_30	IF_36	CALL_66
0x5162	          0x4889c7	                            mov rdi, rax	      1872	revision.c	FUNCTION_62	ELSE_30	IF_36	CALL_66
0x5165	      0xe8a1aeffff	                    call sym.skip_prefix	      1872	revision.c	FUNCTION_62	ELSE_30	IF_36	CALL_66
0x516a	            0x85c0	                           test eax, eax	      1872	revision.c	FUNCTION_62	ELSE_30	IF_36	CALL_66
0x516c	            0x741d	                            je 0x40051cb	      1872	revision.c	FUNCTION_62	ELSE_30	IF_36	CALL_66
0x516e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1873	revision.c	FUNCTION_62	ELSE_30	IF_36	CALL_67
0x5172	          0x4889c7	                            mov rdi, rax	      1873	revision.c	FUNCTION_62	ELSE_30	IF_36	CALL_67
0x5175	      0xe800000000	                          call 0x40051ba	      1873	revision.c	FUNCTION_62	ELSE_30	IF_36	CALL_67
0x517a	            0x89c2	                            mov edx, eax	      1873	revision.c	FUNCTION_62	ELSE_30	IF_36	CALL_67
0x517c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1873	revision.c	FUNCTION_62	ELSE_30	IF_36	CALL_67
0x5180	    0x8990e0040000	            mov dword [rax + 0x4e0], edx	      1873	revision.c	FUNCTION_62	ELSE_30	IF_36	CALL_67
0x5186	      0xe996110000	                           jmp 0x4006361	      1873	revision.c	FUNCTION_62	ELSE_30	IF_36	CALL_67
0x518b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1874	revision.c	FUNCTION_62	ELSE_31	IF_37	CALL_68
0x518f	      0xbe00000000	                              mov esi, 0	      1874	revision.c	FUNCTION_62	ELSE_31	IF_37	CALL_68
0x5194	          0x4889c7	                            mov rdi, rax	      1874	revision.c	FUNCTION_62	ELSE_31	IF_37	CALL_68
0x5197	      0xe800000000	                          call 0x40051dc	      1874	revision.c	FUNCTION_62	ELSE_31	IF_37	CALL_68
0x519c	            0x85c0	                           test eax, eax	      1874	revision.c	FUNCTION_62	ELSE_31	IF_37	CALL_68
0x519e	            0x7513	                           jne 0x40051f3	      1874	revision.c	FUNCTION_62	ELSE_31	IF_37	CALL_68
0x51a0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1875	revision.c	FUNCTION_62	ELSE_31	IF_37
0x51a4	    0xc780e0040000	              mov dword [rax + 0x4e0], 0	      1875	revision.c	FUNCTION_62	ELSE_31	IF_37
0x51ae	      0xe96e110000	                           jmp 0x4006361	      1875	revision.c	FUNCTION_62	ELSE_31	IF_37
0x51b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1876	revision.c	FUNCTION_62	ELSE_32	IF_38	CALL_69
0x51b7	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1876	revision.c	FUNCTION_62	ELSE_32	IF_38	CALL_69
0x51bb	      0xbe00000000	                              mov esi, 0	      1876	revision.c	FUNCTION_62	ELSE_32	IF_38	CALL_69
0x51c0	          0x4889c7	                            mov rdi, rax	      1876	revision.c	FUNCTION_62	ELSE_32	IF_38	CALL_69
0x51c3	      0xe843aeffff	                    call sym.skip_prefix	      1876	revision.c	FUNCTION_62	ELSE_32	IF_38	CALL_69
0x51c8	            0x85c0	                           test eax, eax	      1876	revision.c	FUNCTION_62	ELSE_32	IF_38	CALL_69
0x51ca	            0x741d	                            je 0x4005229	      1876	revision.c	FUNCTION_62	ELSE_32	IF_38	CALL_69
0x51cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1877	revision.c	FUNCTION_62	ELSE_32	IF_38	CALL_70
0x51d0	          0x4889c7	                            mov rdi, rax	      1877	revision.c	FUNCTION_62	ELSE_32	IF_38	CALL_70
0x51d3	      0xe800000000	                          call 0x4005218	      1877	revision.c	FUNCTION_62	ELSE_32	IF_38	CALL_70
0x51d8	            0x89c2	                            mov edx, eax	      1877	revision.c	FUNCTION_62	ELSE_32	IF_38	CALL_70
0x51da	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1877	revision.c	FUNCTION_62	ELSE_32	IF_38	CALL_70
0x51de	    0x8990e4040000	            mov dword [rax + 0x4e4], edx	      1877	revision.c	FUNCTION_62	ELSE_32	IF_38	CALL_70
0x51e4	      0xe938110000	                           jmp 0x4006361	      1877	revision.c	FUNCTION_62	ELSE_32	IF_38	CALL_70
0x51e9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1878	revision.c	FUNCTION_62	ELSE_33	IF_39	CALL_71
0x51ed	      0xbe00000000	                              mov esi, 0	      1878	revision.c	FUNCTION_62	ELSE_33	IF_39	CALL_71
0x51f2	          0x4889c7	                            mov rdi, rax	      1878	revision.c	FUNCTION_62	ELSE_33	IF_39	CALL_71
0x51f5	      0xe800000000	                          call 0x400523a	      1878	revision.c	FUNCTION_62	ELSE_33	IF_39	CALL_71
0x51fa	            0x85c0	                           test eax, eax	      1878	revision.c	FUNCTION_62	ELSE_33	IF_39	CALL_71
0x51fc	            0x7513	                           jne 0x4005251	      1878	revision.c	FUNCTION_62	ELSE_33	IF_39	CALL_71
0x51fe	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1879	revision.c	FUNCTION_62	ELSE_33	IF_39
0x5202	    0xc780e4040000	    mov dword [rax + 0x4e4], 0xffffffff 	      1879	revision.c	FUNCTION_62	ELSE_33	IF_39
0x520c	      0xe910110000	                           jmp 0x4006361	      1879	revision.c	FUNCTION_62	ELSE_33	IF_39
0x5211	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1880	revision.c	FUNCTION_62	ELSE_34	IF_40	CALL_72
0x5215	      0xbe00000000	                              mov esi, 0	      1880	revision.c	FUNCTION_62	ELSE_34	IF_40	CALL_72
0x521a	          0x4889c7	                            mov rdi, rax	      1880	revision.c	FUNCTION_62	ELSE_34	IF_40	CALL_72
0x521d	      0xe800000000	                          call 0x4005262	      1880	revision.c	FUNCTION_62	ELSE_34	IF_40	CALL_72
0x5222	            0x85c0	                           test eax, eax	      1880	revision.c	FUNCTION_62	ELSE_34	IF_40	CALL_72
0x5224	            0x7516	                           jne 0x400527c	      1880	revision.c	FUNCTION_62	ELSE_34	IF_40	CALL_72
0x5226	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1881	revision.c	FUNCTION_62	ELSE_34	IF_40
0x522a	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      1881	revision.c	FUNCTION_62	ELSE_34	IF_40
0x522e	          0x83e2cf	                     and edx, 0xffffffcf	      1881	revision.c	FUNCTION_62	ELSE_34	IF_40
0x5231	          0x83ca10	                            or edx, 0x10	      1881	revision.c	FUNCTION_62	ELSE_34	IF_40
0x5234	          0x885076	               mov byte [rax + 0x76], dl	      1881	revision.c	FUNCTION_62	ELSE_34	IF_40
0x5237	      0xe9e5100000	                           jmp 0x4006361	      1881	revision.c	FUNCTION_62	ELSE_34	IF_40
0x523c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1882	revision.c	FUNCTION_62	ELSE_35	IF_41	CALL_73
0x5240	      0xbe00000000	                              mov esi, 0	      1882	revision.c	FUNCTION_62	ELSE_35	IF_41	CALL_73
0x5245	          0x4889c7	                            mov rdi, rax	      1882	revision.c	FUNCTION_62	ELSE_35	IF_41	CALL_73
0x5248	      0xe800000000	                          call 0x400528d	      1882	revision.c	FUNCTION_62	ELSE_35	IF_41	CALL_73
0x524d	            0x85c0	                           test eax, eax	      1882	revision.c	FUNCTION_62	ELSE_35	IF_41	CALL_73
0x524f	            0x7513	                           jne 0x40052a4	      1882	revision.c	FUNCTION_62	ELSE_35	IF_41	CALL_73
0x5251	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1883	revision.c	FUNCTION_62	ELSE_35	IF_41
0x5255	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      1883	revision.c	FUNCTION_62	ELSE_35	IF_41
0x5259	          0x83ca80	                      or edx, 0xffffff80	      1883	revision.c	FUNCTION_62	ELSE_35	IF_41
0x525c	          0x885076	               mov byte [rax + 0x76], dl	      1883	revision.c	FUNCTION_62	ELSE_35	IF_41
0x525f	      0xe9bd100000	                           jmp 0x4006361	      1883	revision.c	FUNCTION_62	ELSE_35	IF_41
0x5264	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1884	revision.c	FUNCTION_62	ELSE_36	IF_42	CALL_74
0x5268	      0xbe00000000	                              mov esi, 0	      1884	revision.c	FUNCTION_62	ELSE_36	IF_42	CALL_74
0x526d	          0x4889c7	                            mov rdi, rax	      1884	revision.c	FUNCTION_62	ELSE_36	IF_42	CALL_74
0x5270	      0xe800000000	                          call 0x40052b5	      1884	revision.c	FUNCTION_62	ELSE_36	IF_42	CALL_74
0x5275	            0x85c0	                           test eax, eax	      1884	revision.c	FUNCTION_62	ELSE_36	IF_42	CALL_74
0x5277	            0x7531	                           jne 0x40052ea	      1884	revision.c	FUNCTION_62	ELSE_36	IF_42	CALL_74
0x5279	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1885	revision.c	FUNCTION_62	ELSE_36	IF_42	IF_43
0x527d	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      1885	revision.c	FUNCTION_62	ELSE_36	IF_42	IF_43
0x5281	          0x83e002	                              and eax, 2	      1885	revision.c	FUNCTION_62	ELSE_36	IF_42	IF_43
0x5284	            0x84c0	                             test al, al	      1885	revision.c	FUNCTION_62	ELSE_36	IF_42	IF_43
0x5286	            0x740f	                            je 0x40052d7	      1885	revision.c	FUNCTION_62	ELSE_36	IF_42	IF_43
0x5288	      0xbf00000000	                              mov edi, 0	      1886	revision.c	FUNCTION_62	ELSE_36	IF_42	IF_43	CALL_75
0x528d	      0xb800000000	                              mov eax, 0	      1886	revision.c	FUNCTION_62	ELSE_36	IF_42	IF_43	CALL_75
0x5292	      0xe800000000	                          call 0x40052d7	      1886	revision.c	FUNCTION_62	ELSE_36	IF_42	IF_43	CALL_75
0x5297	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1888	revision.c	FUNCTION_62	ELSE_36	IF_42
0x529b	         0xfb65077	           movzx edx, byte [rax + 0x77] 	      1888	revision.c	FUNCTION_62	ELSE_36	IF_42
0x529f	          0x83ca01	                               or edx, 1	      1888	revision.c	FUNCTION_62	ELSE_36	IF_42
0x52a2	          0x885077	               mov byte [rax + 0x77], dl	      1888	revision.c	FUNCTION_62	ELSE_36	IF_42
0x52a5	      0xe977100000	                           jmp 0x4006361	      1888	revision.c	FUNCTION_62	ELSE_36	IF_42
0x52aa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1889	revision.c	FUNCTION_62	ELSE_37	IF_44	CALL_76
0x52ae	      0xbe00000000	                              mov esi, 0	      1889	revision.c	FUNCTION_62	ELSE_37	IF_44	CALL_76
0x52b3	          0x4889c7	                            mov rdi, rax	      1889	revision.c	FUNCTION_62	ELSE_37	IF_44	CALL_76
0x52b6	      0xe800000000	                          call 0x40052fb	      1889	revision.c	FUNCTION_62	ELSE_37	IF_44	CALL_76
0x52bb	            0x85c0	                           test eax, eax	      1889	revision.c	FUNCTION_62	ELSE_37	IF_44	CALL_76
0x52bd	            0x7531	                           jne 0x4005330	      1889	revision.c	FUNCTION_62	ELSE_37	IF_44	CALL_76
0x52bf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1890	revision.c	FUNCTION_62	ELSE_37	IF_44	IF_45
0x52c3	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      1890	revision.c	FUNCTION_62	ELSE_37	IF_44	IF_45
0x52c7	          0x83e001	                              and eax, 1	      1890	revision.c	FUNCTION_62	ELSE_37	IF_44	IF_45
0x52ca	            0x84c0	                             test al, al	      1890	revision.c	FUNCTION_62	ELSE_37	IF_44	IF_45
0x52cc	            0x740f	                            je 0x400531d	      1890	revision.c	FUNCTION_62	ELSE_37	IF_44	IF_45
0x52ce	      0xbf00000000	                              mov edi, 0	      1891	revision.c	FUNCTION_62	ELSE_37	IF_44	CALL_77
0x52d3	      0xb800000000	                              mov eax, 0	      1891	revision.c	FUNCTION_62	ELSE_37	IF_44	CALL_77
0x52d8	      0xe800000000	                          call 0x400531d	      1891	revision.c	FUNCTION_62	ELSE_37	IF_44	CALL_77
0x52dd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1892	revision.c	FUNCTION_62	ELSE_37	IF_44
0x52e1	         0xfb65077	           movzx edx, byte [rax + 0x77] 	      1892	revision.c	FUNCTION_62	ELSE_37	IF_44
0x52e5	          0x83ca02	                               or edx, 2	      1892	revision.c	FUNCTION_62	ELSE_37	IF_44
0x52e8	          0x885077	               mov byte [rax + 0x77], dl	      1892	revision.c	FUNCTION_62	ELSE_37	IF_44
0x52eb	      0xe931100000	                           jmp 0x4006361	      1892	revision.c	FUNCTION_62	ELSE_37	IF_44
0x52f0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1893	revision.c	FUNCTION_62	ELSE_38	IF_46	CALL_78
0x52f4	      0xbe00000000	                              mov esi, 0	      1893	revision.c	FUNCTION_62	ELSE_38	IF_46	CALL_78
0x52f9	          0x4889c7	                            mov rdi, rax	      1893	revision.c	FUNCTION_62	ELSE_38	IF_46	CALL_78
0x52fc	      0xe800000000	                          call 0x4005341	      1893	revision.c	FUNCTION_62	ELSE_38	IF_46	CALL_78
0x5301	            0x85c0	                           test eax, eax	      1893	revision.c	FUNCTION_62	ELSE_38	IF_46	CALL_78
0x5303	            0x755b	                           jne 0x40053a0	      1893	revision.c	FUNCTION_62	ELSE_38	IF_46	CALL_78
0x5305	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1894	revision.c	FUNCTION_62	ELSE_38	IF_46	IF_47
0x5309	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      1894	revision.c	FUNCTION_62	ELSE_38	IF_46	IF_47
0x530d	          0x83e001	                              and eax, 1	      1894	revision.c	FUNCTION_62	ELSE_38	IF_46	IF_47
0x5310	            0x84c0	                             test al, al	      1894	revision.c	FUNCTION_62	ELSE_38	IF_46	IF_47
0x5312	            0x740f	                            je 0x4005363	      1894	revision.c	FUNCTION_62	ELSE_38	IF_46	IF_47
0x5314	      0xbf00000000	                              mov edi, 0	      1895	revision.c	FUNCTION_62	ELSE_38	IF_46	CALL_79
0x5319	      0xb800000000	                              mov eax, 0	      1895	revision.c	FUNCTION_62	ELSE_38	IF_46	CALL_79
0x531e	      0xe800000000	                          call 0x4005363	      1895	revision.c	FUNCTION_62	ELSE_38	IF_46	CALL_79
0x5323	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1896	revision.c	FUNCTION_62	ELSE_38	IF_46
0x5327	         0xfb65078	           movzx edx, byte [rax + 0x78] 	      1896	revision.c	FUNCTION_62	ELSE_38	IF_46
0x532b	          0x83ca02	                               or edx, 2	      1896	revision.c	FUNCTION_62	ELSE_38	IF_46
0x532e	          0x885078	               mov byte [rax + 0x78], dl	      1896	revision.c	FUNCTION_62	ELSE_38	IF_46
0x5331	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1897	revision.c	FUNCTION_62	ELSE_38	IF_46
0x5335	         0xfb65077	           movzx edx, byte [rax + 0x77] 	      1897	revision.c	FUNCTION_62	ELSE_38	IF_46
0x5339	          0x83ca02	                               or edx, 2	      1897	revision.c	FUNCTION_62	ELSE_38	IF_46
0x533c	          0x885077	               mov byte [rax + 0x77], dl	      1897	revision.c	FUNCTION_62	ELSE_38	IF_46
0x533f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1898	revision.c	FUNCTION_62	ELSE_38	IF_46
0x5343	    0xc780e4040000	              mov dword [rax + 0x4e4], 1	      1898	revision.c	FUNCTION_62	ELSE_38	IF_46
0x534d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1899	revision.c	FUNCTION_62	ELSE_38	IF_46
0x5351	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      1899	revision.c	FUNCTION_62	ELSE_38	IF_46
0x5355	          0x83ca04	                               or edx, 4	      1899	revision.c	FUNCTION_62	ELSE_38	IF_46
0x5358	          0x885076	               mov byte [rax + 0x76], dl	      1899	revision.c	FUNCTION_62	ELSE_38	IF_46
0x535b	      0xe9c10f0000	                           jmp 0x4006361	      1899	revision.c	FUNCTION_62	ELSE_38	IF_46
0x5360	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1900	revision.c	FUNCTION_62	ELSE_39	IF_48	CALL_80
0x5364	      0xbe00000000	                              mov esi, 0	      1900	revision.c	FUNCTION_62	ELSE_39	IF_48	CALL_80
0x5369	          0x4889c7	                            mov rdi, rax	      1900	revision.c	FUNCTION_62	ELSE_39	IF_48	CALL_80
0x536c	      0xe800000000	                          call 0x40053b1	      1900	revision.c	FUNCTION_62	ELSE_39	IF_48	CALL_80
0x5371	            0x85c0	                           test eax, eax	      1900	revision.c	FUNCTION_62	ELSE_39	IF_48	CALL_80
0x5373	            0x7513	                           jne 0x40053c8	      1900	revision.c	FUNCTION_62	ELSE_39	IF_48	CALL_80
0x5375	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1901	revision.c	FUNCTION_62	ELSE_39	IF_48
0x5379	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      1901	revision.c	FUNCTION_62	ELSE_39	IF_48
0x537d	          0x83ca40	                            or edx, 0x40	      1901	revision.c	FUNCTION_62	ELSE_39	IF_48
0x5380	          0x885076	               mov byte [rax + 0x76], dl	      1901	revision.c	FUNCTION_62	ELSE_39	IF_48
0x5383	      0xe9990f0000	                           jmp 0x4006361	      1901	revision.c	FUNCTION_62	ELSE_39	IF_48
0x5388	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1902	revision.c	FUNCTION_62	ELSE_40	IF_49	CALL_81
0x538c	      0xbe00000000	                              mov esi, 0	      1902	revision.c	FUNCTION_62	ELSE_40	IF_49	CALL_81
0x5391	          0x4889c7	                            mov rdi, rax	      1902	revision.c	FUNCTION_62	ELSE_40	IF_49	CALL_81
0x5394	      0xe800000000	                          call 0x40053d9	      1902	revision.c	FUNCTION_62	ELSE_40	IF_49	CALL_81
0x5399	            0x85c0	                           test eax, eax	      1902	revision.c	FUNCTION_62	ELSE_40	IF_49	CALL_81
0x539b	            0x753f	                           jne 0x400541c	      1902	revision.c	FUNCTION_62	ELSE_40	IF_49	CALL_81
0x539d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1903	revision.c	FUNCTION_62	ELSE_40	IF_49	IF_50
0x53a1	         0xfb64078	           movzx eax, byte [rax + 0x78] 	      1903	revision.c	FUNCTION_62	ELSE_40	IF_49	IF_50
0x53a5	          0x83e001	                              and eax, 1	      1903	revision.c	FUNCTION_62	ELSE_40	IF_49	IF_50
0x53a8	            0x84c0	                             test al, al	      1903	revision.c	FUNCTION_62	ELSE_40	IF_49	IF_50
0x53aa	            0x740f	                            je 0x40053fb	      1903	revision.c	FUNCTION_62	ELSE_40	IF_49	IF_50
0x53ac	      0xbf00000000	                              mov edi, 0	      1904	revision.c	FUNCTION_62	ELSE_40	IF_49	CALL_82
0x53b1	      0xb800000000	                              mov eax, 0	      1904	revision.c	FUNCTION_62	ELSE_40	IF_49	CALL_82
0x53b6	      0xe800000000	                          call 0x40053fb	      1904	revision.c	FUNCTION_62	ELSE_40	IF_49	CALL_82
0x53bb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1905	revision.c	FUNCTION_62	ELSE_40	IF_49
0x53bf	         0xfb65078	           movzx edx, byte [rax + 0x78] 	      1905	revision.c	FUNCTION_62	ELSE_40	IF_49
0x53c3	          0x83ca02	                               or edx, 2	      1905	revision.c	FUNCTION_62	ELSE_40	IF_49
0x53c6	          0x885078	               mov byte [rax + 0x78], dl	      1905	revision.c	FUNCTION_62	ELSE_40	IF_49
0x53c9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1906	revision.c	FUNCTION_62	ELSE_40	IF_49
0x53cd	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      1906	revision.c	FUNCTION_62	ELSE_40	IF_49
0x53d1	          0x83ca04	                               or edx, 4	      1906	revision.c	FUNCTION_62	ELSE_40	IF_49
0x53d4	          0x885076	               mov byte [rax + 0x76], dl	      1906	revision.c	FUNCTION_62	ELSE_40	IF_49
0x53d7	      0xe9450f0000	                           jmp 0x4006361	      1906	revision.c	FUNCTION_62	ELSE_40	IF_49
0x53dc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1907	revision.c	FUNCTION_62	ELSE_41	IF_51	CALL_83
0x53e0	      0xbe00000000	                              mov esi, 0	      1907	revision.c	FUNCTION_62	ELSE_41	IF_51	CALL_83
0x53e5	          0x4889c7	                            mov rdi, rax	      1907	revision.c	FUNCTION_62	ELSE_41	IF_51	CALL_83
0x53e8	      0xe800000000	                          call 0x400542d	      1907	revision.c	FUNCTION_62	ELSE_41	IF_51	CALL_83
0x53ed	            0x85c0	                           test eax, eax	      1907	revision.c	FUNCTION_62	ELSE_41	IF_51	CALL_83
0x53ef	            0x753f	                           jne 0x4005470	      1907	revision.c	FUNCTION_62	ELSE_41	IF_51	CALL_83
0x53f1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1908	revision.c	FUNCTION_62	ELSE_41	IF_51	IF_52
0x53f5	         0xfb64078	           movzx eax, byte [rax + 0x78] 	      1908	revision.c	FUNCTION_62	ELSE_41	IF_51	IF_52
0x53f9	          0x83e002	                              and eax, 2	      1908	revision.c	FUNCTION_62	ELSE_41	IF_51	IF_52
0x53fc	            0x84c0	                             test al, al	      1908	revision.c	FUNCTION_62	ELSE_41	IF_51	IF_52
0x53fe	            0x740f	                            je 0x400544f	      1908	revision.c	FUNCTION_62	ELSE_41	IF_51	IF_52
0x5400	      0xbf00000000	                              mov edi, 0	      1909	revision.c	FUNCTION_62	ELSE_41	IF_51	CALL_84
0x5405	      0xb800000000	                              mov eax, 0	      1909	revision.c	FUNCTION_62	ELSE_41	IF_51	CALL_84
0x540a	      0xe800000000	                          call 0x400544f	      1909	revision.c	FUNCTION_62	ELSE_41	IF_51	CALL_84
0x540f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1910	revision.c	FUNCTION_62	ELSE_41	IF_51
0x5413	         0xfb65078	           movzx edx, byte [rax + 0x78] 	      1910	revision.c	FUNCTION_62	ELSE_41	IF_51
0x5417	          0x83ca01	                               or edx, 1	      1910	revision.c	FUNCTION_62	ELSE_41	IF_51
0x541a	          0x885078	               mov byte [rax + 0x78], dl	      1910	revision.c	FUNCTION_62	ELSE_41	IF_51
0x541d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1911	revision.c	FUNCTION_62	ELSE_41	IF_51
0x5421	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      1911	revision.c	FUNCTION_62	ELSE_41	IF_51
0x5425	          0x83ca04	                               or edx, 4	      1911	revision.c	FUNCTION_62	ELSE_41	IF_51
0x5428	          0x885076	               mov byte [rax + 0x76], dl	      1911	revision.c	FUNCTION_62	ELSE_41	IF_51
0x542b	      0xe9f10e0000	                           jmp 0x4006361	      1911	revision.c	FUNCTION_62	ELSE_41	IF_51
0x5430	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1912	revision.c	FUNCTION_62	ELSE_42	IF_53	CALL_85
0x5434	      0xbe00000000	                              mov esi, 0	      1912	revision.c	FUNCTION_62	ELSE_42	IF_53	CALL_85
0x5439	          0x4889c7	                            mov rdi, rax	      1912	revision.c	FUNCTION_62	ELSE_42	IF_53	CALL_85
0x543c	      0xe800000000	                          call 0x4005481	      1912	revision.c	FUNCTION_62	ELSE_42	IF_53	CALL_85
0x5441	            0x85c0	                           test eax, eax	      1912	revision.c	FUNCTION_62	ELSE_42	IF_53	CALL_85
0x5443	            0x752f	                           jne 0x40054b4	      1912	revision.c	FUNCTION_62	ELSE_42	IF_53	CALL_85
0x5445	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1913	revision.c	FUNCTION_62	ELSE_42	IF_53
0x5449	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1913	revision.c	FUNCTION_62	ELSE_42	IF_53
0x544d	          0x83ca10	                            or edx, 0x10	      1913	revision.c	FUNCTION_62	ELSE_42	IF_53
0x5450	          0x885075	               mov byte [rax + 0x75], dl	      1913	revision.c	FUNCTION_62	ELSE_42	IF_53
0x5453	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1914	revision.c	FUNCTION_62	ELSE_42	IF_53
0x5457	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1914	revision.c	FUNCTION_62	ELSE_42	IF_53
0x545b	          0x83ca20	                            or edx, 0x20	      1914	revision.c	FUNCTION_62	ELSE_42	IF_53
0x545e	          0x885075	               mov byte [rax + 0x75], dl	      1914	revision.c	FUNCTION_62	ELSE_42	IF_53
0x5461	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1915	revision.c	FUNCTION_62	ELSE_42	IF_53
0x5465	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1915	revision.c	FUNCTION_62	ELSE_42	IF_53
0x5469	          0x83ca40	                            or edx, 0x40	      1915	revision.c	FUNCTION_62	ELSE_42	IF_53
0x546c	          0x885075	               mov byte [rax + 0x75], dl	      1915	revision.c	FUNCTION_62	ELSE_42	IF_53
0x546f	      0xe9ad0e0000	                           jmp 0x4006361	      1915	revision.c	FUNCTION_62	ELSE_42	IF_53
0x5474	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1916	revision.c	FUNCTION_62	ELSE_43	IF_54	CALL_86
0x5478	      0xbe00000000	                              mov esi, 0	      1916	revision.c	FUNCTION_62	ELSE_43	IF_54	CALL_86
0x547d	          0x4889c7	                            mov rdi, rax	      1916	revision.c	FUNCTION_62	ELSE_43	IF_54	CALL_86
0x5480	      0xe800000000	                          call 0x40054c5	      1916	revision.c	FUNCTION_62	ELSE_43	IF_54	CALL_86
0x5485	            0x85c0	                           test eax, eax	      1916	revision.c	FUNCTION_62	ELSE_43	IF_54	CALL_86
0x5487	            0x753d	                           jne 0x4005506	      1916	revision.c	FUNCTION_62	ELSE_43	IF_54	CALL_86
0x5489	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1917	revision.c	FUNCTION_62	ELSE_43	IF_54
0x548d	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1917	revision.c	FUNCTION_62	ELSE_43	IF_54
0x5491	          0x83ca10	                            or edx, 0x10	      1917	revision.c	FUNCTION_62	ELSE_43	IF_54
0x5494	          0x885075	               mov byte [rax + 0x75], dl	      1917	revision.c	FUNCTION_62	ELSE_43	IF_54
0x5497	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1918	revision.c	FUNCTION_62	ELSE_43	IF_54
0x549b	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1918	revision.c	FUNCTION_62	ELSE_43	IF_54
0x549f	          0x83ca20	                            or edx, 0x20	      1918	revision.c	FUNCTION_62	ELSE_43	IF_54
0x54a2	          0x885075	               mov byte [rax + 0x75], dl	      1918	revision.c	FUNCTION_62	ELSE_43	IF_54
0x54a5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1919	revision.c	FUNCTION_62	ELSE_43	IF_54
0x54a9	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1919	revision.c	FUNCTION_62	ELSE_43	IF_54
0x54ad	          0x83ca40	                            or edx, 0x40	      1919	revision.c	FUNCTION_62	ELSE_43	IF_54
0x54b0	          0x885075	               mov byte [rax + 0x75], dl	      1919	revision.c	FUNCTION_62	ELSE_43	IF_54
0x54b3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1920	revision.c	FUNCTION_62	ELSE_43	IF_54
0x54b7	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      1920	revision.c	FUNCTION_62	ELSE_43	IF_54
0x54bb	          0x83ca01	                               or edx, 1	      1920	revision.c	FUNCTION_62	ELSE_43	IF_54
0x54be	          0x885076	               mov byte [rax + 0x76], dl	      1920	revision.c	FUNCTION_62	ELSE_43	IF_54
0x54c1	      0xe95b0e0000	                           jmp 0x4006361	      1920	revision.c	FUNCTION_62	ELSE_43	IF_54
0x54c6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1921	revision.c	FUNCTION_62	ELSE_44	IF_55	CALL_87
0x54ca	      0xbe00000000	                              mov esi, 0	      1921	revision.c	FUNCTION_62	ELSE_44	IF_55	CALL_87
0x54cf	          0x4889c7	                            mov rdi, rax	      1921	revision.c	FUNCTION_62	ELSE_44	IF_55	CALL_87
0x54d2	      0xe800000000	                          call 0x4005517	      1921	revision.c	FUNCTION_62	ELSE_44	IF_55	CALL_87
0x54d7	            0x85c0	                           test eax, eax	      1921	revision.c	FUNCTION_62	ELSE_44	IF_55	CALL_87
0x54d9	            0x754b	                           jne 0x4005566	      1921	revision.c	FUNCTION_62	ELSE_44	IF_55	CALL_87
0x54db	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1922	revision.c	FUNCTION_62	ELSE_44	IF_55
0x54df	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1922	revision.c	FUNCTION_62	ELSE_44	IF_55
0x54e3	          0x83ca10	                            or edx, 0x10	      1922	revision.c	FUNCTION_62	ELSE_44	IF_55
0x54e6	          0x885075	               mov byte [rax + 0x75], dl	      1922	revision.c	FUNCTION_62	ELSE_44	IF_55
0x54e9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1923	revision.c	FUNCTION_62	ELSE_44	IF_55
0x54ed	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1923	revision.c	FUNCTION_62	ELSE_44	IF_55
0x54f1	          0x83ca20	                            or edx, 0x20	      1923	revision.c	FUNCTION_62	ELSE_44	IF_55
0x54f4	          0x885075	               mov byte [rax + 0x75], dl	      1923	revision.c	FUNCTION_62	ELSE_44	IF_55
0x54f7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1924	revision.c	FUNCTION_62	ELSE_44	IF_55
0x54fb	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1924	revision.c	FUNCTION_62	ELSE_44	IF_55
0x54ff	          0x83ca40	                            or edx, 0x40	      1924	revision.c	FUNCTION_62	ELSE_44	IF_55
0x5502	          0x885075	               mov byte [rax + 0x75], dl	      1924	revision.c	FUNCTION_62	ELSE_44	IF_55
0x5505	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1925	revision.c	FUNCTION_62	ELSE_44	IF_55
0x5509	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      1925	revision.c	FUNCTION_62	ELSE_44	IF_55
0x550d	          0x83ca01	                               or edx, 1	      1925	revision.c	FUNCTION_62	ELSE_44	IF_55
0x5510	          0x885076	               mov byte [rax + 0x76], dl	      1925	revision.c	FUNCTION_62	ELSE_44	IF_55
0x5513	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1926	revision.c	FUNCTION_62	ELSE_44	IF_55
0x5517	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      1926	revision.c	FUNCTION_62	ELSE_44	IF_55
0x551b	          0x83ca02	                               or edx, 2	      1926	revision.c	FUNCTION_62	ELSE_44	IF_55
0x551e	          0x885076	               mov byte [rax + 0x76], dl	      1926	revision.c	FUNCTION_62	ELSE_44	IF_55
0x5521	      0xe9fb0d0000	                           jmp 0x4006361	      1926	revision.c	FUNCTION_62	ELSE_44	IF_55
0x5526	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1927	revision.c	FUNCTION_62	ELSE_45	IF_56	CALL_88
0x552a	      0xbe00000000	                              mov esi, 0	      1927	revision.c	FUNCTION_62	ELSE_45	IF_56	CALL_88
0x552f	          0x4889c7	                            mov rdi, rax	      1927	revision.c	FUNCTION_62	ELSE_45	IF_56	CALL_88
0x5532	      0xe800000000	                          call 0x4005577	      1927	revision.c	FUNCTION_62	ELSE_45	IF_56	CALL_88
0x5537	            0x85c0	                           test eax, eax	      1927	revision.c	FUNCTION_62	ELSE_45	IF_56	CALL_88
0x5539	            0x753d	                           jne 0x40055b8	      1927	revision.c	FUNCTION_62	ELSE_45	IF_56	CALL_88
0x553b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1928	revision.c	FUNCTION_62	ELSE_45	IF_56
0x553f	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1928	revision.c	FUNCTION_62	ELSE_45	IF_56
0x5543	          0x83ca10	                            or edx, 0x10	      1928	revision.c	FUNCTION_62	ELSE_45	IF_56
0x5546	          0x885075	               mov byte [rax + 0x75], dl	      1928	revision.c	FUNCTION_62	ELSE_45	IF_56
0x5549	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1929	revision.c	FUNCTION_62	ELSE_45	IF_56
0x554d	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1929	revision.c	FUNCTION_62	ELSE_45	IF_56
0x5551	          0x83ca20	                            or edx, 0x20	      1929	revision.c	FUNCTION_62	ELSE_45	IF_56
0x5554	          0x885075	               mov byte [rax + 0x75], dl	      1929	revision.c	FUNCTION_62	ELSE_45	IF_56
0x5557	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1930	revision.c	FUNCTION_62	ELSE_45	IF_56
0x555b	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1930	revision.c	FUNCTION_62	ELSE_45	IF_56
0x555f	          0x83ca40	                            or edx, 0x40	      1930	revision.c	FUNCTION_62	ELSE_45	IF_56
0x5562	          0x885075	               mov byte [rax + 0x75], dl	      1930	revision.c	FUNCTION_62	ELSE_45	IF_56
0x5565	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1931	revision.c	FUNCTION_62	ELSE_45	IF_56
0x5569	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      1931	revision.c	FUNCTION_62	ELSE_45	IF_56
0x556d	          0x83ca80	                      or edx, 0xffffff80	      1931	revision.c	FUNCTION_62	ELSE_45	IF_56
0x5570	          0x885075	               mov byte [rax + 0x75], dl	      1931	revision.c	FUNCTION_62	ELSE_45	IF_56
0x5573	      0xe9a90d0000	                           jmp 0x4006361	      1931	revision.c	FUNCTION_62	ELSE_45	IF_56
0x5578	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1932	revision.c	FUNCTION_62	ELSE_46	IF_57	CALL_89
0x557c	      0xbe00000000	                              mov esi, 0	      1932	revision.c	FUNCTION_62	ELSE_46	IF_57	CALL_89
0x5581	          0x4889c7	                            mov rdi, rax	      1932	revision.c	FUNCTION_62	ELSE_46	IF_57	CALL_89
0x5584	      0xe800000000	                          call 0x40055c9	      1932	revision.c	FUNCTION_62	ELSE_46	IF_57	CALL_89
0x5589	            0x85c0	                           test eax, eax	      1932	revision.c	FUNCTION_62	ELSE_46	IF_57	CALL_89
0x558b	            0x7513	                           jne 0x40055e0	      1932	revision.c	FUNCTION_62	ELSE_46	IF_57	CALL_89
0x558d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1933	revision.c	FUNCTION_62	ELSE_46	IF_57
0x5591	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      1933	revision.c	FUNCTION_62	ELSE_46	IF_57
0x5595	          0x83ca08	                               or edx, 8	      1933	revision.c	FUNCTION_62	ELSE_46	IF_57
0x5598	          0x885076	               mov byte [rax + 0x76], dl	      1933	revision.c	FUNCTION_62	ELSE_46	IF_57
0x559b	      0xe9810d0000	                           jmp 0x4006361	      1933	revision.c	FUNCTION_62	ELSE_46	IF_57
0x55a0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1934	revision.c	FUNCTION_62	ELSE_47	IF_58	CALL_90
0x55a4	      0xbe00000000	                              mov esi, 0	      1934	revision.c	FUNCTION_62	ELSE_47	IF_58	CALL_90
0x55a9	          0x4889c7	                            mov rdi, rax	      1934	revision.c	FUNCTION_62	ELSE_47	IF_58	CALL_90
0x55ac	      0xe800000000	                          call 0x40055f1	      1934	revision.c	FUNCTION_62	ELSE_47	IF_58	CALL_90
0x55b1	            0x85c0	                           test eax, eax	      1934	revision.c	FUNCTION_62	ELSE_47	IF_58	CALL_90
0x55b3	            0x740f	                            je 0x4005604	      1934	revision.c	FUNCTION_62	ELSE_47	IF_58	CALL_90
0x55b5	      0xbf00000000	                              mov edi, 0	      1935	revision.c	FUNCTION_62	ELSE_47	IF_58	CALL_91
0x55ba	      0xb800000000	                              mov eax, 0	      1935	revision.c	FUNCTION_62	ELSE_47	IF_58	CALL_91
0x55bf	      0xe800000000	                          call 0x4005604	      1935	revision.c	FUNCTION_62	ELSE_47	IF_58	CALL_91
0x55c4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1936	revision.c	FUNCTION_62	ELSE_48	IF_59	CALL_92
0x55c8	      0xbe00000000	                              mov esi, 0	      1936	revision.c	FUNCTION_62	ELSE_48	IF_59	CALL_92
0x55cd	          0x4889c7	                            mov rdi, rax	      1936	revision.c	FUNCTION_62	ELSE_48	IF_59	CALL_92
0x55d0	      0xe800000000	                          call 0x4005615	      1936	revision.c	FUNCTION_62	ELSE_48	IF_59	CALL_92
0x55d5	            0x85c0	                           test eax, eax	      1936	revision.c	FUNCTION_62	ELSE_48	IF_59	CALL_92
0x55d7	            0x7527	                           jne 0x4005640	      1936	revision.c	FUNCTION_62	ELSE_48	IF_59	CALL_92
0x55d9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1937	revision.c	FUNCTION_62	ELSE_48	IF_59
0x55dd	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      1937	revision.c	FUNCTION_62	ELSE_48	IF_59
0x55e1	          0x83ca01	                               or edx, 1	      1937	revision.c	FUNCTION_62	ELSE_48	IF_59
0x55e4	          0x885079	               mov byte [rax + 0x79], dl	      1937	revision.c	FUNCTION_62	ELSE_48	IF_59
0x55e7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1938	revision.c	FUNCTION_62	ELSE_48	IF_59
0x55eb	     0xfb690300500	          movzx edx, byte [rax + 0x530] 	      1938	revision.c	FUNCTION_62	ELSE_48	IF_59
0x55f2	          0x83ca01	                               or edx, 1	      1938	revision.c	FUNCTION_62	ELSE_48	IF_59
0x55f5	    0x889030050000	              mov byte [rax + 0x530], dl	      1938	revision.c	FUNCTION_62	ELSE_48	IF_59
0x55fb	      0xe9210d0000	                           jmp 0x4006361	      1938	revision.c	FUNCTION_62	ELSE_48	IF_59
0x5600	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1939	revision.c	FUNCTION_62	ELSE_49	IF_60	CALL_93
0x5604	      0xbe00000000	                              mov esi, 0	      1939	revision.c	FUNCTION_62	ELSE_49	IF_60	CALL_93
0x5609	          0x4889c7	                            mov rdi, rax	      1939	revision.c	FUNCTION_62	ELSE_49	IF_60	CALL_93
0x560c	      0xe800000000	                          call 0x4005651	      1939	revision.c	FUNCTION_62	ELSE_49	IF_60	CALL_93
0x5611	            0x85c0	                           test eax, eax	      1939	revision.c	FUNCTION_62	ELSE_49	IF_60	CALL_93
0x5613	            0x753b	                           jne 0x4005690	      1939	revision.c	FUNCTION_62	ELSE_49	IF_60	CALL_93
0x5615	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1940	revision.c	FUNCTION_62	ELSE_49	IF_60
0x5619	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      1940	revision.c	FUNCTION_62	ELSE_49	IF_60
0x561d	          0x83ca01	                               or edx, 1	      1940	revision.c	FUNCTION_62	ELSE_49	IF_60
0x5620	          0x885079	               mov byte [rax + 0x79], dl	      1940	revision.c	FUNCTION_62	ELSE_49	IF_60
0x5623	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1941	revision.c	FUNCTION_62	ELSE_49	IF_60
0x5627	     0xfb690300500	          movzx edx, byte [rax + 0x530] 	      1941	revision.c	FUNCTION_62	ELSE_49	IF_60
0x562e	          0x83ca01	                               or edx, 1	      1941	revision.c	FUNCTION_62	ELSE_49	IF_60
0x5631	    0x889030050000	              mov byte [rax + 0x530], dl	      1941	revision.c	FUNCTION_62	ELSE_49	IF_60
0x5637	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1942	revision.c	FUNCTION_62	ELSE_49	IF_60
0x563b	     0xfb690300500	          movzx edx, byte [rax + 0x530] 	      1942	revision.c	FUNCTION_62	ELSE_49	IF_60
0x5642	          0x83ca02	                               or edx, 2	      1942	revision.c	FUNCTION_62	ELSE_49	IF_60
0x5645	    0x889030050000	              mov byte [rax + 0x530], dl	      1942	revision.c	FUNCTION_62	ELSE_49	IF_60
0x564b	      0xe9d10c0000	                           jmp 0x4006361	      1942	revision.c	FUNCTION_62	ELSE_49	IF_60
0x5650	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1943	revision.c	FUNCTION_62	ELSE_50	IF_61	CALL_94
0x5654	      0xbe00000000	                              mov esi, 0	      1943	revision.c	FUNCTION_62	ELSE_50	IF_61	CALL_94
0x5659	          0x4889c7	                            mov rdi, rax	      1943	revision.c	FUNCTION_62	ELSE_50	IF_61	CALL_94
0x565c	      0xe800000000	                          call 0x40056a1	      1943	revision.c	FUNCTION_62	ELSE_50	IF_61	CALL_94
0x5661	            0x85c0	                           test eax, eax	      1943	revision.c	FUNCTION_62	ELSE_50	IF_61	CALL_94
0x5663	            0x7513	                           jne 0x40056b8	      1943	revision.c	FUNCTION_62	ELSE_50	IF_61	CALL_94
0x5665	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1944	revision.c	FUNCTION_62	ELSE_50	IF_61
0x5669	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      1944	revision.c	FUNCTION_62	ELSE_50	IF_61
0x566d	          0x83e2df	                     and edx, 0xffffffdf	      1944	revision.c	FUNCTION_62	ELSE_50	IF_61
0x5670	          0x885079	               mov byte [rax + 0x79], dl	      1944	revision.c	FUNCTION_62	ELSE_50	IF_61
0x5673	      0xe9a90c0000	                           jmp 0x4006361	      1944	revision.c	FUNCTION_62	ELSE_50	IF_61
0x5678	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1945	revision.c	FUNCTION_62	ELSE_51	IF_62	CALL_95
0x567c	      0xbe00000000	                              mov esi, 0	      1945	revision.c	FUNCTION_62	ELSE_51	IF_62	CALL_95
0x5681	          0x4889c7	                            mov rdi, rax	      1945	revision.c	FUNCTION_62	ELSE_51	IF_62	CALL_95
0x5684	      0xe800000000	                          call 0x40056c9	      1945	revision.c	FUNCTION_62	ELSE_51	IF_62	CALL_95
0x5689	            0x85c0	                           test eax, eax	      1945	revision.c	FUNCTION_62	ELSE_51	IF_62	CALL_95
0x568b	            0x752f	                           jne 0x40056fc	      1945	revision.c	FUNCTION_62	ELSE_51	IF_62	CALL_95
0x568d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1946	revision.c	FUNCTION_62	ELSE_51	IF_62
0x5691	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      1946	revision.c	FUNCTION_62	ELSE_51	IF_62
0x5695	          0x83ca01	                               or edx, 1	      1946	revision.c	FUNCTION_62	ELSE_51	IF_62
0x5698	          0x885079	               mov byte [rax + 0x79], dl	      1946	revision.c	FUNCTION_62	ELSE_51	IF_62
0x569b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1947	revision.c	FUNCTION_62	ELSE_51	IF_62
0x569f	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      1947	revision.c	FUNCTION_62	ELSE_51	IF_62
0x56a3	          0x83e27f	                           and edx, 0x7f	      1947	revision.c	FUNCTION_62	ELSE_51	IF_62
0x56a6	          0x885079	               mov byte [rax + 0x79], dl	      1947	revision.c	FUNCTION_62	ELSE_51	IF_62
0x56a9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1948	revision.c	FUNCTION_62	ELSE_51	IF_62
0x56ad	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      1948	revision.c	FUNCTION_62	ELSE_51	IF_62
0x56b1	          0x83ca40	                            or edx, 0x40	      1948	revision.c	FUNCTION_62	ELSE_51	IF_62
0x56b4	          0x885079	               mov byte [rax + 0x79], dl	      1948	revision.c	FUNCTION_62	ELSE_51	IF_62
0x56b7	      0xe9650c0000	                           jmp 0x4006361	      1948	revision.c	FUNCTION_62	ELSE_51	IF_62
0x56bc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1949	revision.c	FUNCTION_62	ELSE_52	IF_63	CALL_96
0x56c0	      0xbe00000000	                              mov esi, 0	      1949	revision.c	FUNCTION_62	ELSE_52	IF_63	CALL_96
0x56c5	          0x4889c7	                            mov rdi, rax	      1949	revision.c	FUNCTION_62	ELSE_52	IF_63	CALL_96
0x56c8	      0xe800000000	                          call 0x400570d	      1949	revision.c	FUNCTION_62	ELSE_52	IF_63	CALL_96
0x56cd	            0x85c0	                           test eax, eax	      1949	revision.c	FUNCTION_62	ELSE_52	IF_63	CALL_96
0x56cf	            0x752f	                           jne 0x4005740	      1949	revision.c	FUNCTION_62	ELSE_52	IF_63	CALL_96
0x56d1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1950	revision.c	FUNCTION_62	ELSE_52	IF_63
0x56d5	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      1950	revision.c	FUNCTION_62	ELSE_52	IF_63
0x56d9	          0x83ca01	                               or edx, 1	      1950	revision.c	FUNCTION_62	ELSE_52	IF_63
0x56dc	          0x885079	               mov byte [rax + 0x79], dl	      1950	revision.c	FUNCTION_62	ELSE_52	IF_63
0x56df	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1951	revision.c	FUNCTION_62	ELSE_52	IF_63
0x56e3	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      1951	revision.c	FUNCTION_62	ELSE_52	IF_63
0x56e7	          0x83ca80	                      or edx, 0xffffff80	      1951	revision.c	FUNCTION_62	ELSE_52	IF_63
0x56ea	          0x885079	               mov byte [rax + 0x79], dl	      1951	revision.c	FUNCTION_62	ELSE_52	IF_63
0x56ed	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1952	revision.c	FUNCTION_62	ELSE_52	IF_63
0x56f1	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      1952	revision.c	FUNCTION_62	ELSE_52	IF_63
0x56f5	          0x83ca40	                            or edx, 0x40	      1952	revision.c	FUNCTION_62	ELSE_52	IF_63
0x56f8	          0x885079	               mov byte [rax + 0x79], dl	      1952	revision.c	FUNCTION_62	ELSE_52	IF_63
0x56fb	      0xe9210c0000	                           jmp 0x4006361	      1952	revision.c	FUNCTION_62	ELSE_52	IF_63
0x5700	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1953	revision.c	FUNCTION_62	ELSE_53	IF_64	CALL_97
0x5704	      0xbe00000000	                              mov esi, 0	      1953	revision.c	FUNCTION_62	ELSE_53	IF_64	CALL_97
0x5709	          0x4889c7	                            mov rdi, rax	      1953	revision.c	FUNCTION_62	ELSE_53	IF_64	CALL_97
0x570c	      0xe800000000	                          call 0x4005751	      1953	revision.c	FUNCTION_62	ELSE_53	IF_64	CALL_97
0x5711	            0x85c0	                           test eax, eax	      1953	revision.c	FUNCTION_62	ELSE_53	IF_64	CALL_97
0x5713	            0x7513	                           jne 0x4005768	      1953	revision.c	FUNCTION_62	ELSE_53	IF_64	CALL_97
0x5715	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1954	revision.c	FUNCTION_62	ELSE_53	IF_64
0x5719	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      1954	revision.c	FUNCTION_62	ELSE_53	IF_64
0x571d	          0x83ca10	                            or edx, 0x10	      1954	revision.c	FUNCTION_62	ELSE_53	IF_64
0x5720	          0x885079	               mov byte [rax + 0x79], dl	      1954	revision.c	FUNCTION_62	ELSE_53	IF_64
0x5723	      0xe9f90b0000	                           jmp 0x4006361	      1954	revision.c	FUNCTION_62	ELSE_53	IF_64
0x5728	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1955	revision.c	FUNCTION_62	ELSE_54	IF_65	CALL_98
0x572c	      0xbe00000000	                              mov esi, 0	      1955	revision.c	FUNCTION_62	ELSE_54	IF_65	CALL_98
0x5731	          0x4889c7	                            mov rdi, rax	      1955	revision.c	FUNCTION_62	ELSE_54	IF_65	CALL_98
0x5734	      0xe800000000	                          call 0x4005779	      1955	revision.c	FUNCTION_62	ELSE_54	IF_65	CALL_98
0x5739	            0x85c0	                           test eax, eax	      1955	revision.c	FUNCTION_62	ELSE_54	IF_65	CALL_98
0x573b	            0x7532	                           jne 0x40057af	      1955	revision.c	FUNCTION_62	ELSE_54	IF_65	CALL_98
0x573d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1956	revision.c	FUNCTION_62	ELSE_54	IF_65
0x5741	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      1956	revision.c	FUNCTION_62	ELSE_54	IF_65
0x5745	          0x83ca10	                            or edx, 0x10	      1956	revision.c	FUNCTION_62	ELSE_54	IF_65
0x5748	          0x885079	               mov byte [rax + 0x79], dl	      1956	revision.c	FUNCTION_62	ELSE_54	IF_65
0x574b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1957	revision.c	FUNCTION_62	ELSE_54	IF_65
0x574f	         0xfb6507a	           movzx edx, byte [rax + 0x7a] 	      1957	revision.c	FUNCTION_62	ELSE_54	IF_65
0x5753	          0x83ca80	                      or edx, 0xffffff80	      1957	revision.c	FUNCTION_62	ELSE_54	IF_65
0x5756	          0x88507a	               mov byte [rax + 0x7a], dl	      1957	revision.c	FUNCTION_62	ELSE_54	IF_65
0x5759	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1958	revision.c	FUNCTION_62	ELSE_54	IF_65	CALL_99
0x575d	          0x4889c6	                            mov rsi, rax	      1958	revision.c	FUNCTION_62	ELSE_54	IF_65	CALL_99
0x5760	      0xbf00000000	                              mov edi, 0	      1958	revision.c	FUNCTION_62	ELSE_54	IF_65	CALL_99
0x5765	      0xe800000000	                          call 0x40057aa	      1958	revision.c	FUNCTION_62	ELSE_54	IF_65	CALL_99
0x576a	      0xe9b20b0000	                           jmp 0x4006361	      1958	revision.c	FUNCTION_62	ELSE_54	IF_65	CALL_99
0x576f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1959	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_100
0x5773	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1959	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_100
0x5777	      0xbe00000000	                              mov esi, 0	      1959	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_100
0x577c	          0x4889c7	                            mov rdi, rax	      1959	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_100
0x577f	      0xe887a8ffff	                    call sym.skip_prefix	      1959	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_100
0x5784	            0x85c0	                           test eax, eax	      1959	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_100
0x5786	            0x7519	                           jne 0x40057e1	      1959	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_100
0x5788	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1960	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_101
0x578c	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1960	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_101
0x5790	      0xbe00000000	                              mov esi, 0	      1960	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_101
0x5795	          0x4889c7	                            mov rdi, rax	      1960	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_101
0x5798	      0xe86ea8ffff	                    call sym.skip_prefix	      1960	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_101
0x579d	            0x85c0	                           test eax, eax	      1959	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_100
0x579f	            0x7434	                            je 0x4005815	      1959	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_100
0x57a1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1965	revision.c	FUNCTION_62	ELSE_55	IF_66
0x57a5	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      1965	revision.c	FUNCTION_62	ELSE_55	IF_66
0x57a9	          0x83ca10	                            or edx, 0x10	      1965	revision.c	FUNCTION_62	ELSE_55	IF_66
0x57ac	          0x885079	               mov byte [rax + 0x79], dl	      1965	revision.c	FUNCTION_62	ELSE_55	IF_66
0x57af	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1966	revision.c	FUNCTION_62	ELSE_55	IF_66
0x57b3	         0xfb6507a	           movzx edx, byte [rax + 0x7a] 	      1966	revision.c	FUNCTION_62	ELSE_55	IF_66
0x57b7	          0x83ca80	                      or edx, 0xffffff80	      1966	revision.c	FUNCTION_62	ELSE_55	IF_66
0x57ba	          0x88507a	               mov byte [rax + 0x7a], dl	      1966	revision.c	FUNCTION_62	ELSE_55	IF_66
0x57bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1967	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_102
0x57c1	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1967	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_102
0x57c5	          0x4889d6	                            mov rsi, rdx	      1967	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_102
0x57c8	          0x4889c7	                            mov rdi, rax	      1967	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_102
0x57cb	      0xe800000000	                          call 0x4005810	      1967	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_102
0x57d0	      0xe94c0b0000	                           jmp 0x4006361	      1967	revision.c	FUNCTION_62	ELSE_55	IF_66	CALL_102
0x57d5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1968	revision.c	FUNCTION_62	ELSE_56	IF_67	CALL_103
0x57d9	      0xbe00000000	                              mov esi, 0	      1968	revision.c	FUNCTION_62	ELSE_56	IF_67	CALL_103
0x57de	          0x4889c7	                            mov rdi, rax	      1968	revision.c	FUNCTION_62	ELSE_56	IF_67	CALL_103
0x57e1	      0xe800000000	                          call 0x4005826	      1968	revision.c	FUNCTION_62	ELSE_56	IF_67	CALL_103
0x57e6	            0x85c0	                           test eax, eax	      1968	revision.c	FUNCTION_62	ELSE_56	IF_67	CALL_103
0x57e8	            0x7513	                           jne 0x400583d	      1968	revision.c	FUNCTION_62	ELSE_56	IF_67	CALL_103
0x57ea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1969	revision.c	FUNCTION_62	ELSE_56	IF_67
0x57ee	    0xc78098000000	               mov dword [rax + 0x98], 8	      1969	revision.c	FUNCTION_62	ELSE_56	IF_67
0x57f8	      0xe9240b0000	                           jmp 0x4006361	      1969	revision.c	FUNCTION_62	ELSE_56	IF_67
0x57fd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1970	revision.c	FUNCTION_62	ELSE_57	IF_68	CALL_104
0x5801	      0xbe00000000	                              mov esi, 0	      1970	revision.c	FUNCTION_62	ELSE_57	IF_68	CALL_104
0x5806	          0x4889c7	                            mov rdi, rax	      1970	revision.c	FUNCTION_62	ELSE_57	IF_68	CALL_104
0x5809	      0xe800000000	                          call 0x400584e	      1970	revision.c	FUNCTION_62	ELSE_57	IF_68	CALL_104
0x580e	            0x85c0	                           test eax, eax	      1970	revision.c	FUNCTION_62	ELSE_57	IF_68	CALL_104
0x5810	            0x7513	                           jne 0x4005865	      1970	revision.c	FUNCTION_62	ELSE_57	IF_68	CALL_104
0x5812	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1971	revision.c	FUNCTION_62	ELSE_57	IF_68
0x5816	    0xc78098000000	               mov dword [rax + 0x98], 0	      1971	revision.c	FUNCTION_62	ELSE_57	IF_68
0x5820	      0xe9fc0a0000	                           jmp 0x4006361	      1971	revision.c	FUNCTION_62	ELSE_57	IF_68
0x5825	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1972	revision.c	FUNCTION_62	ELSE_58	IF_69	CALL_105
0x5829	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1972	revision.c	FUNCTION_62	ELSE_58	IF_69	CALL_105
0x582d	      0xbe00000000	                              mov esi, 0	      1972	revision.c	FUNCTION_62	ELSE_58	IF_69	CALL_105
0x5832	          0x4889c7	                            mov rdi, rax	      1972	revision.c	FUNCTION_62	ELSE_58	IF_69	CALL_105
0x5835	      0xe8d1a7ffff	                    call sym.skip_prefix	      1972	revision.c	FUNCTION_62	ELSE_58	IF_69	CALL_105
0x583a	            0x85c0	                           test eax, eax	      1972	revision.c	FUNCTION_62	ELSE_58	IF_69	CALL_105
0x583c	            0x7448	                            je 0x40058c6	      1972	revision.c	FUNCTION_62	ELSE_58	IF_69	CALL_105
0x583e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1974	revision.c	FUNCTION_62	ELSE_58	IF_69	IF_70	CALL_106
0x5842	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1974	revision.c	FUNCTION_62	ELSE_58	IF_69	IF_70	CALL_106
0x5846	      0xbe0a000000	                            mov esi, 0xa	      1974	revision.c	FUNCTION_62	ELSE_58	IF_69	IF_70	CALL_106
0x584b	          0x4889c7	                            mov rdi, rax	      1974	revision.c	FUNCTION_62	ELSE_58	IF_69	IF_70	CALL_106
0x584e	      0xe862a9ffff	                       call sym.strtol_i	      1974	revision.c	FUNCTION_62	ELSE_58	IF_69	IF_70	CALL_106
0x5853	            0x85c0	                           test eax, eax	      1974	revision.c	FUNCTION_62	ELSE_58	IF_69	IF_70	CALL_106
0x5855	            0x7807	                            js 0x400589e	      1974	revision.c	FUNCTION_62	ELSE_58	IF_69	IF_70	CALL_106
0x5857	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1974	revision.c	FUNCTION_62	ELSE_58	IF_69	IF_70	CALL_106
0x585a	            0x85c0	                           test eax, eax	      1974	revision.c	FUNCTION_62	ELSE_58	IF_69	IF_70	CALL_106
0x585c	            0x7916	                           jns 0x40058b4	      1974	revision.c	FUNCTION_62	ELSE_58	IF_69	IF_70	CALL_106
0x585e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1975	revision.c	FUNCTION_62	ELSE_58	IF_69	CALL_107
0x5862	          0x4889c6	                            mov rsi, rax	      1975	revision.c	FUNCTION_62	ELSE_58	IF_69	CALL_107
0x5865	      0xbf00000000	                              mov edi, 0	      1975	revision.c	FUNCTION_62	ELSE_58	IF_69	CALL_107
0x586a	      0xb800000000	                              mov eax, 0	      1975	revision.c	FUNCTION_62	ELSE_58	IF_69	CALL_107
0x586f	      0xe800000000	                          call 0x40058b4	      1975	revision.c	FUNCTION_62	ELSE_58	IF_69	CALL_107
0x5874	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1976	revision.c	FUNCTION_62	ELSE_58	IF_69
0x5877	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1976	revision.c	FUNCTION_62	ELSE_58	IF_69
0x587b	    0x899098000000	             mov dword [rax + 0x98], edx	      1976	revision.c	FUNCTION_62	ELSE_58	IF_69
0x5881	      0xe99b0a0000	                           jmp 0x4006361	      1976	revision.c	FUNCTION_62	ELSE_58	IF_69
0x5886	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1977	revision.c	FUNCTION_62	ELSE_59	IF_71	CALL_109
0x588a	      0xbe00000000	                              mov esi, 0	      1977	revision.c	FUNCTION_62	ELSE_59	IF_71	CALL_109
0x588f	          0x4889c7	                            mov rdi, rax	      1977	revision.c	FUNCTION_62	ELSE_59	IF_71	CALL_109
0x5892	      0xe800000000	                          call 0x40058d7	      1977	revision.c	FUNCTION_62	ELSE_59	IF_71	CALL_109
0x5897	            0x85c0	                           test eax, eax	      1977	revision.c	FUNCTION_62	ELSE_59	IF_71	CALL_109
0x5899	            0x7415	                            je 0x40058f0	      1977	revision.c	FUNCTION_62	ELSE_59	IF_71	CALL_109
0x589b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1977	revision.c	FUNCTION_62	ELSE_59	IF_71	CALL_109
0x589f	      0xbe00000000	                              mov esi, 0	      1977	revision.c	FUNCTION_62	ELSE_59	IF_71	CALL_109
0x58a4	          0x4889c7	                            mov rdi, rax	      1977	revision.c	FUNCTION_62	ELSE_59	IF_71	CALL_109
0x58a7	      0xe800000000	                          call 0x40058ec	      1977	revision.c	FUNCTION_62	ELSE_59	IF_71	CALL_109
0x58ac	            0x85c0	                           test eax, eax	      1977	revision.c	FUNCTION_62	ELSE_59	IF_71	CALL_109
0x58ae	            0x752f	                           jne 0x400591f	      1977	revision.c	FUNCTION_62	ELSE_59	IF_71	CALL_109
0x58b0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1978	revision.c	FUNCTION_62	ELSE_59	IF_71
0x58b4	         0xfb6507a	           movzx edx, byte [rax + 0x7a] 	      1978	revision.c	FUNCTION_62	ELSE_59	IF_71
0x58b8	          0x83ca10	                            or edx, 0x10	      1978	revision.c	FUNCTION_62	ELSE_59	IF_71
0x58bb	          0x88507a	               mov byte [rax + 0x7a], dl	      1978	revision.c	FUNCTION_62	ELSE_59	IF_71
0x58be	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1979	revision.c	FUNCTION_62	ELSE_59	IF_71
0x58c2	         0xfb6507a	           movzx edx, byte [rax + 0x7a] 	      1979	revision.c	FUNCTION_62	ELSE_59	IF_71
0x58c6	          0x83ca20	                            or edx, 0x20	      1979	revision.c	FUNCTION_62	ELSE_59	IF_71
0x58c9	          0x88507a	               mov byte [rax + 0x7a], dl	      1979	revision.c	FUNCTION_62	ELSE_59	IF_71
0x58cc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1980	revision.c	FUNCTION_62	ELSE_59	IF_71
0x58d0	    0xc78048080000	              mov dword [rax + 0x848], 1	      1980	revision.c	FUNCTION_62	ELSE_59	IF_71
0x58da	      0xe9420a0000	                           jmp 0x4006361	      1980	revision.c	FUNCTION_62	ELSE_59	IF_71
0x58df	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1981	revision.c	FUNCTION_62	ELSE_60	IF_72	CALL_110
0x58e3	      0xbe00000000	                              mov esi, 0	      1981	revision.c	FUNCTION_62	ELSE_60	IF_72	CALL_110
0x58e8	          0x4889c7	                            mov rdi, rax	      1981	revision.c	FUNCTION_62	ELSE_60	IF_72	CALL_110
0x58eb	      0xe800000000	                          call 0x4005930	      1981	revision.c	FUNCTION_62	ELSE_60	IF_72	CALL_110
0x58f0	            0x85c0	                           test eax, eax	      1981	revision.c	FUNCTION_62	ELSE_60	IF_72	CALL_110
0x58f2	            0x7513	                           jne 0x4005947	      1981	revision.c	FUNCTION_62	ELSE_60	IF_72	CALL_110
0x58f4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1982	revision.c	FUNCTION_62	ELSE_60	IF_72
0x58f8	         0xfb6507a	           movzx edx, byte [rax + 0x7a] 	      1982	revision.c	FUNCTION_62	ELSE_60	IF_72
0x58fc	          0x83ca40	                            or edx, 0x40	      1982	revision.c	FUNCTION_62	ELSE_60	IF_72
0x58ff	          0x88507a	               mov byte [rax + 0x7a], dl	      1982	revision.c	FUNCTION_62	ELSE_60	IF_72
0x5902	      0xe91a0a0000	                           jmp 0x4006361	      1982	revision.c	FUNCTION_62	ELSE_60	IF_72
0x5907	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1983	revision.c	FUNCTION_62	ELSE_61	IF_73	CALL_111
0x590b	      0xbe00000000	                              mov esi, 0	      1983	revision.c	FUNCTION_62	ELSE_61	IF_73	CALL_111
0x5910	          0x4889c7	                            mov rdi, rax	      1983	revision.c	FUNCTION_62	ELSE_61	IF_73	CALL_111
0x5913	      0xe800000000	                          call 0x4005958	      1983	revision.c	FUNCTION_62	ELSE_61	IF_73	CALL_111
0x5918	            0x85c0	                           test eax, eax	      1983	revision.c	FUNCTION_62	ELSE_61	IF_73	CALL_111
0x591a	            0x7513	                           jne 0x400596f	      1983	revision.c	FUNCTION_62	ELSE_61	IF_73	CALL_111
0x591c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1984	revision.c	FUNCTION_62	ELSE_61	IF_73
0x5920	         0xfb6507a	           movzx edx, byte [rax + 0x7a] 	      1984	revision.c	FUNCTION_62	ELSE_61	IF_73
0x5924	          0x83e2bf	                     and edx, 0xffffffbf	      1984	revision.c	FUNCTION_62	ELSE_61	IF_73
0x5927	          0x88507a	               mov byte [rax + 0x7a], dl	      1984	revision.c	FUNCTION_62	ELSE_61	IF_73
0x592a	      0xe9f2090000	                           jmp 0x4006361	      1984	revision.c	FUNCTION_62	ELSE_61	IF_73
0x592f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1985	revision.c	FUNCTION_62	ELSE_62	IF_74	CALL_112
0x5933	      0xbe00000000	                              mov esi, 0	      1985	revision.c	FUNCTION_62	ELSE_62	IF_74	CALL_112
0x5938	          0x4889c7	                            mov rdi, rax	      1985	revision.c	FUNCTION_62	ELSE_62	IF_74	CALL_112
0x593b	      0xe800000000	                          call 0x4005980	      1985	revision.c	FUNCTION_62	ELSE_62	IF_74	CALL_112
0x5940	            0x85c0	                           test eax, eax	      1985	revision.c	FUNCTION_62	ELSE_62	IF_74	CALL_112
0x5942	            0x7530	                           jne 0x40059b4	      1985	revision.c	FUNCTION_62	ELSE_62	IF_74	CALL_112
0x5944	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1986	revision.c	FUNCTION_62	ELSE_62	IF_74
0x5948	    0x48c780a80800	              mov qword [rax + 0x8a8], 0	      1986	revision.c	FUNCTION_62	ELSE_62	IF_74
0x5953	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1987	revision.c	FUNCTION_62	ELSE_62	IF_74
0x5957	         0xfb6507c	           movzx edx, byte [rax + 0x7c] 	      1987	revision.c	FUNCTION_62	ELSE_62	IF_74
0x595b	          0x83ca01	                               or edx, 1	      1987	revision.c	FUNCTION_62	ELSE_62	IF_74
0x595e	          0x88507c	               mov byte [rax + 0x7c], dl	      1987	revision.c	FUNCTION_62	ELSE_62	IF_74
0x5961	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1988	revision.c	FUNCTION_62	ELSE_62	IF_74
0x5965	         0xfb6507c	           movzx edx, byte [rax + 0x7c] 	      1988	revision.c	FUNCTION_62	ELSE_62	IF_74
0x5969	          0x83ca02	                               or edx, 2	      1988	revision.c	FUNCTION_62	ELSE_62	IF_74
0x596c	          0x88507c	               mov byte [rax + 0x7c], dl	      1988	revision.c	FUNCTION_62	ELSE_62	IF_74
0x596f	      0xe9ad090000	                           jmp 0x4006361	      1988	revision.c	FUNCTION_62	ELSE_62	IF_74
0x5974	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1989	revision.c	FUNCTION_62	ELSE_63	IF_75	CALL_113
0x5978	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1989	revision.c	FUNCTION_62	ELSE_63	IF_75	CALL_113
0x597c	      0xbe00000000	                              mov esi, 0	      1989	revision.c	FUNCTION_62	ELSE_63	IF_75	CALL_113
0x5981	          0x4889c7	                            mov rdi, rax	      1989	revision.c	FUNCTION_62	ELSE_63	IF_75	CALL_113
0x5984	      0xe882a6ffff	                    call sym.skip_prefix	      1989	revision.c	FUNCTION_62	ELSE_63	IF_75	CALL_113
0x5989	            0x85c0	                           test eax, eax	      1989	revision.c	FUNCTION_62	ELSE_63	IF_75	CALL_113
0x598b	            0x743b	                            je 0x4005a08	      1989	revision.c	FUNCTION_62	ELSE_63	IF_75	CALL_113
0x598d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1990	revision.c	FUNCTION_62	ELSE_63	IF_75	CALL_114
0x5991	          0x4889c7	                            mov rdi, rax	      1990	revision.c	FUNCTION_62	ELSE_63	IF_75	CALL_114
0x5994	      0xe800000000	                          call 0x40059d9	      1990	revision.c	FUNCTION_62	ELSE_63	IF_75	CALL_114
0x5999	          0x4889c2	                            mov rdx, rax	      1990	revision.c	FUNCTION_62	ELSE_63	IF_75	CALL_114
0x599c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1990	revision.c	FUNCTION_62	ELSE_63	IF_75	CALL_114
0x59a0	    0x488990a80800	            mov qword [rax + 0x8a8], rdx	      1990	revision.c	FUNCTION_62	ELSE_63	IF_75	CALL_114
0x59a7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1991	revision.c	FUNCTION_62	ELSE_63	IF_75
0x59ab	         0xfb6507c	           movzx edx, byte [rax + 0x7c] 	      1991	revision.c	FUNCTION_62	ELSE_63	IF_75
0x59af	          0x83ca01	                               or edx, 1	      1991	revision.c	FUNCTION_62	ELSE_63	IF_75
0x59b2	          0x88507c	               mov byte [rax + 0x7c], dl	      1991	revision.c	FUNCTION_62	ELSE_63	IF_75
0x59b5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1992	revision.c	FUNCTION_62	ELSE_63	IF_75
0x59b9	         0xfb6507c	           movzx edx, byte [rax + 0x7c] 	      1992	revision.c	FUNCTION_62	ELSE_63	IF_75
0x59bd	          0x83ca02	                               or edx, 2	      1992	revision.c	FUNCTION_62	ELSE_63	IF_75
0x59c0	          0x88507c	               mov byte [rax + 0x7c], dl	      1992	revision.c	FUNCTION_62	ELSE_63	IF_75
0x59c3	      0xe959090000	                           jmp 0x4006361	      1992	revision.c	FUNCTION_62	ELSE_63	IF_75
0x59c8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1993	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_115
0x59cc	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1993	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_115
0x59d0	      0xbe00000000	                              mov esi, 0	      1993	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_115
0x59d5	          0x4889c7	                            mov rdi, rax	      1993	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_115
0x59d8	      0xe82ea6ffff	                    call sym.skip_prefix	      1993	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_115
0x59dd	            0x85c0	                           test eax, eax	      1993	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_115
0x59df	            0x751d	                           jne 0x4005a3e	      1993	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_115
0x59e1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1994	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_116
0x59e5	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      1994	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_116
0x59e9	      0xbe00000000	                              mov esi, 0	      1994	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_116
0x59ee	          0x4889c7	                            mov rdi, rax	      1994	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_116
0x59f1	      0xe815a6ffff	                    call sym.skip_prefix	      1994	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_116
0x59f6	            0x85c0	                           test eax, eax	      1993	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_115
0x59f8	     0xf84b2000000	                            je 0x4005af0	      1993	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_115
0x59fe	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1995	revision.c	FUNCTION_62	ELSE_64	IF_76
0x5a06	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1995	revision.c	FUNCTION_62	ELSE_64	IF_76
0x5a0e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1995	revision.c	FUNCTION_62	ELSE_64	IF_76
0x5a16	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1996	revision.c	FUNCTION_62	ELSE_64	IF_76
0x5a1a	         0xfb6507a	           movzx edx, byte [rax + 0x7a] 	      1996	revision.c	FUNCTION_62	ELSE_64	IF_76
0x5a1e	          0x83ca10	                            or edx, 0x10	      1996	revision.c	FUNCTION_62	ELSE_64	IF_76
0x5a21	          0x88507a	               mov byte [rax + 0x7a], dl	      1996	revision.c	FUNCTION_62	ELSE_64	IF_76
0x5a24	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1997	revision.c	FUNCTION_62	ELSE_64	IF_76
0x5a28	         0xfb6507a	           movzx edx, byte [rax + 0x7a] 	      1997	revision.c	FUNCTION_62	ELSE_64	IF_76
0x5a2c	          0x83ca20	                            or edx, 0x20	      1997	revision.c	FUNCTION_62	ELSE_64	IF_76
0x5a2f	          0x88507a	               mov byte [rax + 0x7a], dl	      1997	revision.c	FUNCTION_62	ELSE_64	IF_76
0x5a32	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1998	revision.c	FUNCTION_62	ELSE_64	IF_76	IF_77	CALL_117
0x5a36	      0xbe00000000	                              mov esi, 0	      1998	revision.c	FUNCTION_62	ELSE_64	IF_76	IF_77	CALL_117
0x5a3b	          0x4889c7	                            mov rdi, rax	      1998	revision.c	FUNCTION_62	ELSE_64	IF_76	IF_77	CALL_117
0x5a3e	      0xe800000000	                          call 0x4005a83	      1998	revision.c	FUNCTION_62	ELSE_64	IF_76	IF_77	CALL_117
0x5a43	            0x85c0	                           test eax, eax	      1998	revision.c	FUNCTION_62	ELSE_64	IF_76	IF_77	CALL_117
0x5a45	            0x741c	                            je 0x4005aa3	      1998	revision.c	FUNCTION_62	ELSE_64	IF_76	IF_77	CALL_117
0x5a47	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1999	revision.c	FUNCTION_62	ELSE_64	IF_76	IF_77
0x5a4b	    0x8b8048080000	           mov eax, dword [rax + 0x848] 	      1999	revision.c	FUNCTION_62	ELSE_64	IF_76	IF_77
0x5a51	            0x85c0	                           test eax, eax	      1998	revision.c	FUNCTION_62	ELSE_64	IF_76	IF_77	CALL_117
0x5a53	            0x790e	                           jns 0x4005aa3	      1998	revision.c	FUNCTION_62	ELSE_64	IF_76	IF_77	CALL_117
0x5a55	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2000	revision.c	FUNCTION_62	ELSE_64	IF_76	IF_77
0x5a59	    0xc78048080000	              mov dword [rax + 0x848], 1	      2000	revision.c	FUNCTION_62	ELSE_64	IF_76	IF_77
0x5a63	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2001	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_118
0x5a67	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2001	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_118
0x5a6b	          0x4889d6	                            mov rsi, rdx	      2001	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_118
0x5a6e	          0x4889c7	                            mov rdi, rax	      2001	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_118
0x5a71	      0xe81ea9ffff	                  call sym.strbuf_addstr	      2001	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_118
0x5a76	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2002	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_119
0x5a7a	          0x4889c7	                            mov rdi, rax	      2002	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_119
0x5a7d	      0xe800000000	                          call 0x4005ac2	      2002	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_119
0x5a82	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2004	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_121
0x5a86	      0xbe00000000	                              mov esi, 0	      2004	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_121
0x5a8b	          0x4889c7	                            mov rdi, rax	      2004	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_121
0x5a8e	      0xe800000000	                          call 0x4005ad3	      2004	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_121
0x5a93	          0x4889c2	                            mov rdx, rax	      2004	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_121
0x5a96	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2003	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_120
0x5a9a	    0x480550080000	                          add rax, 0x850	      2003	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_120
0x5aa0	          0x4889d6	                            mov rsi, rdx	      2003	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_120
0x5aa3	          0x4889c7	                            mov rdi, rax	      2003	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_120
0x5aa6	      0xe800000000	                          call 0x4005aeb	      2003	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_120
0x5aab	      0xe971080000	                           jmp 0x4006361	      1994	revision.c	FUNCTION_62	ELSE_64	IF_76	CALL_116
0x5ab0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2005	revision.c	FUNCTION_62	ELSE_65	IF_78	CALL_122
0x5ab4	      0xbe00000000	                              mov esi, 0	      2005	revision.c	FUNCTION_62	ELSE_65	IF_78	CALL_122
0x5ab9	          0x4889c7	                            mov rdi, rax	      2005	revision.c	FUNCTION_62	ELSE_65	IF_78	CALL_122
0x5abc	      0xe800000000	                          call 0x4005b01	      2005	revision.c	FUNCTION_62	ELSE_65	IF_78	CALL_122
0x5ac1	            0x85c0	                           test eax, eax	      2005	revision.c	FUNCTION_62	ELSE_65	IF_78	CALL_122
0x5ac3	            0x756e	                           jne 0x4005b73	      2005	revision.c	FUNCTION_62	ELSE_65	IF_78	CALL_122
0x5ac5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2006	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5ac9	         0xfb6507a	           movzx edx, byte [rax + 0x7a] 	      2006	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5acd	          0x83e2ef	                     and edx, 0xffffffef	      2006	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5ad0	          0x88507a	               mov byte [rax + 0x7a], dl	      2006	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5ad3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2007	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5ad7	         0xfb6507a	           movzx edx, byte [rax + 0x7a] 	      2007	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5adb	          0x83ca20	                            or edx, 0x20	      2007	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5ade	          0x88507a	               mov byte [rax + 0x7a], dl	      2007	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5ae1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2008	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5ae5	    0xc78048080000	    mov dword [rax + 0x848], 0xffffffff 	      2008	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5aef	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2011	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5af3	     0xfb690600800	          movzx edx, byte [rax + 0x860] 	      2011	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5afa	          0x83ca01	                               or edx, 1	      2011	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5afd	    0x889060080000	              mov byte [rax + 0x860], dl	      2011	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5b03	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2012	revision.c	FUNCTION_62	ELSE_65	IF_78	CALL_123
0x5b07	    0x480550080000	                          add rax, 0x850	      2012	revision.c	FUNCTION_62	ELSE_65	IF_78	CALL_123
0x5b0d	      0xbe00000000	                              mov esi, 0	      2012	revision.c	FUNCTION_62	ELSE_65	IF_78	CALL_123
0x5b12	          0x4889c7	                            mov rdi, rax	      2012	revision.c	FUNCTION_62	ELSE_65	IF_78	CALL_123
0x5b15	      0xe800000000	                          call 0x4005b5a	      2012	revision.c	FUNCTION_62	ELSE_65	IF_78	CALL_123
0x5b1a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2013	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5b1e	     0xfb690600800	          movzx edx, byte [rax + 0x860] 	      2013	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5b25	          0x83e2fe	                     and edx, 0xfffffffe	      2013	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5b28	    0x889060080000	              mov byte [rax + 0x860], dl	      2013	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5b2e	      0xe9ee070000	                           jmp 0x4006361	      2013	revision.c	FUNCTION_62	ELSE_65	IF_78
0x5b33	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2014	revision.c	FUNCTION_62	ELSE_66	IF_79	CALL_124
0x5b37	      0xbe00000000	                              mov esi, 0	      2014	revision.c	FUNCTION_62	ELSE_66	IF_79	CALL_124
0x5b3c	          0x4889c7	                            mov rdi, rax	      2014	revision.c	FUNCTION_62	ELSE_66	IF_79	CALL_124
0x5b3f	      0xe800000000	                          call 0x4005b84	      2014	revision.c	FUNCTION_62	ELSE_66	IF_79	CALL_124
0x5b44	            0x85c0	                           test eax, eax	      2014	revision.c	FUNCTION_62	ELSE_66	IF_79	CALL_124
0x5b46	            0x7521	                           jne 0x4005ba9	      2014	revision.c	FUNCTION_62	ELSE_66	IF_79	CALL_124
0x5b48	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2015	revision.c	FUNCTION_62	ELSE_66	IF_79
0x5b4c	         0xfb6507a	           movzx edx, byte [rax + 0x7a] 	      2015	revision.c	FUNCTION_62	ELSE_66	IF_79
0x5b50	          0x83ca20	                            or edx, 0x20	      2015	revision.c	FUNCTION_62	ELSE_66	IF_79
0x5b53	          0x88507a	               mov byte [rax + 0x7a], dl	      2015	revision.c	FUNCTION_62	ELSE_66	IF_79
0x5b56	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2016	revision.c	FUNCTION_62	ELSE_66	IF_79
0x5b5a	    0xc78048080000	              mov dword [rax + 0x848], 1	      2016	revision.c	FUNCTION_62	ELSE_66	IF_79
0x5b64	      0xe9b8070000	                           jmp 0x4006361	      2016	revision.c	FUNCTION_62	ELSE_66	IF_79
0x5b69	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2017	revision.c	FUNCTION_62	ELSE_67	IF_80	CALL_125
0x5b6d	      0xbe00000000	                              mov esi, 0	      2017	revision.c	FUNCTION_62	ELSE_67	IF_80	CALL_125
0x5b72	          0x4889c7	                            mov rdi, rax	      2017	revision.c	FUNCTION_62	ELSE_67	IF_80	CALL_125
0x5b75	      0xe800000000	                          call 0x4005bba	      2017	revision.c	FUNCTION_62	ELSE_67	IF_80	CALL_125
0x5b7a	            0x85c0	                           test eax, eax	      2017	revision.c	FUNCTION_62	ELSE_67	IF_80	CALL_125
0x5b7c	            0x7513	                           jne 0x4005bd1	      2017	revision.c	FUNCTION_62	ELSE_67	IF_80	CALL_125
0x5b7e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2018	revision.c	FUNCTION_62	ELSE_67	IF_80
0x5b82	    0xc78048080000	              mov dword [rax + 0x848], 0	      2018	revision.c	FUNCTION_62	ELSE_67	IF_80
0x5b8c	      0xe990070000	                           jmp 0x4006361	      2018	revision.c	FUNCTION_62	ELSE_67	IF_80
0x5b91	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2019	revision.c	FUNCTION_62	ELSE_68	IF_81	CALL_126
0x5b95	      0xbe00000000	                              mov esi, 0	      2019	revision.c	FUNCTION_62	ELSE_68	IF_81	CALL_126
0x5b9a	          0x4889c7	                            mov rdi, rax	      2019	revision.c	FUNCTION_62	ELSE_68	IF_81	CALL_126
0x5b9d	      0xe800000000	                          call 0x4005be2	      2019	revision.c	FUNCTION_62	ELSE_68	IF_81	CALL_126
0x5ba2	            0x85c0	                           test eax, eax	      2019	revision.c	FUNCTION_62	ELSE_68	IF_81	CALL_126
0x5ba4	            0x7540	                           jne 0x4005c26	      2019	revision.c	FUNCTION_62	ELSE_68	IF_81	CALL_126
0x5ba6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2020	revision.c	FUNCTION_62	ELSE_68	IF_81
0x5baa	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      2020	revision.c	FUNCTION_62	ELSE_68	IF_81
0x5bae	          0x83ca10	                            or edx, 0x10	      2020	revision.c	FUNCTION_62	ELSE_68	IF_81
0x5bb1	          0x885079	               mov byte [rax + 0x79], dl	      2020	revision.c	FUNCTION_62	ELSE_68	IF_81
0x5bb4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2021	revision.c	FUNCTION_62	ELSE_68	IF_81	CALL_127
0x5bb8	          0x4889c6	                            mov rsi, rax	      2021	revision.c	FUNCTION_62	ELSE_68	IF_81	CALL_127
0x5bbb	      0xbf00000000	                              mov edi, 0	      2021	revision.c	FUNCTION_62	ELSE_68	IF_81	CALL_127
0x5bc0	      0xe800000000	                          call 0x4005c05	      2021	revision.c	FUNCTION_62	ELSE_68	IF_81	CALL_127
0x5bc5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2022	revision.c	FUNCTION_62	ELSE_68	IF_81
0x5bc9	         0xfb6507a	           movzx edx, byte [rax + 0x7a] 	      2022	revision.c	FUNCTION_62	ELSE_68	IF_81
0x5bcd	          0x83ca80	                      or edx, 0xffffff80	      2022	revision.c	FUNCTION_62	ELSE_68	IF_81
0x5bd0	          0x88507a	               mov byte [rax + 0x7a], dl	      2022	revision.c	FUNCTION_62	ELSE_68	IF_81
0x5bd3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2023	revision.c	FUNCTION_62	ELSE_68	IF_81
0x5bd7	         0xfb6507b	           movzx edx, byte [rax + 0x7b] 	      2023	revision.c	FUNCTION_62	ELSE_68	IF_81
0x5bdb	          0x83ca01	                               or edx, 1	      2023	revision.c	FUNCTION_62	ELSE_68	IF_81
0x5bde	          0x88507b	               mov byte [rax + 0x7b], dl	      2023	revision.c	FUNCTION_62	ELSE_68	IF_81
0x5be1	      0xe93b070000	                           jmp 0x4006361	      2023	revision.c	FUNCTION_62	ELSE_68	IF_81
0x5be6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2024	revision.c	FUNCTION_62	ELSE_69	IF_82	CALL_128
0x5bea	      0xbe00000000	                              mov esi, 0	      2024	revision.c	FUNCTION_62	ELSE_69	IF_82	CALL_128
0x5bef	          0x4889c7	                            mov rdi, rax	      2024	revision.c	FUNCTION_62	ELSE_69	IF_82	CALL_128
0x5bf2	      0xe800000000	                          call 0x4005c37	      2024	revision.c	FUNCTION_62	ELSE_69	IF_82	CALL_128
0x5bf7	            0x85c0	                           test eax, eax	      2024	revision.c	FUNCTION_62	ELSE_69	IF_82	CALL_128
0x5bf9	            0x753b	                           jne 0x4005c76	      2024	revision.c	FUNCTION_62	ELSE_69	IF_82	CALL_128
0x5bfb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2025	revision.c	FUNCTION_62	ELSE_69	IF_82
0x5bff	         0xfb65075	           movzx edx, byte [rax + 0x75] 	      2025	revision.c	FUNCTION_62	ELSE_69	IF_82
0x5c03	          0x83ca01	                               or edx, 1	      2025	revision.c	FUNCTION_62	ELSE_69	IF_82
0x5c06	          0x885075	               mov byte [rax + 0x75], dl	      2025	revision.c	FUNCTION_62	ELSE_69	IF_82
0x5c09	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2026	revision.c	FUNCTION_62	ELSE_69	IF_82
0x5c0d	         0xfb65077	           movzx edx, byte [rax + 0x77] 	      2026	revision.c	FUNCTION_62	ELSE_69	IF_82
0x5c11	          0x83ca04	                               or edx, 4	      2026	revision.c	FUNCTION_62	ELSE_69	IF_82
0x5c14	          0x885077	               mov byte [rax + 0x77], dl	      2026	revision.c	FUNCTION_62	ELSE_69	IF_82
0x5c17	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2027	revision.c	FUNCTION_62	ELSE_69	IF_82	CALL_129
0x5c1b	          0x4889c7	                            mov rdi, rax	      2027	revision.c	FUNCTION_62	ELSE_69	IF_82	CALL_129
0x5c1e	      0xe800000000	                          call 0x4005c63	      2027	revision.c	FUNCTION_62	ELSE_69	IF_82	CALL_129
0x5c23	          0x4889c2	                            mov rdx, rax	      2027	revision.c	FUNCTION_62	ELSE_69	IF_82	CALL_129
0x5c26	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2027	revision.c	FUNCTION_62	ELSE_69	IF_82	CALL_129
0x5c2a	    0x488990c00400	            mov qword [rax + 0x4c0], rdx	      2027	revision.c	FUNCTION_62	ELSE_69	IF_82	CALL_129
0x5c31	      0xe9eb060000	                           jmp 0x4006361	      2027	revision.c	FUNCTION_62	ELSE_69	IF_82	CALL_129
0x5c36	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2028	revision.c	FUNCTION_62	ELSE_70	IF_83	CALL_130
0x5c3a	      0xbe00000000	                              mov esi, 0	      2028	revision.c	FUNCTION_62	ELSE_70	IF_83	CALL_130
0x5c3f	          0x4889c7	                            mov rdi, rax	      2028	revision.c	FUNCTION_62	ELSE_70	IF_83	CALL_130
0x5c42	      0xe800000000	                          call 0x4005c87	      2028	revision.c	FUNCTION_62	ELSE_70	IF_83	CALL_130
0x5c47	            0x85c0	                           test eax, eax	      2028	revision.c	FUNCTION_62	ELSE_70	IF_83	CALL_130
0x5c49	            0x7513	                           jne 0x4005c9e	      2028	revision.c	FUNCTION_62	ELSE_70	IF_83	CALL_130
0x5c4b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2029	revision.c	FUNCTION_62	ELSE_70	IF_83
0x5c4f	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      2029	revision.c	FUNCTION_62	ELSE_70	IF_83
0x5c53	          0x83ca04	                               or edx, 4	      2029	revision.c	FUNCTION_62	ELSE_70	IF_83
0x5c56	          0x885079	               mov byte [rax + 0x79], dl	      2029	revision.c	FUNCTION_62	ELSE_70	IF_83
0x5c59	      0xe9c3060000	                           jmp 0x4006361	      2029	revision.c	FUNCTION_62	ELSE_70	IF_83
0x5c5e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2030	revision.c	FUNCTION_62	ELSE_71	IF_84	CALL_131
0x5c62	      0xbe00000000	                              mov esi, 0	      2030	revision.c	FUNCTION_62	ELSE_71	IF_84	CALL_131
0x5c67	          0x4889c7	                            mov rdi, rax	      2030	revision.c	FUNCTION_62	ELSE_71	IF_84	CALL_131
0x5c6a	      0xe800000000	                          call 0x4005caf	      2030	revision.c	FUNCTION_62	ELSE_71	IF_84	CALL_131
0x5c6f	            0x85c0	                           test eax, eax	      2030	revision.c	FUNCTION_62	ELSE_71	IF_84	CALL_131
0x5c71	            0x7513	                           jne 0x4005cc6	      2030	revision.c	FUNCTION_62	ELSE_71	IF_84	CALL_131
0x5c73	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2031	revision.c	FUNCTION_62	ELSE_71	IF_84
0x5c77	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      2031	revision.c	FUNCTION_62	ELSE_71	IF_84
0x5c7b	          0x83ca08	                               or edx, 8	      2031	revision.c	FUNCTION_62	ELSE_71	IF_84
0x5c7e	          0x885079	               mov byte [rax + 0x79], dl	      2031	revision.c	FUNCTION_62	ELSE_71	IF_84
0x5c81	      0xe99b060000	                           jmp 0x4006361	      2031	revision.c	FUNCTION_62	ELSE_71	IF_84
0x5c86	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2032	revision.c	FUNCTION_62	ELSE_72	IF_85	CALL_132
0x5c8a	      0xbe00000000	                              mov esi, 0	      2032	revision.c	FUNCTION_62	ELSE_72	IF_85	CALL_132
0x5c8f	          0x4889c7	                            mov rdi, rax	      2032	revision.c	FUNCTION_62	ELSE_72	IF_85	CALL_132
0x5c92	      0xe800000000	                          call 0x4005cd7	      2032	revision.c	FUNCTION_62	ELSE_72	IF_85	CALL_132
0x5c97	            0x85c0	                           test eax, eax	      2032	revision.c	FUNCTION_62	ELSE_72	IF_85	CALL_132
0x5c99	            0x7513	                           jne 0x4005cee	      2032	revision.c	FUNCTION_62	ELSE_72	IF_85	CALL_132
0x5c9b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2033	revision.c	FUNCTION_62	ELSE_72	IF_85
0x5c9f	         0xfb6507a	           movzx edx, byte [rax + 0x7a] 	      2033	revision.c	FUNCTION_62	ELSE_72	IF_85
0x5ca3	          0x83ca01	                               or edx, 1	      2033	revision.c	FUNCTION_62	ELSE_72	IF_85
0x5ca6	          0x88507a	               mov byte [rax + 0x7a], dl	      2033	revision.c	FUNCTION_62	ELSE_72	IF_85
0x5ca9	      0xe973060000	                           jmp 0x4006361	      2033	revision.c	FUNCTION_62	ELSE_72	IF_85
0x5cae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2034	revision.c	FUNCTION_62	ELSE_73	IF_86	CALL_133
0x5cb2	      0xbe00000000	                              mov esi, 0	      2034	revision.c	FUNCTION_62	ELSE_73	IF_86	CALL_133
0x5cb7	          0x4889c7	                            mov rdi, rax	      2034	revision.c	FUNCTION_62	ELSE_73	IF_86	CALL_133
0x5cba	      0xe800000000	                          call 0x4005cff	      2034	revision.c	FUNCTION_62	ELSE_73	IF_86	CALL_133
0x5cbf	            0x85c0	                           test eax, eax	      2034	revision.c	FUNCTION_62	ELSE_73	IF_86	CALL_133
0x5cc1	            0x7513	                           jne 0x4005d16	      2034	revision.c	FUNCTION_62	ELSE_73	IF_86	CALL_133
0x5cc3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2035	revision.c	FUNCTION_62	ELSE_73	IF_86
0x5cc7	    0xc780a0000000	               mov dword [rax + 0xa0], 0	      2035	revision.c	FUNCTION_62	ELSE_73	IF_86
0x5cd1	      0xe94b060000	                           jmp 0x4006361	      2035	revision.c	FUNCTION_62	ELSE_73	IF_86
0x5cd6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2036	revision.c	FUNCTION_62	ELSE_74	IF_87	CALL_134
0x5cda	      0xbe00000000	                              mov esi, 0	      2036	revision.c	FUNCTION_62	ELSE_74	IF_87	CALL_134
0x5cdf	          0x4889c7	                            mov rdi, rax	      2036	revision.c	FUNCTION_62	ELSE_74	IF_87	CALL_134
0x5ce2	      0xe800000000	                          call 0x4005d27	      2036	revision.c	FUNCTION_62	ELSE_74	IF_87	CALL_134
0x5ce7	            0x85c0	                           test eax, eax	      2036	revision.c	FUNCTION_62	ELSE_74	IF_87	CALL_134
0x5ce9	            0x7517	                           jne 0x4005d42	      2036	revision.c	FUNCTION_62	ELSE_74	IF_87	CALL_134
0x5ceb	    0x8b0500000000	            mov eax, dword [0x04005d31] 	      2037	revision.c	FUNCTION_62	ELSE_74	IF_87
0x5cf1	            0x89c2	                            mov edx, eax	      2037	revision.c	FUNCTION_62	ELSE_74	IF_87
0x5cf3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2037	revision.c	FUNCTION_62	ELSE_74	IF_87
0x5cf7	    0x8990a0000000	             mov dword [rax + 0xa0], edx	      2037	revision.c	FUNCTION_62	ELSE_74	IF_87
0x5cfd	      0xe91f060000	                           jmp 0x4006361	      2037	revision.c	FUNCTION_62	ELSE_74	IF_87
0x5d02	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2038	revision.c	FUNCTION_62	ELSE_75	IF_88	CALL_135
0x5d06	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      2038	revision.c	FUNCTION_62	ELSE_75	IF_88	CALL_135
0x5d0a	      0xbe00000000	                              mov esi, 0	      2038	revision.c	FUNCTION_62	ELSE_75	IF_88	CALL_135
0x5d0f	          0x4889c7	                            mov rdi, rax	      2038	revision.c	FUNCTION_62	ELSE_75	IF_88	CALL_135
0x5d12	      0xe8f4a2ffff	                    call sym.skip_prefix	      2038	revision.c	FUNCTION_62	ELSE_75	IF_88	CALL_135
0x5d17	            0x85c0	                           test eax, eax	      2038	revision.c	FUNCTION_62	ELSE_75	IF_88	CALL_135
0x5d19	            0x7473	                            je 0x4005dce	      2038	revision.c	FUNCTION_62	ELSE_75	IF_88	CALL_135
0x5d1b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2039	revision.c	FUNCTION_62	ELSE_75	IF_88	CALL_136
0x5d1f	      0xba0a000000	                            mov edx, 0xa	      2039	revision.c	FUNCTION_62	ELSE_75	IF_88	CALL_136
0x5d24	      0xbe00000000	                              mov esi, 0	      2039	revision.c	FUNCTION_62	ELSE_75	IF_88	CALL_136
0x5d29	          0x4889c7	                            mov rdi, rax	      2039	revision.c	FUNCTION_62	ELSE_75	IF_88	CALL_136
0x5d2c	      0xe800000000	                          call 0x4005d71	      2039	revision.c	FUNCTION_62	ELSE_75	IF_88	CALL_136
0x5d31	            0x89c2	                            mov edx, eax	      2039	revision.c	FUNCTION_62	ELSE_75	IF_88	CALL_136
0x5d33	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2039	revision.c	FUNCTION_62	ELSE_75	IF_88	CALL_136
0x5d37	    0x8990a0000000	             mov dword [rax + 0xa0], edx	      2039	revision.c	FUNCTION_62	ELSE_75	IF_88	CALL_136
0x5d3d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2040	revision.c	FUNCTION_62	ELSE_75	IF_88	IF_89
0x5d41	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2040	revision.c	FUNCTION_62	ELSE_75	IF_88	IF_89
0x5d47	    0x8b1500000000	            mov edx, dword [0x04005d8d] 	      2040	revision.c	FUNCTION_62	ELSE_75	IF_88	IF_89
0x5d4d	            0x39d0	                            cmp eax, edx	      2040	revision.c	FUNCTION_62	ELSE_75	IF_88	IF_89
0x5d4f	            0x7317	                           jae 0x4005da8	      2040	revision.c	FUNCTION_62	ELSE_75	IF_88	IF_89
0x5d51	    0x8b0500000000	            mov eax, dword [0x04005d97] 	      2041	revision.c	FUNCTION_62	ELSE_75	IF_88	IF_89
0x5d57	            0x89c2	                            mov edx, eax	      2041	revision.c	FUNCTION_62	ELSE_75	IF_88	IF_89
0x5d59	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2041	revision.c	FUNCTION_62	ELSE_75	IF_88	IF_89
0x5d5d	    0x8990a0000000	             mov dword [rax + 0xa0], edx	      2041	revision.c	FUNCTION_62	ELSE_75	IF_88	IF_89
0x5d63	      0xe9b9050000	                           jmp 0x4006361	      2041	revision.c	FUNCTION_62	ELSE_75	IF_88	IF_89
0x5d68	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2042	revision.c	FUNCTION_62	ELSE_75	IF_88	ELSE_76	IF_90
0x5d6c	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2042	revision.c	FUNCTION_62	ELSE_75	IF_88	ELSE_76	IF_90
0x5d72	          0x83f828	                           cmp eax, 0x28	      2042	revision.c	FUNCTION_62	ELSE_75	IF_88	ELSE_76	IF_90
0x5d75	     0xf86a6050000	                           jbe 0x4006361	      2042	revision.c	FUNCTION_62	ELSE_75	IF_88	ELSE_76	IF_90
0x5d7b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2043	revision.c	FUNCTION_62	ELSE_75	IF_88	ELSE_76	IF_90
0x5d7f	    0xc780a0000000	           mov dword [rax + 0xa0], 0x28 	      2043	revision.c	FUNCTION_62	ELSE_75	IF_88	ELSE_76	IF_90
0x5d89	      0xe993050000	                           jmp 0x4006361	      2043	revision.c	FUNCTION_62	ELSE_75	IF_88	ELSE_76	IF_90
0x5d8e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2044	revision.c	FUNCTION_62	ELSE_77	IF_91	CALL_137
0x5d92	      0xbe00000000	                              mov esi, 0	      2044	revision.c	FUNCTION_62	ELSE_77	IF_91	CALL_137
0x5d97	          0x4889c7	                            mov rdi, rax	      2044	revision.c	FUNCTION_62	ELSE_77	IF_91	CALL_137
0x5d9a	      0xe800000000	                          call 0x4005ddf	      2044	revision.c	FUNCTION_62	ELSE_77	IF_91	CALL_137
0x5d9f	            0x85c0	                           test eax, eax	      2044	revision.c	FUNCTION_62	ELSE_77	IF_91	CALL_137
0x5da1	            0x7521	                           jne 0x4005e04	      2044	revision.c	FUNCTION_62	ELSE_77	IF_91	CALL_137
0x5da3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2045	revision.c	FUNCTION_62	ELSE_77	IF_91
0x5da7	         0xfb6507b	           movzx edx, byte [rax + 0x7b] 	      2045	revision.c	FUNCTION_62	ELSE_77	IF_91
0x5dab	          0x83ca01	                               or edx, 1	      2045	revision.c	FUNCTION_62	ELSE_77	IF_91
0x5dae	          0x88507b	               mov byte [rax + 0x7b], dl	      2045	revision.c	FUNCTION_62	ELSE_77	IF_91
0x5db1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2046	revision.c	FUNCTION_62	ELSE_77	IF_91
0x5db5	         0xfb6507b	           movzx edx, byte [rax + 0x7b] 	      2046	revision.c	FUNCTION_62	ELSE_77	IF_91
0x5db9	          0x83ca02	                               or edx, 2	      2046	revision.c	FUNCTION_62	ELSE_77	IF_91
0x5dbc	          0x88507b	               mov byte [rax + 0x7b], dl	      2046	revision.c	FUNCTION_62	ELSE_77	IF_91
0x5dbf	      0xe95d050000	                           jmp 0x4006361	      2046	revision.c	FUNCTION_62	ELSE_77	IF_91
0x5dc4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2047	revision.c	FUNCTION_62	ELSE_78	IF_92	CALL_138
0x5dc8	      0xbe00000000	                              mov esi, 0	      2047	revision.c	FUNCTION_62	ELSE_78	IF_92	CALL_138
0x5dcd	          0x4889c7	                            mov rdi, rax	      2047	revision.c	FUNCTION_62	ELSE_78	IF_92	CALL_138
0x5dd0	      0xe800000000	                          call 0x4005e15	      2047	revision.c	FUNCTION_62	ELSE_78	IF_92	CALL_138
0x5dd5	            0x85c0	                           test eax, eax	      2047	revision.c	FUNCTION_62	ELSE_78	IF_92	CALL_138
0x5dd7	            0x7513	                           jne 0x4005e2c	      2047	revision.c	FUNCTION_62	ELSE_78	IF_92	CALL_138
0x5dd9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2048	revision.c	FUNCTION_62	ELSE_78	IF_92
0x5ddd	         0xfb6507b	           movzx edx, byte [rax + 0x7b] 	      2048	revision.c	FUNCTION_62	ELSE_78	IF_92
0x5de1	          0x83e2fe	                     and edx, 0xfffffffe	      2048	revision.c	FUNCTION_62	ELSE_78	IF_92
0x5de4	          0x88507b	               mov byte [rax + 0x7b], dl	      2048	revision.c	FUNCTION_62	ELSE_78	IF_92
0x5de7	      0xe935050000	                           jmp 0x4006361	      2048	revision.c	FUNCTION_62	ELSE_78	IF_92
0x5dec	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2049	revision.c	FUNCTION_62	ELSE_79	IF_93	CALL_139
0x5df0	      0xbe00000000	                              mov esi, 0	      2049	revision.c	FUNCTION_62	ELSE_79	IF_93	CALL_139
0x5df5	          0x4889c7	                            mov rdi, rax	      2049	revision.c	FUNCTION_62	ELSE_79	IF_93	CALL_139
0x5df8	      0xe800000000	                          call 0x4005e3d	      2049	revision.c	FUNCTION_62	ELSE_79	IF_93	CALL_139
0x5dfd	            0x85c0	                           test eax, eax	      2049	revision.c	FUNCTION_62	ELSE_79	IF_93	CALL_139
0x5dff	            0x7521	                           jne 0x4005e62	      2049	revision.c	FUNCTION_62	ELSE_79	IF_93	CALL_139
0x5e01	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2050	revision.c	FUNCTION_62	ELSE_79	IF_93
0x5e05	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      2050	revision.c	FUNCTION_62	ELSE_79	IF_93
0x5e09	          0x83ca01	                               or edx, 1	      2050	revision.c	FUNCTION_62	ELSE_79	IF_93
0x5e0c	          0x885079	               mov byte [rax + 0x79], dl	      2050	revision.c	FUNCTION_62	ELSE_79	IF_93
0x5e0f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2051	revision.c	FUNCTION_62	ELSE_79	IF_93
0x5e13	         0xfb65079	           movzx edx, byte [rax + 0x79] 	      2051	revision.c	FUNCTION_62	ELSE_79	IF_93
0x5e17	          0x83ca02	                               or edx, 2	      2051	revision.c	FUNCTION_62	ELSE_79	IF_93
0x5e1a	          0x885079	               mov byte [rax + 0x79], dl	      2051	revision.c	FUNCTION_62	ELSE_79	IF_93
0x5e1d	      0xe9ff040000	                           jmp 0x4006361	      2051	revision.c	FUNCTION_62	ELSE_79	IF_93
0x5e22	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2052	revision.c	FUNCTION_62	ELSE_80	IF_94	CALL_140
0x5e26	      0xbe00000000	                              mov esi, 0	      2052	revision.c	FUNCTION_62	ELSE_80	IF_94	CALL_140
0x5e2b	          0x4889c7	                            mov rdi, rax	      2052	revision.c	FUNCTION_62	ELSE_80	IF_94	CALL_140
0x5e2e	      0xe800000000	                          call 0x4005e73	      2052	revision.c	FUNCTION_62	ELSE_80	IF_94	CALL_140
0x5e33	            0x85c0	                           test eax, eax	      2052	revision.c	FUNCTION_62	ELSE_80	IF_94	CALL_140
0x5e35	            0x7513	                           jne 0x4005e8a	      2052	revision.c	FUNCTION_62	ELSE_80	IF_94	CALL_140
0x5e37	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2053	revision.c	FUNCTION_62	ELSE_80	IF_94
0x5e3b	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      2053	revision.c	FUNCTION_62	ELSE_80	IF_94
0x5e3f	          0x83e27f	                           and edx, 0x7f	      2053	revision.c	FUNCTION_62	ELSE_80	IF_94
0x5e42	          0x885074	               mov byte [rax + 0x74], dl	      2053	revision.c	FUNCTION_62	ELSE_80	IF_94
0x5e45	      0xe9d7040000	                           jmp 0x4006361	      2053	revision.c	FUNCTION_62	ELSE_80	IF_94
0x5e4a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2054	revision.c	FUNCTION_62	ELSE_81	IF_95	CALL_141
0x5e4e	      0xbe00000000	                              mov esi, 0	      2054	revision.c	FUNCTION_62	ELSE_81	IF_95	CALL_141
0x5e53	          0x4889c7	                            mov rdi, rax	      2054	revision.c	FUNCTION_62	ELSE_81	IF_95	CALL_141
0x5e56	      0xe800000000	                          call 0x4005e9b	      2054	revision.c	FUNCTION_62	ELSE_81	IF_95	CALL_141
0x5e5b	            0x85c0	                           test eax, eax	      2054	revision.c	FUNCTION_62	ELSE_81	IF_95	CALL_141
0x5e5d	            0x7521	                           jne 0x4005ec0	      2054	revision.c	FUNCTION_62	ELSE_81	IF_95	CALL_141
0x5e5f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2055	revision.c	FUNCTION_62	ELSE_81	IF_95
0x5e63	    0xc78080000000	               mov dword [rax + 0x80], 1	      2055	revision.c	FUNCTION_62	ELSE_81	IF_95
0x5e6d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2056	revision.c	FUNCTION_62	ELSE_81	IF_95
0x5e71	         0xfb6507b	           movzx edx, byte [rax + 0x7b] 	      2056	revision.c	FUNCTION_62	ELSE_81	IF_95
0x5e75	          0x83ca20	                            or edx, 0x20	      2056	revision.c	FUNCTION_62	ELSE_81	IF_95
0x5e78	          0x88507b	               mov byte [rax + 0x7b], dl	      2056	revision.c	FUNCTION_62	ELSE_81	IF_95
0x5e7b	      0xe9a1040000	                           jmp 0x4006361	      2056	revision.c	FUNCTION_62	ELSE_81	IF_95
0x5e80	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      2057	revision.c	FUNCTION_62	ELSE_82	IF_96	CALL_142
0x5e84	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2057	revision.c	FUNCTION_62	ELSE_82	IF_96	CALL_142
0x5e88	          0x4889c6	                            mov rsi, rax	      2057	revision.c	FUNCTION_62	ELSE_82	IF_96	CALL_142
0x5e8b	      0xbf00000000	                              mov edi, 0	      2057	revision.c	FUNCTION_62	ELSE_82	IF_96	CALL_142
0x5e90	      0xe800000000	                          call 0x4005ed5	      2057	revision.c	FUNCTION_62	ELSE_82	IF_96	CALL_142
0x5e95	          0x8945c8	             mov dword [rbp - 0x38], eax	      2057	revision.c	FUNCTION_62	ELSE_82	IF_96	CALL_142
0x5e98	        0x837dc800	               cmp dword [rbp - 0x38], 0	      2057	revision.c	FUNCTION_62	ELSE_82	IF_96	CALL_142
0x5e9c	            0x7430	                            je 0x4005f0e	      2057	revision.c	FUNCTION_62	ELSE_82	IF_96	CALL_142
0x5e9e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2058	revision.c	FUNCTION_62	ELSE_82	IF_96	CALL_143
0x5ea2	    0x488d90800000	                   lea rdx, [rax + 0x80]	      2058	revision.c	FUNCTION_62	ELSE_82	IF_96	CALL_143
0x5ea9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2058	revision.c	FUNCTION_62	ELSE_82	IF_96	CALL_143
0x5ead	          0x4889d6	                            mov rsi, rdx	      2058	revision.c	FUNCTION_62	ELSE_82	IF_96	CALL_143
0x5eb0	          0x4889c7	                            mov rdi, rax	      2058	revision.c	FUNCTION_62	ELSE_82	IF_96	CALL_143
0x5eb3	      0xe800000000	                          call 0x4005ef8	      2058	revision.c	FUNCTION_62	ELSE_82	IF_96	CALL_143
0x5eb8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2059	revision.c	FUNCTION_62	ELSE_82	IF_96
0x5ebc	         0xfb6507b	           movzx edx, byte [rax + 0x7b] 	      2059	revision.c	FUNCTION_62	ELSE_82	IF_96
0x5ec0	          0x83ca20	                            or edx, 0x20	      2059	revision.c	FUNCTION_62	ELSE_82	IF_96
0x5ec3	          0x88507b	               mov byte [rax + 0x7b], dl	      2059	revision.c	FUNCTION_62	ELSE_82	IF_96
0x5ec6	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2060	revision.c	FUNCTION_62	ELSE_82	IF_96
0x5ec9	      0xe986040000	                           jmp 0x4006394	      2060	revision.c	FUNCTION_62	ELSE_82	IF_96
0x5ece	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2061	revision.c	FUNCTION_62	ELSE_83	IF_97	CALL_144
0x5ed2	      0xbe00000000	                              mov esi, 0	      2061	revision.c	FUNCTION_62	ELSE_83	IF_97	CALL_144
0x5ed7	          0x4889c7	                            mov rdi, rax	      2061	revision.c	FUNCTION_62	ELSE_83	IF_97	CALL_144
0x5eda	      0xe800000000	                          call 0x4005f1f	      2061	revision.c	FUNCTION_62	ELSE_83	IF_97	CALL_144
0x5edf	            0x85c0	                           test eax, eax	      2061	revision.c	FUNCTION_62	ELSE_83	IF_97	CALL_144
0x5ee1	            0x7513	                           jne 0x4005f36	      2061	revision.c	FUNCTION_62	ELSE_83	IF_97	CALL_144
0x5ee3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2062	revision.c	FUNCTION_62	ELSE_83	IF_97
0x5ee7	    0xc78044010000	              mov dword [rax + 0x144], 1	      2062	revision.c	FUNCTION_62	ELSE_83	IF_97
0x5ef1	      0xe92b040000	                           jmp 0x4006361	      2062	revision.c	FUNCTION_62	ELSE_83	IF_97
0x5ef6	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      2067	revision.c	FUNCTION_62	ELSE_84	IF_98	CALL_145
0x5efa	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2067	revision.c	FUNCTION_62	ELSE_84	IF_98	CALL_145
0x5efe	          0x4889c6	                            mov rsi, rax	      2067	revision.c	FUNCTION_62	ELSE_84	IF_98	CALL_145
0x5f01	      0xbf00000000	                              mov edi, 0	      2067	revision.c	FUNCTION_62	ELSE_84	IF_98	CALL_145
0x5f06	      0xe800000000	                          call 0x4005f4b	      2067	revision.c	FUNCTION_62	ELSE_84	IF_98	CALL_145
0x5f0b	          0x8945c8	             mov dword [rbp - 0x38], eax	      2067	revision.c	FUNCTION_62	ELSE_84	IF_98	CALL_145
0x5f0e	        0x837dc800	               cmp dword [rbp - 0x38], 0	      2067	revision.c	FUNCTION_62	ELSE_84	IF_98	CALL_145
0x5f12	            0x741d	                            je 0x4005f71	      2067	revision.c	FUNCTION_62	ELSE_84	IF_98	CALL_145
0x5f14	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2068	revision.c	FUNCTION_62	ELSE_84	IF_98	CALL_146
0x5f18	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2068	revision.c	FUNCTION_62	ELSE_84	IF_98	CALL_146
0x5f1c	      0xbe00000000	                              mov esi, 0	      2068	revision.c	FUNCTION_62	ELSE_84	IF_98	CALL_146
0x5f21	          0x4889c7	                            mov rdi, rax	      2068	revision.c	FUNCTION_62	ELSE_84	IF_98	CALL_146
0x5f24	      0xe83ae8ffff	                call sym.add_header_grep	      2068	revision.c	FUNCTION_62	ELSE_84	IF_98	CALL_146
0x5f29	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2069	revision.c	FUNCTION_62	ELSE_84	IF_98
0x5f2c	      0xe923040000	                           jmp 0x4006394	      2069	revision.c	FUNCTION_62	ELSE_84	IF_98
0x5f31	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      2070	revision.c	FUNCTION_62	ELSE_85	IF_99	CALL_147
0x5f35	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2070	revision.c	FUNCTION_62	ELSE_85	IF_99	CALL_147
0x5f39	          0x4889c6	                            mov rsi, rax	      2070	revision.c	FUNCTION_62	ELSE_85	IF_99	CALL_147
0x5f3c	      0xbf00000000	                              mov edi, 0	      2070	revision.c	FUNCTION_62	ELSE_85	IF_99	CALL_147
0x5f41	      0xe800000000	                          call 0x4005f86	      2070	revision.c	FUNCTION_62	ELSE_85	IF_99	CALL_147
0x5f46	          0x8945c8	             mov dword [rbp - 0x38], eax	      2070	revision.c	FUNCTION_62	ELSE_85	IF_99	CALL_147
0x5f49	        0x837dc800	               cmp dword [rbp - 0x38], 0	      2070	revision.c	FUNCTION_62	ELSE_85	IF_99	CALL_147
0x5f4d	            0x741d	                            je 0x4005fac	      2070	revision.c	FUNCTION_62	ELSE_85	IF_99	CALL_147
0x5f4f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2071	revision.c	FUNCTION_62	ELSE_85	IF_99	CALL_148
0x5f53	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2071	revision.c	FUNCTION_62	ELSE_85	IF_99	CALL_148
0x5f57	      0xbe01000000	                              mov esi, 1	      2071	revision.c	FUNCTION_62	ELSE_85	IF_99	CALL_148
0x5f5c	          0x4889c7	                            mov rdi, rax	      2071	revision.c	FUNCTION_62	ELSE_85	IF_99	CALL_148
0x5f5f	      0xe8ffe7ffff	                call sym.add_header_grep	      2071	revision.c	FUNCTION_62	ELSE_85	IF_99	CALL_148
0x5f64	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2072	revision.c	FUNCTION_62	ELSE_85	IF_99
0x5f67	      0xe9e8030000	                           jmp 0x4006394	      2072	revision.c	FUNCTION_62	ELSE_85	IF_99
0x5f6c	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      2073	revision.c	FUNCTION_62	ELSE_86	IF_100	CALL_149
0x5f70	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2073	revision.c	FUNCTION_62	ELSE_86	IF_100	CALL_149
0x5f74	          0x4889c6	                            mov rsi, rax	      2073	revision.c	FUNCTION_62	ELSE_86	IF_100	CALL_149
0x5f77	      0xbf00000000	                              mov edi, 0	      2073	revision.c	FUNCTION_62	ELSE_86	IF_100	CALL_149
0x5f7c	      0xe800000000	                          call 0x4005fc1	      2073	revision.c	FUNCTION_62	ELSE_86	IF_100	CALL_149
0x5f81	          0x8945c8	             mov dword [rbp - 0x38], eax	      2073	revision.c	FUNCTION_62	ELSE_86	IF_100	CALL_149
0x5f84	        0x837dc800	               cmp dword [rbp - 0x38], 0	      2073	revision.c	FUNCTION_62	ELSE_86	IF_100	CALL_149
0x5f88	            0x741d	                            je 0x4005fe7	      2073	revision.c	FUNCTION_62	ELSE_86	IF_100	CALL_149
0x5f8a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2074	revision.c	FUNCTION_62	ELSE_86	IF_100	CALL_150
0x5f8e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2074	revision.c	FUNCTION_62	ELSE_86	IF_100	CALL_150
0x5f92	      0xbe02000000	                              mov esi, 2	      2074	revision.c	FUNCTION_62	ELSE_86	IF_100	CALL_150
0x5f97	          0x4889c7	                            mov rdi, rax	      2074	revision.c	FUNCTION_62	ELSE_86	IF_100	CALL_150
0x5f9a	      0xe8c4e7ffff	                call sym.add_header_grep	      2074	revision.c	FUNCTION_62	ELSE_86	IF_100	CALL_150
0x5f9f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2075	revision.c	FUNCTION_62	ELSE_86	IF_100
0x5fa2	      0xe9ad030000	                           jmp 0x4006394	      2075	revision.c	FUNCTION_62	ELSE_86	IF_100
0x5fa7	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      2076	revision.c	FUNCTION_62	ELSE_87	IF_101	CALL_151
0x5fab	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2076	revision.c	FUNCTION_62	ELSE_87	IF_101	CALL_151
0x5faf	          0x4889c6	                            mov rsi, rax	      2076	revision.c	FUNCTION_62	ELSE_87	IF_101	CALL_151
0x5fb2	      0xbf00000000	                              mov edi, 0	      2076	revision.c	FUNCTION_62	ELSE_87	IF_101	CALL_151
0x5fb7	      0xe800000000	                          call 0x4005ffc	      2076	revision.c	FUNCTION_62	ELSE_87	IF_101	CALL_151
0x5fbc	          0x8945c8	             mov dword [rbp - 0x38], eax	      2076	revision.c	FUNCTION_62	ELSE_87	IF_101	CALL_151
0x5fbf	        0x837dc800	               cmp dword [rbp - 0x38], 0	      2076	revision.c	FUNCTION_62	ELSE_87	IF_101	CALL_151
0x5fc3	            0x741b	                            je 0x4006020	      2076	revision.c	FUNCTION_62	ELSE_87	IF_101	CALL_151
0x5fc5	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2077	revision.c	FUNCTION_62	ELSE_87	IF_101	CALL_152
0x5fc9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2077	revision.c	FUNCTION_62	ELSE_87	IF_101	CALL_152
0x5fcd	          0x4889d6	                            mov rsi, rdx	      2077	revision.c	FUNCTION_62	ELSE_87	IF_101	CALL_152
0x5fd0	          0x4889c7	                            mov rdi, rax	      2077	revision.c	FUNCTION_62	ELSE_87	IF_101	CALL_152
0x5fd3	      0xe8bde7ffff	               call sym.add_message_grep	      2077	revision.c	FUNCTION_62	ELSE_87	IF_101	CALL_152
0x5fd8	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2078	revision.c	FUNCTION_62	ELSE_87	IF_101
0x5fdb	      0xe974030000	                           jmp 0x4006394	      2078	revision.c	FUNCTION_62	ELSE_87	IF_101
0x5fe0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2079	revision.c	FUNCTION_62	ELSE_88	IF_102	CALL_153
0x5fe4	      0xbe00000000	                              mov esi, 0	      2079	revision.c	FUNCTION_62	ELSE_88	IF_102	CALL_153
0x5fe9	          0x4889c7	                            mov rdi, rax	      2079	revision.c	FUNCTION_62	ELSE_88	IF_102	CALL_153
0x5fec	      0xe800000000	                          call 0x4006031	      2079	revision.c	FUNCTION_62	ELSE_88	IF_102	CALL_153
0x5ff1	            0x85c0	                           test eax, eax	      2079	revision.c	FUNCTION_62	ELSE_88	IF_102	CALL_153
0x5ff3	            0x7513	                           jne 0x4006048	      2079	revision.c	FUNCTION_62	ELSE_88	IF_102	CALL_153
0x5ff5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2080	revision.c	FUNCTION_62	ELSE_88	IF_102
0x5ff9	    0xc780f0010000	              mov dword [rax + 0x1f0], 1	      2080	revision.c	FUNCTION_62	ELSE_88	IF_102
0x6003	      0xe919030000	                           jmp 0x4006361	      2080	revision.c	FUNCTION_62	ELSE_88	IF_102
0x6008	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2081	revision.c	FUNCTION_62	ELSE_89	IF_103	CALL_154
0x600c	      0xbe00000000	                              mov esi, 0	      2081	revision.c	FUNCTION_62	ELSE_89	IF_103	CALL_154
0x6011	          0x4889c7	                            mov rdi, rax	      2081	revision.c	FUNCTION_62	ELSE_89	IF_103	CALL_154
0x6014	      0xe800000000	                          call 0x4006059	      2081	revision.c	FUNCTION_62	ELSE_89	IF_103	CALL_154
0x6019	            0x85c0	                           test eax, eax	      2081	revision.c	FUNCTION_62	ELSE_89	IF_103	CALL_154
0x601b	            0x7513	                           jne 0x4006070	      2081	revision.c	FUNCTION_62	ELSE_89	IF_103	CALL_154
0x601d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2082	revision.c	FUNCTION_62	ELSE_89	IF_103
0x6021	    0xc7802c020000	              mov dword [rax + 0x22c], 1	      2082	revision.c	FUNCTION_62	ELSE_89	IF_103
0x602b	      0xe9f1020000	                           jmp 0x4006361	      2082	revision.c	FUNCTION_62	ELSE_89	IF_103
0x6030	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2083	revision.c	FUNCTION_62	ELSE_90	IF_104	CALL_156
0x6034	      0xbe00000000	                              mov esi, 0	      2083	revision.c	FUNCTION_62	ELSE_90	IF_104	CALL_156
0x6039	          0x4889c7	                            mov rdi, rax	      2083	revision.c	FUNCTION_62	ELSE_90	IF_104	CALL_156
0x603c	      0xe800000000	                          call 0x4006081	      2083	revision.c	FUNCTION_62	ELSE_90	IF_104	CALL_156
0x6041	            0x85c0	                           test eax, eax	      2083	revision.c	FUNCTION_62	ELSE_90	IF_104	CALL_156
0x6043	            0x7415	                            je 0x400609a	      2083	revision.c	FUNCTION_62	ELSE_90	IF_104	CALL_156
0x6045	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2083	revision.c	FUNCTION_62	ELSE_90	IF_104	CALL_156
0x6049	      0xbe00000000	                              mov esi, 0	      2083	revision.c	FUNCTION_62	ELSE_90	IF_104	CALL_156
0x604e	          0x4889c7	                            mov rdi, rax	      2083	revision.c	FUNCTION_62	ELSE_90	IF_104	CALL_156
0x6051	      0xe800000000	                          call 0x4006096	      2083	revision.c	FUNCTION_62	ELSE_90	IF_104	CALL_156
0x6056	            0x85c0	                           test eax, eax	      2083	revision.c	FUNCTION_62	ELSE_90	IF_104	CALL_156
0x6058	            0x7513	                           jne 0x40060ad	      2083	revision.c	FUNCTION_62	ELSE_90	IF_104	CALL_156
0x605a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2084	revision.c	FUNCTION_62	ELSE_90	IF_104
0x605e	    0xc7802c020000	              mov dword [rax + 0x22c], 2	      2084	revision.c	FUNCTION_62	ELSE_90	IF_104
0x6068	      0xe9b4020000	                           jmp 0x4006361	      2084	revision.c	FUNCTION_62	ELSE_90	IF_104
0x606d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2085	revision.c	FUNCTION_62	ELSE_91	IF_105	CALL_158
0x6071	      0xbe00000000	                              mov esi, 0	      2085	revision.c	FUNCTION_62	ELSE_91	IF_105	CALL_158
0x6076	          0x4889c7	                            mov rdi, rax	      2085	revision.c	FUNCTION_62	ELSE_91	IF_105	CALL_158
0x6079	      0xe800000000	                          call 0x40060be	      2085	revision.c	FUNCTION_62	ELSE_91	IF_105	CALL_158
0x607e	            0x85c0	                           test eax, eax	      2085	revision.c	FUNCTION_62	ELSE_91	IF_105	CALL_158
0x6080	            0x7415	                            je 0x40060d7	      2085	revision.c	FUNCTION_62	ELSE_91	IF_105	CALL_158
0x6082	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2085	revision.c	FUNCTION_62	ELSE_91	IF_105	CALL_158
0x6086	      0xbe00000000	                              mov esi, 0	      2085	revision.c	FUNCTION_62	ELSE_91	IF_105	CALL_158
0x608b	          0x4889c7	                            mov rdi, rax	      2085	revision.c	FUNCTION_62	ELSE_91	IF_105	CALL_158
0x608e	      0xe800000000	                          call 0x40060d3	      2085	revision.c	FUNCTION_62	ELSE_91	IF_105	CALL_158
0x6093	            0x85c0	                           test eax, eax	      2085	revision.c	FUNCTION_62	ELSE_91	IF_105	CALL_158
0x6095	            0x752c	                           jne 0x4006103	      2085	revision.c	FUNCTION_62	ELSE_91	IF_105	CALL_158
0x6097	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2086	revision.c	FUNCTION_62	ELSE_91	IF_105
0x609b	    0xc780d0010000	              mov dword [rax + 0x1d0], 1	      2086	revision.c	FUNCTION_62	ELSE_91	IF_105
0x60a5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2087	revision.c	FUNCTION_62	ELSE_91	IF_105
0x60a9	    0x8b805c050000	           mov eax, dword [rax + 0x55c] 	      2087	revision.c	FUNCTION_62	ELSE_91	IF_105
0x60af	          0x83c820	                            or eax, 0x20	      2087	revision.c	FUNCTION_62	ELSE_91	IF_105
0x60b2	            0x89c2	                            mov edx, eax	      2087	revision.c	FUNCTION_62	ELSE_91	IF_105
0x60b4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2087	revision.c	FUNCTION_62	ELSE_91	IF_105
0x60b8	    0x89905c050000	            mov dword [rax + 0x55c], edx	      2087	revision.c	FUNCTION_62	ELSE_91	IF_105
0x60be	      0xe95e020000	                           jmp 0x4006361	      2087	revision.c	FUNCTION_62	ELSE_91	IF_105
0x60c3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2088	revision.c	FUNCTION_62	ELSE_92	IF_106	CALL_160
0x60c7	      0xbe00000000	                              mov esi, 0	      2088	revision.c	FUNCTION_62	ELSE_92	IF_106	CALL_160
0x60cc	          0x4889c7	                            mov rdi, rax	      2088	revision.c	FUNCTION_62	ELSE_92	IF_106	CALL_160
0x60cf	      0xe800000000	                          call 0x4006114	      2088	revision.c	FUNCTION_62	ELSE_92	IF_106	CALL_160
0x60d4	            0x85c0	                           test eax, eax	      2088	revision.c	FUNCTION_62	ELSE_92	IF_106	CALL_160
0x60d6	            0x7415	                            je 0x400612d	      2088	revision.c	FUNCTION_62	ELSE_92	IF_106	CALL_160
0x60d8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2088	revision.c	FUNCTION_62	ELSE_92	IF_106	CALL_160
0x60dc	      0xbe00000000	                              mov esi, 0	      2088	revision.c	FUNCTION_62	ELSE_92	IF_106	CALL_160
0x60e1	          0x4889c7	                            mov rdi, rax	      2088	revision.c	FUNCTION_62	ELSE_92	IF_106	CALL_160
0x60e4	      0xe800000000	                          call 0x4006129	      2088	revision.c	FUNCTION_62	ELSE_92	IF_106	CALL_160
0x60e9	            0x85c0	                           test eax, eax	      2088	revision.c	FUNCTION_62	ELSE_92	IF_106	CALL_160
0x60eb	            0x7513	                           jne 0x4006140	      2088	revision.c	FUNCTION_62	ELSE_92	IF_106	CALL_160
0x60ed	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2089	revision.c	FUNCTION_62	ELSE_92	IF_106
0x60f1	    0xc7802c020000	              mov dword [rax + 0x22c], 3	      2089	revision.c	FUNCTION_62	ELSE_92	IF_106
0x60fb	      0xe921020000	                           jmp 0x4006361	      2089	revision.c	FUNCTION_62	ELSE_92	IF_106
0x6100	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2090	revision.c	FUNCTION_62	ELSE_93	IF_107	CALL_162
0x6104	      0xbe00000000	                              mov esi, 0	      2090	revision.c	FUNCTION_62	ELSE_93	IF_107	CALL_162
0x6109	          0x4889c7	                            mov rdi, rax	      2090	revision.c	FUNCTION_62	ELSE_93	IF_107	CALL_162
0x610c	      0xe800000000	                          call 0x4006151	      2090	revision.c	FUNCTION_62	ELSE_93	IF_107	CALL_162
0x6111	            0x85c0	                           test eax, eax	      2090	revision.c	FUNCTION_62	ELSE_93	IF_107	CALL_162
0x6113	            0x7415	                            je 0x400616a	      2090	revision.c	FUNCTION_62	ELSE_93	IF_107	CALL_162
0x6115	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2090	revision.c	FUNCTION_62	ELSE_93	IF_107	CALL_162
0x6119	      0xbe00000000	                              mov esi, 0	      2090	revision.c	FUNCTION_62	ELSE_93	IF_107	CALL_162
0x611e	          0x4889c7	                            mov rdi, rax	      2090	revision.c	FUNCTION_62	ELSE_93	IF_107	CALL_162
0x6121	      0xe800000000	                          call 0x4006166	      2090	revision.c	FUNCTION_62	ELSE_93	IF_107	CALL_162
0x6126	            0x85c0	                           test eax, eax	      2090	revision.c	FUNCTION_62	ELSE_93	IF_107	CALL_162
0x6128	            0x7513	                           jne 0x400617d	      2090	revision.c	FUNCTION_62	ELSE_93	IF_107	CALL_162
0x612a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2091	revision.c	FUNCTION_62	ELSE_93	IF_107
0x612e	    0xc7802c020000	              mov dword [rax + 0x22c], 4	      2091	revision.c	FUNCTION_62	ELSE_93	IF_107
0x6138	      0xe9e4010000	                           jmp 0x4006361	      2091	revision.c	FUNCTION_62	ELSE_93	IF_107
0x613d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2092	revision.c	FUNCTION_62	ELSE_94	IF_108	CALL_163
0x6141	      0xbe00000000	                              mov esi, 0	      2092	revision.c	FUNCTION_62	ELSE_94	IF_108	CALL_163
0x6146	          0x4889c7	                            mov rdi, rax	      2092	revision.c	FUNCTION_62	ELSE_94	IF_108	CALL_163
0x6149	      0xe800000000	                          call 0x400618e	      2092	revision.c	FUNCTION_62	ELSE_94	IF_108	CALL_163
0x614e	            0x85c0	                           test eax, eax	      2092	revision.c	FUNCTION_62	ELSE_94	IF_108	CALL_163
0x6150	            0x7513	                           jne 0x40061a5	      2092	revision.c	FUNCTION_62	ELSE_94	IF_108	CALL_163
0x6152	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2093	revision.c	FUNCTION_62	ELSE_94	IF_108
0x6156	    0xc780ec010000	              mov dword [rax + 0x1ec], 1	      2093	revision.c	FUNCTION_62	ELSE_94	IF_108
0x6160	      0xe9bc010000	                           jmp 0x4006361	      2093	revision.c	FUNCTION_62	ELSE_94	IF_108
0x6165	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2094	revision.c	FUNCTION_62	ELSE_95	IF_109	CALL_164
0x6169	      0xbe00000000	                              mov esi, 0	      2094	revision.c	FUNCTION_62	ELSE_95	IF_109	CALL_164
0x616e	          0x4889c7	                            mov rdi, rax	      2094	revision.c	FUNCTION_62	ELSE_95	IF_109	CALL_164
0x6171	      0xe800000000	                          call 0x40061b6	      2094	revision.c	FUNCTION_62	ELSE_95	IF_109	CALL_164
0x6176	            0x85c0	                           test eax, eax	      2094	revision.c	FUNCTION_62	ELSE_95	IF_109	CALL_164
0x6178	            0x7513	                           jne 0x40061cd	      2094	revision.c	FUNCTION_62	ELSE_95	IF_109	CALL_164
0x617a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2095	revision.c	FUNCTION_62	ELSE_95	IF_109
0x617e	    0xc780b8040000	              mov dword [rax + 0x4b8], 1	      2095	revision.c	FUNCTION_62	ELSE_95	IF_109
0x6188	      0xe994010000	                           jmp 0x4006361	      2095	revision.c	FUNCTION_62	ELSE_95	IF_109
0x618d	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      2096	revision.c	FUNCTION_62	ELSE_96	IF_110	CALL_165
0x6191	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2096	revision.c	FUNCTION_62	ELSE_96	IF_110	CALL_165
0x6195	          0x4889c6	                            mov rsi, rax	      2096	revision.c	FUNCTION_62	ELSE_96	IF_110	CALL_165
0x6198	      0xbf00000000	                              mov edi, 0	      2096	revision.c	FUNCTION_62	ELSE_96	IF_110	CALL_165
0x619d	      0xe800000000	                          call 0x40061e2	      2096	revision.c	FUNCTION_62	ELSE_96	IF_110	CALL_165
0x61a2	          0x8945c8	             mov dword [rbp - 0x38], eax	      2096	revision.c	FUNCTION_62	ELSE_96	IF_110	CALL_165
0x61a5	        0x837dc800	               cmp dword [rbp - 0x38], 0	      2096	revision.c	FUNCTION_62	ELSE_96	IF_110	CALL_165
0x61a9	            0x743d	                            je 0x4006228	      2096	revision.c	FUNCTION_62	ELSE_96	IF_110	CALL_165
0x61ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2097	revision.c	FUNCTION_62	ELSE_96	IF_110	IF_111	CALL_166
0x61af	      0xbe00000000	                              mov esi, 0	      2097	revision.c	FUNCTION_62	ELSE_96	IF_110	IF_111	CALL_166
0x61b4	          0x4889c7	                            mov rdi, rax	      2097	revision.c	FUNCTION_62	ELSE_96	IF_110	IF_111	CALL_166
0x61b7	      0xe800000000	                          call 0x40061fc	      2097	revision.c	FUNCTION_62	ELSE_96	IF_110	IF_111	CALL_166
0x61bc	            0x85c0	                           test eax, eax	      2097	revision.c	FUNCTION_62	ELSE_96	IF_110	IF_111	CALL_166
0x61be	            0x7415	                            je 0x4006215	      2097	revision.c	FUNCTION_62	ELSE_96	IF_110	IF_111	CALL_166
0x61c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2098	revision.c	FUNCTION_62	ELSE_96	IF_110	CALL_167
0x61c4	          0x4889c7	                            mov rdi, rax	      2098	revision.c	FUNCTION_62	ELSE_96	IF_110	CALL_167
0x61c7	      0xe800000000	                          call 0x400620c	      2098	revision.c	FUNCTION_62	ELSE_96	IF_110	CALL_167
0x61cc	    0x488905000000	            mov qword [0x04006213], rax 	      2098	revision.c	FUNCTION_62	ELSE_96	IF_110	CALL_167
0x61d3	            0xeb0b	                           jmp 0x4006220	      2098	revision.c	FUNCTION_62	ELSE_96	IF_110	CALL_167
0x61d5	    0x48c705000000	               mov qword [0x04006220], 0	      2100	revision.c	FUNCTION_62	ELSE_96	IF_110	ELSE_97
0x61e0	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2101	revision.c	FUNCTION_62	ELSE_96	IF_110	ELSE_97
0x61e3	      0xe96c010000	                           jmp 0x4006394	      2101	revision.c	FUNCTION_62	ELSE_96	IF_110	ELSE_97
0x61e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2102	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112	CALL_168
0x61ec	      0xbe00000000	                              mov esi, 0	      2102	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112	CALL_168
0x61f1	          0x4889c7	                            mov rdi, rax	      2102	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112	CALL_168
0x61f4	      0xe800000000	                          call 0x4006239	      2102	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112	CALL_168
0x61f9	            0x85c0	                           test eax, eax	      2102	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112	CALL_168
0x61fb	            0x7530	                           jne 0x400626d	      2102	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112	CALL_168
0x61fd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2103	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112
0x6201	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      2103	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112
0x6205	          0xc0e806	                               shr al, 6	      2103	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112
0x6208	          0x83e001	                              and eax, 1	      2103	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112
0x620b	          0x83f001	                              xor eax, 1	      2103	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112
0x620e	            0x89c2	                            mov edx, eax	      2103	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112
0x6210	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2103	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112
0x6214	          0x83e201	                              and edx, 1	      2103	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112
0x6217	            0x89d1	                            mov ecx, edx	      2103	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112
0x6219	          0xc1e106	                              shl ecx, 6	      2103	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112
0x621c	         0xfb65077	           movzx edx, byte [rax + 0x77] 	      2103	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112
0x6220	          0x83e2bf	                     and edx, 0xffffffbf	      2103	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112
0x6223	             0x9ca	                             or edx, ecx	      2103	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112
0x6225	          0x885077	               mov byte [rax + 0x77], dl	      2103	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112
0x6228	      0xe9f4000000	                           jmp 0x4006361	      2103	revision.c	FUNCTION_62	ELSE_97	ELSE_98	IF_112
0x622d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2104	revision.c	FUNCTION_62	ELSE_99	IF_113	CALL_169
0x6231	      0xbe00000000	                              mov esi, 0	      2104	revision.c	FUNCTION_62	ELSE_99	IF_113	CALL_169
0x6236	          0x4889c7	                            mov rdi, rax	      2104	revision.c	FUNCTION_62	ELSE_99	IF_113	CALL_169
0x6239	      0xe800000000	                          call 0x400627e	      2104	revision.c	FUNCTION_62	ELSE_99	IF_113	CALL_169
0x623e	            0x85c0	                           test eax, eax	      2104	revision.c	FUNCTION_62	ELSE_99	IF_113	CALL_169
0x6240	            0x7522	                           jne 0x40062a4	      2104	revision.c	FUNCTION_62	ELSE_99	IF_113	CALL_169
0x6242	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2105	revision.c	FUNCTION_62	ELSE_99	IF_113
0x6246	    0x48c780000800	              mov qword [rax + 0x800], 0	      2105	revision.c	FUNCTION_62	ELSE_99	IF_113
0x6251	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2106	revision.c	FUNCTION_62	ELSE_99	IF_113
0x6255	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      2106	revision.c	FUNCTION_62	ELSE_99	IF_113
0x6259	          0x83ca04	                               or edx, 4	      2106	revision.c	FUNCTION_62	ELSE_99	IF_113
0x625c	          0x885076	               mov byte [rax + 0x76], dl	      2106	revision.c	FUNCTION_62	ELSE_99	IF_113
0x625f	      0xe9bd000000	                           jmp 0x4006361	      2106	revision.c	FUNCTION_62	ELSE_99	IF_113
0x6264	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2107	revision.c	FUNCTION_62	ELSE_100	IF_114	CALL_170
0x6268	      0xbe00000000	                              mov esi, 0	      2107	revision.c	FUNCTION_62	ELSE_100	IF_114	CALL_170
0x626d	          0x4889c7	                            mov rdi, rax	      2107	revision.c	FUNCTION_62	ELSE_100	IF_114	CALL_170
0x6270	      0xe800000000	                          call 0x40062b5	      2107	revision.c	FUNCTION_62	ELSE_100	IF_114	CALL_170
0x6275	            0x85c0	                           test eax, eax	      2107	revision.c	FUNCTION_62	ELSE_100	IF_114	CALL_170
0x6277	            0x7513	                           jne 0x40062cc	      2107	revision.c	FUNCTION_62	ELSE_100	IF_114	CALL_170
0x6279	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2108	revision.c	FUNCTION_62	ELSE_100	IF_114
0x627d	         0xfb65074	           movzx edx, byte [rax + 0x74] 	      2108	revision.c	FUNCTION_62	ELSE_100	IF_114
0x6281	          0x83ca01	                               or edx, 1	      2108	revision.c	FUNCTION_62	ELSE_100	IF_114
0x6284	          0x885074	               mov byte [rax + 0x74], dl	      2108	revision.c	FUNCTION_62	ELSE_100	IF_114
0x6287	      0xe995000000	                           jmp 0x4006361	      2108	revision.c	FUNCTION_62	ELSE_100	IF_114
0x628c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2109	revision.c	FUNCTION_62	ELSE_101	IF_115	CALL_171
0x6290	      0xbe00000000	                              mov esi, 0	      2109	revision.c	FUNCTION_62	ELSE_101	IF_115	CALL_171
0x6295	          0x4889c7	                            mov rdi, rax	      2109	revision.c	FUNCTION_62	ELSE_101	IF_115	CALL_171
0x6298	      0xe800000000	                          call 0x40062dd	      2109	revision.c	FUNCTION_62	ELSE_101	IF_115	CALL_171
0x629d	            0x85c0	                           test eax, eax	      2109	revision.c	FUNCTION_62	ELSE_101	IF_115	CALL_171
0x629f	            0x7529	                           jne 0x400630a	      2109	revision.c	FUNCTION_62	ELSE_101	IF_115	CALL_171
0x62a1	    0x8b0500000000	            mov eax, dword [0x040062e7] 	      2110	revision.c	FUNCTION_62	ELSE_101	IF_115	IF_116
0x62a7	            0x85c0	                           test eax, eax	      2110	revision.c	FUNCTION_62	ELSE_101	IF_115	IF_116
0x62a9	            0x740f	                            je 0x40062fa	      2110	revision.c	FUNCTION_62	ELSE_101	IF_115	IF_116
0x62ab	      0xbf00000000	                              mov edi, 0	      2111	revision.c	FUNCTION_62	ELSE_101	IF_115	CALL_172
0x62b0	      0xb800000000	                              mov eax, 0	      2111	revision.c	FUNCTION_62	ELSE_101	IF_115	CALL_172
0x62b5	      0xe800000000	                          call 0x40062fa	      2111	revision.c	FUNCTION_62	ELSE_101	IF_115	CALL_172
0x62ba	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2112	revision.c	FUNCTION_62	ELSE_101	IF_115
0x62be	         0xfb65078	           movzx edx, byte [rax + 0x78] 	      2112	revision.c	FUNCTION_62	ELSE_101	IF_115
0x62c2	          0x83ca80	                      or edx, 0xffffff80	      2112	revision.c	FUNCTION_62	ELSE_101	IF_115
0x62c5	          0x885078	               mov byte [rax + 0x78], dl	      2112	revision.c	FUNCTION_62	ELSE_101	IF_115
0x62c8	            0xeb57	                           jmp 0x4006361	      2112	revision.c	FUNCTION_62	ELSE_101	IF_115
0x62ca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2114	revision.c	FUNCTION_62	ELSE_102	CALL_173
0x62ce	        0x488b4840	            mov rcx, qword [rax + 0x40] 	      2114	revision.c	FUNCTION_62	ELSE_102	CALL_173
0x62d2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2114	revision.c	FUNCTION_62	ELSE_102	CALL_173
0x62d6	    0x488db8f80400	                  lea rdi, [rax + 0x4f8]	      2114	revision.c	FUNCTION_62	ELSE_102	CALL_173
0x62dd	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2114	revision.c	FUNCTION_62	ELSE_102	CALL_173
0x62e0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2114	revision.c	FUNCTION_62	ELSE_102	CALL_173
0x62e4	          0x4889c6	                            mov rsi, rax	      2114	revision.c	FUNCTION_62	ELSE_102	CALL_173
0x62e7	      0xe800000000	                          call 0x400632c	      2114	revision.c	FUNCTION_62	ELSE_102	CALL_173
0x62ec	          0x8945cc	             mov dword [rbp - 0x34], eax	      2114	revision.c	FUNCTION_62	ELSE_102	CALL_173
0x62ef	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2115	revision.c	FUNCTION_62	ELSE_102	IF_117
0x62f3	            0x7527	                           jne 0x400635c	      2115	revision.c	FUNCTION_62	ELSE_102	IF_117
0x62f5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2116	revision.c	FUNCTION_62	ELSE_102	IF_117
0x62f9	            0x8b00	                    mov eax, dword [rax]	      2116	revision.c	FUNCTION_62	ELSE_102	IF_117
0x62fb	          0x8d4801	                      lea ecx, [rax + 1]	      2116	revision.c	FUNCTION_62	ELSE_102	IF_117
0x62fe	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2116	revision.c	FUNCTION_62	ELSE_102	IF_117
0x6302	            0x890a	                    mov dword [rdx], ecx	      2116	revision.c	FUNCTION_62	ELSE_102	IF_117
0x6304	            0x4898	                                    cdqe	      2116	revision.c	FUNCTION_62	ELSE_102	IF_117
0x6306	    0x488d14c50000	                        lea rdx, [rax*8]	      2116	revision.c	FUNCTION_62	ELSE_102	IF_117
0x630e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2116	revision.c	FUNCTION_62	ELSE_102	IF_117
0x6312	          0x4801c2	                            add rdx, rax	      2116	revision.c	FUNCTION_62	ELSE_102	IF_117
0x6315	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2116	revision.c	FUNCTION_62	ELSE_102	IF_117
0x6319	          0x488902	                    mov qword [rdx], rax	      2116	revision.c	FUNCTION_62	ELSE_102	IF_117
0x631c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2117	revision.c	FUNCTION_62	ELSE_102
0x631f	            0xeb33	                           jmp 0x4006394	      2117	revision.c	FUNCTION_62	ELSE_102
0x6321	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2119	revision.c	FUNCTION_62	IF_118
0x6325	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	      2119	revision.c	FUNCTION_62	IF_118
0x632c	          0x4885c0	                           test rax, rax	      2119	revision.c	FUNCTION_62	IF_118
0x632f	            0x741e	                            je 0x400638f	      2119	revision.c	FUNCTION_62	IF_118
0x6331	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2119	revision.c	FUNCTION_62	IF_118
0x6335	         0xfb6407c	           movzx eax, byte [rax + 0x7c] 	      2119	revision.c	FUNCTION_62	IF_118
0x6339	          0x83e001	                              and eax, 1	      2119	revision.c	FUNCTION_62	IF_118
0x633c	            0x84c0	                             test al, al	      2119	revision.c	FUNCTION_62	IF_118
0x633e	            0x740f	                            je 0x400638f	      2119	revision.c	FUNCTION_62	IF_118
0x6340	      0xbf00000000	                              mov edi, 0	      2120	revision.c	FUNCTION_62	CALL_174
0x6345	      0xb800000000	                              mov eax, 0	      2120	revision.c	FUNCTION_62	CALL_174
0x634a	      0xe800000000	                          call 0x400638f	      2120	revision.c	FUNCTION_62	CALL_174
0x634f	      0xb801000000	                              mov eax, 1	      2122	revision.c	FUNCTION_62
0x6354	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2123	revision.c	FUNCTION_62
0x6358	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2123	revision.c	FUNCTION_62
0x6361	            0x7405	                            je 0x40063a8	      2123	revision.c	FUNCTION_62
0x6363	      0xe800000000	                          call 0x40063a8	      2123	revision.c	FUNCTION_62
0x6368	              0xc9	                                   leave	      2123	revision.c	FUNCTION_62
0x6369	              0xc3	                                     ret	      2123	revision.c	FUNCTION_62
rev_compare_tree	FOR,0:functions,0:WHILE,0:CALL,4:IF,6:ELSE,0:DO,0:SWITCH,0	62
0x11ec	              0x55	                                push rbp	       443	revision.c	FUNCTION_18
0x11ed	          0x4889e5	                            mov rbp, rsp	       443	revision.c	FUNCTION_18
0x11f0	        0x4883ec30	                           sub rsp, 0x30	       443	revision.c	FUNCTION_18
0x11f4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       443	revision.c	FUNCTION_18
0x11f8	        0x488975e0	             mov qword [rbp - 0x20], rsi	       443	revision.c	FUNCTION_18
0x11fc	        0x488955d8	             mov qword [rbp - 0x28], rdx	       443	revision.c	FUNCTION_18
0x1200	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       444	revision.c	FUNCTION_18	CALL_1
0x1204	          0x4889c7	                            mov rdi, rax	       444	revision.c	FUNCTION_18	CALL_1
0x1207	      0xe800000000	                          call 0x400124c	       444	revision.c	FUNCTION_18	CALL_1
0x120c	        0x488945f0	             mov qword [rbp - 0x10], rax	       444	revision.c	FUNCTION_18	CALL_1
0x1210	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       445	revision.c	FUNCTION_18	CALL_2
0x1214	          0x4889c7	                            mov rdi, rax	       445	revision.c	FUNCTION_18	CALL_2
0x1217	      0xe800000000	                          call 0x400125c	       445	revision.c	FUNCTION_18	CALL_2
0x121c	        0x488945f8	                mov qword [rbp - 8], rax	       445	revision.c	FUNCTION_18	CALL_2
0x1220	      0x48837df000	               cmp qword [rbp - 0x10], 0	       447	revision.c	FUNCTION_18	IF_1
0x1225	            0x750a	                           jne 0x4001271	       447	revision.c	FUNCTION_18	IF_1
0x1227	      0xb801000000	                              mov eax, 1	       448	revision.c	FUNCTION_18	IF_1
0x122c	      0xe9a4000000	                           jmp 0x4001315	       448	revision.c	FUNCTION_18	IF_1
0x1231	      0x48837df800	                  cmp qword [rbp - 8], 0	       449	revision.c	FUNCTION_18	IF_2
0x1236	            0x750a	                           jne 0x4001282	       449	revision.c	FUNCTION_18	IF_2
0x1238	      0xb802000000	                              mov eax, 2	       450	revision.c	FUNCTION_18	IF_2
0x123d	      0xe993000000	                           jmp 0x4001315	       450	revision.c	FUNCTION_18	IF_2
0x1242	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	revision.c	FUNCTION_18	IF_3
0x1246	         0xfb64075	           movzx eax, byte [rax + 0x75] 	       452	revision.c	FUNCTION_18	IF_3
0x124a	          0x83e004	                              and eax, 4	       452	revision.c	FUNCTION_18	IF_3
0x124d	            0x84c0	                             test al, al	       452	revision.c	FUNCTION_18	IF_3
0x124f	            0x742a	                            je 0x40012bb	       452	revision.c	FUNCTION_18	IF_3
0x1251	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       457	revision.c	FUNCTION_18	IF_3	IF_4	CALL_3
0x1255	          0x4889c7	                            mov rdi, rax	       457	revision.c	FUNCTION_18	IF_3	IF_4	CALL_3
0x1258	      0xe800000000	                          call 0x400129d	       457	revision.c	FUNCTION_18	IF_3	IF_4	CALL_3
0x125d	          0x4885c0	                           test rax, rax	       457	revision.c	FUNCTION_18	IF_3	IF_4	CALL_3
0x1260	            0x7407	                            je 0x40012a9	       457	revision.c	FUNCTION_18	IF_3	IF_4	CALL_3
0x1262	      0xb803000000	                              mov eax, 3	       458	revision.c	FUNCTION_18	IF_3	IF_4
0x1267	            0xeb6c	                           jmp 0x4001315	       458	revision.c	FUNCTION_18	IF_3	IF_4
0x1269	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       466	revision.c	FUNCTION_18	IF_3	IF_5
0x126d	          0x8b4050	            mov eax, dword [rax + 0x50] 	       466	revision.c	FUNCTION_18	IF_3	IF_5
0x1270	            0x85c0	                           test eax, eax	       466	revision.c	FUNCTION_18	IF_3	IF_5
0x1272	            0x7507	                           jne 0x40012bb	       466	revision.c	FUNCTION_18	IF_3	IF_5
0x1274	      0xb800000000	                              mov eax, 0	       467	revision.c	FUNCTION_18	IF_3	IF_5
0x1279	            0xeb5a	                           jmp 0x4001315	       467	revision.c	FUNCTION_18	IF_3	IF_5
0x127b	    0xc70500000000	               mov dword [0x040012c5], 0	       470	revision.c	FUNCTION_18
0x1285	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       471	revision.c	FUNCTION_18
0x1289	     0xfb690b10600	          movzx edx, byte [rax + 0x6b1] 	       471	revision.c	FUNCTION_18
0x1290	          0x83e2fd	                     and edx, 0xfffffffd	       471	revision.c	FUNCTION_18
0x1293	    0x8890b1060000	              mov byte [rax + 0x6b1], dl	       471	revision.c	FUNCTION_18
0x1299	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       472	revision.c	FUNCTION_18	IF_6	CALL_4
0x129d	    0x488d90780600	                  lea rdx, [rax + 0x678]	       472	revision.c	FUNCTION_18	IF_6	CALL_4
0x12a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       472	revision.c	FUNCTION_18	IF_6	CALL_4
0x12a8	        0x488d7004	                      lea rsi, [rax + 4]	       472	revision.c	FUNCTION_18	IF_6	CALL_4
0x12ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       472	revision.c	FUNCTION_18	IF_6	CALL_4
0x12b0	        0x4883c004	                              add rax, 4	       472	revision.c	FUNCTION_18	IF_6	CALL_4
0x12b4	          0x4889d1	                            mov rcx, rdx	       472	revision.c	FUNCTION_18	IF_6	CALL_4
0x12b7	      0xba00000000	                              mov edx, 0	       472	revision.c	FUNCTION_18	IF_6	CALL_4
0x12bc	          0x4889c7	                            mov rdi, rax	       472	revision.c	FUNCTION_18	IF_6	CALL_4
0x12bf	      0xe800000000	                          call 0x4001304	       472	revision.c	FUNCTION_18	IF_6	CALL_4
0x12c4	            0x85c0	                           test eax, eax	       472	revision.c	FUNCTION_18	IF_6	CALL_4
0x12c6	            0x7907	                           jns 0x400130f	       472	revision.c	FUNCTION_18	IF_6	CALL_4
0x12c8	      0xb803000000	                              mov eax, 3	       474	revision.c	FUNCTION_18	IF_6
0x12cd	            0xeb06	                           jmp 0x4001315	       474	revision.c	FUNCTION_18	IF_6
0x12cf	    0x8b0500000000	            mov eax, dword [0x04001315] 	       475	revision.c	FUNCTION_18
0x12d5	              0xc9	                                   leave	       476	revision.c	FUNCTION_18
0x12d6	              0xc3	                                     ret	       476	revision.c	FUNCTION_18
for_each_bisect_ref	FOR,0:functions,0:WHILE,0:CALL,3:IF,0:ELSE,0:DO,0:SWITCH,0	37
0x641d	              0x55	                                push rbp	      2141	revision.c	FUNCTION_64
0x641e	          0x4889e5	                            mov rbp, rsp	      2141	revision.c	FUNCTION_64
0x6421	        0x4883ec50	                           sub rsp, 0x50	      2141	revision.c	FUNCTION_64
0x6425	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2141	revision.c	FUNCTION_64
0x6429	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2141	revision.c	FUNCTION_64
0x642d	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2141	revision.c	FUNCTION_64
0x6431	        0x48894db0	             mov qword [rbp - 0x50], rcx	      2141	revision.c	FUNCTION_64
0x6435	    0x64488b042528	                mov rax, qword fs:[0x28]	      2141	revision.c	FUNCTION_64
0x643e	        0x488945f8	                mov qword [rbp - 8], rax	      2141	revision.c	FUNCTION_64
0x6442	            0x31c0	                            xor eax, eax	      2141	revision.c	FUNCTION_64
0x6444	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2142	revision.c	FUNCTION_64
0x644c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2142	revision.c	FUNCTION_64
0x6454	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2142	revision.c	FUNCTION_64
0x645c	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      2144	revision.c	FUNCTION_64	CALL_1
0x6460	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2144	revision.c	FUNCTION_64	CALL_1
0x6464	      0xbe00000000	                              mov esi, 0	      2144	revision.c	FUNCTION_64	CALL_1
0x6469	          0x4889c7	                            mov rdi, rax	      2144	revision.c	FUNCTION_64	CALL_1
0x646c	      0xb800000000	                              mov eax, 0	      2144	revision.c	FUNCTION_64	CALL_1
0x6471	      0xe800000000	                          call 0x40064b6	      2144	revision.c	FUNCTION_64	CALL_1
0x6476	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2145	revision.c	FUNCTION_64	CALL_2
0x647a	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      2145	revision.c	FUNCTION_64	CALL_2
0x647e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2145	revision.c	FUNCTION_64	CALL_2
0x6482	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2145	revision.c	FUNCTION_64	CALL_2
0x6486	    0x41b800000000	                              mov r8d, 0	      2145	revision.c	FUNCTION_64	CALL_2
0x648c	          0x4889c7	                            mov rdi, rax	      2145	revision.c	FUNCTION_64	CALL_2
0x648f	      0xe800000000	                          call 0x40064d4	      2145	revision.c	FUNCTION_64	CALL_2
0x6494	          0x8945dc	             mov dword [rbp - 0x24], eax	      2145	revision.c	FUNCTION_64	CALL_2
0x6497	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2146	revision.c	FUNCTION_64	CALL_3
0x649b	          0x4889c7	                            mov rdi, rax	      2146	revision.c	FUNCTION_64	CALL_3
0x649e	      0xe800000000	                          call 0x40064e3	      2146	revision.c	FUNCTION_64	CALL_3
0x64a3	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2147	revision.c	FUNCTION_64
0x64a6	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2148	revision.c	FUNCTION_64
0x64aa	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2148	revision.c	FUNCTION_64
0x64b3	            0x7405	                            je 0x40064fa	      2148	revision.c	FUNCTION_64
0x64b5	      0xe800000000	                          call 0x40064fa	      2148	revision.c	FUNCTION_64
0x64ba	              0xc9	                                   leave	      2148	revision.c	FUNCTION_64
0x64bb	              0xc3	                                     ret	      2148	revision.c	FUNCTION_64
add_cache_tree	FOR,1:functions,0:WHILE,0:CALL,5:IF,1:ELSE,0:DO,0:SWITCH,0	71
0x31ff	              0x55	                                push rbp	      1298	revision.c	FUNCTION_46
0x3200	          0x4889e5	                            mov rbp, rsp	      1298	revision.c	FUNCTION_46
0x3203	        0x4883ec40	                           sub rsp, 0x40	      1298	revision.c	FUNCTION_46
0x3207	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1298	revision.c	FUNCTION_46
0x320b	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1298	revision.c	FUNCTION_46
0x320f	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1298	revision.c	FUNCTION_46
0x3213	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1299	revision.c	FUNCTION_46
0x3217	        0x488b4008	                mov rax, qword [rax + 8]	      1299	revision.c	FUNCTION_46
0x321b	        0x488945e8	             mov qword [rbp - 0x18], rax	      1299	revision.c	FUNCTION_46
0x321f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1302	revision.c	FUNCTION_46	IF_1
0x3223	            0x8b00	                    mov eax, dword [rax]	      1302	revision.c	FUNCTION_46	IF_1
0x3225	            0x85c0	                           test eax, eax	      1302	revision.c	FUNCTION_46	IF_1
0x3227	            0x7839	                            js 0x40032a2	      1302	revision.c	FUNCTION_46	IF_1
0x3229	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1303	revision.c	FUNCTION_46	IF_1	CALL_1
0x322d	        0x4883c004	                              add rax, 4	      1303	revision.c	FUNCTION_46	IF_1	CALL_1
0x3231	          0x4889c7	                            mov rdi, rax	      1303	revision.c	FUNCTION_46	IF_1	CALL_1
0x3234	      0xe800000000	                          call 0x4003279	      1303	revision.c	FUNCTION_46	IF_1	CALL_1
0x3239	        0x488945f0	             mov qword [rbp - 0x10], rax	      1303	revision.c	FUNCTION_46	IF_1	CALL_1
0x323d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1305	revision.c	FUNCTION_46	IF_1
0x3241	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1305	revision.c	FUNCTION_46	IF_1
0x3245	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1304	revision.c	FUNCTION_46	IF_1	CALL_2
0x3249	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1304	revision.c	FUNCTION_46	IF_1	CALL_2
0x324d	          0x4989d0	                             mov r8, rdx	      1304	revision.c	FUNCTION_46	IF_1	CALL_2
0x3250	      0xb900400000	                         mov ecx, 0x4000	      1304	revision.c	FUNCTION_46	IF_1	CALL_2
0x3255	      0xba00000000	                              mov edx, 0	      1304	revision.c	FUNCTION_46	IF_1	CALL_2
0x325a	          0x4889c7	                            mov rdi, rax	      1304	revision.c	FUNCTION_46	IF_1	CALL_2
0x325d	      0xe821d7ffff	   call sym.add_pending_object_with_path	      1304	revision.c	FUNCTION_46	IF_1	CALL_2
0x3262	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1308	revision.c	FUNCTION_46	FOR_1
0x3269	      0xe984000000	                           jmp 0x4003332	      1308	revision.c	FUNCTION_46	FOR_1
0x326e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1309	revision.c	FUNCTION_46	FOR_1
0x3272	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1309	revision.c	FUNCTION_46	FOR_1
0x3276	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1309	revision.c	FUNCTION_46	FOR_1
0x3279	          0x4863d2	                         movsxd rdx, edx	      1309	revision.c	FUNCTION_46	FOR_1
0x327c	        0x48c1e203	                              shl rdx, 3	      1309	revision.c	FUNCTION_46	FOR_1
0x3280	          0x4801d0	                            add rax, rdx	      1309	revision.c	FUNCTION_46	FOR_1
0x3283	          0x488b00	                    mov rax, qword [rax]	      1309	revision.c	FUNCTION_46	FOR_1
0x3286	        0x488945f8	                mov qword [rbp - 8], rax	      1309	revision.c	FUNCTION_46	FOR_1
0x328a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1310	revision.c	FUNCTION_46	FOR_1	CALL_3
0x328e	        0x488d5014	                   lea rdx, [rax + 0x14]	      1310	revision.c	FUNCTION_46	FOR_1	CALL_3
0x3292	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1310	revision.c	FUNCTION_46	FOR_1	CALL_3
0x3297	            0x7407	                            je 0x40032e0	      1310	revision.c	FUNCTION_46	FOR_1	CALL_3
0x3299	      0xbe00000000	                              mov esi, 0	      1310	revision.c	FUNCTION_46	FOR_1	CALL_3
0x329e	            0xeb05	                           jmp 0x40032e5	      1310	revision.c	FUNCTION_46	FOR_1	CALL_3
0x32a0	      0xbe00000000	                              mov esi, 0	      1310	revision.c	FUNCTION_46	FOR_1	CALL_3
0x32a5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1310	revision.c	FUNCTION_46	FOR_1	CALL_3
0x32a9	          0x4889d1	                            mov rcx, rdx	      1310	revision.c	FUNCTION_46	FOR_1	CALL_3
0x32ac	          0x4889f2	                            mov rdx, rsi	      1310	revision.c	FUNCTION_46	FOR_1	CALL_3
0x32af	      0xbe00000000	                              mov esi, 0	      1310	revision.c	FUNCTION_46	FOR_1	CALL_3
0x32b4	          0x4889c7	                            mov rdi, rax	      1310	revision.c	FUNCTION_46	FOR_1	CALL_3
0x32b7	      0xb800000000	                              mov eax, 0	      1310	revision.c	FUNCTION_46	FOR_1	CALL_3
0x32bc	      0xe800000000	                          call 0x4003301	      1310	revision.c	FUNCTION_46	FOR_1	CALL_3
0x32c1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1311	revision.c	FUNCTION_46	FOR_1	CALL_4
0x32c5	          0x488b00	                    mov rax, qword [rax]	      1311	revision.c	FUNCTION_46	FOR_1	CALL_4
0x32c8	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1311	revision.c	FUNCTION_46	FOR_1	CALL_4
0x32cc	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1311	revision.c	FUNCTION_46	FOR_1	CALL_4
0x32d0	          0x4889ce	                            mov rsi, rcx	      1311	revision.c	FUNCTION_46	FOR_1	CALL_4
0x32d3	          0x4889c7	                            mov rdi, rax	      1311	revision.c	FUNCTION_46	FOR_1	CALL_4
0x32d6	      0xe824ffffff	                 call sym.add_cache_tree	      1311	revision.c	FUNCTION_46	FOR_1	CALL_4
0x32db	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1312	revision.c	FUNCTION_46	FOR_1	CALL_5
0x32df	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1312	revision.c	FUNCTION_46	FOR_1	CALL_5
0x32e3	          0x4889d6	                            mov rsi, rdx	      1312	revision.c	FUNCTION_46	FOR_1	CALL_5
0x32e6	          0x4889c7	                            mov rdi, rax	      1312	revision.c	FUNCTION_46	FOR_1	CALL_5
0x32e9	      0xe89ecfffff	                  call sym.strbuf_setlen	      1312	revision.c	FUNCTION_46	FOR_1	CALL_5
0x32ee	        0x8345e401	               add dword [rbp - 0x1c], 1	      1308	revision.c	FUNCTION_46	FOR_1
0x32f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1308	revision.c	FUNCTION_46	FOR_1
0x32f6	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1308	revision.c	FUNCTION_46	FOR_1
0x32f9	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1308	revision.c	FUNCTION_46	FOR_1
0x32fc	     0xf8f6cffffff	                            jg 0x40032ae	      1308	revision.c	FUNCTION_46	FOR_1
0x3302	              0x90	                                     nop	      1315	revision.c	FUNCTION_46
0x3303	              0xc9	                                   leave	      1315	revision.c	FUNCTION_46
0x3304	              0xc3	                                     ret	      1315	revision.c	FUNCTION_46
strbuf_setlen	FOR,0:functions,0:WHILE,0:CALL,2:IF,2:ELSE,1:DO,0:SWITCH,0	43
0x28c	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_105
0x28d	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_105
0x290	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_105
0x294	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_105
0x298	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_105
0x29c	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_105	IF_1
0x2a0	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_105	IF_1
0x2a3	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_105	IF_1
0x2a6	            0x740d	                            je 0x40002f5	       162	strbuf.h	FUNCTION_105	IF_1
0x2a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_105	IF_1
0x2ac	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_105	IF_1
0x2af	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_105	IF_1
0x2b3	            0xeb05	                           jmp 0x40002fa	       162	strbuf.h	FUNCTION_105	IF_1
0x2b5	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_105	IF_1
0x2ba	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_105	IF_1
0x2be	            0x730f	                           jae 0x400030f	       162	strbuf.h	FUNCTION_105	IF_1
0x2c0	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_105	CALL_1
0x2c5	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_105	CALL_1
0x2ca	      0xe800000000	                          call 0x400030f	       163	strbuf.h	FUNCTION_105	CALL_1
0x2cf	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_105
0x2d3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_105
0x2d7	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_105
0x2db	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_105	IF_2
0x2df	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_105	IF_2
0x2e3	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_105	IF_2
0x2e9	            0x7414	                            je 0x400033f	       165	strbuf.h	FUNCTION_105	IF_2
0x2eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_105	IF_2
0x2ef	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_105	IF_2
0x2f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_105	IF_2
0x2f7	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_105	IF_2
0x2fa	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_105	IF_2
0x2fd	            0xeb24	                           jmp 0x4000363	       169	strbuf.h	FUNCTION_105
0x2ff	     0xfb605000000	           movzx eax, byte [0x04000346] 	       168	strbuf.h	FUNCTION_105	CALL_2
0x306	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_105	CALL_2
0x308	            0x7419	                            je 0x4000363	       168	strbuf.h	FUNCTION_105	CALL_2
0x30a	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_105	CALL_2
0x30f	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_105	CALL_2
0x314	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_105	CALL_2
0x319	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_105	CALL_2
0x31e	      0xe800000000	                          call 0x4000363	       168	strbuf.h	FUNCTION_105	CALL_2
0x323	              0x90	                                     nop	       169	strbuf.h	FUNCTION_105
0x324	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_105
0x325	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_105
free_saved_parents	FOR,0:functions,0:WHILE,0:CALL,1:IF,1:ELSE,0:DO,0:SWITCH,0	15
0x8ef1	              0x55	                                push rbp	      3167	revision.c	ELSE_1	FUNCTION_91
0x8ef2	          0x4889e5	                            mov rbp, rsp	      3167	revision.c	ELSE_1	FUNCTION_91
0x8ef5	        0x4883ec10	                           sub rsp, 0x10	      3167	revision.c	ELSE_1	FUNCTION_91
0x8ef9	        0x48897df8	                mov qword [rbp - 8], rdi	      3167	revision.c	ELSE_1	FUNCTION_91
0x8efd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3168	revision.c	ELSE_1	FUNCTION_91	IF_1
0x8f01	    0x488b80980800	           mov rax, qword [rax + 0x898] 	      3168	revision.c	ELSE_1	FUNCTION_91	IF_1
0x8f08	          0x4885c0	                           test rax, rax	      3168	revision.c	ELSE_1	FUNCTION_91	IF_1
0x8f0b	            0x7413	                            je 0x4008f60	      3168	revision.c	ELSE_1	FUNCTION_91	IF_1
0x8f0d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3169	revision.c	ELSE_1	FUNCTION_91	CALL_1
0x8f11	    0x488b80980800	           mov rax, qword [rax + 0x898] 	      3169	revision.c	ELSE_1	FUNCTION_91	CALL_1
0x8f18	          0x4889c7	                            mov rdi, rax	      3169	revision.c	ELSE_1	FUNCTION_91	CALL_1
0x8f1b	      0xe8edfcffff	            call sym.clear_saved_parents	      3169	revision.c	ELSE_1	FUNCTION_91	CALL_1
0x8f20	              0x90	                                     nop	      3170	revision.c	ELSE_1	FUNCTION_91
0x8f21	              0xc9	                                   leave	      3170	revision.c	ELSE_1	FUNCTION_91
0x8f22	              0xc3	                                     ret	      3170	revision.c	ELSE_1	FUNCTION_91
mark_treesame_root_parents	FOR,1:functions,0:WHILE,0:CALL,0:IF,1:ELSE,0:DO,0:SWITCH,0	46
0x7917	              0x55	                                push rbp	      2576	revision.c	FUNCTION_74
0x7918	          0x4889e5	                            mov rbp, rsp	      2576	revision.c	FUNCTION_74
0x791b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2576	revision.c	FUNCTION_74
0x791f	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2576	revision.c	FUNCTION_74
0x7923	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2578	revision.c	FUNCTION_74
0x792a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2580	revision.c	FUNCTION_74	FOR_1
0x792e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2580	revision.c	FUNCTION_74	FOR_1
0x7932	        0x488945f0	             mov qword [rbp - 0x10], rax	      2580	revision.c	FUNCTION_74	FOR_1
0x7936	            0xeb6b	                           jmp 0x40079e3	      2580	revision.c	FUNCTION_74	FOR_1
0x7938	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2581	revision.c	FUNCTION_74	FOR_1
0x793c	          0x488b00	                    mov rax, qword [rax]	      2581	revision.c	FUNCTION_74	FOR_1
0x793f	        0x488945f8	                mov qword [rbp - 8], rax	      2581	revision.c	FUNCTION_74	FOR_1
0x7943	        0x488b45f8	                mov rax, qword [rbp - 8]	      2582	revision.c	FUNCTION_74	FOR_1	IF_1
0x7947	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2582	revision.c	FUNCTION_74	FOR_1	IF_1
0x794b	          0x4885c0	                           test rax, rax	      2582	revision.c	FUNCTION_74	FOR_1	IF_1
0x794e	            0x7547	                           jne 0x40079d7	      2582	revision.c	FUNCTION_74	FOR_1	IF_1
0x7950	        0x488b45f8	                mov rax, qword [rbp - 8]	      2582	revision.c	FUNCTION_74	FOR_1	IF_1
0x7954	            0x8b00	                    mov eax, dword [rax]	      2582	revision.c	FUNCTION_74	FOR_1	IF_1
0x7956	          0xc1e804	                              shr eax, 4	      2582	revision.c	FUNCTION_74	FOR_1	IF_1
0x7959	      0x25ffffff07	                      and eax, 0x7ffffff	      2582	revision.c	FUNCTION_74	FOR_1	IF_1
0x795e	          0x83e004	                              and eax, 4	      2582	revision.c	FUNCTION_74	FOR_1	IF_1
0x7961	            0x85c0	                           test eax, eax	      2582	revision.c	FUNCTION_74	FOR_1	IF_1
0x7963	            0x7432	                            je 0x40079d7	      2582	revision.c	FUNCTION_74	FOR_1	IF_1
0x7965	        0x488b45f8	                mov rax, qword [rbp - 8]	      2583	revision.c	FUNCTION_74	FOR_1	IF_1
0x7969	            0x8b00	                    mov eax, dword [rax]	      2583	revision.c	FUNCTION_74	FOR_1	IF_1
0x796b	          0xc1e804	                              shr eax, 4	      2583	revision.c	FUNCTION_74	FOR_1	IF_1
0x796e	      0x25ffffff07	                      and eax, 0x7ffffff	      2583	revision.c	FUNCTION_74	FOR_1	IF_1
0x7973	          0x83c810	                            or eax, 0x10	      2583	revision.c	FUNCTION_74	FOR_1	IF_1
0x7976	            0x89c2	                            mov edx, eax	      2583	revision.c	FUNCTION_74	FOR_1	IF_1
0x7978	        0x488b45f8	                mov rax, qword [rbp - 8]	      2583	revision.c	FUNCTION_74	FOR_1	IF_1
0x797c	    0x81e2ffffff07	                      and edx, 0x7ffffff	      2583	revision.c	FUNCTION_74	FOR_1	IF_1
0x7982	            0x89d1	                            mov ecx, edx	      2583	revision.c	FUNCTION_74	FOR_1	IF_1
0x7984	          0xc1e104	                              shl ecx, 4	      2583	revision.c	FUNCTION_74	FOR_1	IF_1
0x7987	            0x8b10	                    mov edx, dword [rax]	      2583	revision.c	FUNCTION_74	FOR_1	IF_1
0x7989	    0x81e20f000080	                     and edx, 0x8000000f	      2583	revision.c	FUNCTION_74	FOR_1	IF_1
0x798f	             0x9ca	                             or edx, ecx	      2583	revision.c	FUNCTION_74	FOR_1	IF_1
0x7991	            0x8910	                    mov dword [rax], edx	      2583	revision.c	FUNCTION_74	FOR_1	IF_1
0x7993	        0x8345ec01	               add dword [rbp - 0x14], 1	      2584	revision.c	FUNCTION_74	FOR_1	IF_1
0x7997	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2580	revision.c	FUNCTION_74	FOR_1
0x799b	        0x488b4008	                mov rax, qword [rax + 8]	      2580	revision.c	FUNCTION_74	FOR_1
0x799f	        0x488945f0	             mov qword [rbp - 0x10], rax	      2580	revision.c	FUNCTION_74	FOR_1
0x79a3	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2580	revision.c	FUNCTION_74	FOR_1
0x79a8	            0x758e	                           jne 0x4007978	      2580	revision.c	FUNCTION_74	FOR_1
0x79aa	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2588	revision.c	FUNCTION_74
0x79ad	              0x5d	                                 pop rbp	      2589	revision.c	FUNCTION_74
0x79ae	              0xc3	                                     ret	      2589	revision.c	FUNCTION_74
add_rev_cmdline	FOR,0:functions,0:WHILE,0:CALL,2:IF,0:ELSE,0:DO,0:SWITCH,0	115
0x2b18	              0x55	                                push rbp	      1123	revision.c	FUNCTION_33
0x2b19	          0x4889e5	                            mov rbp, rsp	      1123	revision.c	FUNCTION_33
0x2b1c	              0x53	                                push rbx	      1123	revision.c	FUNCTION_33
0x2b1d	        0x4883ec38	                           sub rsp, 0x38	      1123	revision.c	FUNCTION_33
0x2b21	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1123	revision.c	FUNCTION_33
0x2b25	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1123	revision.c	FUNCTION_33
0x2b29	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1123	revision.c	FUNCTION_33
0x2b2d	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      1123	revision.c	FUNCTION_33
0x2b30	        0x448945c0	             mov dword [rbp - 0x40], r8d	      1123	revision.c	FUNCTION_33
0x2b34	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1124	revision.c	FUNCTION_33
0x2b38	        0x4883c028	                           add rax, 0x28	      1124	revision.c	FUNCTION_33
0x2b3c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1124	revision.c	FUNCTION_33
0x2b40	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1125	revision.c	FUNCTION_33
0x2b44	            0x8b00	                    mov eax, dword [rax]	      1125	revision.c	FUNCTION_33
0x2b46	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1125	revision.c	FUNCTION_33
0x2b49	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1127	revision.c	FUNCTION_33	CALL_1
0x2b4c	          0x8d5001	                      lea edx, [rax + 1]	      1127	revision.c	FUNCTION_33	CALL_1
0x2b4f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1127	revision.c	FUNCTION_33	CALL_1
0x2b53	          0x8b4004	                mov eax, dword [rax + 4]	      1127	revision.c	FUNCTION_33	CALL_1
0x2b56	            0x39c2	                            cmp edx, eax	      1127	revision.c	FUNCTION_33	CALL_1
0x2b58	            0x767f	                           jbe 0x4002c19	      1127	revision.c	FUNCTION_33	CALL_1
0x2b5a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1127	revision.c	FUNCTION_33	CALL_1
0x2b5e	          0x8b5004	                mov edx, dword [rax + 4]	      1127	revision.c	FUNCTION_33	CALL_1
0x2b61	            0x89d0	                            mov eax, edx	      1127	revision.c	FUNCTION_33	CALL_1
0x2b63	             0x1c0	                            add eax, eax	      1127	revision.c	FUNCTION_33	CALL_1
0x2b65	             0x1d0	                            add eax, edx	      1127	revision.c	FUNCTION_33	CALL_1
0x2b67	          0x83c030	                           add eax, 0x30	      1127	revision.c	FUNCTION_33	CALL_1
0x2b6a	            0xd1e8	                              shr eax, 1	      1127	revision.c	FUNCTION_33	CALL_1
0x2b6c	            0x89c2	                            mov edx, eax	      1127	revision.c	FUNCTION_33	CALL_1
0x2b6e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1127	revision.c	FUNCTION_33	CALL_1
0x2b71	          0x83c001	                              add eax, 1	      1127	revision.c	FUNCTION_33	CALL_1
0x2b74	            0x39c2	                            cmp edx, eax	      1127	revision.c	FUNCTION_33	CALL_1
0x2b76	            0x730f	                           jae 0x4002bc7	      1127	revision.c	FUNCTION_33	CALL_1
0x2b78	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1127	revision.c	FUNCTION_33	CALL_1
0x2b7b	          0x8d5001	                      lea edx, [rax + 1]	      1127	revision.c	FUNCTION_33	CALL_1
0x2b7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1127	revision.c	FUNCTION_33	CALL_1
0x2b82	          0x895004	                mov dword [rax + 4], edx	      1127	revision.c	FUNCTION_33	CALL_1
0x2b85	            0xeb1b	                           jmp 0x4002be2	      1127	revision.c	FUNCTION_33	CALL_1
0x2b87	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1127	revision.c	FUNCTION_33	CALL_1
0x2b8b	          0x8b5004	                mov edx, dword [rax + 4]	      1127	revision.c	FUNCTION_33	CALL_1
0x2b8e	            0x89d0	                            mov eax, edx	      1127	revision.c	FUNCTION_33	CALL_1
0x2b90	             0x1c0	                            add eax, eax	      1127	revision.c	FUNCTION_33	CALL_1
0x2b92	             0x1d0	                            add eax, edx	      1127	revision.c	FUNCTION_33	CALL_1
0x2b94	          0x83c030	                           add eax, 0x30	      1127	revision.c	FUNCTION_33	CALL_1
0x2b97	            0xd1e8	                              shr eax, 1	      1127	revision.c	FUNCTION_33	CALL_1
0x2b99	            0x89c2	                            mov edx, eax	      1127	revision.c	FUNCTION_33	CALL_1
0x2b9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1127	revision.c	FUNCTION_33	CALL_1
0x2b9f	          0x895004	                mov dword [rax + 4], edx	      1127	revision.c	FUNCTION_33	CALL_1
0x2ba2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1127	revision.c	FUNCTION_33	CALL_1
0x2ba6	          0x8b4004	                mov eax, dword [rax + 4]	      1127	revision.c	FUNCTION_33	CALL_1
0x2ba9	            0x89c0	                            mov eax, eax	      1127	revision.c	FUNCTION_33	CALL_1
0x2bab	          0x4889c6	                            mov rsi, rax	      1127	revision.c	FUNCTION_33	CALL_1
0x2bae	      0xbf18000000	                           mov edi, 0x18	      1127	revision.c	FUNCTION_33	CALL_1
0x2bb3	      0xe8edd4ffff	                        call sym.st_mult	      1127	revision.c	FUNCTION_33	CALL_1
0x2bb8	          0x4889c2	                            mov rdx, rax	      1127	revision.c	FUNCTION_33	CALL_1
0x2bbb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1127	revision.c	FUNCTION_33	CALL_1
0x2bbf	        0x488b4008	                mov rax, qword [rax + 8]	      1127	revision.c	FUNCTION_33	CALL_1
0x2bc3	          0x4889d6	                            mov rsi, rdx	      1127	revision.c	FUNCTION_33	CALL_1
0x2bc6	          0x4889c7	                            mov rdi, rax	      1127	revision.c	FUNCTION_33	CALL_1
0x2bc9	      0xe800000000	                          call 0x4002c0e	      1127	revision.c	FUNCTION_33	CALL_1
0x2bce	          0x4889c2	                            mov rdx, rax	      1127	revision.c	FUNCTION_33	CALL_1
0x2bd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1127	revision.c	FUNCTION_33	CALL_1
0x2bd5	        0x48895008	                mov qword [rax + 8], rdx	      1127	revision.c	FUNCTION_33	CALL_1
0x2bd9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1128	revision.c	FUNCTION_33
0x2bdd	        0x488b4808	                mov rcx, qword [rax + 8]	      1128	revision.c	FUNCTION_33
0x2be1	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1128	revision.c	FUNCTION_33
0x2be4	          0x4889d0	                            mov rax, rdx	      1128	revision.c	FUNCTION_33
0x2be7	          0x4801c0	                            add rax, rax	      1128	revision.c	FUNCTION_33
0x2bea	          0x4801d0	                            add rax, rdx	      1128	revision.c	FUNCTION_33
0x2bed	        0x48c1e003	                              shl rax, 3	      1128	revision.c	FUNCTION_33
0x2bf1	        0x488d1401	                    lea rdx, [rcx + rax]	      1128	revision.c	FUNCTION_33
0x2bf5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1128	revision.c	FUNCTION_33
0x2bf9	          0x488902	                    mov qword [rdx], rax	      1128	revision.c	FUNCTION_33
0x2bfc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1129	revision.c	FUNCTION_33	CALL_2
0x2c00	        0x488b4808	                mov rcx, qword [rax + 8]	      1129	revision.c	FUNCTION_33	CALL_2
0x2c04	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1129	revision.c	FUNCTION_33	CALL_2
0x2c07	          0x4889d0	                            mov rax, rdx	      1129	revision.c	FUNCTION_33	CALL_2
0x2c0a	          0x4801c0	                            add rax, rax	      1129	revision.c	FUNCTION_33	CALL_2
0x2c0d	          0x4801d0	                            add rax, rdx	      1129	revision.c	FUNCTION_33	CALL_2
0x2c10	        0x48c1e003	                              shl rax, 3	      1129	revision.c	FUNCTION_33	CALL_2
0x2c14	        0x488d1c01	                    lea rbx, [rcx + rax]	      1129	revision.c	FUNCTION_33	CALL_2
0x2c18	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1129	revision.c	FUNCTION_33	CALL_2
0x2c1c	          0x4889c7	                            mov rdi, rax	      1129	revision.c	FUNCTION_33	CALL_2
0x2c1f	      0xe800000000	                          call 0x4002c64	      1129	revision.c	FUNCTION_33	CALL_2
0x2c24	        0x48894308	                mov qword [rbx + 8], rax	      1129	revision.c	FUNCTION_33	CALL_2
0x2c28	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1130	revision.c	FUNCTION_33
0x2c2c	        0x488b4808	                mov rcx, qword [rax + 8]	      1130	revision.c	FUNCTION_33
0x2c30	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1130	revision.c	FUNCTION_33
0x2c33	          0x4889d0	                            mov rax, rdx	      1130	revision.c	FUNCTION_33
0x2c36	          0x4801c0	                            add rax, rax	      1130	revision.c	FUNCTION_33
0x2c39	          0x4801d0	                            add rax, rdx	      1130	revision.c	FUNCTION_33
0x2c3c	        0x48c1e003	                              shl rax, 3	      1130	revision.c	FUNCTION_33
0x2c40	        0x488d1401	                    lea rdx, [rcx + rax]	      1130	revision.c	FUNCTION_33
0x2c44	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1130	revision.c	FUNCTION_33
0x2c47	          0x894210	             mov dword [rdx + 0x10], eax	      1130	revision.c	FUNCTION_33
0x2c4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1131	revision.c	FUNCTION_33
0x2c4e	        0x488b4808	                mov rcx, qword [rax + 8]	      1131	revision.c	FUNCTION_33
0x2c52	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1131	revision.c	FUNCTION_33
0x2c55	          0x4889d0	                            mov rax, rdx	      1131	revision.c	FUNCTION_33
0x2c58	          0x4801c0	                            add rax, rax	      1131	revision.c	FUNCTION_33
0x2c5b	          0x4801d0	                            add rax, rdx	      1131	revision.c	FUNCTION_33
0x2c5e	        0x48c1e003	                              shl rax, 3	      1131	revision.c	FUNCTION_33
0x2c62	        0x488d1401	                    lea rdx, [rcx + rax]	      1131	revision.c	FUNCTION_33
0x2c66	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1131	revision.c	FUNCTION_33
0x2c69	          0x894214	             mov dword [rdx + 0x14], eax	      1131	revision.c	FUNCTION_33
0x2c6c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1132	revision.c	FUNCTION_33
0x2c70	            0x8b00	                    mov eax, dword [rax]	      1132	revision.c	FUNCTION_33
0x2c72	          0x8d5001	                      lea edx, [rax + 1]	      1132	revision.c	FUNCTION_33
0x2c75	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1132	revision.c	FUNCTION_33
0x2c79	            0x8910	                    mov dword [rax], edx	      1132	revision.c	FUNCTION_33
0x2c7b	              0x90	                                     nop	      1133	revision.c	FUNCTION_33
0x2c7c	        0x4883c438	                           add rsp, 0x38	      1133	revision.c	FUNCTION_33
0x2c80	              0x5b	                                 pop rbx	      1133	revision.c	FUNCTION_33
0x2c81	              0x5d	                                 pop rbp	      1133	revision.c	FUNCTION_33
0x2c82	              0xc3	                                     ret	      1133	revision.c	FUNCTION_33
add_head_to_pending	FOR,0:functions,0:WHILE,0:CALL,3:IF,2:ELSE,0:DO,0:SWITCH,0	35
0xb69	              0x55	                                push rbp	       182	revision.c	FUNCTION_9
0xb6a	          0x4889e5	                            mov rbp, rsp	       182	revision.c	FUNCTION_9
0xb6d	        0x4883ec40	                           sub rsp, 0x40	       182	revision.c	FUNCTION_9
0xb71	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       182	revision.c	FUNCTION_9
0xb75	    0x64488b042528	                mov rax, qword fs:[0x28]	       182	revision.c	FUNCTION_9
0xb7e	        0x488945f8	                mov qword [rbp - 8], rax	       182	revision.c	FUNCTION_9
0xb82	            0x31c0	                            xor eax, eax	       182	revision.c	FUNCTION_9
0xb84	        0x488d45e0	                   lea rax, [rbp - 0x20]	       185	revision.c	FUNCTION_9	IF_1	CALL_1
0xb88	          0x4889c6	                            mov rsi, rax	       185	revision.c	FUNCTION_9	IF_1	CALL_1
0xb8b	      0xbf00000000	                              mov edi, 0	       185	revision.c	FUNCTION_9	IF_1	CALL_1
0xb90	      0xe800000000	                          call 0x4000bd5	       185	revision.c	FUNCTION_9	IF_1	CALL_1
0xb95	            0x85c0	                           test eax, eax	       185	revision.c	FUNCTION_9	IF_1	CALL_1
0xb97	            0x7531	                           jne 0x4000c0a	       185	revision.c	FUNCTION_9	IF_1	CALL_1
0xb99	        0x488d45e0	                   lea rax, [rbp - 0x20]	       187	revision.c	FUNCTION_9	CALL_2
0xb9d	          0x4889c7	                            mov rdi, rax	       187	revision.c	FUNCTION_9	CALL_2
0xba0	      0xe800000000	                          call 0x4000be5	       187	revision.c	FUNCTION_9	CALL_2
0xba5	        0x488945d8	             mov qword [rbp - 0x28], rax	       187	revision.c	FUNCTION_9	CALL_2
0xba9	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       188	revision.c	FUNCTION_9	IF_2
0xbae	            0x741d	                            je 0x4000c0d	       188	revision.c	FUNCTION_9	IF_2
0xbb0	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       190	revision.c	FUNCTION_9	CALL_3
0xbb4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       190	revision.c	FUNCTION_9	CALL_3
0xbb8	      0xba00000000	                              mov edx, 0	       190	revision.c	FUNCTION_9	CALL_3
0xbbd	          0x4889ce	                            mov rsi, rcx	       190	revision.c	FUNCTION_9	CALL_3
0xbc0	          0x4889c7	                            mov rdi, rax	       190	revision.c	FUNCTION_9	CALL_3
0xbc3	      0xe800000000	                          call 0x4000c08	       190	revision.c	FUNCTION_9	CALL_3
0xbc8	            0xeb04	                           jmp 0x4000c0e	       190	revision.c	FUNCTION_9	CALL_3
0xbca	              0x90	                                     nop	       186	revision.c	FUNCTION_9	IF_1
0xbcb	            0xeb01	                           jmp 0x4000c0e	       186	revision.c	FUNCTION_9	IF_1
0xbcd	              0x90	                                     nop	       189	revision.c	FUNCTION_9	IF_2
0xbce	        0x488b45f8	                mov rax, qword [rbp - 8]	       191	revision.c	FUNCTION_9
0xbd2	    0x644833042528	                xor rax, qword fs:[0x28]	       191	revision.c	FUNCTION_9
0xbdb	            0x7405	                            je 0x4000c22	       191	revision.c	FUNCTION_9
0xbdd	      0xe800000000	                          call 0x4000c22	       191	revision.c	FUNCTION_9
0xbe2	              0xc9	                                   leave	       191	revision.c	FUNCTION_9
0xbe3	              0xc3	                                     ret	       191	revision.c	FUNCTION_9
add_pending_oid	FOR,0:functions,0:WHILE,0:CALL,2:IF,0:ELSE,0:DO,0:SWITCH,0	23
0xc9c	              0x55	                                push rbp	       213	revision.c	FUNCTION_11
0xc9d	          0x4889e5	                            mov rbp, rsp	       213	revision.c	FUNCTION_11
0xca0	        0x4883ec30	                           sub rsp, 0x30	       213	revision.c	FUNCTION_11
0xca4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       213	revision.c	FUNCTION_11
0xca8	        0x488975e0	             mov qword [rbp - 0x20], rsi	       213	revision.c	FUNCTION_11
0xcac	        0x488955d8	             mov qword [rbp - 0x28], rdx	       213	revision.c	FUNCTION_11
0xcb0	          0x894dd4	             mov dword [rbp - 0x2c], ecx	       213	revision.c	FUNCTION_11
0xcb3	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       214	revision.c	FUNCTION_11	CALL_1
0xcb6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       214	revision.c	FUNCTION_11	CALL_1
0xcba	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       214	revision.c	FUNCTION_11	CALL_1
0xcbe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       214	revision.c	FUNCTION_11	CALL_1
0xcc2	          0x4889c7	                            mov rdi, rax	       214	revision.c	FUNCTION_11	CALL_1
0xcc5	      0xe81affffff	                  call sym.get_reference	       214	revision.c	FUNCTION_11	CALL_1
0xcca	        0x488945f8	                mov qword [rbp - 8], rax	       214	revision.c	FUNCTION_11	CALL_1
0xcce	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       215	revision.c	FUNCTION_11	CALL_2
0xcd2	        0x488b4df8	                mov rcx, qword [rbp - 8]	       215	revision.c	FUNCTION_11	CALL_2
0xcd6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       215	revision.c	FUNCTION_11	CALL_2
0xcda	          0x4889ce	                            mov rsi, rcx	       215	revision.c	FUNCTION_11	CALL_2
0xcdd	          0x4889c7	                            mov rdi, rax	       215	revision.c	FUNCTION_11	CALL_2
0xce0	      0xe800000000	                          call 0x4000d25	       215	revision.c	FUNCTION_11	CALL_2
0xce5	              0x90	                                     nop	       216	revision.c	FUNCTION_11
0xce6	              0xc9	                                   leave	       216	revision.c	FUNCTION_11
0xce7	              0xc3	                                     ret	       216	revision.c	FUNCTION_11
still_interesting	FOR,0:functions,0:WHILE,0:CALL,1:IF,3:ELSE,0:DO,0:SWITCH,0	31
0x2386	              0x55	                                push rbp	       911	revision.c	FUNCTION_28
0x2387	          0x4889e5	                            mov rbp, rsp	       911	revision.c	FUNCTION_28
0x238a	        0x4883ec20	                           sub rsp, 0x20	       911	revision.c	FUNCTION_28
0x238e	        0x48897df8	                mov qword [rbp - 8], rdi	       911	revision.c	FUNCTION_28
0x2392	        0x488975f0	             mov qword [rbp - 0x10], rsi	       911	revision.c	FUNCTION_28
0x2396	          0x8955ec	             mov dword [rbp - 0x14], edx	       911	revision.c	FUNCTION_28
0x2399	        0x48894de0	             mov qword [rbp - 0x20], rcx	       911	revision.c	FUNCTION_28
0x239d	      0x48837df800	                  cmp qword [rbp - 8], 0	       915	revision.c	FUNCTION_28	IF_1
0x23a2	            0x7507	                           jne 0x40023eb	       915	revision.c	FUNCTION_28	IF_1
0x23a4	      0xb800000000	                              mov eax, 0	       916	revision.c	FUNCTION_28	IF_1
0x23a9	            0xeb3c	                           jmp 0x4002427	       916	revision.c	FUNCTION_28	IF_1
0x23ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       922	revision.c	FUNCTION_28	IF_2
0x23af	          0x488b00	                    mov rax, qword [rax]	       922	revision.c	FUNCTION_28	IF_2
0x23b2	        0x488b4028	            mov rax, qword [rax + 0x28] 	       922	revision.c	FUNCTION_28	IF_2
0x23b6	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       922	revision.c	FUNCTION_28	IF_2
0x23ba	            0x7207	                            jb 0x4002403	       922	revision.c	FUNCTION_28	IF_2
0x23bc	      0xb805000000	                              mov eax, 5	       923	revision.c	FUNCTION_28	IF_2
0x23c1	            0xeb24	                           jmp 0x4002427	       923	revision.c	FUNCTION_28	IF_2
0x23c3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       929	revision.c	FUNCTION_28	IF_3	CALL_1
0x23c7	        0x488b45f8	                mov rax, qword [rbp - 8]	       929	revision.c	FUNCTION_28	IF_3	CALL_1
0x23cb	          0x4889d6	                            mov rsi, rdx	       929	revision.c	FUNCTION_28	IF_3	CALL_1
0x23ce	          0x4889c7	                            mov rdi, rax	       929	revision.c	FUNCTION_28	IF_3	CALL_1
0x23d1	      0xe811ecffff	        call sym.everybody_uninteresting	       929	revision.c	FUNCTION_28	IF_3	CALL_1
0x23d6	            0x85c0	                           test eax, eax	       929	revision.c	FUNCTION_28	IF_3	CALL_1
0x23d8	            0x7507	                           jne 0x4002421	       929	revision.c	FUNCTION_28	IF_3	CALL_1
0x23da	      0xb805000000	                              mov eax, 5	       930	revision.c	FUNCTION_28	IF_3
0x23df	            0xeb06	                           jmp 0x4002427	       930	revision.c	FUNCTION_28	IF_3
0x23e1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       933	revision.c	FUNCTION_28
0x23e4	          0x83e801	                              sub eax, 1	       933	revision.c	FUNCTION_28
0x23e7	              0xc9	                                   leave	       934	revision.c	FUNCTION_28
0x23e8	              0xc3	                                     ret	       934	revision.c	FUNCTION_28
do_add_index_objects_to_pending	FOR,1:functions,0:WHILE,0:CALL,6:IF,3:ELSE,0:DO,0:SWITCH,0	76
0x3305	              0x55	                                push rbp	      1319	revision.c	FUNCTION_47
0x3306	          0x4889e5	                            mov rbp, rsp	      1319	revision.c	FUNCTION_47
0x3309	        0x4883ec50	                           sub rsp, 0x50	      1319	revision.c	FUNCTION_47
0x330d	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1319	revision.c	FUNCTION_47
0x3311	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1319	revision.c	FUNCTION_47
0x3315	    0x64488b042528	                mov rax, qword fs:[0x28]	      1319	revision.c	FUNCTION_47
0x331e	        0x488945f8	                mov qword [rbp - 8], rax	      1319	revision.c	FUNCTION_47
0x3322	            0x31c0	                            xor eax, eax	      1319	revision.c	FUNCTION_47
0x3324	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1322	revision.c	FUNCTION_47	FOR_1
0x332b	      0xe988000000	                           jmp 0x40033f8	      1322	revision.c	FUNCTION_47	FOR_1
0x3330	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1323	revision.c	FUNCTION_47	FOR_1
0x3334	          0x488b00	                    mov rax, qword [rax]	      1323	revision.c	FUNCTION_47	FOR_1
0x3337	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      1323	revision.c	FUNCTION_47	FOR_1
0x333a	          0x4863d2	                         movsxd rdx, edx	      1323	revision.c	FUNCTION_47	FOR_1
0x333d	        0x48c1e203	                              shl rdx, 3	      1323	revision.c	FUNCTION_47	FOR_1
0x3341	          0x4801d0	                            add rax, rdx	      1323	revision.c	FUNCTION_47	FOR_1
0x3344	          0x488b00	                    mov rax, qword [rax]	      1323	revision.c	FUNCTION_47	FOR_1
0x3347	        0x488945d0	             mov qword [rbp - 0x30], rax	      1323	revision.c	FUNCTION_47	FOR_1
0x334b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1326	revision.c	FUNCTION_47	FOR_1	IF_1	CALL_1
0x334f	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1326	revision.c	FUNCTION_47	FOR_1	IF_1	CALL_1
0x3352	      0x2500f00000	                         and eax, 0xf000	      1326	revision.c	FUNCTION_47	FOR_1	IF_1	CALL_1
0x3357	      0x3d00e00000	                         cmp eax, 0xe000	      1326	revision.c	FUNCTION_47	FOR_1	IF_1	CALL_1
0x335c	            0x7455	                            je 0x40033f3	      1326	revision.c	FUNCTION_47	FOR_1	IF_1	CALL_1
0x335e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1329	revision.c	FUNCTION_47	FOR_1	CALL_2
0x3362	        0x4883c044	                           add rax, 0x44	      1329	revision.c	FUNCTION_47	FOR_1	CALL_2
0x3366	          0x4889c7	                            mov rdi, rax	      1329	revision.c	FUNCTION_47	FOR_1	CALL_2
0x3369	      0xe800000000	                          call 0x40033ae	      1329	revision.c	FUNCTION_47	FOR_1	CALL_2
0x336e	        0x488945d8	             mov qword [rbp - 0x28], rax	      1329	revision.c	FUNCTION_47	FOR_1	CALL_2
0x3372	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1330	revision.c	FUNCTION_47	FOR_1	IF_2
0x3377	            0x750f	                           jne 0x40033c8	      1330	revision.c	FUNCTION_47	FOR_1	IF_2
0x3379	      0xbf00000000	                              mov edi, 0	      1331	revision.c	FUNCTION_47	FOR_1	CALL_3
0x337e	      0xb800000000	                              mov eax, 0	      1331	revision.c	FUNCTION_47	FOR_1	CALL_3
0x3383	      0xe800000000	                          call 0x40033c8	      1331	revision.c	FUNCTION_47	FOR_1	CALL_3
0x3388	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1333	revision.c	FUNCTION_47	FOR_1
0x338c	        0x488d4858	                   lea rcx, [rax + 0x58]	      1333	revision.c	FUNCTION_47	FOR_1
0x3390	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1332	revision.c	FUNCTION_47	FOR_1	CALL_4
0x3394	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1332	revision.c	FUNCTION_47	FOR_1	CALL_4
0x3397	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1332	revision.c	FUNCTION_47	FOR_1	CALL_4
0x339b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1332	revision.c	FUNCTION_47	FOR_1	CALL_4
0x339f	          0x4989c8	                             mov r8, rcx	      1332	revision.c	FUNCTION_47	FOR_1	CALL_4
0x33a2	            0x89d1	                            mov ecx, edx	      1332	revision.c	FUNCTION_47	FOR_1	CALL_4
0x33a4	      0xba00000000	                              mov edx, 0	      1332	revision.c	FUNCTION_47	FOR_1	CALL_4
0x33a9	          0x4889c7	                            mov rdi, rax	      1332	revision.c	FUNCTION_47	FOR_1	CALL_4
0x33ac	      0xe8d2d5ffff	   call sym.add_pending_object_with_path	      1332	revision.c	FUNCTION_47	FOR_1	CALL_4
0x33b1	            0xeb01	                           jmp 0x40033f4	      1332	revision.c	FUNCTION_47	FOR_1	CALL_4
0x33b3	              0x90	                                     nop	      1327	revision.c	FUNCTION_47	FOR_1	IF_1
0x33b4	        0x8345cc01	               add dword [rbp - 0x34], 1	      1322	revision.c	FUNCTION_47	FOR_1
0x33b8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1322	revision.c	FUNCTION_47	FOR_1
0x33bc	          0x8b500c	              mov edx, dword [rax + 0xc]	      1322	revision.c	FUNCTION_47	FOR_1
0x33bf	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1322	revision.c	FUNCTION_47	FOR_1
0x33c2	            0x39c2	                            cmp edx, eax	      1322	revision.c	FUNCTION_47	FOR_1
0x33c4	     0xf8766ffffff	                            ja 0x4003370	      1322	revision.c	FUNCTION_47	FOR_1
0x33ca	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1336	revision.c	FUNCTION_47	IF_3
0x33ce	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1336	revision.c	FUNCTION_47	IF_3
0x33d2	          0x4885c0	                           test rax, rax	      1336	revision.c	FUNCTION_47	IF_3
0x33d5	            0x743f	                            je 0x4003456	      1336	revision.c	FUNCTION_47	IF_3
0x33d7	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1337	revision.c	FUNCTION_47	IF_3
0x33df	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1337	revision.c	FUNCTION_47	IF_3
0x33e7	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1337	revision.c	FUNCTION_47	IF_3
0x33ef	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1338	revision.c	FUNCTION_47	IF_3	CALL_5
0x33f3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1338	revision.c	FUNCTION_47	IF_3	CALL_5
0x33f7	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1338	revision.c	FUNCTION_47	IF_3	CALL_5
0x33fb	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      1338	revision.c	FUNCTION_47	IF_3	CALL_5
0x33ff	          0x4889ce	                            mov rsi, rcx	      1338	revision.c	FUNCTION_47	IF_3	CALL_5
0x3402	          0x4889c7	                            mov rdi, rax	      1338	revision.c	FUNCTION_47	IF_3	CALL_5
0x3405	      0xe8f5fdffff	                 call sym.add_cache_tree	      1338	revision.c	FUNCTION_47	IF_3	CALL_5
0x340a	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1339	revision.c	FUNCTION_47	IF_3	CALL_6
0x340e	          0x4889c7	                            mov rdi, rax	      1339	revision.c	FUNCTION_47	IF_3	CALL_6
0x3411	      0xe800000000	                          call 0x4003456	      1339	revision.c	FUNCTION_47	IF_3	CALL_6
0x3416	              0x90	                                     nop	      1341	revision.c	FUNCTION_47
0x3417	        0x488b45f8	                mov rax, qword [rbp - 8]	      1341	revision.c	FUNCTION_47
0x341b	    0x644833042528	                xor rax, qword fs:[0x28]	      1341	revision.c	FUNCTION_47
0x3424	            0x7405	                            je 0x400346b	      1341	revision.c	FUNCTION_47
0x3426	      0xe800000000	                          call 0x400346b	      1341	revision.c	FUNCTION_47
0x342b	              0xc9	                                   leave	      1341	revision.c	FUNCTION_47
0x342c	              0xc3	                                     ret	      1341	revision.c	FUNCTION_47
strbuf_addch	FOR,0:functions,0:WHILE,0:CALL,2:IF,1:ELSE,0:DO,0:SWITCH,0	33
0x326	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_106
0x327	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_106
0x32a	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_106
0x32e	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_106
0x332	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_106
0x335	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_106	IF_1	CALL_1
0x339	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_106	IF_1	CALL_1
0x33c	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_106	IF_1	CALL_1
0x341	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_106	IF_1	CALL_1
0x344	            0x7511	                           jne 0x4000397	       227	strbuf.h	FUNCTION_106	IF_1	CALL_1
0x346	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_106	CALL_2
0x34a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_106	CALL_2
0x34f	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_106	CALL_2
0x352	      0xe800000000	                          call 0x4000397	       228	strbuf.h	FUNCTION_106	CALL_2
0x357	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_106
0x35b	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_106
0x35f	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_106
0x363	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_106
0x367	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_106
0x36b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_106
0x36f	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_106
0x373	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_106
0x376	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_106
0x379	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_106
0x37b	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_106
0x37f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_106
0x383	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_106
0x387	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_106
0x38b	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_106
0x38e	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_106
0x391	              0x90	                                     nop	       231	strbuf.h	FUNCTION_106
0x392	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_106
0x393	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_106
get_revision_mark	FOR,0:functions,0:WHILE,0:CALL,0:IF,7:ELSE,6:DO,0:SWITCH,0	65
0x9863	              0x55	                                push rbp	      3456	revision.c	FUNCTION_101
0x9864	          0x4889e5	                            mov rbp, rsp	      3456	revision.c	FUNCTION_101
0x9867	        0x48897df8	                mov qword [rbp - 8], rdi	      3456	revision.c	FUNCTION_101
0x986b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3456	revision.c	FUNCTION_101
0x986f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3457	revision.c	FUNCTION_101	IF_1
0x9873	            0x8b00	                    mov eax, dword [rax]	      3457	revision.c	FUNCTION_101	IF_1
0x9875	          0xc1e804	                              shr eax, 4	      3457	revision.c	FUNCTION_101	IF_1
0x9878	      0x25ffffff07	                      and eax, 0x7ffffff	      3457	revision.c	FUNCTION_101	IF_1
0x987d	          0x83e020	                           and eax, 0x20	      3457	revision.c	FUNCTION_101	IF_1
0x9880	            0x85c0	                           test eax, eax	      3457	revision.c	FUNCTION_101	IF_1
0x9882	            0x740a	                            je 0x40098ce	      3457	revision.c	FUNCTION_101	IF_1
0x9884	      0xb800000000	                              mov eax, 0	      3458	revision.c	FUNCTION_101	IF_1
0x9889	      0xe9aa000000	                           jmp 0x4009978	      3458	revision.c	FUNCTION_101	IF_1
0x988e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3459	revision.c	FUNCTION_101	ELSE_1	IF_2
0x9892	            0x8b00	                    mov eax, dword [rax]	      3459	revision.c	FUNCTION_101	ELSE_1	IF_2
0x9894	          0xc1e804	                              shr eax, 4	      3459	revision.c	FUNCTION_101	ELSE_1	IF_2
0x9897	      0x25ffffff07	                      and eax, 0x7ffffff	      3459	revision.c	FUNCTION_101	ELSE_1	IF_2
0x989c	          0x83e002	                              and eax, 2	      3459	revision.c	FUNCTION_101	ELSE_1	IF_2
0x989f	            0x85c0	                           test eax, eax	      3459	revision.c	FUNCTION_101	ELSE_1	IF_2
0x98a1	            0x740a	                            je 0x40098ed	      3459	revision.c	FUNCTION_101	ELSE_1	IF_2
0x98a3	      0xb800000000	                              mov eax, 0	      3460	revision.c	FUNCTION_101	ELSE_1	IF_2
0x98a8	      0xe98b000000	                           jmp 0x4009978	      3460	revision.c	FUNCTION_101	ELSE_1	IF_2
0x98ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3461	revision.c	FUNCTION_101	ELSE_2	IF_3
0x98b1	            0x8b00	                    mov eax, dword [rax]	      3461	revision.c	FUNCTION_101	ELSE_2	IF_3
0x98b3	          0xc1e804	                              shr eax, 4	      3461	revision.c	FUNCTION_101	ELSE_2	IF_3
0x98b6	      0x25ffffff07	                      and eax, 0x7ffffff	      3461	revision.c	FUNCTION_101	ELSE_2	IF_3
0x98bb	      0x2500020000	                          and eax, 0x200	      3461	revision.c	FUNCTION_101	ELSE_2	IF_3
0x98c0	            0x85c0	                           test eax, eax	      3461	revision.c	FUNCTION_101	ELSE_2	IF_3
0x98c2	            0x7407	                            je 0x400990b	      3461	revision.c	FUNCTION_101	ELSE_2	IF_3
0x98c4	      0xb800000000	                              mov eax, 0	      3462	revision.c	FUNCTION_101	ELSE_2	IF_3
0x98c9	            0xeb6d	                           jmp 0x4009978	      3462	revision.c	FUNCTION_101	ELSE_2	IF_3
0x98cb	      0x48837df800	                  cmp qword [rbp - 8], 0	      3463	revision.c	FUNCTION_101	ELSE_3	IF_4
0x98d0	            0x740f	                            je 0x4009921	      3463	revision.c	FUNCTION_101	ELSE_3	IF_4
0x98d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3463	revision.c	FUNCTION_101	ELSE_3	IF_4
0x98d6	         0xfb64076	           movzx eax, byte [rax + 0x76] 	      3463	revision.c	FUNCTION_101	ELSE_3	IF_4
0x98da	          0x83e080	                     and eax, 0xffffff80	      3463	revision.c	FUNCTION_101	ELSE_3	IF_4
0x98dd	            0x84c0	                             test al, al	      3463	revision.c	FUNCTION_101	ELSE_3	IF_4
0x98df	            0x7425	                            je 0x4009946	      3463	revision.c	FUNCTION_101	ELSE_3	IF_4
0x98e1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3464	revision.c	FUNCTION_101	ELSE_3	IF_4	IF_5
0x98e5	            0x8b00	                    mov eax, dword [rax]	      3464	revision.c	FUNCTION_101	ELSE_3	IF_4	IF_5
0x98e7	          0xc1e804	                              shr eax, 4	      3464	revision.c	FUNCTION_101	ELSE_3	IF_4	IF_5
0x98ea	      0x25ffffff07	                      and eax, 0x7ffffff	      3464	revision.c	FUNCTION_101	ELSE_3	IF_4	IF_5
0x98ef	      0x2500010000	                          and eax, 0x100	      3464	revision.c	FUNCTION_101	ELSE_3	IF_4	IF_5
0x98f4	            0x85c0	                           test eax, eax	      3464	revision.c	FUNCTION_101	ELSE_3	IF_4	IF_5
0x98f6	            0x7407	                            je 0x400993f	      3464	revision.c	FUNCTION_101	ELSE_3	IF_4	IF_5
0x98f8	      0xb800000000	                              mov eax, 0	      3465	revision.c	FUNCTION_101	ELSE_3	IF_4	IF_5
0x98fd	            0xeb39	                           jmp 0x4009978	      3465	revision.c	FUNCTION_101	ELSE_3	IF_4	IF_5
0x98ff	      0xb800000000	                              mov eax, 0	      3467	revision.c	FUNCTION_101	ELSE_3	IF_4	ELSE_4
0x9904	            0xeb32	                           jmp 0x4009978	      3467	revision.c	FUNCTION_101	ELSE_3	IF_4	ELSE_4
0x9906	        0x488b45f8	                mov rax, qword [rbp - 8]	      3468	revision.c	FUNCTION_101	ELSE_5	IF_6
0x990a	    0x488b80c00400	           mov rax, qword [rax + 0x4c0] 	      3468	revision.c	FUNCTION_101	ELSE_5	IF_6
0x9911	          0x4885c0	                           test rax, rax	      3468	revision.c	FUNCTION_101	ELSE_5	IF_6
0x9914	            0x7407	                            je 0x400995d	      3468	revision.c	FUNCTION_101	ELSE_5	IF_6
0x9916	      0xb800000000	                              mov eax, 0	      3469	revision.c	FUNCTION_101	ELSE_5	IF_6
0x991b	            0xeb1b	                           jmp 0x4009978	      3469	revision.c	FUNCTION_101	ELSE_5	IF_6
0x991d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3470	revision.c	FUNCTION_101	ELSE_6	IF_7
0x9921	         0xfb64078	           movzx eax, byte [rax + 0x78] 	      3470	revision.c	FUNCTION_101	ELSE_6	IF_7
0x9925	          0x83e002	                              and eax, 2	      3470	revision.c	FUNCTION_101	ELSE_6	IF_7
0x9928	            0x84c0	                             test al, al	      3470	revision.c	FUNCTION_101	ELSE_6	IF_7
0x992a	            0x7407	                            je 0x4009973	      3470	revision.c	FUNCTION_101	ELSE_6	IF_7
0x992c	      0xb800000000	                              mov eax, 0	      3471	revision.c	FUNCTION_101	ELSE_6	IF_7
0x9931	            0xeb05	                           jmp 0x4009978	      3471	revision.c	FUNCTION_101	ELSE_6	IF_7
0x9933	      0xb800000000	                              mov eax, 0	      3472	revision.c	FUNCTION_101
0x9938	              0x5d	                                 pop rbp	      3473	revision.c	FUNCTION_101
0x9939	              0xc3	                                     ret	      3473	revision.c	FUNCTION_101
mark_redundant_parents	FOR,0:functions,0:WHILE,1:CALL,5:IF,2:ELSE,1:DO,0:SWITCH,0	84
0x77f4	              0x55	                                push rbp	      2540	revision.c	FUNCTION_73
0x77f5	          0x4889e5	                            mov rbp, rsp	      2540	revision.c	FUNCTION_73
0x77f8	        0x4883ec40	                           sub rsp, 0x40	      2540	revision.c	FUNCTION_73
0x77fc	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2540	revision.c	FUNCTION_73
0x7800	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2540	revision.c	FUNCTION_73
0x7804	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2541	revision.c	FUNCTION_73	CALL_1
0x7808	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2541	revision.c	FUNCTION_73	CALL_1
0x780c	          0x4889c7	                            mov rdi, rax	      2541	revision.c	FUNCTION_73	CALL_1
0x780f	      0xe800000000	                          call 0x4007854	      2541	revision.c	FUNCTION_73	CALL_1
0x7814	        0x488945f8	                mov qword [rbp - 8], rax	      2541	revision.c	FUNCTION_73	CALL_1
0x7818	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      2542	revision.c	FUNCTION_73
0x781f	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      2542	revision.c	FUNCTION_73
0x7826	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2546	revision.c	FUNCTION_73	CALL_2
0x782a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2546	revision.c	FUNCTION_73	CALL_2
0x782e	          0x4889c7	                            mov rdi, rax	      2546	revision.c	FUNCTION_73	CALL_2
0x7831	      0xe800000000	                          call 0x4007876	      2546	revision.c	FUNCTION_73	CALL_2
0x7836	          0x8945e0	             mov dword [rbp - 0x20], eax	      2546	revision.c	FUNCTION_73	CALL_2
0x7839	        0x488b45f8	                mov rax, qword [rbp - 8]	      2547	revision.c	FUNCTION_73	CALL_3
0x783d	          0x4889c7	                            mov rdi, rax	      2547	revision.c	FUNCTION_73	CALL_3
0x7840	      0xe800000000	                          call 0x4007885	      2547	revision.c	FUNCTION_73	CALL_3
0x7845	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2547	revision.c	FUNCTION_73	CALL_3
0x7848	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2554	revision.c	FUNCTION_73
0x784c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2554	revision.c	FUNCTION_73
0x7850	        0x488945e8	             mov qword [rbp - 0x18], rax	      2554	revision.c	FUNCTION_73
0x7854	        0x488b45f8	                mov rax, qword [rbp - 8]	      2555	revision.c	FUNCTION_73
0x7858	        0x488945f0	             mov qword [rbp - 0x10], rax	      2555	revision.c	FUNCTION_73
0x785c	            0xeb6c	                           jmp 0x400790a	      2556	revision.c	FUNCTION_73	WHILE_1
0x785e	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2557	revision.c	FUNCTION_73	WHILE_1	IF_1
0x7863	            0x7425	                            je 0x40078ca	      2557	revision.c	FUNCTION_73	WHILE_1	IF_1
0x7865	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2557	revision.c	FUNCTION_73	WHILE_1	IF_1
0x7869	          0x488b10	                    mov rdx, qword [rax]	      2557	revision.c	FUNCTION_73	WHILE_1	IF_1
0x786c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2557	revision.c	FUNCTION_73	WHILE_1	IF_1
0x7870	          0x488b00	                    mov rax, qword [rax]	      2557	revision.c	FUNCTION_73	WHILE_1	IF_1
0x7873	          0x4839c2	                            cmp rdx, rax	      2557	revision.c	FUNCTION_73	WHILE_1	IF_1
0x7876	            0x7512	                           jne 0x40078ca	      2557	revision.c	FUNCTION_73	WHILE_1	IF_1
0x7878	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2558	revision.c	FUNCTION_73	WHILE_1	IF_1
0x787c	        0x488b4008	                mov rax, qword [rax + 8]	      2558	revision.c	FUNCTION_73	WHILE_1	IF_1
0x7880	        0x488945f0	             mov qword [rbp - 0x10], rax	      2558	revision.c	FUNCTION_73	WHILE_1	IF_1
0x7884	        0x8345d801	               add dword [rbp - 0x28], 1	      2559	revision.c	FUNCTION_73	WHILE_1	IF_1
0x7888	            0xeb34	                           jmp 0x40078fe	      2559	revision.c	FUNCTION_73	WHILE_1	IF_1
0x788a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2561	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x788e	          0x488b10	                    mov rdx, qword [rax]	      2561	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x7891	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2561	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x7895	          0x488b00	                    mov rax, qword [rax]	      2561	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x7898	            0x8b00	                    mov eax, dword [rax]	      2561	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x789a	          0xc1e804	                              shr eax, 4	      2561	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x789d	      0x25ffffff07	                      and eax, 0x7ffffff	      2561	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x78a2	          0x83c810	                            or eax, 0x10	      2561	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x78a5	      0x25ffffff07	                      and eax, 0x7ffffff	      2561	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x78aa	          0xc1e004	                              shl eax, 4	      2561	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x78ad	            0x89c1	                            mov ecx, eax	      2561	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x78af	            0x8b02	                    mov eax, dword [rdx]	      2561	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x78b1	      0x250f000080	                     and eax, 0x8000000f	      2561	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x78b6	             0x9c8	                             or eax, ecx	      2561	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x78b8	            0x8902	                    mov dword [rdx], eax	      2561	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x78ba	        0x8345dc01	               add dword [rbp - 0x24], 1	      2562	revision.c	FUNCTION_73	WHILE_1	ELSE_1
0x78be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2564	revision.c	FUNCTION_73	WHILE_1
0x78c2	        0x488b4008	                mov rax, qword [rax + 8]	      2564	revision.c	FUNCTION_73	WHILE_1
0x78c6	        0x488945e8	             mov qword [rbp - 0x18], rax	      2564	revision.c	FUNCTION_73	WHILE_1
0x78ca	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2556	revision.c	FUNCTION_73	WHILE_1
0x78cf	            0x758d	                           jne 0x400789e	      2556	revision.c	FUNCTION_73	WHILE_1
0x78d1	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2567	revision.c	FUNCTION_73	IF_2
0x78d4	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      2567	revision.c	FUNCTION_73	IF_2
0x78d7	            0x750d	                           jne 0x4007926	      2567	revision.c	FUNCTION_73	IF_2
0x78d9	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      2567	revision.c	FUNCTION_73	IF_2
0x78dc	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2567	revision.c	FUNCTION_73	IF_2
0x78df	             0x1d0	                            add eax, edx	      2567	revision.c	FUNCTION_73	IF_2
0x78e1	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      2567	revision.c	FUNCTION_73	IF_2
0x78e4	            0x7420	                            je 0x4007946	      2567	revision.c	FUNCTION_73	IF_2
0x78e6	          0x8b75dc	             mov esi, dword [rbp - 0x24]	      2568	revision.c	FUNCTION_73	CALL_4
0x78e9	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      2568	revision.c	FUNCTION_73	CALL_4
0x78ec	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      2568	revision.c	FUNCTION_73	CALL_4
0x78ef	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      2568	revision.c	FUNCTION_73	CALL_4
0x78f2	          0x4189f0	                            mov r8d, esi	      2568	revision.c	FUNCTION_73	CALL_4
0x78f5	            0x89c6	                            mov esi, eax	      2568	revision.c	FUNCTION_73	CALL_4
0x78f7	      0xbf00000000	                              mov edi, 0	      2568	revision.c	FUNCTION_73	CALL_4
0x78fc	      0xb800000000	                              mov eax, 0	      2568	revision.c	FUNCTION_73	CALL_4
0x7901	      0xe800000000	                          call 0x4007946	      2568	revision.c	FUNCTION_73	CALL_4
0x7906	        0x488b45f8	                mov rax, qword [rbp - 8]	      2570	revision.c	FUNCTION_73	CALL_5
0x790a	          0x4889c7	                            mov rdi, rax	      2570	revision.c	FUNCTION_73	CALL_5
0x790d	      0xe800000000	                          call 0x4007952	      2570	revision.c	FUNCTION_73	CALL_5
0x7912	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2572	revision.c	FUNCTION_73
0x7915	              0xc9	                                   leave	      2573	revision.c	FUNCTION_73
0x7916	              0xc3	                                     ret	      2573	revision.c	FUNCTION_73
add_header_grep	FOR,0:functions,0:WHILE,0:CALL,1:IF,0:ELSE,0:DO,0:SWITCH,0	16
0x4763	              0x55	                                push rbp	      1740	revision.c	FUNCTION_60
0x4764	          0x4889e5	                            mov rbp, rsp	      1740	revision.c	FUNCTION_60
0x4767	        0x4883ec20	                           sub rsp, 0x20	      1740	revision.c	FUNCTION_60
0x476b	        0x48897df8	                mov qword [rbp - 8], rdi	      1740	revision.c	FUNCTION_60
0x476f	          0x8975f4	              mov dword [rbp - 0xc], esi	      1740	revision.c	FUNCTION_60
0x4772	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1740	revision.c	FUNCTION_60
0x4776	        0x488b45f8	                mov rax, qword [rbp - 8]	      1741	revision.c	FUNCTION_60	CALL_1
0x477a	    0x488d88500100	                  lea rcx, [rax + 0x150]	      1741	revision.c	FUNCTION_60	CALL_1
0x4781	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1741	revision.c	FUNCTION_60	CALL_1
0x4785	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1741	revision.c	FUNCTION_60	CALL_1
0x4788	            0x89c6	                            mov esi, eax	      1741	revision.c	FUNCTION_60	CALL_1
0x478a	          0x4889cf	                            mov rdi, rcx	      1741	revision.c	FUNCTION_60	CALL_1
0x478d	      0xe800000000	                          call 0x40047d2	      1741	revision.c	FUNCTION_60	CALL_1
0x4792	              0x90	                                     nop	      1742	revision.c	FUNCTION_60
0x4793	              0xc9	                                   leave	      1742	revision.c	FUNCTION_60
0x4794	              0xc3	                                     ret	      1742	revision.c	FUNCTION_60
put_revision_mark	FOR,0:functions,0:WHILE,0:CALL,4:IF,1:ELSE,0:DO,0:SWITCH,0	26
0x993a	              0x55	                                push rbp	      3476	revision.c	FUNCTION_102
0x993b	          0x4889e5	                            mov rbp, rsp	      3476	revision.c	FUNCTION_102
0x993e	        0x4883ec20	                           sub rsp, 0x20	      3476	revision.c	FUNCTION_102
0x9942	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3476	revision.c	FUNCTION_102
0x9946	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3476	revision.c	FUNCTION_102
0x994a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3477	revision.c	FUNCTION_102	CALL_1
0x994e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3477	revision.c	FUNCTION_102	CALL_1
0x9952	          0x4889d6	                            mov rsi, rdx	      3477	revision.c	FUNCTION_102	CALL_1
0x9955	          0x4889c7	                            mov rdi, rax	      3477	revision.c	FUNCTION_102	CALL_1
0x9958	      0xe800000000	                          call 0x400999d	      3477	revision.c	FUNCTION_102	CALL_1
0x995d	        0x488945f8	                mov qword [rbp - 8], rax	      3477	revision.c	FUNCTION_102	CALL_1
0x9961	        0x488b45f8	                mov rax, qword [rbp - 8]	      3478	revision.c	FUNCTION_102	IF_1	CALL_2
0x9965	           0xfb600	                   movzx eax, byte [rax]	      3478	revision.c	FUNCTION_102	IF_1	CALL_2
0x9968	            0x84c0	                             test al, al	      3478	revision.c	FUNCTION_102	IF_1	CALL_2
0x996a	            0x7422	                            je 0x40099ce	      3478	revision.c	FUNCTION_102	IF_1	CALL_2
0x996c	    0x488b15000000	            mov rdx, qword [0x040099b3] 	      3480	revision.c	FUNCTION_102	CALL_3
0x9973	        0x488b45f8	                mov rax, qword [rbp - 8]	      3480	revision.c	FUNCTION_102	CALL_3
0x9977	          0x4889d6	                            mov rsi, rdx	      3480	revision.c	FUNCTION_102	CALL_3
0x997a	          0x4889c7	                            mov rdi, rax	      3480	revision.c	FUNCTION_102	CALL_3
0x997d	      0xe800000000	                          call 0x40099c2	      3480	revision.c	FUNCTION_102	CALL_3
0x9982	      0xbf20000000	                           mov edi, 0x20	      3481	revision.c	FUNCTION_102	CALL_4
0x9987	      0xe800000000	                          call 0x40099cc	      3481	revision.c	FUNCTION_102	CALL_4
0x998c	            0xeb01	                           jmp 0x40099cf	      3481	revision.c	FUNCTION_102	CALL_4
0x998e	              0x90	                                     nop	      3479	revision.c	FUNCTION_102	IF_1
0x998f	              0xc9	                                   leave	      3482	revision.c	FUNCTION_102
0x9990	              0xc3	                                     ret	      3482	revision.c	FUNCTION_102
everybody_uninteresting	FOR,0:functions,0:WHILE,1:CALL,0:IF,3:ELSE,0:DO,0:SWITCH,0	46
0xfe7	              0x55	                                push rbp	       301	revision.c	FUNCTION_13
0xfe8	          0x4889e5	                            mov rbp, rsp	       301	revision.c	FUNCTION_13
0xfeb	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       301	revision.c	FUNCTION_13
0xfef	        0x488975d0	             mov qword [rbp - 0x30], rsi	       301	revision.c	FUNCTION_13
0xff3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       302	revision.c	FUNCTION_13
0xff7	        0x488945e8	             mov qword [rbp - 0x18], rax	       302	revision.c	FUNCTION_13
0xffb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       304	revision.c	FUNCTION_13	IF_1
0xfff	          0x488b00	                    mov rax, qword [rax]	       304	revision.c	FUNCTION_13	IF_1
0x1002	          0x4885c0	                           test rax, rax	       304	revision.c	FUNCTION_13	IF_1
0x1005	            0x7467	                            je 0x40010ae	       304	revision.c	FUNCTION_13	IF_1
0x1007	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       305	revision.c	FUNCTION_13	IF_1
0x100b	          0x488b00	                    mov rax, qword [rax]	       305	revision.c	FUNCTION_13	IF_1
0x100e	        0x488945f0	             mov qword [rbp - 0x10], rax	       305	revision.c	FUNCTION_13	IF_1
0x1012	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       306	revision.c	FUNCTION_13	IF_1	IF_2
0x1016	            0x8b00	                    mov eax, dword [rax]	       306	revision.c	FUNCTION_13	IF_1	IF_2
0x1018	          0xc1e804	                              shr eax, 4	       306	revision.c	FUNCTION_13	IF_1	IF_2
0x101b	      0x25ffffff07	                      and eax, 0x7ffffff	       306	revision.c	FUNCTION_13	IF_1	IF_2
0x1020	          0x83e002	                              and eax, 2	       306	revision.c	FUNCTION_13	IF_1	IF_2
0x1023	            0x85c0	                           test eax, eax	       306	revision.c	FUNCTION_13	IF_1	IF_2
0x1025	            0x7547	                           jne 0x40010ae	       306	revision.c	FUNCTION_13	IF_1	IF_2
0x1027	      0xb800000000	                              mov eax, 0	       307	revision.c	FUNCTION_13	IF_1	IF_2
0x102c	            0xeb4c	                           jmp 0x40010ba	       307	revision.c	FUNCTION_13	IF_1	IF_2
0x102e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       311	revision.c	FUNCTION_13	WHILE_1
0x1032	          0x488b00	                    mov rax, qword [rax]	       311	revision.c	FUNCTION_13	WHILE_1
0x1035	        0x488945f8	                mov qword [rbp - 8], rax	       311	revision.c	FUNCTION_13	WHILE_1
0x1039	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	revision.c	FUNCTION_13	WHILE_1
0x103d	        0x488b4008	                mov rax, qword [rax + 8]	       312	revision.c	FUNCTION_13	WHILE_1
0x1041	        0x488945e8	             mov qword [rbp - 0x18], rax	       312	revision.c	FUNCTION_13	WHILE_1
0x1045	        0x488b45f8	                mov rax, qword [rbp - 8]	       313	revision.c	FUNCTION_13	WHILE_1	IF_3
0x1049	            0x8b00	                    mov eax, dword [rax]	       313	revision.c	FUNCTION_13	WHILE_1	IF_3
0x104b	          0xc1e804	                              shr eax, 4	       313	revision.c	FUNCTION_13	WHILE_1	IF_3
0x104e	      0x25ffffff07	                      and eax, 0x7ffffff	       313	revision.c	FUNCTION_13	WHILE_1	IF_3
0x1053	          0x83e002	                              and eax, 2	       313	revision.c	FUNCTION_13	WHILE_1	IF_3
0x1056	            0x85c0	                           test eax, eax	       313	revision.c	FUNCTION_13	WHILE_1	IF_3
0x1058	            0x7402	                            je 0x400109c	       313	revision.c	FUNCTION_13	WHILE_1	IF_3
0x105a	            0xeb12	                           jmp 0x40010ae	       314	revision.c	FUNCTION_13	WHILE_1	IF_3
0x105c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       316	revision.c	FUNCTION_13	WHILE_1
0x1060	        0x488b55f8	                mov rdx, qword [rbp - 8]	       316	revision.c	FUNCTION_13	WHILE_1
0x1064	          0x488910	                    mov qword [rax], rdx	       316	revision.c	FUNCTION_13	WHILE_1
0x1067	      0xb800000000	                              mov eax, 0	       317	revision.c	FUNCTION_13	WHILE_1
0x106c	            0xeb0c	                           jmp 0x40010ba	       317	revision.c	FUNCTION_13	WHILE_1
0x106e	      0x48837de800	               cmp qword [rbp - 0x18], 0	       310	revision.c	FUNCTION_13	WHILE_1
0x1073	            0x75b9	                           jne 0x400106e	       310	revision.c	FUNCTION_13	WHILE_1
0x1075	      0xb801000000	                              mov eax, 1	       319	revision.c	FUNCTION_13
0x107a	              0x5d	                                 pop rbp	       320	revision.c	FUNCTION_13
0x107b	              0xc3	                                     ret	       320	revision.c	FUNCTION_13
simplify_one	FOR,2:functions,0:WHILE,0:CALL,12:IF,11:ELSE,2:DO,0:SWITCH,0	194
0x7bc4	              0x55	                                push rbp	      2687	revision.c	FUNCTION_77
0x7bc5	          0x4889e5	                            mov rbp, rsp	      2687	revision.c	FUNCTION_77
0x7bc8	        0x4883ec50	                           sub rsp, 0x50	      2687	revision.c	FUNCTION_77
0x7bcc	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2687	revision.c	FUNCTION_77
0x7bd0	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2687	revision.c	FUNCTION_77
0x7bd4	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2687	revision.c	FUNCTION_77
0x7bd8	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2693	revision.c	FUNCTION_77	CALL_1
0x7bdc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2693	revision.c	FUNCTION_77	CALL_1
0x7be0	          0x4889d6	                            mov rsi, rdx	      2693	revision.c	FUNCTION_77	CALL_1
0x7be3	          0x4889c7	                            mov rdi, rax	      2693	revision.c	FUNCTION_77	CALL_1
0x7be6	      0xe89dfbffff	          call sym.locate_simplify_state	      2693	revision.c	FUNCTION_77	CALL_1
0x7beb	        0x488945e8	             mov qword [rbp - 0x18], rax	      2693	revision.c	FUNCTION_77	CALL_1
0x7bef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2698	revision.c	FUNCTION_77	IF_1
0x7bf3	          0x488b00	                    mov rax, qword [rax]	      2698	revision.c	FUNCTION_77	IF_1
0x7bf6	          0x4885c0	                           test rax, rax	      2698	revision.c	FUNCTION_77	IF_1
0x7bf9	            0x7409	                            je 0x4007c44	      2698	revision.c	FUNCTION_77	IF_1
0x7bfb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2699	revision.c	FUNCTION_77	IF_1
0x7bff	      0xe95d020000	                           jmp 0x4007ea1	      2699	revision.c	FUNCTION_77	IF_1
0x7c04	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2706	revision.c	FUNCTION_77	IF_2
0x7c08	            0x8b00	                    mov eax, dword [rax]	      2706	revision.c	FUNCTION_77	IF_2
0x7c0a	          0xc1e804	                              shr eax, 4	      2706	revision.c	FUNCTION_77	IF_2
0x7c0d	      0x25ffffff07	                      and eax, 0x7ffffff	      2706	revision.c	FUNCTION_77	IF_2
0x7c12	          0x83e002	                              and eax, 2	      2706	revision.c	FUNCTION_77	IF_2
0x7c15	            0x85c0	                           test eax, eax	      2706	revision.c	FUNCTION_77	IF_2
0x7c17	            0x750d	                           jne 0x4007c66	      2706	revision.c	FUNCTION_77	IF_2
0x7c19	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2706	revision.c	FUNCTION_77	IF_2
0x7c1d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2706	revision.c	FUNCTION_77	IF_2
0x7c21	          0x4885c0	                           test rax, rax	      2706	revision.c	FUNCTION_77	IF_2
0x7c24	            0x7514	                           jne 0x4007c7a	      2706	revision.c	FUNCTION_77	IF_2
0x7c26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2707	revision.c	FUNCTION_77	IF_2
0x7c2a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2707	revision.c	FUNCTION_77	IF_2
0x7c2e	          0x488910	                    mov qword [rax], rdx	      2707	revision.c	FUNCTION_77	IF_2
0x7c31	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2708	revision.c	FUNCTION_77	IF_2
0x7c35	      0xe927020000	                           jmp 0x4007ea1	      2708	revision.c	FUNCTION_77	IF_2
0x7c3a	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      2716	revision.c	FUNCTION_77	FOR_1
0x7c41	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2716	revision.c	FUNCTION_77	FOR_1
0x7c45	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2716	revision.c	FUNCTION_77	FOR_1
0x7c49	        0x488945e0	             mov qword [rbp - 0x20], rax	      2716	revision.c	FUNCTION_77	FOR_1
0x7c4d	            0xeb63	                           jmp 0x4007cf2	      2716	revision.c	FUNCTION_77	FOR_1
0x7c4f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2717	revision.c	FUNCTION_77	FOR_1	CALL_2
0x7c53	          0x488b10	                    mov rdx, qword [rax]	      2717	revision.c	FUNCTION_77	FOR_1	CALL_2
0x7c56	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2717	revision.c	FUNCTION_77	FOR_1	CALL_2
0x7c5a	          0x4889d6	                            mov rsi, rdx	      2717	revision.c	FUNCTION_77	FOR_1	CALL_2
0x7c5d	          0x4889c7	                            mov rdi, rax	      2717	revision.c	FUNCTION_77	FOR_1	CALL_2
0x7c60	      0xe823fbffff	          call sym.locate_simplify_state	      2717	revision.c	FUNCTION_77	FOR_1	CALL_2
0x7c65	        0x488945f0	             mov qword [rbp - 0x10], rax	      2717	revision.c	FUNCTION_77	FOR_1	CALL_2
0x7c69	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2718	revision.c	FUNCTION_77	FOR_1	IF_3
0x7c6d	          0x488b00	                    mov rax, qword [rax]	      2718	revision.c	FUNCTION_77	FOR_1	IF_3
0x7c70	          0x4885c0	                           test rax, rax	      2718	revision.c	FUNCTION_77	FOR_1	IF_3
0x7c73	            0x7522	                           jne 0x4007cd7	      2718	revision.c	FUNCTION_77	FOR_1	IF_3
0x7c75	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2719	revision.c	FUNCTION_77	FOR_1	IF_3	CALL_3
0x7c79	          0x488b00	                    mov rax, qword [rax]	      2719	revision.c	FUNCTION_77	FOR_1	IF_3	CALL_3
0x7c7c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2719	revision.c	FUNCTION_77	FOR_1	IF_3	CALL_3
0x7c80	          0x4889d6	                            mov rsi, rdx	      2719	revision.c	FUNCTION_77	FOR_1	IF_3	CALL_3
0x7c83	          0x4889c7	                            mov rdi, rax	      2719	revision.c	FUNCTION_77	FOR_1	IF_3	CALL_3
0x7c86	      0xe800000000	                          call 0x4007ccb	      2719	revision.c	FUNCTION_77	FOR_1	IF_3	CALL_3
0x7c8b	        0x4883c008	                              add rax, 8	      2719	revision.c	FUNCTION_77	FOR_1	IF_3	CALL_3
0x7c8f	        0x488945b8	             mov qword [rbp - 0x48], rax	      2719	revision.c	FUNCTION_77	FOR_1	IF_3	CALL_3
0x7c93	        0x8345d801	               add dword [rbp - 0x28], 1	      2720	revision.c	FUNCTION_77	FOR_1	IF_3
0x7c97	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2722	revision.c	FUNCTION_77	FOR_1	IF_4
0x7c9b	         0xfb64078	           movzx eax, byte [rax + 0x78] 	      2722	revision.c	FUNCTION_77	FOR_1	IF_4
0x7c9f	          0x83e010	                           and eax, 0x10	      2722	revision.c	FUNCTION_77	FOR_1	IF_4
0x7ca2	            0x84c0	                             test al, al	      2722	revision.c	FUNCTION_77	FOR_1	IF_4
0x7ca4	            0x7515	                           jne 0x4007cfb	      2722	revision.c	FUNCTION_77	FOR_1	IF_4
0x7ca6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2716	revision.c	FUNCTION_77	FOR_1
0x7caa	        0x488b4008	                mov rax, qword [rax + 8]	      2716	revision.c	FUNCTION_77	FOR_1
0x7cae	        0x488945e0	             mov qword [rbp - 0x20], rax	      2716	revision.c	FUNCTION_77	FOR_1
0x7cb2	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2716	revision.c	FUNCTION_77	FOR_1
0x7cb7	            0x7596	                           jne 0x4007c8f	      2716	revision.c	FUNCTION_77	FOR_1
0x7cb9	            0xeb01	                           jmp 0x4007cfc	      2716	revision.c	FUNCTION_77	FOR_1
0x7cbb	              0x90	                                     nop	      2723	revision.c	FUNCTION_77	FOR_1	IF_4
0x7cbc	        0x837dd800	               cmp dword [rbp - 0x28], 0	      2725	revision.c	FUNCTION_77	IF_5
0x7cc0	            0x7424	                            je 0x4007d26	      2725	revision.c	FUNCTION_77	IF_5
0x7cc2	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2726	revision.c	FUNCTION_77	IF_5	CALL_4
0x7cc6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2726	revision.c	FUNCTION_77	IF_5	CALL_4
0x7cca	          0x4889d6	                            mov rsi, rdx	      2726	revision.c	FUNCTION_77	IF_5	CALL_4
0x7ccd	          0x4889c7	                            mov rdi, rax	      2726	revision.c	FUNCTION_77	IF_5	CALL_4
0x7cd0	      0xe800000000	                          call 0x4007d15	      2726	revision.c	FUNCTION_77	IF_5	CALL_4
0x7cd5	        0x4883c008	                              add rax, 8	      2726	revision.c	FUNCTION_77	IF_5	CALL_4
0x7cd9	        0x488945b8	             mov qword [rbp - 0x48], rax	      2726	revision.c	FUNCTION_77	IF_5	CALL_4
0x7cdd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2727	revision.c	FUNCTION_77	IF_5
0x7ce1	      0xe97b010000	                           jmp 0x4007ea1	      2727	revision.c	FUNCTION_77	IF_5
0x7ce6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2735	revision.c	FUNCTION_77	FOR_2
0x7cea	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2735	revision.c	FUNCTION_77	FOR_2
0x7cee	        0x488945e0	             mov qword [rbp - 0x20], rax	      2735	revision.c	FUNCTION_77	FOR_2
0x7cf2	            0xeb43	                           jmp 0x4007d77	      2735	revision.c	FUNCTION_77	FOR_2
0x7cf4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2736	revision.c	FUNCTION_77	FOR_2	CALL_5
0x7cf8	          0x488b10	                    mov rdx, qword [rax]	      2736	revision.c	FUNCTION_77	FOR_2	CALL_5
0x7cfb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2736	revision.c	FUNCTION_77	FOR_2	CALL_5
0x7cff	          0x4889d6	                            mov rsi, rdx	      2736	revision.c	FUNCTION_77	FOR_2	CALL_5
0x7d02	          0x4889c7	                            mov rdi, rax	      2736	revision.c	FUNCTION_77	FOR_2	CALL_5
0x7d05	      0xe87efaffff	          call sym.locate_simplify_state	      2736	revision.c	FUNCTION_77	FOR_2	CALL_5
0x7d0a	        0x488945f0	             mov qword [rbp - 0x10], rax	      2736	revision.c	FUNCTION_77	FOR_2	CALL_5
0x7d0e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2737	revision.c	FUNCTION_77	FOR_2
0x7d12	          0x488b10	                    mov rdx, qword [rax]	      2737	revision.c	FUNCTION_77	FOR_2
0x7d15	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2737	revision.c	FUNCTION_77	FOR_2
0x7d19	          0x488910	                    mov qword [rax], rdx	      2737	revision.c	FUNCTION_77	FOR_2
0x7d1c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2738	revision.c	FUNCTION_77	FOR_2	IF_6
0x7d20	         0xfb64078	           movzx eax, byte [rax + 0x78] 	      2738	revision.c	FUNCTION_77	FOR_2	IF_6
0x7d24	          0x83e010	                           and eax, 0x10	      2738	revision.c	FUNCTION_77	FOR_2	IF_6
0x7d27	            0x84c0	                             test al, al	      2738	revision.c	FUNCTION_77	FOR_2	IF_6
0x7d29	            0x7515	                           jne 0x4007d80	      2738	revision.c	FUNCTION_77	FOR_2	IF_6
0x7d2b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2735	revision.c	FUNCTION_77	FOR_2
0x7d2f	        0x488b4008	                mov rax, qword [rax + 8]	      2735	revision.c	FUNCTION_77	FOR_2
0x7d33	        0x488945e0	             mov qword [rbp - 0x20], rax	      2735	revision.c	FUNCTION_77	FOR_2
0x7d37	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2735	revision.c	FUNCTION_77	FOR_2
0x7d3c	            0x75b6	                           jne 0x4007d34	      2735	revision.c	FUNCTION_77	FOR_2
0x7d3e	            0xeb01	                           jmp 0x4007d81	      2735	revision.c	FUNCTION_77	FOR_2
0x7d40	              0x90	                                     nop	      2739	revision.c	FUNCTION_77	FOR_2	IF_6
0x7d41	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2742	revision.c	FUNCTION_77	IF_7
0x7d45	         0xfb64078	           movzx eax, byte [rax + 0x78] 	      2742	revision.c	FUNCTION_77	IF_7
0x7d49	          0x83e010	                           and eax, 0x10	      2742	revision.c	FUNCTION_77	IF_7
0x7d4c	            0x84c0	                             test al, al	      2742	revision.c	FUNCTION_77	IF_7
0x7d4e	            0x7409	                            je 0x4007d99	      2742	revision.c	FUNCTION_77	IF_7
0x7d50	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      2743	revision.c	FUNCTION_77	IF_7
0x7d57	            0xeb16	                           jmp 0x4007daf	      2743	revision.c	FUNCTION_77	IF_7
0x7d59	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2745	revision.c	FUNCTION_77	CALL_6
0x7d5d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2745	revision.c	FUNCTION_77	CALL_6
0x7d61	          0x4889d6	                            mov rsi, rdx	      2745	revision.c	FUNCTION_77	CALL_6
0x7d64	          0x4889c7	                            mov rdi, rax	      2745	revision.c	FUNCTION_77	CALL_6
0x7d67	      0xe8dcf8ffff	       call sym.remove_duplicate_parents	      2745	revision.c	FUNCTION_77	CALL_6
0x7d6c	          0x8945d8	             mov dword [rbp - 0x28], eax	      2745	revision.c	FUNCTION_77	CALL_6
0x7d6f	        0x837dd801	               cmp dword [rbp - 0x28], 1	      2766	revision.c	FUNCTION_77	IF_8
0x7d73	            0x7e64	                           jle 0x4007e19	      2766	revision.c	FUNCTION_77	IF_8
0x7d75	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2767	revision.c	FUNCTION_77	IF_8	CALL_7
0x7d79	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2767	revision.c	FUNCTION_77	IF_8	CALL_7
0x7d7d	          0x4889d6	                            mov rsi, rdx	      2767	revision.c	FUNCTION_77	IF_8	CALL_7
0x7d80	          0x4889c7	                            mov rdi, rax	      2767	revision.c	FUNCTION_77	IF_8	CALL_7
0x7d83	      0xe86cfaffff	         call sym.mark_redundant_parents	      2767	revision.c	FUNCTION_77	IF_8	CALL_7
0x7d88	          0x8945dc	             mov dword [rbp - 0x24], eax	      2767	revision.c	FUNCTION_77	IF_8	CALL_7
0x7d8b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2768	revision.c	FUNCTION_77	IF_8	CALL_8
0x7d8f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2768	revision.c	FUNCTION_77	IF_8	CALL_8
0x7d93	          0x4889d6	                            mov rsi, rdx	      2768	revision.c	FUNCTION_77	IF_8	CALL_8
0x7d96	          0x4889c7	                            mov rdi, rax	      2768	revision.c	FUNCTION_77	IF_8	CALL_8
0x7d99	      0xe879fbffff	     call sym.mark_treesame_root_parents	      2768	revision.c	FUNCTION_77	IF_8	CALL_8
0x7d9e	           0x145dc	             add dword [rbp - 0x24], eax	      2768	revision.c	FUNCTION_77	IF_8	CALL_8
0x7da1	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      2769	revision.c	FUNCTION_77	IF_8	IF_9
0x7da5	            0x7416	                            je 0x4007dfd	      2769	revision.c	FUNCTION_77	IF_8	IF_9
0x7da7	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2770	revision.c	FUNCTION_77	IF_8	CALL_9
0x7dab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2770	revision.c	FUNCTION_77	IF_8	CALL_9
0x7daf	          0x4889d6	                            mov rsi, rdx	      2770	revision.c	FUNCTION_77	IF_8	CALL_9
0x7db2	          0x4889c7	                            mov rdi, rax	      2770	revision.c	FUNCTION_77	IF_8	CALL_9
0x7db5	      0xe8f5fbffff	   call sym.leave_one_treesame_to_parent	      2770	revision.c	FUNCTION_77	IF_8	CALL_9
0x7dba	          0x2945dc	             sub dword [rbp - 0x24], eax	      2770	revision.c	FUNCTION_77	IF_8	CALL_9
0x7dbd	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      2771	revision.c	FUNCTION_77	IF_8	IF_10
0x7dc1	            0x7416	                            je 0x4007e19	      2771	revision.c	FUNCTION_77	IF_8	IF_10
0x7dc3	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2772	revision.c	FUNCTION_77	IF_8	CALL_10
0x7dc7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2772	revision.c	FUNCTION_77	IF_8	CALL_10
0x7dcb	          0x4889d6	                            mov rsi, rdx	      2772	revision.c	FUNCTION_77	IF_8	CALL_10
0x7dce	          0x4889c7	                            mov rdi, rax	      2772	revision.c	FUNCTION_77	IF_8	CALL_10
0x7dd1	      0xe8dffcffff	          call sym.remove_marked_parents	      2772	revision.c	FUNCTION_77	IF_8	CALL_10
0x7dd6	          0x8945d8	             mov dword [rbp - 0x28], eax	      2772	revision.c	FUNCTION_77	IF_8	CALL_10
0x7dd9	        0x837dd800	               cmp dword [rbp - 0x28], 0	      2785	revision.c	FUNCTION_77	IF_11
0x7ddd	            0x744c	                            je 0x4007e6b	      2785	revision.c	FUNCTION_77	IF_11
0x7ddf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2786	revision.c	FUNCTION_77	IF_11
0x7de3	            0x8b00	                    mov eax, dword [rax]	      2786	revision.c	FUNCTION_77	IF_11
0x7de5	          0xc1e804	                              shr eax, 4	      2786	revision.c	FUNCTION_77	IF_11
0x7de8	      0x25ffffff07	                      and eax, 0x7ffffff	      2786	revision.c	FUNCTION_77	IF_11
0x7ded	          0x83e002	                              and eax, 2	      2786	revision.c	FUNCTION_77	IF_11
0x7df0	            0x85c0	                           test eax, eax	      2785	revision.c	FUNCTION_77	IF_11
0x7df2	            0x7537	                           jne 0x4007e6b	      2785	revision.c	FUNCTION_77	IF_11
0x7df4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2787	revision.c	FUNCTION_77	IF_11
0x7df8	            0x8b00	                    mov eax, dword [rax]	      2787	revision.c	FUNCTION_77	IF_11
0x7dfa	          0xc1e804	                              shr eax, 4	      2787	revision.c	FUNCTION_77	IF_11
0x7dfd	      0x25ffffff07	                      and eax, 0x7ffffff	      2787	revision.c	FUNCTION_77	IF_11
0x7e02	          0x83e004	                              and eax, 4	      2787	revision.c	FUNCTION_77	IF_11
0x7e05	            0x85c0	                           test eax, eax	      2786	revision.c	FUNCTION_77	IF_11
0x7e07	            0x7422	                            je 0x4007e6b	      2786	revision.c	FUNCTION_77	IF_11
0x7e09	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2788	revision.c	FUNCTION_77	IF_11	CALL_11
0x7e0d	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2788	revision.c	FUNCTION_77	IF_11	CALL_11
0x7e11	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2787	revision.c	FUNCTION_77	IF_11
0x7e15	          0x4889d6	                            mov rsi, rdx	      2787	revision.c	FUNCTION_77	IF_11
0x7e18	          0x4889c7	                            mov rdi, rax	      2787	revision.c	FUNCTION_77	IF_11
0x7e1b	      0xe88292ffff	            call sym.one_relevant_parent	      2787	revision.c	FUNCTION_77	IF_11
0x7e20	        0x488945f8	                mov qword [rbp - 8], rax	      2787	revision.c	FUNCTION_77	IF_11
0x7e24	      0x48837df800	                  cmp qword [rbp - 8], 0	      2787	revision.c	FUNCTION_77	IF_11
0x7e29	            0x750d	                           jne 0x4007e78	      2787	revision.c	FUNCTION_77	IF_11
0x7e2b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2789	revision.c	FUNCTION_77	IF_11
0x7e2f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2789	revision.c	FUNCTION_77	IF_11
0x7e33	          0x488910	                    mov qword [rax], rdx	      2789	revision.c	FUNCTION_77	IF_11
0x7e36	            0xeb25	                           jmp 0x4007e9d	      2789	revision.c	FUNCTION_77	IF_11
0x7e38	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2791	revision.c	FUNCTION_77	ELSE_2	CALL_12
0x7e3c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2791	revision.c	FUNCTION_77	ELSE_2	CALL_12
0x7e40	          0x4889d6	                            mov rsi, rdx	      2791	revision.c	FUNCTION_77	ELSE_2	CALL_12
0x7e43	          0x4889c7	                            mov rdi, rax	      2791	revision.c	FUNCTION_77	ELSE_2	CALL_12
0x7e46	      0xe83df9ffff	          call sym.locate_simplify_state	      2791	revision.c	FUNCTION_77	ELSE_2	CALL_12
0x7e4b	        0x488945f0	             mov qword [rbp - 0x10], rax	      2791	revision.c	FUNCTION_77	ELSE_2	CALL_12
0x7e4f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2792	revision.c	FUNCTION_77	ELSE_2
0x7e53	          0x488b10	                    mov rdx, qword [rax]	      2792	revision.c	FUNCTION_77	ELSE_2
0x7e56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2792	revision.c	FUNCTION_77	ELSE_2
0x7e5a	          0x488910	                    mov qword [rax], rdx	      2792	revision.c	FUNCTION_77	ELSE_2
0x7e5d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2794	revision.c	FUNCTION_77
0x7e61	              0xc9	                                   leave	      2795	revision.c	FUNCTION_77
0x7e62	              0xc3	                                     ret	      2795	revision.c	FUNCTION_77
add_rev_cmdline_list	FOR,0:functions,0:WHILE,1:CALL,2:IF,0:ELSE,0:DO,0:SWITCH,0	33
0x2c83	              0x55	                                push rbp	      1139	revision.c	FUNCTION_34
0x2c84	          0x4889e5	                            mov rbp, rsp	      1139	revision.c	FUNCTION_34
0x2c87	        0x4883ec30	                           sub rsp, 0x30	      1139	revision.c	FUNCTION_34
0x2c8b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1139	revision.c	FUNCTION_34
0x2c8f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1139	revision.c	FUNCTION_34
0x2c93	          0x8955dc	             mov dword [rbp - 0x24], edx	      1139	revision.c	FUNCTION_34
0x2c96	          0x894dd8	             mov dword [rbp - 0x28], ecx	      1139	revision.c	FUNCTION_34
0x2c99	            0xeb48	                           jmp 0x4002d23	      1140	revision.c	FUNCTION_34	WHILE_1
0x2c9b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1141	revision.c	FUNCTION_34	WHILE_1
0x2c9f	          0x488b00	                    mov rax, qword [rax]	      1141	revision.c	FUNCTION_34	WHILE_1
0x2ca2	        0x488945f8	                mov qword [rbp - 8], rax	      1141	revision.c	FUNCTION_34	WHILE_1
0x2ca6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1142	revision.c	FUNCTION_34	WHILE_1	CALL_2
0x2caa	        0x4883c004	                              add rax, 4	      1142	revision.c	FUNCTION_34	WHILE_1	CALL_2
0x2cae	          0x4889c7	                            mov rdi, rax	      1142	revision.c	FUNCTION_34	WHILE_1	CALL_2
0x2cb1	      0xe800000000	                          call 0x4002cf6	      1142	revision.c	FUNCTION_34	WHILE_1	CALL_2
0x2cb6	          0x4889c7	                            mov rdi, rax	      1142	revision.c	FUNCTION_34	WHILE_1	CALL_2
0x2cb9	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      1142	revision.c	FUNCTION_34	WHILE_1	CALL_2
0x2cbc	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1142	revision.c	FUNCTION_34	WHILE_1	CALL_2
0x2cbf	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1142	revision.c	FUNCTION_34	WHILE_1	CALL_2
0x2cc3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1142	revision.c	FUNCTION_34	WHILE_1	CALL_2
0x2cc7	          0x4189c8	                            mov r8d, ecx	      1142	revision.c	FUNCTION_34	WHILE_1	CALL_2
0x2cca	            0x89d1	                            mov ecx, edx	      1142	revision.c	FUNCTION_34	WHILE_1	CALL_2
0x2ccc	          0x4889fa	                            mov rdx, rdi	      1142	revision.c	FUNCTION_34	WHILE_1	CALL_2
0x2ccf	          0x4889c7	                            mov rdi, rax	      1142	revision.c	FUNCTION_34	WHILE_1	CALL_2
0x2cd2	      0xe841feffff	                call sym.add_rev_cmdline	      1142	revision.c	FUNCTION_34	WHILE_1	CALL_2
0x2cd7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1144	revision.c	FUNCTION_34	WHILE_1
0x2cdb	        0x488b4008	                mov rax, qword [rax + 8]	      1144	revision.c	FUNCTION_34	WHILE_1
0x2cdf	        0x488945e0	             mov qword [rbp - 0x20], rax	      1144	revision.c	FUNCTION_34	WHILE_1
0x2ce3	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1140	revision.c	FUNCTION_34	WHILE_1
0x2ce8	            0x75b1	                           jne 0x4002cdb	      1140	revision.c	FUNCTION_34	WHILE_1
0x2cea	              0x90	                                     nop	      1146	revision.c	FUNCTION_34
0x2ceb	              0xc9	                                   leave	      1146	revision.c	FUNCTION_34
0x2cec	              0xc3	                                     ret	      1146	revision.c	FUNCTION_34
clear_ref_exclusion	FOR,0:functions,0:WHILE,0:CALL,2:IF,1:ELSE,0:DO,0:SWITCH,0	22
0x2e64	              0x55	                                push rbp	      1194	revision.c	FUNCTION_38
0x2e65	          0x4889e5	                            mov rbp, rsp	      1194	revision.c	FUNCTION_38
0x2e68	        0x4883ec10	                           sub rsp, 0x10	      1194	revision.c	FUNCTION_38
0x2e6c	        0x48897df8	                mov qword [rbp - 8], rdi	      1194	revision.c	FUNCTION_38
0x2e70	        0x488b45f8	                mov rax, qword [rbp - 8]	      1195	revision.c	FUNCTION_38	IF_1
0x2e74	          0x488b00	                    mov rax, qword [rax]	      1195	revision.c	FUNCTION_38	IF_1
0x2e77	          0x4885c0	                           test rax, rax	      1195	revision.c	FUNCTION_38	IF_1
0x2e7a	            0x7423	                            je 0x4002edf	      1195	revision.c	FUNCTION_38	IF_1
0x2e7c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1196	revision.c	FUNCTION_38	IF_1	CALL_1
0x2e80	          0x488b00	                    mov rax, qword [rax]	      1196	revision.c	FUNCTION_38	IF_1	CALL_1
0x2e83	      0xbe00000000	                              mov esi, 0	      1196	revision.c	FUNCTION_38	IF_1	CALL_1
0x2e88	          0x4889c7	                            mov rdi, rax	      1196	revision.c	FUNCTION_38	IF_1	CALL_1
0x2e8b	      0xe800000000	                          call 0x4002ed0	      1196	revision.c	FUNCTION_38	IF_1	CALL_1
0x2e90	        0x488b45f8	                mov rax, qword [rbp - 8]	      1197	revision.c	FUNCTION_38	IF_1	CALL_2
0x2e94	          0x488b00	                    mov rax, qword [rax]	      1197	revision.c	FUNCTION_38	IF_1	CALL_2
0x2e97	          0x4889c7	                            mov rdi, rax	      1197	revision.c	FUNCTION_38	IF_1	CALL_2
0x2e9a	      0xe800000000	                          call 0x4002edf	      1197	revision.c	FUNCTION_38	IF_1	CALL_2
0x2e9f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1199	revision.c	FUNCTION_38
0x2ea3	    0x48c700000000	                      mov qword [rax], 0	      1199	revision.c	FUNCTION_38
0x2eaa	              0x90	                                     nop	      1200	revision.c	FUNCTION_38
0x2eab	              0xc9	                                   leave	      1200	revision.c	FUNCTION_38
0x2eac	              0xc3	                                     ret	      1200	revision.c	FUNCTION_38
strtoul_ui	FOR,0:functions,0:WHILE,0:CALL,2:IF,2:ELSE,0:DO,0:SWITCH,0	54
0xf7	              0x55	                                push rbp	      1010	git-compat-util.h	FUNCTION_140
0xf8	          0x4889e5	                            mov rbp, rsp	      1010	git-compat-util.h	FUNCTION_140
0xfb	        0x4883ec40	                           sub rsp, 0x40	      1010	git-compat-util.h	FUNCTION_140
0xff	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1010	git-compat-util.h	FUNCTION_140
0x103	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1010	git-compat-util.h	FUNCTION_140
0x106	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1010	git-compat-util.h	FUNCTION_140
0x10a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1010	git-compat-util.h	FUNCTION_140
0x113	        0x488945f8	                mov qword [rbp - 8], rax	      1010	git-compat-util.h	FUNCTION_140
0x117	            0x31c0	                            xor eax, eax	      1010	git-compat-util.h	FUNCTION_140
0x119	      0xe800000000	                          call 0x400015e	      1014	git-compat-util.h	FUNCTION_140
0x11e	    0xc70000000000	                      mov dword [rax], 0	      1014	git-compat-util.h	FUNCTION_140
0x124	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1016	git-compat-util.h	FUNCTION_140	IF_1	CALL_1
0x128	      0xbe2d000000	                           mov esi, 0x2d	      1016	git-compat-util.h	FUNCTION_140	IF_1	CALL_1
0x12d	          0x4889c7	                            mov rdi, rax	      1016	git-compat-util.h	FUNCTION_140	IF_1	CALL_1
0x130	      0xe800000000	                          call 0x4000175	      1016	git-compat-util.h	FUNCTION_140	IF_1	CALL_1
0x135	          0x4885c0	                           test rax, rax	      1016	git-compat-util.h	FUNCTION_140	IF_1	CALL_1
0x138	            0x7407	                            je 0x4000181	      1016	git-compat-util.h	FUNCTION_140	IF_1	CALL_1
0x13a	      0xb8ffffffff	                     mov eax, 0xffffffff	      1017	git-compat-util.h	FUNCTION_140	IF_1
0x13f	            0xeb5e	                           jmp 0x40001df	      1017	git-compat-util.h	FUNCTION_140	IF_1
0x141	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1018	git-compat-util.h	FUNCTION_140	CALL_2
0x144	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      1018	git-compat-util.h	FUNCTION_140	CALL_2
0x148	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1018	git-compat-util.h	FUNCTION_140	CALL_2
0x14c	          0x4889ce	                            mov rsi, rcx	      1018	git-compat-util.h	FUNCTION_140	CALL_2
0x14f	          0x4889c7	                            mov rdi, rax	      1018	git-compat-util.h	FUNCTION_140	CALL_2
0x152	      0xe800000000	                          call 0x4000197	      1018	git-compat-util.h	FUNCTION_140	CALL_2
0x157	        0x488945f0	             mov qword [rbp - 0x10], rax	      1018	git-compat-util.h	FUNCTION_140	CALL_2
0x15b	      0xe800000000	                          call 0x40001a0	      1019	git-compat-util.h	FUNCTION_140	IF_2
0x160	            0x8b00	                    mov eax, dword [rax]	      1019	git-compat-util.h	FUNCTION_140	IF_2
0x162	            0x85c0	                           test eax, eax	      1019	git-compat-util.h	FUNCTION_140	IF_2
0x164	            0x7521	                           jne 0x40001c7	      1019	git-compat-util.h	FUNCTION_140	IF_2
0x166	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1019	git-compat-util.h	FUNCTION_140	IF_2
0x16a	           0xfb600	                   movzx eax, byte [rax]	      1019	git-compat-util.h	FUNCTION_140	IF_2
0x16d	            0x84c0	                             test al, al	      1019	git-compat-util.h	FUNCTION_140	IF_2
0x16f	            0x7516	                           jne 0x40001c7	      1019	git-compat-util.h	FUNCTION_140	IF_2
0x171	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1019	git-compat-util.h	FUNCTION_140	IF_2
0x175	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1019	git-compat-util.h	FUNCTION_140	IF_2
0x179	            0x740c	                            je 0x40001c7	      1019	git-compat-util.h	FUNCTION_140	IF_2
0x17b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1019	git-compat-util.h	FUNCTION_140	IF_2
0x17f	            0x89c0	                            mov eax, eax	      1019	git-compat-util.h	FUNCTION_140	IF_2
0x181	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1019	git-compat-util.h	FUNCTION_140	IF_2
0x185	            0x7407	                            je 0x40001ce	      1019	git-compat-util.h	FUNCTION_140	IF_2
0x187	      0xb8ffffffff	                     mov eax, 0xffffffff	      1020	git-compat-util.h	FUNCTION_140	IF_2
0x18c	            0xeb11	                           jmp 0x40001df	      1020	git-compat-util.h	FUNCTION_140	IF_2
0x18e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1021	git-compat-util.h	FUNCTION_140
0x192	            0x89c2	                            mov edx, eax	      1021	git-compat-util.h	FUNCTION_140
0x194	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1021	git-compat-util.h	FUNCTION_140
0x198	            0x8910	                    mov dword [rax], edx	      1021	git-compat-util.h	FUNCTION_140
0x19a	      0xb800000000	                              mov eax, 0	      1022	git-compat-util.h	FUNCTION_140
0x19f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1023	git-compat-util.h	FUNCTION_140
0x1a3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1023	git-compat-util.h	FUNCTION_140
0x1ac	            0x7405	                            je 0x40001f3	      1023	git-compat-util.h	FUNCTION_140
0x1ae	      0xe800000000	                          call 0x40001f3	      1023	git-compat-util.h	FUNCTION_140
0x1b3	              0xc9	                                   leave	      1023	git-compat-util.h	FUNCTION_140
0x1b4	              0xc3	                                     ret	      1023	git-compat-util.h	FUNCTION_140
add_message_grep	FOR,0:functions,0:WHILE,0:CALL,1:IF,0:ELSE,0:DO,0:SWITCH,0	14
0x4795	              0x55	                                push rbp	      1745	revision.c	FUNCTION_61
0x4796	          0x4889e5	                            mov rbp, rsp	      1745	revision.c	FUNCTION_61
0x4799	        0x4883ec10	                           sub rsp, 0x10	      1745	revision.c	FUNCTION_61
0x479d	        0x48897df8	                mov qword [rbp - 8], rdi	      1745	revision.c	FUNCTION_61
0x47a1	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1745	revision.c	FUNCTION_61
0x47a5	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1746	revision.c	FUNCTION_61	CALL_1
0x47a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1746	revision.c	FUNCTION_61	CALL_1
0x47ad	      0xba02000000	                              mov edx, 2	      1746	revision.c	FUNCTION_61	CALL_1
0x47b2	          0x4889ce	                            mov rsi, rcx	      1746	revision.c	FUNCTION_61	CALL_1
0x47b5	          0x4889c7	                            mov rdi, rax	      1746	revision.c	FUNCTION_61	CALL_1
0x47b8	      0xe869ffffff	                       call sym.add_grep	      1746	revision.c	FUNCTION_61	CALL_1
0x47bd	              0x90	                                     nop	      1747	revision.c	FUNCTION_61
0x47be	              0xc9	                                   leave	      1747	revision.c	FUNCTION_61
0x47bf	              0xc3	                                     ret	      1747	revision.c	FUNCTION_61
remove_marked_parents	FOR,0:functions,0:WHILE,1:CALL,3:IF,2:ELSE,0:DO,0:SWITCH,0	76
0x7ab5	              0x55	                                push rbp	      2659	revision.c	FUNCTION_76
0x7ab6	          0x4889e5	                            mov rbp, rsp	      2659	revision.c	FUNCTION_76
0x7ab9	        0x4883ec30	                           sub rsp, 0x30	      2659	revision.c	FUNCTION_76
0x7abd	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2659	revision.c	FUNCTION_76
0x7ac1	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2659	revision.c	FUNCTION_76
0x7ac5	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      2661	revision.c	FUNCTION_76
0x7acc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2663	revision.c	FUNCTION_76
0x7ad0	        0x4883c030	                           add rax, 0x30	      2663	revision.c	FUNCTION_76
0x7ad4	        0x488945e8	             mov qword [rbp - 0x18], rax	      2663	revision.c	FUNCTION_76
0x7ad8	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      2664	revision.c	FUNCTION_76
0x7adf	      0xe997000000	                           jmp 0x4007bbb	      2665	revision.c	FUNCTION_76	WHILE_1
0x7ae4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2666	revision.c	FUNCTION_76	WHILE_1
0x7ae8	          0x488b00	                    mov rax, qword [rax]	      2666	revision.c	FUNCTION_76	WHILE_1
0x7aeb	        0x488945f8	                mov qword [rbp - 8], rax	      2666	revision.c	FUNCTION_76	WHILE_1
0x7aef	        0x488b45f8	                mov rax, qword [rbp - 8]	      2667	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7af3	            0x8b00	                    mov eax, dword [rax]	      2667	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7af5	          0xc1e804	                              shr eax, 4	      2667	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7af8	      0x25ffffff07	                      and eax, 0x7ffffff	      2667	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7afd	          0x83e010	                           and eax, 0x10	      2667	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b00	            0x85c0	                           test eax, eax	      2667	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b02	            0x7467	                            je 0x4007bab	      2667	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b04	        0x488b45f8	                mov rax, qword [rbp - 8]	      2668	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b08	            0x8b00	                    mov eax, dword [rax]	      2668	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b0a	          0xc1e804	                              shr eax, 4	      2668	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b0d	      0x25ffffff07	                      and eax, 0x7ffffff	      2668	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b12	      0x25efffff07	                      and eax, 0x7ffffef	      2668	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b17	            0x89c2	                            mov edx, eax	      2668	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b19	        0x488b45f8	                mov rax, qword [rbp - 8]	      2668	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b1d	    0x81e2ffffff07	                      and edx, 0x7ffffff	      2668	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b23	            0x89d1	                            mov ecx, edx	      2668	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b25	          0xc1e104	                              shl ecx, 4	      2668	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b28	            0x8b10	                    mov edx, dword [rax]	      2668	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b2a	    0x81e20f000080	                     and edx, 0x8000000f	      2668	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b30	             0x9ca	                             or edx, ecx	      2668	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b32	            0x8910	                    mov dword [rax], edx	      2668	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b34	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2669	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b38	        0x488b5008	                mov rdx, qword [rax + 8]	      2669	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b3c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2669	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b40	          0x488910	                    mov qword [rax], rdx	      2669	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b43	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2670	revision.c	FUNCTION_76	WHILE_1	IF_1	CALL_1
0x7b47	          0x4889c7	                            mov rdi, rax	      2670	revision.c	FUNCTION_76	WHILE_1	IF_1	CALL_1
0x7b4a	      0xe800000000	                          call 0x4007b8f	      2670	revision.c	FUNCTION_76	WHILE_1	IF_1	CALL_1
0x7b4f	        0x8345e401	               add dword [rbp - 0x1c], 1	      2671	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b53	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      2672	revision.c	FUNCTION_76	WHILE_1	IF_1	CALL_2
0x7b56	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2672	revision.c	FUNCTION_76	WHILE_1	IF_1	CALL_2
0x7b5a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2672	revision.c	FUNCTION_76	WHILE_1	IF_1	CALL_2
0x7b5e	          0x4889ce	                            mov rsi, rcx	      2672	revision.c	FUNCTION_76	WHILE_1	IF_1	CALL_2
0x7b61	          0x4889c7	                            mov rdi, rax	      2672	revision.c	FUNCTION_76	WHILE_1	IF_1	CALL_2
0x7b64	      0xe87598ffff	               call sym.compact_treesame	      2672	revision.c	FUNCTION_76	WHILE_1	IF_1	CALL_2
0x7b69	            0xeb10	                           jmp 0x4007bbb	      2673	revision.c	FUNCTION_76	WHILE_1	IF_1
0x7b6b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2675	revision.c	FUNCTION_76	WHILE_1
0x7b6f	        0x4883c008	                              add rax, 8	      2675	revision.c	FUNCTION_76	WHILE_1
0x7b73	        0x488945e8	             mov qword [rbp - 0x18], rax	      2675	revision.c	FUNCTION_76	WHILE_1
0x7b77	        0x8345e001	               add dword [rbp - 0x20], 1	      2676	revision.c	FUNCTION_76	WHILE_1
0x7b7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2665	revision.c	FUNCTION_76	WHILE_1
0x7b7f	          0x488b00	                    mov rax, qword [rax]	      2665	revision.c	FUNCTION_76	WHILE_1
0x7b82	        0x488945f0	             mov qword [rbp - 0x10], rax	      2665	revision.c	FUNCTION_76	WHILE_1
0x7b86	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2665	revision.c	FUNCTION_76	WHILE_1
0x7b8b	     0xf8553ffffff	                           jne 0x4007b24	      2665	revision.c	FUNCTION_76	WHILE_1
0x7b91	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2680	revision.c	FUNCTION_76	IF_2
0x7b95	            0x7428	                            je 0x4007bff	      2680	revision.c	FUNCTION_76	IF_2
0x7b97	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2680	revision.c	FUNCTION_76	IF_2
0x7b9b	            0x8b00	                    mov eax, dword [rax]	      2680	revision.c	FUNCTION_76	IF_2
0x7b9d	          0xc1e804	                              shr eax, 4	      2680	revision.c	FUNCTION_76	IF_2
0x7ba0	      0x25ffffff07	                      and eax, 0x7ffffff	      2680	revision.c	FUNCTION_76	IF_2
0x7ba5	          0x83e004	                              and eax, 4	      2680	revision.c	FUNCTION_76	IF_2
0x7ba8	            0x85c0	                           test eax, eax	      2680	revision.c	FUNCTION_76	IF_2
0x7baa	            0x7513	                           jne 0x4007bff	      2680	revision.c	FUNCTION_76	IF_2
0x7bac	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2681	revision.c	FUNCTION_76	CALL_3
0x7bb0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2681	revision.c	FUNCTION_76	CALL_3
0x7bb4	          0x4889d6	                            mov rsi, rdx	      2681	revision.c	FUNCTION_76	CALL_3
0x7bb7	          0x4889c7	                            mov rdi, rax	      2681	revision.c	FUNCTION_76	CALL_3
0x7bba	      0xe8709affff	                call sym.update_treesame	      2681	revision.c	FUNCTION_76	CALL_3
0x7bbf	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      2683	revision.c	FUNCTION_76
0x7bc2	              0xc9	                                   leave	      2684	revision.c	FUNCTION_76
0x7bc3	              0xc3	                                     ret	      2684	revision.c	FUNCTION_76
ce_path_match	FOR,0:functions,0:WHILE,0:CALL,4:IF,0:ELSE,0:DO,0:SWITCH,0	34
0x534	              0x55	                                push rbp	       335	dir.h	FUNCTION_146
0x535	          0x4889e5	                            mov rbp, rsp	       335	dir.h	FUNCTION_146
0x538	        0x4883ec20	                           sub rsp, 0x20	       335	dir.h	FUNCTION_146
0x53c	        0x48897df8	                mov qword [rbp - 8], rdi	       335	dir.h	FUNCTION_146
0x540	        0x488975f0	             mov qword [rbp - 0x10], rsi	       335	dir.h	FUNCTION_146
0x544	        0x488955e8	             mov qword [rbp - 0x18], rdx	       335	dir.h	FUNCTION_146
0x548	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_146	CALL_4
0x54c	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_146	CALL_4
0x54f	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_146	CALL_4
0x554	      0x3d00400000	                         cmp eax, 0x4000	       336	dir.h	FUNCTION_146	CALL_2
0x559	            0x7413	                            je 0x40005ae	       336	dir.h	FUNCTION_146	CALL_2
0x55b	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_146	CALL_4
0x55f	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_146	CALL_4
0x562	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_146	CALL_4
0x567	      0x3d00e00000	                         cmp eax, 0xe000	       336	dir.h	FUNCTION_146	CALL_2
0x56c	            0x7507	                           jne 0x40005b5	       336	dir.h	FUNCTION_146	CALL_2
0x56e	      0xb901000000	                              mov ecx, 1	       336	dir.h	FUNCTION_146	CALL_2
0x573	            0xeb05	                           jmp 0x40005ba	       336	dir.h	FUNCTION_146	CALL_2
0x575	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_146	CALL_2
0x57a	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_146	CALL_2
0x57e	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       336	dir.h	FUNCTION_146	CALL_2
0x581	            0x89c7	                            mov edi, eax	       336	dir.h	FUNCTION_146	CALL_2
0x583	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_146	CALL_2
0x587	        0x488d7058	                   lea rsi, [rax + 0x58]	       336	dir.h	FUNCTION_146	CALL_2
0x58b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       336	dir.h	FUNCTION_146	CALL_2
0x58f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       336	dir.h	FUNCTION_146	CALL_2
0x593	          0x4189c9	                            mov r9d, ecx	       336	dir.h	FUNCTION_146	CALL_2
0x596	          0x4989d0	                             mov r8, rdx	       336	dir.h	FUNCTION_146	CALL_2
0x599	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_146	CALL_2
0x59e	            0x89fa	                            mov edx, edi	       336	dir.h	FUNCTION_146	CALL_2
0x5a0	          0x4889c7	                            mov rdi, rax	       336	dir.h	FUNCTION_146	CALL_2
0x5a3	      0xe800000000	                          call 0x40005e8	       336	dir.h	FUNCTION_146	CALL_2
0x5a8	              0xc9	                                   leave	       338	dir.h	FUNCTION_146
0x5a9	              0xc3	                                     ret	       338	dir.h	FUNCTION_146
dotdot_missing	FOR,0:functions,0:WHILE,0:CALL,1:IF,1:ELSE,0:DO,0:SWITCH,0	28
0x3ce2	              0x55	                                push rbp	      1512	revision.c	FUNCTION_53
0x3ce3	          0x4889e5	                            mov rbp, rsp	      1512	revision.c	FUNCTION_53
0x3ce6	        0x4883ec20	                           sub rsp, 0x20	      1512	revision.c	FUNCTION_53
0x3cea	        0x48897df8	                mov qword [rbp - 8], rdi	      1512	revision.c	FUNCTION_53
0x3cee	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1512	revision.c	FUNCTION_53
0x3cf2	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1512	revision.c	FUNCTION_53
0x3cf6	          0x894de4	             mov dword [rbp - 0x1c], ecx	      1512	revision.c	FUNCTION_53
0x3cf9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1513	revision.c	FUNCTION_53	IF_1
0x3cfd	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      1513	revision.c	FUNCTION_53	IF_1
0x3d01	          0x83e001	                              and eax, 1	      1513	revision.c	FUNCTION_53	IF_1
0x3d04	            0x84c0	                             test al, al	      1513	revision.c	FUNCTION_53	IF_1
0x3d06	            0x7407	                            je 0x4003d4f	      1513	revision.c	FUNCTION_53	IF_1
0x3d08	      0xb800000000	                              mov eax, 0	      1514	revision.c	FUNCTION_53	IF_1
0x3d0d	            0xeb2d	                           jmp 0x4003d7c	      1514	revision.c	FUNCTION_53	IF_1
0x3d0f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1516	revision.c	FUNCTION_53
0x3d13	          0xc6002e	                    mov byte [rax], 0x2e	      1516	revision.c	FUNCTION_53
0x3d16	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1517	revision.c	FUNCTION_53	CALL_1
0x3d1a	            0x7407	                            je 0x4003d63	      1517	revision.c	FUNCTION_53	CALL_1
0x3d1c	      0xba00000000	                              mov edx, 0	      1517	revision.c	FUNCTION_53	CALL_1
0x3d21	            0xeb05	                           jmp 0x4003d68	      1517	revision.c	FUNCTION_53	CALL_1
0x3d23	      0xba00000000	                              mov edx, 0	      1517	revision.c	FUNCTION_53	CALL_1
0x3d28	        0x488b45f8	                mov rax, qword [rbp - 8]	      1517	revision.c	FUNCTION_53	CALL_1
0x3d2c	          0x4889c6	                            mov rsi, rax	      1517	revision.c	FUNCTION_53	CALL_1
0x3d2f	          0x4889d7	                            mov rdi, rdx	      1517	revision.c	FUNCTION_53	CALL_1
0x3d32	      0xb800000000	                              mov eax, 0	      1517	revision.c	FUNCTION_53	CALL_1
0x3d37	      0xe800000000	                          call 0x4003d7c	      1517	revision.c	FUNCTION_53	CALL_1
0x3d3c	              0xc9	                                   leave	      1520	revision.c	FUNCTION_53
0x3d3d	              0xc3	                                     ret	      1520	revision.c	FUNCTION_53
limit_to_ancestry	FOR,7:functions,0:WHILE,0:CALL,2:IF,3:ELSE,0:DO,1:SWITCH,0	193
0x23e9	              0x55	                                push rbp	       944	revision.c	FUNCTION_29
0x23ea	          0x4889e5	                            mov rbp, rsp	       944	revision.c	FUNCTION_29
0x23ed	        0x4883ec50	                           sub rsp, 0x50	       944	revision.c	FUNCTION_29
0x23f1	        0x48897db8	             mov qword [rbp - 0x48], rdi	       944	revision.c	FUNCTION_29
0x23f5	        0x488975b0	             mov qword [rbp - 0x50], rsi	       944	revision.c	FUNCTION_29
0x23f9	    0x64488b042528	                mov rax, qword fs:[0x28]	       944	revision.c	FUNCTION_29
0x2402	        0x488945f8	                mov qword [rbp - 8], rax	       944	revision.c	FUNCTION_29
0x2406	            0x31c0	                            xor eax, eax	       944	revision.c	FUNCTION_29
0x2408	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       946	revision.c	FUNCTION_29
0x2410	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       953	revision.c	FUNCTION_29	FOR_1
0x2414	        0x488945d8	             mov qword [rbp - 0x28], rax	       953	revision.c	FUNCTION_29	FOR_1
0x2418	            0xeb22	                           jmp 0x400247c	       953	revision.c	FUNCTION_29	FOR_1
0x241a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       954	revision.c	FUNCTION_29	CALL_1
0x241e	          0x488b00	                    mov rax, qword [rax]	       954	revision.c	FUNCTION_29	CALL_1
0x2421	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       954	revision.c	FUNCTION_29	CALL_1
0x2425	          0x4889d6	                            mov rsi, rdx	       954	revision.c	FUNCTION_29	CALL_1
0x2428	          0x4889c7	                            mov rdi, rax	       954	revision.c	FUNCTION_29	CALL_1
0x242b	      0xe800000000	                          call 0x4002470	       954	revision.c	FUNCTION_29	CALL_1
0x2430	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       953	revision.c	FUNCTION_29	FOR_1
0x2434	        0x488b4008	                mov rax, qword [rax + 8]	       953	revision.c	FUNCTION_29	FOR_1
0x2438	        0x488945d8	             mov qword [rbp - 0x28], rax	       953	revision.c	FUNCTION_29	FOR_1
0x243c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       953	revision.c	FUNCTION_29	FOR_1
0x2441	            0x75d7	                           jne 0x400245a	       953	revision.c	FUNCTION_29	FOR_1
0x2443	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       956	revision.c	FUNCTION_29	FOR_2
0x2447	        0x488945d8	             mov qword [rbp - 0x28], rax	       956	revision.c	FUNCTION_29	FOR_2
0x244b	            0xeb3c	                           jmp 0x40024c9	       956	revision.c	FUNCTION_29	FOR_2
0x244d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       957	revision.c	FUNCTION_29	FOR_2
0x2451	          0x488b10	                    mov rdx, qword [rax]	       957	revision.c	FUNCTION_29	FOR_2
0x2454	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       957	revision.c	FUNCTION_29	FOR_2
0x2458	          0x488b00	                    mov rax, qword [rax]	       957	revision.c	FUNCTION_29	FOR_2
0x245b	            0x8b00	                    mov eax, dword [rax]	       957	revision.c	FUNCTION_29	FOR_2
0x245d	          0xc1e804	                              shr eax, 4	       957	revision.c	FUNCTION_29	FOR_2
0x2460	      0x25ffffff07	                      and eax, 0x7ffffff	       957	revision.c	FUNCTION_29	FOR_2
0x2465	          0x83c810	                            or eax, 0x10	       957	revision.c	FUNCTION_29	FOR_2
0x2468	      0x25ffffff07	                      and eax, 0x7ffffff	       957	revision.c	FUNCTION_29	FOR_2
0x246d	          0xc1e004	                              shl eax, 4	       957	revision.c	FUNCTION_29	FOR_2
0x2470	            0x89c1	                            mov ecx, eax	       957	revision.c	FUNCTION_29	FOR_2
0x2472	            0x8b02	                    mov eax, dword [rdx]	       957	revision.c	FUNCTION_29	FOR_2
0x2474	      0x250f000080	                     and eax, 0x8000000f	       957	revision.c	FUNCTION_29	FOR_2
0x2479	             0x9c8	                             or eax, ecx	       957	revision.c	FUNCTION_29	FOR_2
0x247b	            0x8902	                    mov dword [rdx], eax	       957	revision.c	FUNCTION_29	FOR_2
0x247d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       956	revision.c	FUNCTION_29	FOR_2
0x2481	        0x488b4008	                mov rax, qword [rax + 8]	       956	revision.c	FUNCTION_29	FOR_2
0x2485	        0x488945d8	             mov qword [rbp - 0x28], rax	       956	revision.c	FUNCTION_29	FOR_2
0x2489	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       956	revision.c	FUNCTION_29	FOR_2
0x248e	            0x75bd	                           jne 0x400248d	       956	revision.c	FUNCTION_29	FOR_2
0x2490	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       964	revision.c	FUNCTION_29	DO_1
0x2497	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       965	revision.c	FUNCTION_29	DO_1	FOR_3
0x249b	        0x488945d8	             mov qword [rbp - 0x28], rax	       965	revision.c	FUNCTION_29	DO_1	FOR_3
0x249f	      0xe9a1000000	                           jmp 0x4002585	       965	revision.c	FUNCTION_29	DO_1	FOR_3
0x24a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       966	revision.c	FUNCTION_29	DO_1	FOR_3
0x24a8	          0x488b00	                    mov rax, qword [rax]	       966	revision.c	FUNCTION_29	DO_1	FOR_3
0x24ab	        0x488945e8	             mov qword [rbp - 0x18], rax	       966	revision.c	FUNCTION_29	DO_1	FOR_3
0x24af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       968	revision.c	FUNCTION_29	DO_1	FOR_3	IF_1
0x24b3	            0x8b00	                    mov eax, dword [rax]	       968	revision.c	FUNCTION_29	DO_1	FOR_3	IF_1
0x24b5	          0xc1e804	                              shr eax, 4	       968	revision.c	FUNCTION_29	DO_1	FOR_3	IF_1
0x24b8	      0x25ffffff07	                      and eax, 0x7ffffff	       968	revision.c	FUNCTION_29	DO_1	FOR_3	IF_1
0x24bd	          0x83e012	                           and eax, 0x12	       968	revision.c	FUNCTION_29	DO_1	FOR_3	IF_1
0x24c0	            0x85c0	                           test eax, eax	       968	revision.c	FUNCTION_29	DO_1	FOR_3	IF_1
0x24c2	            0x7574	                           jne 0x4002578	       968	revision.c	FUNCTION_29	DO_1	FOR_3	IF_1
0x24c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       970	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x24c8	        0x488b4030	            mov rax, qword [rax + 0x30] 	       970	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x24cc	        0x488945e0	             mov qword [rbp - 0x20], rax	       970	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x24d0	            0xeb5d	                           jmp 0x400256f	       970	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x24d2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       973	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4	IF_2
0x24d6	          0x488b00	                    mov rax, qword [rax]	       973	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4	IF_2
0x24d9	            0x8b00	                    mov eax, dword [rax]	       973	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4	IF_2
0x24db	          0xc1e804	                              shr eax, 4	       973	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4	IF_2
0x24de	      0x25ffffff07	                      and eax, 0x7ffffff	       973	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4	IF_2
0x24e3	          0x83e010	                           and eax, 0x10	       973	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4	IF_2
0x24e6	            0x85c0	                           test eax, eax	       973	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4	IF_2
0x24e8	            0x750e	                           jne 0x4002538	       973	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4	IF_2
0x24ea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       972	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x24ee	        0x488b4008	                mov rax, qword [rax + 8]	       972	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x24f2	        0x488945e0	             mov qword [rbp - 0x20], rax	       972	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x24f6	            0xeb37	                           jmp 0x400256f	       972	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x24f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       975	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x24fc	            0x8b00	                    mov eax, dword [rax]	       975	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x24fe	          0xc1e804	                              shr eax, 4	       975	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x2501	      0x25ffffff07	                      and eax, 0x7ffffff	       975	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x2506	          0x83c810	                            or eax, 0x10	       975	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x2509	            0x89c2	                            mov edx, eax	       975	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x250b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       975	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x250f	    0x81e2ffffff07	                      and edx, 0x7ffffff	       975	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x2515	            0x89d1	                            mov ecx, edx	       975	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x2517	          0xc1e104	                              shl ecx, 4	       975	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x251a	            0x8b10	                    mov edx, dword [rax]	       975	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x251c	    0x81e20f000080	                     and edx, 0x8000000f	       975	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x2522	             0x9ca	                             or edx, ecx	       975	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x2524	            0x8910	                    mov dword [rax], edx	       975	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x2526	    0xc745cc010000	               mov dword [rbp - 0x34], 1	       976	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x252d	            0xeb0a	                           jmp 0x4002579	       977	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x252f	      0x48837de000	               cmp qword [rbp - 0x20], 0	       970	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x2534	            0x759c	                           jne 0x4002512	       970	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x2536	            0xeb01	                           jmp 0x4002579	       970	revision.c	FUNCTION_29	DO_1	FOR_3	FOR_4
0x2538	              0x90	                                     nop	       969	revision.c	FUNCTION_29	DO_1	FOR_3	IF_1
0x2539	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       965	revision.c	FUNCTION_29	DO_1	FOR_3
0x253d	        0x488b4008	                mov rax, qword [rax + 8]	       965	revision.c	FUNCTION_29	DO_1	FOR_3
0x2541	        0x488945d8	             mov qword [rbp - 0x28], rax	       965	revision.c	FUNCTION_29	DO_1	FOR_3
0x2545	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       965	revision.c	FUNCTION_29	DO_1	FOR_3
0x254a	     0xf8554ffffff	                           jne 0x40024e4	       965	revision.c	FUNCTION_29	DO_1	FOR_3
0x2550	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       980	revision.c	FUNCTION_29	DO_1
0x2554	     0xf8536ffffff	                           jne 0x40024d0	       980	revision.c	FUNCTION_29	DO_1
0x255a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       991	revision.c	FUNCTION_29	FOR_5
0x255e	        0x488945d8	             mov qword [rbp - 0x28], rax	       991	revision.c	FUNCTION_29	FOR_5
0x2562	            0xeb5d	                           jmp 0x4002601	       991	revision.c	FUNCTION_29	FOR_5
0x2564	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       992	revision.c	FUNCTION_29	FOR_5
0x2568	          0x488b00	                    mov rax, qword [rax]	       992	revision.c	FUNCTION_29	FOR_5
0x256b	        0x488945f0	             mov qword [rbp - 0x10], rax	       992	revision.c	FUNCTION_29	FOR_5
0x256f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       993	revision.c	FUNCTION_29	FOR_5	IF_3
0x2573	            0x8b00	                    mov eax, dword [rax]	       993	revision.c	FUNCTION_29	FOR_5	IF_3
0x2575	          0xc1e804	                              shr eax, 4	       993	revision.c	FUNCTION_29	FOR_5	IF_3
0x2578	      0x25ffffff07	                      and eax, 0x7ffffff	       993	revision.c	FUNCTION_29	FOR_5	IF_3
0x257d	          0x83e010	                           and eax, 0x10	       993	revision.c	FUNCTION_29	FOR_5	IF_3
0x2580	            0x85c0	                           test eax, eax	       993	revision.c	FUNCTION_29	FOR_5	IF_3
0x2582	            0x7530	                           jne 0x40025f4	       993	revision.c	FUNCTION_29	FOR_5	IF_3
0x2584	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       995	revision.c	FUNCTION_29	FOR_5
0x2588	            0x8b00	                    mov eax, dword [rax]	       995	revision.c	FUNCTION_29	FOR_5
0x258a	          0xc1e804	                              shr eax, 4	       995	revision.c	FUNCTION_29	FOR_5
0x258d	      0x25ffffff07	                      and eax, 0x7ffffff	       995	revision.c	FUNCTION_29	FOR_5
0x2592	          0x83c802	                               or eax, 2	       995	revision.c	FUNCTION_29	FOR_5
0x2595	            0x89c2	                            mov edx, eax	       995	revision.c	FUNCTION_29	FOR_5
0x2597	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       995	revision.c	FUNCTION_29	FOR_5
0x259b	    0x81e2ffffff07	                      and edx, 0x7ffffff	       995	revision.c	FUNCTION_29	FOR_5
0x25a1	            0x89d1	                            mov ecx, edx	       995	revision.c	FUNCTION_29	FOR_5
0x25a3	          0xc1e104	                              shl ecx, 4	       995	revision.c	FUNCTION_29	FOR_5
0x25a6	            0x8b10	                    mov edx, dword [rax]	       995	revision.c	FUNCTION_29	FOR_5
0x25a8	    0x81e20f000080	                     and edx, 0x8000000f	       995	revision.c	FUNCTION_29	FOR_5
0x25ae	             0x9ca	                             or edx, ecx	       995	revision.c	FUNCTION_29	FOR_5
0x25b0	            0x8910	                    mov dword [rax], edx	       995	revision.c	FUNCTION_29	FOR_5
0x25b2	            0xeb01	                           jmp 0x40025f5	       995	revision.c	FUNCTION_29	FOR_5
0x25b4	              0x90	                                     nop	       994	revision.c	FUNCTION_29	FOR_5	IF_3
0x25b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       991	revision.c	FUNCTION_29	FOR_5
0x25b9	        0x488b4008	                mov rax, qword [rax + 8]	       991	revision.c	FUNCTION_29	FOR_5
0x25bd	        0x488945d8	             mov qword [rbp - 0x28], rax	       991	revision.c	FUNCTION_29	FOR_5
0x25c1	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       991	revision.c	FUNCTION_29	FOR_5
0x25c6	            0x759c	                           jne 0x40025a4	       991	revision.c	FUNCTION_29	FOR_5
0x25c8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       999	revision.c	FUNCTION_29	FOR_6
0x25cc	        0x488945d8	             mov qword [rbp - 0x28], rax	       999	revision.c	FUNCTION_29	FOR_6
0x25d0	            0xeb3e	                           jmp 0x4002650	       999	revision.c	FUNCTION_29	FOR_6
0x25d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1000	revision.c	FUNCTION_29	FOR_6
0x25d6	          0x488b10	                    mov rdx, qword [rax]	      1000	revision.c	FUNCTION_29	FOR_6
0x25d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1000	revision.c	FUNCTION_29	FOR_6
0x25dd	          0x488b00	                    mov rax, qword [rax]	      1000	revision.c	FUNCTION_29	FOR_6
0x25e0	            0x8b00	                    mov eax, dword [rax]	      1000	revision.c	FUNCTION_29	FOR_6
0x25e2	          0xc1e804	                              shr eax, 4	      1000	revision.c	FUNCTION_29	FOR_6
0x25e5	      0x25ffffff07	                      and eax, 0x7ffffff	      1000	revision.c	FUNCTION_29	FOR_6
0x25ea	      0x25efffff07	                      and eax, 0x7ffffef	      1000	revision.c	FUNCTION_29	FOR_6
0x25ef	      0x25ffffff07	                      and eax, 0x7ffffff	      1000	revision.c	FUNCTION_29	FOR_6
0x25f4	          0xc1e004	                              shl eax, 4	      1000	revision.c	FUNCTION_29	FOR_6
0x25f7	            0x89c1	                            mov ecx, eax	      1000	revision.c	FUNCTION_29	FOR_6
0x25f9	            0x8b02	                    mov eax, dword [rdx]	      1000	revision.c	FUNCTION_29	FOR_6
0x25fb	      0x250f000080	                     and eax, 0x8000000f	      1000	revision.c	FUNCTION_29	FOR_6
0x2600	             0x9c8	                             or eax, ecx	      1000	revision.c	FUNCTION_29	FOR_6
0x2602	            0x8902	                    mov dword [rdx], eax	      1000	revision.c	FUNCTION_29	FOR_6
0x2604	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       999	revision.c	FUNCTION_29	FOR_6
0x2608	        0x488b4008	                mov rax, qword [rax + 8]	       999	revision.c	FUNCTION_29	FOR_6
0x260c	        0x488945d8	             mov qword [rbp - 0x28], rax	       999	revision.c	FUNCTION_29	FOR_6
0x2610	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       999	revision.c	FUNCTION_29	FOR_6
0x2615	            0x75bb	                           jne 0x4002612	       999	revision.c	FUNCTION_29	FOR_6
0x2617	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1001	revision.c	FUNCTION_29	FOR_7
0x261b	        0x488945d8	             mov qword [rbp - 0x28], rax	      1001	revision.c	FUNCTION_29	FOR_7
0x261f	            0xeb3e	                           jmp 0x400269f	      1001	revision.c	FUNCTION_29	FOR_7
0x2621	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1002	revision.c	FUNCTION_29	FOR_7
0x2625	          0x488b10	                    mov rdx, qword [rax]	      1002	revision.c	FUNCTION_29	FOR_7
0x2628	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1002	revision.c	FUNCTION_29	FOR_7
0x262c	          0x488b00	                    mov rax, qword [rax]	      1002	revision.c	FUNCTION_29	FOR_7
0x262f	            0x8b00	                    mov eax, dword [rax]	      1002	revision.c	FUNCTION_29	FOR_7
0x2631	          0xc1e804	                              shr eax, 4	      1002	revision.c	FUNCTION_29	FOR_7
0x2634	      0x25ffffff07	                      and eax, 0x7ffffff	      1002	revision.c	FUNCTION_29	FOR_7
0x2639	      0x25efffff07	                      and eax, 0x7ffffef	      1002	revision.c	FUNCTION_29	FOR_7
0x263e	      0x25ffffff07	                      and eax, 0x7ffffff	      1002	revision.c	FUNCTION_29	FOR_7
0x2643	          0xc1e004	                              shl eax, 4	      1002	revision.c	FUNCTION_29	FOR_7
0x2646	            0x89c1	                            mov ecx, eax	      1002	revision.c	FUNCTION_29	FOR_7
0x2648	            0x8b02	                    mov eax, dword [rdx]	      1002	revision.c	FUNCTION_29	FOR_7
0x264a	      0x250f000080	                     and eax, 0x8000000f	      1002	revision.c	FUNCTION_29	FOR_7
0x264f	             0x9c8	                             or eax, ecx	      1002	revision.c	FUNCTION_29	FOR_7
0x2651	            0x8902	                    mov dword [rdx], eax	      1002	revision.c	FUNCTION_29	FOR_7
0x2653	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1001	revision.c	FUNCTION_29	FOR_7
0x2657	        0x488b4008	                mov rax, qword [rax + 8]	      1001	revision.c	FUNCTION_29	FOR_7
0x265b	        0x488945d8	             mov qword [rbp - 0x28], rax	      1001	revision.c	FUNCTION_29	FOR_7
0x265f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1001	revision.c	FUNCTION_29	FOR_7
0x2664	            0x75bb	                           jne 0x4002661	      1001	revision.c	FUNCTION_29	FOR_7
0x2666	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1003	revision.c	FUNCTION_29	CALL_2
0x266a	          0x4889c7	                            mov rdi, rax	      1003	revision.c	FUNCTION_29	CALL_2
0x266d	      0xe800000000	                          call 0x40026b2	      1003	revision.c	FUNCTION_29	CALL_2
0x2672	              0x90	                                     nop	      1004	revision.c	FUNCTION_29
0x2673	        0x488b45f8	                mov rax, qword [rbp - 8]	      1004	revision.c	FUNCTION_29
0x2677	    0x644833042528	                xor rax, qword fs:[0x28]	      1004	revision.c	FUNCTION_29
0x2680	            0x7405	                            je 0x40026c7	      1004	revision.c	FUNCTION_29
0x2682	      0xe800000000	                          call 0x40026c7	      1004	revision.c	FUNCTION_29
0x2687	              0xc9	                                   leave	      1004	revision.c	FUNCTION_29
0x2688	              0xc3	                                     ret	      1004	revision.c	FUNCTION_29
one_relevant_parent	FOR,0:functions,0:WHILE,1:CALL,1:IF,4:ELSE,0:DO,0:SWITCH,0	46
0x10a2	              0x55	                                push rbp	       360	revision.c	FUNCTION_15
0x10a3	          0x4889e5	                            mov rbp, rsp	       360	revision.c	FUNCTION_15
0x10a6	        0x4883ec30	                           sub rsp, 0x30	       360	revision.c	FUNCTION_15
0x10aa	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       360	revision.c	FUNCTION_15
0x10ae	        0x488975d0	             mov qword [rbp - 0x30], rsi	       360	revision.c	FUNCTION_15
0x10b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       361	revision.c	FUNCTION_15
0x10b6	        0x488945e8	             mov qword [rbp - 0x18], rax	       361	revision.c	FUNCTION_15
0x10ba	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       362	revision.c	FUNCTION_15
0x10c2	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       364	revision.c	FUNCTION_15	IF_1
0x10c7	            0x7507	                           jne 0x4001110	       364	revision.c	FUNCTION_15	IF_1
0x10c9	      0xb800000000	                              mov eax, 0	       365	revision.c	FUNCTION_15	IF_1
0x10ce	            0xeb6d	                           jmp 0x400117d	       365	revision.c	FUNCTION_15	IF_1
0x10d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       372	revision.c	FUNCTION_15	IF_2
0x10d4	         0xfb64078	           movzx eax, byte [rax + 0x78] 	       372	revision.c	FUNCTION_15	IF_2
0x10d8	          0x83e010	                           and eax, 0x10	       372	revision.c	FUNCTION_15	IF_2
0x10db	            0x84c0	                             test al, al	       372	revision.c	FUNCTION_15	IF_2
0x10dd	            0x750d	                           jne 0x400112c	       372	revision.c	FUNCTION_15	IF_2
0x10df	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       372	revision.c	FUNCTION_15	IF_2
0x10e3	        0x488b4008	                mov rax, qword [rax + 8]	       372	revision.c	FUNCTION_15	IF_2
0x10e7	          0x4885c0	                           test rax, rax	       372	revision.c	FUNCTION_15	IF_2
0x10ea	            0x7546	                           jne 0x4001172	       372	revision.c	FUNCTION_15	IF_2
0x10ec	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       373	revision.c	FUNCTION_15	IF_2
0x10f0	          0x488b00	                    mov rax, qword [rax]	       373	revision.c	FUNCTION_15	IF_2
0x10f3	            0xeb48	                           jmp 0x400117d	       373	revision.c	FUNCTION_15	IF_2
0x10f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       385	revision.c	FUNCTION_15	WHILE_1
0x10f9	          0x488b00	                    mov rax, qword [rax]	       385	revision.c	FUNCTION_15	WHILE_1
0x10fc	        0x488945f8	                mov qword [rbp - 8], rax	       385	revision.c	FUNCTION_15	WHILE_1
0x1100	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       386	revision.c	FUNCTION_15	WHILE_1
0x1104	        0x488b4008	                mov rax, qword [rax + 8]	       386	revision.c	FUNCTION_15	WHILE_1
0x1108	        0x488945e8	             mov qword [rbp - 0x18], rax	       386	revision.c	FUNCTION_15	WHILE_1
0x110c	        0x488b45f8	                mov rax, qword [rbp - 8]	       387	revision.c	FUNCTION_15	WHILE_1	IF_3	CALL_1
0x1110	          0x4889c7	                            mov rdi, rax	       387	revision.c	FUNCTION_15	WHILE_1	IF_3	CALL_1
0x1113	      0xe864ffffff	                call sym.relevant_commit	       387	revision.c	FUNCTION_15	WHILE_1	IF_3	CALL_1
0x1118	            0x85c0	                           test eax, eax	       387	revision.c	FUNCTION_15	WHILE_1	IF_3	CALL_1
0x111a	            0x7416	                            je 0x4001172	       387	revision.c	FUNCTION_15	WHILE_1	IF_3	CALL_1
0x111c	      0x48837df000	               cmp qword [rbp - 0x10], 0	       388	revision.c	FUNCTION_15	WHILE_1	IF_3	IF_4
0x1121	            0x7407	                            je 0x400116a	       388	revision.c	FUNCTION_15	WHILE_1	IF_3	IF_4
0x1123	      0xb800000000	                              mov eax, 0	       389	revision.c	FUNCTION_15	WHILE_1	IF_3	IF_4
0x1128	            0xeb13	                           jmp 0x400117d	       389	revision.c	FUNCTION_15	WHILE_1	IF_3	IF_4
0x112a	        0x488b45f8	                mov rax, qword [rbp - 8]	       390	revision.c	FUNCTION_15	WHILE_1	IF_3
0x112e	        0x488945f0	             mov qword [rbp - 0x10], rax	       390	revision.c	FUNCTION_15	WHILE_1	IF_3
0x1132	      0x48837de800	               cmp qword [rbp - 0x18], 0	       384	revision.c	FUNCTION_15	WHILE_1
0x1137	            0x75bc	                           jne 0x4001135	       384	revision.c	FUNCTION_15	WHILE_1
0x1139	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       393	revision.c	FUNCTION_15
0x113d	              0xc9	                                   leave	       394	revision.c	FUNCTION_15
0x113e	              0xc3	                                     ret	       394	revision.c	FUNCTION_15
add_pending_object_with_path	FOR,0:functions,0:WHILE,0:CALL,5:IF,4:ELSE,0:DO,0:SWITCH,0	105
0x983	              0x55	                                push rbp	       148	revision.c	FUNCTION_6
0x984	          0x4889e5	                            mov rbp, rsp	       148	revision.c	FUNCTION_6
0x987	        0x4883ec60	                           sub rsp, 0x60	       148	revision.c	FUNCTION_6
0x98b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       148	revision.c	FUNCTION_6
0x98f	        0x488975c0	             mov qword [rbp - 0x40], rsi	       148	revision.c	FUNCTION_6
0x993	        0x488955b8	             mov qword [rbp - 0x48], rdx	       148	revision.c	FUNCTION_6
0x997	          0x894db4	             mov dword [rbp - 0x4c], ecx	       148	revision.c	FUNCTION_6
0x99a	        0x4c8945a8	              mov qword [rbp - 0x58], r8	       148	revision.c	FUNCTION_6
0x99e	    0x64488b042528	                mov rax, qword fs:[0x28]	       148	revision.c	FUNCTION_6
0x9a7	        0x488945f8	                mov qword [rbp - 8], rax	       148	revision.c	FUNCTION_6
0x9ab	            0x31c0	                            xor eax, eax	       148	revision.c	FUNCTION_6
0x9ad	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       149	revision.c	FUNCTION_6	IF_1
0x9b2	     0xf8433010000	                            je 0x4000b2b	       149	revision.c	FUNCTION_6	IF_1
0x9b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       151	revision.c	FUNCTION_6	IF_2
0x9bc	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       151	revision.c	FUNCTION_6	IF_2
0x9c0	          0x83e030	                           and eax, 0x30	       151	revision.c	FUNCTION_6	IF_2
0x9c3	            0x84c0	                             test al, al	       151	revision.c	FUNCTION_6	IF_2
0x9c5	            0x7423	                            je 0x4000a2a	       151	revision.c	FUNCTION_6	IF_2
0x9c7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       151	revision.c	FUNCTION_6	IF_2
0x9cb	            0x8b00	                    mov eax, dword [rax]	       151	revision.c	FUNCTION_6	IF_2
0x9cd	          0xc1e804	                              shr eax, 4	       151	revision.c	FUNCTION_6	IF_2
0x9d0	      0x25ffffff07	                      and eax, 0x7ffffff	       151	revision.c	FUNCTION_6	IF_2
0x9d5	          0x83e002	                              and eax, 2	       151	revision.c	FUNCTION_6	IF_2
0x9d8	            0x85c0	                           test eax, eax	       151	revision.c	FUNCTION_6	IF_2
0x9da	            0x740e	                            je 0x4000a2a	       151	revision.c	FUNCTION_6	IF_2
0x9dc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       152	revision.c	FUNCTION_6	IF_2
0x9e0	         0xfb65074	           movzx edx, byte [rax + 0x74] 	       152	revision.c	FUNCTION_6	IF_2
0x9e4	          0x83e2cf	                     and edx, 0xffffffcf	       152	revision.c	FUNCTION_6	IF_2
0x9e7	          0x885074	               mov byte [rax + 0x74], dl	       152	revision.c	FUNCTION_6	IF_2
0x9ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       153	revision.c	FUNCTION_6	IF_3
0x9ee	    0x488b80f80700	           mov rax, qword [rax + 0x7f8] 	       153	revision.c	FUNCTION_6	IF_3
0x9f5	          0x4885c0	                           test rax, rax	       153	revision.c	FUNCTION_6	IF_3
0x9f8	     0xf84c4000000	                            je 0x4000b02	       153	revision.c	FUNCTION_6	IF_3
0x9fe	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       153	revision.c	FUNCTION_6	IF_3
0xa02	           0xfb600	                   movzx eax, byte [rax]	       153	revision.c	FUNCTION_6	IF_3
0xa05	          0x83e00e	                            and eax, 0xe	       153	revision.c	FUNCTION_6	IF_3
0xa08	            0x3c02	                               cmp al, 2	       153	revision.c	FUNCTION_6	IF_3
0xa0a	     0xf85b2000000	                           jne 0x4000b02	       153	revision.c	FUNCTION_6	IF_3
0xa10	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       154	revision.c	FUNCTION_6	IF_3
0xa18	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       154	revision.c	FUNCTION_6	IF_3
0xa20	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       154	revision.c	FUNCTION_6	IF_3
0xa28	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       155	revision.c	FUNCTION_6	IF_3	CALL_1
0xa2c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       155	revision.c	FUNCTION_6	IF_3	CALL_1
0xa30	      0xb900000000	                              mov ecx, 0	       155	revision.c	FUNCTION_6	IF_3	CALL_1
0xa35	      0xbe00000000	                              mov esi, 0	       155	revision.c	FUNCTION_6	IF_3	CALL_1
0xa3a	          0x4889c7	                            mov rdi, rax	       155	revision.c	FUNCTION_6	IF_3	CALL_1
0xa3d	      0xe800000000	                          call 0x4000a82	       155	revision.c	FUNCTION_6	IF_3	CALL_1
0xa42	          0x8945dc	             mov dword [rbp - 0x24], eax	       155	revision.c	FUNCTION_6	IF_3	CALL_1
0xa45	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       157	revision.c	FUNCTION_6	IF_3	IF_4
0xa49	            0x7e39	                           jle 0x4000ac4	       157	revision.c	FUNCTION_6	IF_3	IF_4
0xa4b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       157	revision.c	FUNCTION_6	IF_3	IF_4
0xa4e	          0x4863d0	                         movsxd rdx, eax	       157	revision.c	FUNCTION_6	IF_3	IF_4
0xa51	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       157	revision.c	FUNCTION_6	IF_3	IF_4
0xa55	          0x4801d0	                            add rax, rdx	       157	revision.c	FUNCTION_6	IF_3	IF_4
0xa58	           0xfb600	                   movzx eax, byte [rax]	       157	revision.c	FUNCTION_6	IF_3	IF_4
0xa5b	            0x84c0	                             test al, al	       157	revision.c	FUNCTION_6	IF_3	IF_4
0xa5d	            0x7425	                            je 0x4000ac4	       157	revision.c	FUNCTION_6	IF_3	IF_4
0xa5f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	revision.c	FUNCTION_6	IF_3	IF_4
0xa63	          0x4885c0	                           test rax, rax	       157	revision.c	FUNCTION_6	IF_3	IF_4
0xa66	            0x741c	                            je 0x4000ac4	       157	revision.c	FUNCTION_6	IF_3	IF_4
0xa68	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       158	revision.c	FUNCTION_6	IF_3	CALL_2
0xa6b	          0x4863d0	                         movsxd rdx, eax	       158	revision.c	FUNCTION_6	IF_3	CALL_2
0xa6e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       158	revision.c	FUNCTION_6	IF_3	CALL_2
0xa72	          0x4801c2	                            add rdx, rax	       158	revision.c	FUNCTION_6	IF_3	CALL_2
0xa75	        0x488d45e0	                   lea rax, [rbp - 0x20]	       158	revision.c	FUNCTION_6	IF_3	CALL_2
0xa79	          0x4889d6	                            mov rsi, rdx	       158	revision.c	FUNCTION_6	IF_3	CALL_2
0xa7c	          0x4889c7	                            mov rdi, rax	       158	revision.c	FUNCTION_6	IF_3	CALL_2
0xa7f	      0xe810f9ffff	                  call sym.strbuf_addstr	       158	revision.c	FUNCTION_6	IF_3	CALL_2
0xa84	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       161	revision.c	FUNCTION_6	IF_3
0xa88	           0xfb600	                   movzx eax, byte [rax]	       161	revision.c	FUNCTION_6	IF_3
0xa8b	            0x84c0	                             test al, al	       159	revision.c	FUNCTION_6	IF_3	CALL_3
0xa8d	            0x7406	                            je 0x4000ad5	       159	revision.c	FUNCTION_6	IF_3	CALL_3
0xa8f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       159	revision.c	FUNCTION_6	IF_3	CALL_3
0xa93	            0xeb04	                           jmp 0x4000ad9	       159	revision.c	FUNCTION_6	IF_3	CALL_3
0xa95	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       159	revision.c	FUNCTION_6	IF_3	CALL_3
0xa99	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       159	revision.c	FUNCTION_6	IF_3	CALL_3
0xa9d	    0x488b8af80700	           mov rcx, qword [rdx + 0x7f8] 	       159	revision.c	FUNCTION_6	IF_3	CALL_3
0xaa4	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       159	revision.c	FUNCTION_6	IF_3	CALL_3
0xaa8	          0x4889c2	                            mov rdx, rax	       159	revision.c	FUNCTION_6	IF_3	CALL_3
0xaab	          0x4889cf	                            mov rdi, rcx	       159	revision.c	FUNCTION_6	IF_3	CALL_3
0xaae	      0xe800000000	                          call 0x4000af3	       159	revision.c	FUNCTION_6	IF_3	CALL_3
0xab3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       162	revision.c	FUNCTION_6	IF_3	CALL_4
0xab7	          0x4889c7	                            mov rdi, rax	       162	revision.c	FUNCTION_6	IF_3	CALL_4
0xaba	      0xe800000000	                          call 0x4000aff	       162	revision.c	FUNCTION_6	IF_3	CALL_4
0xabf	              0x90	                                     nop	       163	revision.c	FUNCTION_6	IF_3
0xac0	            0xeb2a	                           jmp 0x4000b2c	       163	revision.c	FUNCTION_6	IF_3
0xac2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       165	revision.c	FUNCTION_6	CALL_5
0xac6	        0x488d7808	                      lea rdi, [rax + 8]	       165	revision.c	FUNCTION_6	CALL_5
0xaca	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       165	revision.c	FUNCTION_6	CALL_5
0xace	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       165	revision.c	FUNCTION_6	CALL_5
0xad1	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       165	revision.c	FUNCTION_6	CALL_5
0xad5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       165	revision.c	FUNCTION_6	CALL_5
0xad9	          0x4989c8	                             mov r8, rcx	       165	revision.c	FUNCTION_6	CALL_5
0xadc	            0x89d1	                            mov ecx, edx	       165	revision.c	FUNCTION_6	CALL_5
0xade	          0x4889fa	                            mov rdx, rdi	       165	revision.c	FUNCTION_6	CALL_5
0xae1	          0x4889c7	                            mov rdi, rax	       165	revision.c	FUNCTION_6	CALL_5
0xae4	      0xe800000000	                          call 0x4000b29	       165	revision.c	FUNCTION_6	CALL_5
0xae9	            0xeb01	                           jmp 0x4000b2c	       165	revision.c	FUNCTION_6	CALL_5
0xaeb	              0x90	                                     nop	       150	revision.c	FUNCTION_6	IF_1
0xaec	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	revision.c	FUNCTION_6
0xaf0	    0x644833042528	                xor rax, qword fs:[0x28]	       166	revision.c	FUNCTION_6
0xaf9	            0x7405	                            je 0x4000b40	       166	revision.c	FUNCTION_6
0xafb	      0xe800000000	                          call 0x4000b40	       166	revision.c	FUNCTION_6
0xb00	              0xc9	                                   leave	       166	revision.c	FUNCTION_6
0xb01	              0xc3	                                     ret	       166	revision.c	FUNCTION_6
locate_simplify_state	FOR,0:functions,0:WHILE,0:CALL,3:IF,1:ELSE,0:DO,0:SWITCH,0	28
0x7788	              0x55	                                push rbp	      2528	revision.c	FUNCTION_72
0x7789	          0x4889e5	                            mov rbp, rsp	      2528	revision.c	FUNCTION_72
0x778c	        0x4883ec20	                           sub rsp, 0x20	      2528	revision.c	FUNCTION_72
0x7790	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2528	revision.c	FUNCTION_72
0x7794	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2528	revision.c	FUNCTION_72
0x7798	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2531	revision.c	FUNCTION_72	CALL_1
0x779c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2531	revision.c	FUNCTION_72	CALL_1
0x77a0	    0x4881c2180800	                          add rdx, 0x818	      2531	revision.c	FUNCTION_72	CALL_1
0x77a7	          0x4889c6	                            mov rsi, rax	      2531	revision.c	FUNCTION_72	CALL_1
0x77aa	          0x4889d7	                            mov rdi, rdx	      2531	revision.c	FUNCTION_72	CALL_1
0x77ad	      0xe800000000	                          call 0x40077f2	      2531	revision.c	FUNCTION_72	CALL_1
0x77b2	        0x488945f8	                mov qword [rbp - 8], rax	      2531	revision.c	FUNCTION_72	CALL_1
0x77b6	      0x48837df800	                  cmp qword [rbp - 8], 0	      2532	revision.c	FUNCTION_72	IF_1
0x77bb	            0x7531	                           jne 0x400782e	      2532	revision.c	FUNCTION_72	IF_1
0x77bd	      0xbe08000000	                              mov esi, 8	      2533	revision.c	FUNCTION_72	IF_1	CALL_2
0x77c2	      0xbf01000000	                              mov edi, 1	      2533	revision.c	FUNCTION_72	IF_1	CALL_2
0x77c7	      0xe800000000	                          call 0x400780c	      2533	revision.c	FUNCTION_72	IF_1	CALL_2
0x77cc	        0x488945f8	                mov qword [rbp - 8], rax	      2533	revision.c	FUNCTION_72	IF_1	CALL_2
0x77d0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2534	revision.c	FUNCTION_72	IF_1	CALL_3
0x77d4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2534	revision.c	FUNCTION_72	IF_1	CALL_3
0x77d8	    0x488d8a180800	                  lea rcx, [rdx + 0x818]	      2534	revision.c	FUNCTION_72	IF_1	CALL_3
0x77df	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2534	revision.c	FUNCTION_72	IF_1	CALL_3
0x77e3	          0x4889c6	                            mov rsi, rax	      2534	revision.c	FUNCTION_72	IF_1	CALL_3
0x77e6	          0x4889cf	                            mov rdi, rcx	      2534	revision.c	FUNCTION_72	IF_1	CALL_3
0x77e9	      0xe800000000	                          call 0x400782e	      2534	revision.c	FUNCTION_72	IF_1	CALL_3
0x77ee	        0x488b45f8	                mov rax, qword [rbp - 8]	      2536	revision.c	FUNCTION_72
0x77f2	              0xc9	                                   leave	      2537	revision.c	FUNCTION_72
0x77f3	              0xc3	                                     ret	      2537	revision.c	FUNCTION_72
limiting_can_increase_treesame	FOR,0:functions,0:WHILE,0:CALL,0:IF,0:ELSE,0:DO,0:SWITCH,0	28
0x17c0	              0x55	                                push rbp	       592	revision.c	ELSE_2	FUNCTION_23
0x17c1	          0x4889e5	                            mov rbp, rsp	       592	revision.c	ELSE_2	FUNCTION_23
0x17c4	        0x48897df8	                mov qword [rbp - 8], rdi	       592	revision.c	ELSE_2	FUNCTION_23
0x17c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	revision.c	ELSE_2	FUNCTION_23
0x17cc	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       601	revision.c	ELSE_2	FUNCTION_23
0x17d0	          0x83e008	                              and eax, 8	       601	revision.c	ELSE_2	FUNCTION_23
0x17d3	            0x84c0	                             test al, al	       602	revision.c	ELSE_2	FUNCTION_23
0x17d5	            0x7434	                            je 0x400184b	       602	revision.c	ELSE_2	FUNCTION_23
0x17d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	revision.c	ELSE_2	FUNCTION_23
0x17db	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       601	revision.c	ELSE_2	FUNCTION_23
0x17df	          0x83e004	                              and eax, 4	       601	revision.c	ELSE_2	FUNCTION_23
0x17e2	            0x84c0	                             test al, al	       601	revision.c	ELSE_2	FUNCTION_23
0x17e4	            0x7425	                            je 0x400184b	       601	revision.c	ELSE_2	FUNCTION_23
0x17e6	        0x488b45f8	                mov rax, qword [rbp - 8]	       602	revision.c	ELSE_2	FUNCTION_23
0x17ea	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       602	revision.c	ELSE_2	FUNCTION_23
0x17ee	          0x83e080	                     and eax, 0xffffff80	       602	revision.c	ELSE_2	FUNCTION_23
0x17f1	            0x84c0	                             test al, al	       601	revision.c	ELSE_2	FUNCTION_23
0x17f3	            0x7516	                           jne 0x400184b	       601	revision.c	ELSE_2	FUNCTION_23
0x17f5	        0x488b45f8	                mov rax, qword [rbp - 8]	       603	revision.c	ELSE_2	FUNCTION_23
0x17f9	         0xfb64078	           movzx eax, byte [rax + 0x78] 	       603	revision.c	ELSE_2	FUNCTION_23
0x17fd	          0x83e010	                           and eax, 0x10	       603	revision.c	ELSE_2	FUNCTION_23
0x1800	            0x84c0	                             test al, al	       602	revision.c	ELSE_2	FUNCTION_23
0x1802	            0x7507	                           jne 0x400184b	       602	revision.c	ELSE_2	FUNCTION_23
0x1804	      0xb801000000	                              mov eax, 1	       602	revision.c	ELSE_2	FUNCTION_23
0x1809	            0xeb05	                           jmp 0x4001850	       602	revision.c	ELSE_2	FUNCTION_23
0x180b	      0xb800000000	                              mov eax, 0	       602	revision.c	ELSE_2	FUNCTION_23
0x1810	              0x5d	                                 pop rbp	       604	revision.c	ELSE_2	FUNCTION_23
0x1811	              0xc3	                                     ret	       604	revision.c	ELSE_2	FUNCTION_23
mark_tree_uninteresting	FOR,0:functions,0:WHILE,0:CALL,1:IF,2:ELSE,0:DO,0:SWITCH,0	38
0x79f	              0x55	                                push rbp	        85	revision.c	FUNCTION_4
0x7a0	          0x4889e5	                            mov rbp, rsp	        85	revision.c	FUNCTION_4
0x7a3	        0x4883ec20	                           sub rsp, 0x20	        85	revision.c	FUNCTION_4
0x7a7	        0x48897de8	             mov qword [rbp - 0x18], rdi	        85	revision.c	FUNCTION_4
0x7ab	      0x48837de800	               cmp qword [rbp - 0x18], 0	        88	revision.c	FUNCTION_4	IF_1
0x7b0	            0x7459	                            je 0x400084b	        88	revision.c	FUNCTION_4	IF_1
0x7b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        91	revision.c	FUNCTION_4
0x7b6	        0x488945f8	                mov qword [rbp - 8], rax	        91	revision.c	FUNCTION_4
0x7ba	        0x488b45f8	                mov rax, qword [rbp - 8]	        92	revision.c	FUNCTION_4	IF_2
0x7be	            0x8b00	                    mov eax, dword [rax]	        92	revision.c	FUNCTION_4	IF_2
0x7c0	          0xc1e804	                              shr eax, 4	        92	revision.c	FUNCTION_4	IF_2
0x7c3	      0x25ffffff07	                      and eax, 0x7ffffff	        92	revision.c	FUNCTION_4	IF_2
0x7c8	          0x83e002	                              and eax, 2	        92	revision.c	FUNCTION_4	IF_2
0x7cb	            0x85c0	                           test eax, eax	        92	revision.c	FUNCTION_4	IF_2
0x7cd	            0x753f	                           jne 0x400084e	        92	revision.c	FUNCTION_4	IF_2
0x7cf	        0x488b45f8	                mov rax, qword [rbp - 8]	        94	revision.c	FUNCTION_4
0x7d3	            0x8b00	                    mov eax, dword [rax]	        94	revision.c	FUNCTION_4
0x7d5	          0xc1e804	                              shr eax, 4	        94	revision.c	FUNCTION_4
0x7d8	      0x25ffffff07	                      and eax, 0x7ffffff	        94	revision.c	FUNCTION_4
0x7dd	          0x83c802	                               or eax, 2	        94	revision.c	FUNCTION_4
0x7e0	            0x89c2	                            mov edx, eax	        94	revision.c	FUNCTION_4
0x7e2	        0x488b45f8	                mov rax, qword [rbp - 8]	        94	revision.c	FUNCTION_4
0x7e6	    0x81e2ffffff07	                      and edx, 0x7ffffff	        94	revision.c	FUNCTION_4
0x7ec	            0x89d1	                            mov ecx, edx	        94	revision.c	FUNCTION_4
0x7ee	          0xc1e104	                              shl ecx, 4	        94	revision.c	FUNCTION_4
0x7f1	            0x8b10	                    mov edx, dword [rax]	        94	revision.c	FUNCTION_4
0x7f3	    0x81e20f000080	                     and edx, 0x8000000f	        94	revision.c	FUNCTION_4
0x7f9	             0x9ca	                             or edx, ecx	        94	revision.c	FUNCTION_4
0x7fb	            0x8910	                    mov dword [rax], edx	        94	revision.c	FUNCTION_4
0x7fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	revision.c	FUNCTION_4	CALL_1
0x801	          0x4889c7	                            mov rdi, rax	        95	revision.c	FUNCTION_4	CALL_1
0x804	      0xe889feffff	call sym.mark_tree_contents_uninteresting	        95	revision.c	FUNCTION_4	CALL_1
0x809	            0xeb04	                           jmp 0x400084f	        95	revision.c	FUNCTION_4	CALL_1
0x80b	              0x90	                                     nop	        89	revision.c	FUNCTION_4	IF_1
0x80c	            0xeb01	                           jmp 0x400084f	        89	revision.c	FUNCTION_4	IF_1
0x80e	              0x90	                                     nop	        93	revision.c	FUNCTION_4	IF_2
0x80f	              0xc9	                                   leave	        96	revision.c	FUNCTION_4
0x810	              0xc3	                                     ret	        96	revision.c	FUNCTION_4
file_change	FOR,0:functions,0:WHILE,0:CALL,0:IF,0:ELSE,0:DO,0:SWITCH,0	16
0x11b7	              0x55	                                push rbp	       436	revision.c	FUNCTION_17
0x11b8	          0x4889e5	                            mov rbp, rsp	       436	revision.c	FUNCTION_17
0x11bb	        0x48897df8	                mov qword [rbp - 8], rdi	       436	revision.c	FUNCTION_17
0x11bf	          0x8975f4	              mov dword [rbp - 0xc], esi	       436	revision.c	FUNCTION_17
0x11c2	          0x8955f0	             mov dword [rbp - 0x10], edx	       436	revision.c	FUNCTION_17
0x11c5	        0x48894de8	             mov qword [rbp - 0x18], rcx	       436	revision.c	FUNCTION_17
0x11c9	        0x4c8945e0	              mov qword [rbp - 0x20], r8	       436	revision.c	FUNCTION_17
0x11cd	        0x44894ddc	             mov dword [rbp - 0x24], r9d	       436	revision.c	FUNCTION_17
0x11d1	    0xc70500000000	               mov dword [0x0400121b], 3	       437	revision.c	FUNCTION_17
0x11db	        0x488b45f8	                mov rax, qword [rbp - 8]	       438	revision.c	FUNCTION_17
0x11df	         0xfb65039	           movzx edx, byte [rax + 0x39] 	       438	revision.c	FUNCTION_17
0x11e3	          0x83ca02	                               or edx, 2	       438	revision.c	FUNCTION_17
0x11e6	          0x885039	               mov byte [rax + 0x39], dl	       438	revision.c	FUNCTION_17
0x11e9	              0x90	                                     nop	       439	revision.c	FUNCTION_17
0x11ea	              0x5d	                                 pop rbp	       439	revision.c	FUNCTION_17
0x11eb	              0xc3	                                     ret	       439	revision.c	FUNCTION_17
limit_list	FOR,1:functions,0:WHILE,1:CALL,14:IF,14:ELSE,0:DO,0:SWITCH,0	214
0x27ec	              0x55	                                push rbp	      1041	revision.c	FUNCTION_32
0x27ed	          0x4889e5	                            mov rbp, rsp	      1041	revision.c	FUNCTION_32
0x27f0	        0x4883ec70	                           sub rsp, 0x70	      1041	revision.c	FUNCTION_32
0x27f4	        0x48897d98	             mov qword [rbp - 0x68], rdi	      1041	revision.c	FUNCTION_32
0x27f8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1041	revision.c	FUNCTION_32
0x2801	        0x488945f8	                mov qword [rbp - 8], rax	      1041	revision.c	FUNCTION_32
0x2805	            0x31c0	                            xor eax, eax	      1041	revision.c	FUNCTION_32
0x2807	    0xc745a4050000	               mov dword [rbp - 0x5c], 5	      1042	revision.c	FUNCTION_32
0x280e	    0x48c745c0ffff	mov qword [rbp - 0x40], 0xffffffffffffffff	      1043	revision.c	FUNCTION_32
0x2816	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1044	revision.c	FUNCTION_32
0x281a	          0x488b00	                    mov rax, qword [rax]	      1044	revision.c	FUNCTION_32
0x281d	        0x488945a8	             mov qword [rbp - 0x58], rax	      1044	revision.c	FUNCTION_32
0x2821	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1045	revision.c	FUNCTION_32
0x2829	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1046	revision.c	FUNCTION_32
0x282d	        0x488945c8	             mov qword [rbp - 0x38], rax	      1046	revision.c	FUNCTION_32
0x2831	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1047	revision.c	FUNCTION_32
0x2839	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1048	revision.c	FUNCTION_32
0x2841	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1050	revision.c	FUNCTION_32	IF_1
0x2845	         0xfb64078	           movzx eax, byte [rax + 0x78] 	      1050	revision.c	FUNCTION_32	IF_1
0x2849	          0x83e008	                              and eax, 8	      1050	revision.c	FUNCTION_32	IF_1
0x284c	            0x84c0	                             test al, al	      1050	revision.c	FUNCTION_32	IF_1
0x284e	     0xf84a1010000	                            je 0x4002a35	      1050	revision.c	FUNCTION_32	IF_1
0x2854	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1051	revision.c	FUNCTION_32	IF_1	CALL_1
0x2858	          0x4889c7	                            mov rdi, rax	      1051	revision.c	FUNCTION_32	IF_1	CALL_1
0x285b	      0xe829feffff	         call sym.collect_bottom_commits	      1051	revision.c	FUNCTION_32	IF_1	CALL_1
0x2860	        0x488945d0	             mov qword [rbp - 0x30], rax	      1051	revision.c	FUNCTION_32	IF_1	CALL_1
0x2864	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1052	revision.c	FUNCTION_32	IF_1	IF_2
0x2869	     0xf8586010000	                           jne 0x4002a35	      1052	revision.c	FUNCTION_32	IF_1	IF_2
0x286f	      0xbf00000000	                              mov edi, 0	      1053	revision.c	FUNCTION_32	IF_1	CALL_2
0x2874	      0xb800000000	                              mov eax, 0	      1053	revision.c	FUNCTION_32	IF_1	CALL_2
0x2879	      0xe800000000	                          call 0x40028be	      1053	revision.c	FUNCTION_32	IF_1	CALL_2
0x287e	        0x488d45a8	                   lea rax, [rbp - 0x58]	      1057	revision.c	FUNCTION_32	WHILE_1	CALL_3
0x2882	          0x4889c7	                            mov rdi, rax	      1057	revision.c	FUNCTION_32	WHILE_1	CALL_3
0x2885	      0xe800000000	                          call 0x40028ca	      1057	revision.c	FUNCTION_32	WHILE_1	CALL_3
0x288a	        0x488945d8	             mov qword [rbp - 0x28], rax	      1057	revision.c	FUNCTION_32	WHILE_1	CALL_3
0x288e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1058	revision.c	FUNCTION_32	WHILE_1
0x2892	        0x488945e0	             mov qword [rbp - 0x20], rax	      1058	revision.c	FUNCTION_32	WHILE_1
0x2896	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1061	revision.c	FUNCTION_32	WHILE_1	IF_3
0x289a	        0x483945d8	            cmp qword [rbp - 0x28], rax 	      1061	revision.c	FUNCTION_32	WHILE_1	IF_3
0x289e	            0x7508	                           jne 0x40028e8	      1061	revision.c	FUNCTION_32	WHILE_1	IF_3
0x28a0	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1062	revision.c	FUNCTION_32	WHILE_1	IF_3
0x28a8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1064	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28ac	    0x488b80d00400	           mov rax, qword [rax + 0x4d0] 	      1064	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28b3	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      1064	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28b7	            0x7446	                            je 0x400293f	      1064	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1064	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28bd	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1064	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28c1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1064	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28c5	    0x488b80d00400	           mov rax, qword [rax + 0x4d0] 	      1064	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28cc	          0x4839c2	                            cmp rdx, rax	      1064	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28cf	            0x732e	                           jae 0x400293f	      1064	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28d1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1065	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28d5	            0x8b00	                    mov eax, dword [rax]	      1065	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28d7	          0xc1e804	                              shr eax, 4	      1065	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28da	      0x25ffffff07	                      and eax, 0x7ffffff	      1065	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28df	          0x83c802	                               or eax, 2	      1065	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28e2	            0x89c2	                            mov edx, eax	      1065	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28e4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1065	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28e8	    0x81e2ffffff07	                      and edx, 0x7ffffff	      1065	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28ee	            0x89d1	                            mov ecx, edx	      1065	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28f0	          0xc1e104	                              shl ecx, 4	      1065	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28f3	            0x8b10	                    mov edx, dword [rax]	      1065	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28f5	    0x81e20f000080	                     and edx, 0x8000000f	      1065	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28fb	             0x9ca	                             or edx, ecx	      1065	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28fd	            0x8910	                    mov dword [rax], edx	      1065	revision.c	FUNCTION_32	WHILE_1	IF_4
0x28ff	        0x488d55a8	                   lea rdx, [rbp - 0x58]	      1066	revision.c	FUNCTION_32	WHILE_1	IF_5	CALL_4
0x2903	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1066	revision.c	FUNCTION_32	WHILE_1	IF_5	CALL_4
0x2907	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1066	revision.c	FUNCTION_32	WHILE_1	IF_5	CALL_4
0x290b	      0xb900000000	                              mov ecx, 0	      1066	revision.c	FUNCTION_32	WHILE_1	IF_5	CALL_4
0x2910	          0x4889c7	                            mov rdi, rax	      1066	revision.c	FUNCTION_32	WHILE_1	IF_5	CALL_4
0x2913	      0xe874f3ffff	            call sym.add_parents_to_list	      1066	revision.c	FUNCTION_32	WHILE_1	IF_5	CALL_4
0x2918	            0x85c0	                           test eax, eax	      1066	revision.c	FUNCTION_32	WHILE_1	IF_5	CALL_4
0x291a	            0x790a	                           jns 0x4002966	      1066	revision.c	FUNCTION_32	WHILE_1	IF_5	CALL_4
0x291c	      0xb8ffffffff	                     mov eax, 0xffffffff	      1067	revision.c	FUNCTION_32	WHILE_1	IF_5
0x2921	      0xe9dc010000	                           jmp 0x4002b42	      1067	revision.c	FUNCTION_32	WHILE_1	IF_5
0x2926	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1068	revision.c	FUNCTION_32	WHILE_1	IF_6
0x292a	            0x8b00	                    mov eax, dword [rax]	      1068	revision.c	FUNCTION_32	WHILE_1	IF_6
0x292c	          0xc1e804	                              shr eax, 4	      1068	revision.c	FUNCTION_32	WHILE_1	IF_6
0x292f	      0x25ffffff07	                      and eax, 0x7ffffff	      1068	revision.c	FUNCTION_32	WHILE_1	IF_6
0x2934	          0x83e002	                              and eax, 2	      1068	revision.c	FUNCTION_32	WHILE_1	IF_6
0x2937	            0x85c0	                           test eax, eax	      1068	revision.c	FUNCTION_32	WHILE_1	IF_6
0x2939	            0x7435	                            je 0x40029b0	      1068	revision.c	FUNCTION_32	WHILE_1	IF_6
0x293b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1069	revision.c	FUNCTION_32	WHILE_1	IF_6	CALL_5
0x293f	          0x4889c7	                            mov rdi, rax	      1069	revision.c	FUNCTION_32	WHILE_1	IF_6	CALL_5
0x2942	      0xe800000000	                          call 0x4002987	      1069	revision.c	FUNCTION_32	WHILE_1	IF_6	CALL_5
0x2947	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1070	revision.c	FUNCTION_32	WHILE_1	IF_6	CALL_6
0x294b	        0x488d4db8	                   lea rcx, [rbp - 0x48]	      1070	revision.c	FUNCTION_32	WHILE_1	IF_6	CALL_6
0x294f	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	      1070	revision.c	FUNCTION_32	WHILE_1	IF_6	CALL_6
0x2952	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1070	revision.c	FUNCTION_32	WHILE_1	IF_6	CALL_6
0x2956	          0x4889c7	                            mov rdi, rax	      1070	revision.c	FUNCTION_32	WHILE_1	IF_6	CALL_6
0x2959	      0xe828faffff	              call sym.still_interesting	      1070	revision.c	FUNCTION_32	WHILE_1	IF_6	CALL_6
0x295e	          0x8945a4	             mov dword [rbp - 0x5c], eax	      1070	revision.c	FUNCTION_32	WHILE_1	IF_6	CALL_6
0x2961	        0x837da400	               cmp dword [rbp - 0x5c], 0	      1071	revision.c	FUNCTION_32	WHILE_1	IF_6	IF_7
0x2965	     0xf8499000000	                            je 0x4002a44	      1071	revision.c	FUNCTION_32	WHILE_1	IF_6	IF_7
0x296b	      0xe985000000	                           jmp 0x4002a35	      1072	revision.c	FUNCTION_32	WHILE_1	IF_6	IF_7
0x2970	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1075	revision.c	FUNCTION_32	WHILE_1	IF_8
0x2974	    0x488b80d80400	           mov rax, qword [rax + 0x4d8] 	      1075	revision.c	FUNCTION_32	WHILE_1	IF_8
0x297b	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      1075	revision.c	FUNCTION_32	WHILE_1	IF_8
0x297f	            0x741a	                            je 0x40029db	      1075	revision.c	FUNCTION_32	WHILE_1	IF_8
0x2981	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1075	revision.c	FUNCTION_32	WHILE_1	IF_8
0x2985	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1075	revision.c	FUNCTION_32	WHILE_1	IF_8
0x2989	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1075	revision.c	FUNCTION_32	WHILE_1	IF_8
0x298d	    0x488b80d80400	           mov rax, qword [rax + 0x4d8] 	      1075	revision.c	FUNCTION_32	WHILE_1	IF_8
0x2994	          0x4839c2	                            cmp rdx, rax	      1075	revision.c	FUNCTION_32	WHILE_1	IF_8
0x2997	            0x7602	                           jbe 0x40029db	      1075	revision.c	FUNCTION_32	WHILE_1	IF_8
0x2999	            0xeb5a	                           jmp 0x4002a35	      1076	revision.c	FUNCTION_32	WHILE_1	IF_8
0x299b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1077	revision.c	FUNCTION_32	WHILE_1
0x299f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1077	revision.c	FUNCTION_32	WHILE_1
0x29a3	        0x488945c0	             mov qword [rbp - 0x40], rax	      1077	revision.c	FUNCTION_32	WHILE_1
0x29a7	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1078	revision.c	FUNCTION_32	WHILE_1	CALL_7
0x29ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1078	revision.c	FUNCTION_32	WHILE_1	CALL_7
0x29af	          0x4889d6	                            mov rsi, rdx	      1078	revision.c	FUNCTION_32	WHILE_1	CALL_7
0x29b2	          0x4889c7	                            mov rdi, rax	      1078	revision.c	FUNCTION_32	WHILE_1	CALL_7
0x29b5	      0xe800000000	                          call 0x40029fa	      1078	revision.c	FUNCTION_32	WHILE_1	CALL_7
0x29ba	        0x4883c008	                              add rax, 8	      1078	revision.c	FUNCTION_32	WHILE_1	CALL_7
0x29be	        0x488945c8	             mov qword [rbp - 0x38], rax	      1078	revision.c	FUNCTION_32	WHILE_1	CALL_7
0x29c2	    0x488b05000000	            mov rax, qword [0x04002a09] 	      1080	revision.c	FUNCTION_32	WHILE_1
0x29c9	        0x488945e8	             mov qword [rbp - 0x18], rax	      1080	revision.c	FUNCTION_32	WHILE_1
0x29cd	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1081	revision.c	FUNCTION_32	WHILE_1	IF_9
0x29d2	            0x7502	                           jne 0x4002a16	      1081	revision.c	FUNCTION_32	WHILE_1	IF_9
0x29d4	            0xeb1f	                           jmp 0x4002a35	      1082	revision.c	FUNCTION_32	WHILE_1	IF_9
0x29d6	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1084	revision.c	FUNCTION_32	WHILE_1	CALL_8
0x29da	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1084	revision.c	FUNCTION_32	WHILE_1	CALL_8
0x29de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1084	revision.c	FUNCTION_32	WHILE_1	CALL_8
0x29e2	          0x4889ce	                            mov rsi, rcx	      1084	revision.c	FUNCTION_32	WHILE_1	CALL_8
0x29e5	          0x4889d7	                            mov rdi, rdx	      1084	revision.c	FUNCTION_32	WHILE_1	CALL_8
0x29e8	            0xffd0	                                call rax	      1084	revision.c	FUNCTION_32	WHILE_1	CALL_8
0x29ea	    0x48c705000000	               mov qword [0x04002a35], 0	      1085	revision.c	FUNCTION_32	WHILE_1
0x29f5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1056	revision.c	FUNCTION_32	WHILE_1
0x29f9	          0x4885c0	                           test rax, rax	      1056	revision.c	FUNCTION_32	WHILE_1
0x29fc	     0xf857cfeffff	                           jne 0x40028be	      1056	revision.c	FUNCTION_32	WHILE_1
0x2a02	            0xeb01	                           jmp 0x4002a45	      1056	revision.c	FUNCTION_32	WHILE_1
0x2a04	              0x90	                                     nop	      1073	revision.c	FUNCTION_32	WHILE_1	IF_6
0x2a05	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1087	revision.c	FUNCTION_32	IF_10
0x2a09	         0xfb64078	           movzx eax, byte [rax + 0x78] 	      1087	revision.c	FUNCTION_32	IF_10
0x2a0d	          0x83e001	                              and eax, 1	      1087	revision.c	FUNCTION_32	IF_10
0x2a10	            0x84c0	                             test al, al	      1087	revision.c	FUNCTION_32	IF_10
0x2a12	            0x750f	                           jne 0x4002a63	      1087	revision.c	FUNCTION_32	IF_10
0x2a14	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1087	revision.c	FUNCTION_32	IF_10
0x2a18	         0xfb64078	           movzx eax, byte [rax + 0x78] 	      1087	revision.c	FUNCTION_32	IF_10
0x2a1c	          0x83e002	                              and eax, 2	      1087	revision.c	FUNCTION_32	IF_10
0x2a1f	            0x84c0	                             test al, al	      1087	revision.c	FUNCTION_32	IF_10
0x2a21	            0x7413	                            je 0x4002a76	      1087	revision.c	FUNCTION_32	IF_10
0x2a23	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1088	revision.c	FUNCTION_32	CALL_9
0x2a27	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1088	revision.c	FUNCTION_32	CALL_9
0x2a2b	          0x4889d6	                            mov rsi, rdx	      1088	revision.c	FUNCTION_32	CALL_9
0x2a2e	          0x4889c7	                            mov rdi, rax	      1088	revision.c	FUNCTION_32	CALL_9
0x2a31	      0xe8fff5ffff	               call sym.cherry_pick_list	      1088	revision.c	FUNCTION_32	CALL_9
0x2a36	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1090	revision.c	FUNCTION_32	IF_11
0x2a3a	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      1090	revision.c	FUNCTION_32	IF_11
0x2a3e	          0x83e001	                              and eax, 1	      1090	revision.c	FUNCTION_32	IF_11
0x2a41	            0x84c0	                             test al, al	      1090	revision.c	FUNCTION_32	IF_11
0x2a43	            0x750f	                           jne 0x4002a94	      1090	revision.c	FUNCTION_32	IF_11
0x2a45	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1090	revision.c	FUNCTION_32	IF_11
0x2a49	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      1090	revision.c	FUNCTION_32	IF_11
0x2a4d	          0x83e002	                              and eax, 2	      1090	revision.c	FUNCTION_32	IF_11
0x2a50	            0x84c0	                             test al, al	      1090	revision.c	FUNCTION_32	IF_11
0x2a52	            0x7413	                            je 0x4002aa7	      1090	revision.c	FUNCTION_32	IF_11
0x2a54	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1091	revision.c	FUNCTION_32	CALL_10
0x2a58	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1091	revision.c	FUNCTION_32	CALL_10
0x2a5c	          0x4889d6	                            mov rsi, rdx	      1091	revision.c	FUNCTION_32	CALL_10
0x2a5f	          0x4889c7	                            mov rdi, rax	      1091	revision.c	FUNCTION_32	CALL_10
0x2a62	      0xe8acfcffff	               call sym.limit_left_right	      1091	revision.c	FUNCTION_32	CALL_10
0x2a67	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1093	revision.c	FUNCTION_32	IF_12
0x2a6c	            0x741f	                            je 0x4002acd	      1093	revision.c	FUNCTION_32	IF_12
0x2a6e	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1094	revision.c	FUNCTION_32	IF_12	CALL_11
0x2a72	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1094	revision.c	FUNCTION_32	IF_12	CALL_11
0x2a76	          0x4889d6	                            mov rsi, rdx	      1094	revision.c	FUNCTION_32	IF_12	CALL_11
0x2a79	          0x4889c7	                            mov rdi, rax	      1094	revision.c	FUNCTION_32	IF_12	CALL_11
0x2a7c	      0xe868f9ffff	              call sym.limit_to_ancestry	      1094	revision.c	FUNCTION_32	IF_12	CALL_11
0x2a81	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1095	revision.c	FUNCTION_32	IF_12	CALL_12
0x2a85	          0x4889c7	                            mov rdi, rax	      1095	revision.c	FUNCTION_32	IF_12	CALL_12
0x2a88	      0xe800000000	                          call 0x4002acd	      1095	revision.c	FUNCTION_32	IF_12	CALL_12
0x2a8d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1102	revision.c	FUNCTION_32	IF_13	CALL_13
0x2a91	          0x4889c7	                            mov rdi, rax	      1102	revision.c	FUNCTION_32	IF_13	CALL_13
0x2a94	      0xe827edffff	 call sym.limiting_can_increase_treesame	      1102	revision.c	FUNCTION_32	IF_13	CALL_13
0x2a99	            0x85c0	                           test eax, eax	      1102	revision.c	FUNCTION_32	IF_13	CALL_13
0x2a9b	            0x7455	                            je 0x4002b32	      1102	revision.c	FUNCTION_32	IF_13	CALL_13
0x2a9d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1103	revision.c	FUNCTION_32	IF_13	FOR_1
0x2aa1	        0x488945a8	             mov qword [rbp - 0x58], rax	      1103	revision.c	FUNCTION_32	IF_13	FOR_1
0x2aa5	            0xeb42	                           jmp 0x4002b29	      1103	revision.c	FUNCTION_32	IF_13	FOR_1
0x2aa7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1104	revision.c	FUNCTION_32	IF_13	FOR_1
0x2aab	          0x488b00	                    mov rax, qword [rax]	      1104	revision.c	FUNCTION_32	IF_13	FOR_1
0x2aae	        0x488945f0	             mov qword [rbp - 0x10], rax	      1104	revision.c	FUNCTION_32	IF_13	FOR_1
0x2ab2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1105	revision.c	FUNCTION_32	IF_13	FOR_1	IF_14
0x2ab6	            0x8b00	                    mov eax, dword [rax]	      1105	revision.c	FUNCTION_32	IF_13	FOR_1	IF_14
0x2ab8	          0xc1e804	                              shr eax, 4	      1105	revision.c	FUNCTION_32	IF_13	FOR_1	IF_14
0x2abb	      0x25ffffff07	                      and eax, 0x7ffffff	      1105	revision.c	FUNCTION_32	IF_13	FOR_1	IF_14
0x2ac0	          0x83e006	                              and eax, 6	      1105	revision.c	FUNCTION_32	IF_13	FOR_1	IF_14
0x2ac3	            0x85c0	                           test eax, eax	      1105	revision.c	FUNCTION_32	IF_13	FOR_1	IF_14
0x2ac5	            0x7515	                           jne 0x4002b1c	      1105	revision.c	FUNCTION_32	IF_13	FOR_1	IF_14
0x2ac7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1107	revision.c	FUNCTION_32	IF_13	FOR_1	CALL_14
0x2acb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1107	revision.c	FUNCTION_32	IF_13	FOR_1	CALL_14
0x2acf	          0x4889d6	                            mov rsi, rdx	      1107	revision.c	FUNCTION_32	IF_13	FOR_1	CALL_14
0x2ad2	          0x4889c7	                            mov rdi, rax	      1107	revision.c	FUNCTION_32	IF_13	FOR_1	CALL_14
0x2ad5	      0xe855ebffff	                call sym.update_treesame	      1107	revision.c	FUNCTION_32	IF_13	FOR_1	CALL_14
0x2ada	            0xeb01	                           jmp 0x4002b1d	      1107	revision.c	FUNCTION_32	IF_13	FOR_1	CALL_14
0x2adc	              0x90	                                     nop	      1106	revision.c	FUNCTION_32	IF_13	FOR_1	IF_14
0x2add	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1103	revision.c	FUNCTION_32	IF_13	FOR_1
0x2ae1	        0x488b4008	                mov rax, qword [rax + 8]	      1103	revision.c	FUNCTION_32	IF_13	FOR_1
0x2ae5	        0x488945a8	             mov qword [rbp - 0x58], rax	      1103	revision.c	FUNCTION_32	IF_13	FOR_1
0x2ae9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1103	revision.c	FUNCTION_32	IF_13	FOR_1
0x2aed	          0x4885c0	                           test rax, rax	      1103	revision.c	FUNCTION_32	IF_13	FOR_1
0x2af0	            0x75b5	                           jne 0x4002ae7	      1103	revision.c	FUNCTION_32	IF_13	FOR_1
0x2af2	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1110	revision.c	FUNCTION_32
0x2af6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1110	revision.c	FUNCTION_32
0x2afa	          0x488910	                    mov qword [rax], rdx	      1110	revision.c	FUNCTION_32
0x2afd	      0xb800000000	                              mov eax, 0	      1111	revision.c	FUNCTION_32
0x2b02	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1112	revision.c	FUNCTION_32
0x2b06	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1112	revision.c	FUNCTION_32
0x2b0f	            0x7405	                            je 0x4002b56	      1112	revision.c	FUNCTION_32
0x2b11	      0xe800000000	                          call 0x4002b56	      1112	revision.c	FUNCTION_32
0x2b16	              0xc9	                                   leave	      1112	revision.c	FUNCTION_32
0x2b17	              0xc3	                                     ret	      1112	revision.c	FUNCTION_32
track_linear	FOR,1:functions,0:WHILE,0:CALL,3:IF,4:ELSE,1:DO,0:SWITCH,0	89
0x9026	              0x55	                                push rbp	      3206	revision.c	FUNCTION_94
0x9027	          0x4889e5	                            mov rbp, rsp	      3206	revision.c	FUNCTION_94
0x902a	        0x4883ec20	                           sub rsp, 0x20	      3206	revision.c	FUNCTION_94
0x902e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3206	revision.c	FUNCTION_94
0x9032	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3206	revision.c	FUNCTION_94
0x9036	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3207	revision.c	FUNCTION_94	IF_1
0x903a	         0xfb6407c	           movzx eax, byte [rax + 0x7c] 	      3207	revision.c	FUNCTION_94	IF_1
0x903e	          0x83e002	                              and eax, 2	      3207	revision.c	FUNCTION_94	IF_1
0x9041	            0x84c0	                             test al, al	      3207	revision.c	FUNCTION_94	IF_1
0x9043	            0x741e	                            je 0x40090a3	      3207	revision.c	FUNCTION_94	IF_1
0x9045	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3208	revision.c	FUNCTION_94	IF_1
0x9049	         0xfb6507c	           movzx edx, byte [rax + 0x7c] 	      3208	revision.c	FUNCTION_94	IF_1
0x904d	          0x83ca04	                               or edx, 4	      3208	revision.c	FUNCTION_94	IF_1
0x9050	          0x88507c	               mov byte [rax + 0x7c], dl	      3208	revision.c	FUNCTION_94	IF_1
0x9053	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3209	revision.c	FUNCTION_94	IF_1
0x9057	         0xfb6507c	           movzx edx, byte [rax + 0x7c] 	      3209	revision.c	FUNCTION_94	IF_1
0x905b	          0x83e2fd	                     and edx, 0xfffffffd	      3209	revision.c	FUNCTION_94	IF_1
0x905e	          0x88507c	               mov byte [rax + 0x7c], dl	      3209	revision.c	FUNCTION_94	IF_1
0x9061	            0xeb74	                           jmp 0x4009117	      3209	revision.c	FUNCTION_94	IF_1
0x9063	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3212	revision.c	FUNCTION_94	ELSE_1	FOR_1
0x9067	    0x488b80a00800	           mov rax, qword [rax + 0x8a0] 	      3212	revision.c	FUNCTION_94	ELSE_1	FOR_1
0x906e	        0x488945f8	                mov qword [rbp - 8], rax	      3212	revision.c	FUNCTION_94	ELSE_1	FOR_1
0x9072	            0xeb3a	                           jmp 0x40090ee	      3212	revision.c	FUNCTION_94	ELSE_1	FOR_1
0x9074	        0x488b45f8	                mov rax, qword [rbp - 8]	      3213	revision.c	FUNCTION_94	ELSE_1	FOR_1	IF_2
0x9078	          0x488b00	                    mov rax, qword [rax]	      3213	revision.c	FUNCTION_94	ELSE_1	FOR_1	IF_2
0x907b	          0x4885c0	                           test rax, rax	      3213	revision.c	FUNCTION_94	ELSE_1	FOR_1	IF_2
0x907e	            0x7435	                            je 0x40090f5	      3213	revision.c	FUNCTION_94	ELSE_1	FOR_1	IF_2
0x9080	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3214	revision.c	FUNCTION_94	ELSE_1	FOR_1	IF_2	CALL_1
0x9084	        0x488d5004	                      lea rdx, [rax + 4]	      3214	revision.c	FUNCTION_94	ELSE_1	FOR_1	IF_2	CALL_1
0x9088	        0x488b45f8	                mov rax, qword [rbp - 8]	      3214	revision.c	FUNCTION_94	ELSE_1	FOR_1	IF_2	CALL_1
0x908c	          0x488b00	                    mov rax, qword [rax]	      3214	revision.c	FUNCTION_94	ELSE_1	FOR_1	IF_2	CALL_1
0x908f	        0x4883c004	                              add rax, 4	      3214	revision.c	FUNCTION_94	ELSE_1	FOR_1	IF_2	CALL_1
0x9093	          0x4889d6	                            mov rsi, rdx	      3214	revision.c	FUNCTION_94	ELSE_1	FOR_1	IF_2	CALL_1
0x9096	          0x4889c7	                            mov rdi, rax	      3214	revision.c	FUNCTION_94	ELSE_1	FOR_1	IF_2	CALL_1
0x9099	      0xe8bb73ffff	                         call sym.oidcmp	      3214	revision.c	FUNCTION_94	ELSE_1	FOR_1	IF_2	CALL_1
0x909e	            0x85c0	                           test eax, eax	      3213	revision.c	FUNCTION_94	ELSE_1	FOR_1	IF_2
0x90a0	            0x7413	                            je 0x40090f5	      3213	revision.c	FUNCTION_94	ELSE_1	FOR_1	IF_2
0x90a2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3212	revision.c	FUNCTION_94	ELSE_1	FOR_1
0x90a6	        0x488b4008	                mov rax, qword [rax + 8]	      3212	revision.c	FUNCTION_94	ELSE_1	FOR_1
0x90aa	        0x488945f8	                mov qword [rbp - 8], rax	      3212	revision.c	FUNCTION_94	ELSE_1	FOR_1
0x90ae	      0x48837df800	                  cmp qword [rbp - 8], 0	      3212	revision.c	FUNCTION_94	ELSE_1	FOR_1
0x90b3	            0x75bf	                           jne 0x40090b4	      3212	revision.c	FUNCTION_94	ELSE_1	FOR_1
0x90b5	      0x48837df800	                  cmp qword [rbp - 8], 0	      3216	revision.c	FUNCTION_94	ELSE_1
0x90ba	           0xf95c2	                                setne dl	      3216	revision.c	FUNCTION_94	ELSE_1
0x90bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3216	revision.c	FUNCTION_94	ELSE_1
0x90c1	          0x83e201	                              and edx, 1	      3216	revision.c	FUNCTION_94	ELSE_1
0x90c4	    0x8d0c95000000	                        lea ecx, [rdx*4]	      3216	revision.c	FUNCTION_94	ELSE_1
0x90cb	         0xfb6507c	           movzx edx, byte [rax + 0x7c] 	      3216	revision.c	FUNCTION_94	ELSE_1
0x90cf	          0x83e2fb	                     and edx, 0xfffffffb	      3216	revision.c	FUNCTION_94	ELSE_1
0x90d2	             0x9ca	                             or edx, ecx	      3216	revision.c	FUNCTION_94	ELSE_1
0x90d4	          0x88507c	               mov byte [rax + 0x7c], dl	      3216	revision.c	FUNCTION_94	ELSE_1
0x90d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3218	revision.c	FUNCTION_94	IF_3
0x90db	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      3218	revision.c	FUNCTION_94	IF_3
0x90df	          0x83e040	                           and eax, 0x40	      3218	revision.c	FUNCTION_94	IF_3
0x90e2	            0x84c0	                             test al, al	      3218	revision.c	FUNCTION_94	IF_3
0x90e4	            0x743f	                            je 0x4009165	      3218	revision.c	FUNCTION_94	IF_3
0x90e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3219	revision.c	FUNCTION_94	IF_3	IF_4
0x90ea	         0xfb6407c	           movzx eax, byte [rax + 0x7c] 	      3219	revision.c	FUNCTION_94	IF_3	IF_4
0x90ee	          0x83e004	                              and eax, 4	      3219	revision.c	FUNCTION_94	IF_3	IF_4
0x90f1	            0x84c0	                             test al, al	      3219	revision.c	FUNCTION_94	IF_3	IF_4
0x90f3	            0x7430	                            je 0x4009165	      3219	revision.c	FUNCTION_94	IF_3	IF_4
0x90f5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3220	revision.c	FUNCTION_94	IF_3	IF_4
0x90f9	            0x8b00	                    mov eax, dword [rax]	      3220	revision.c	FUNCTION_94	IF_3	IF_4
0x90fb	          0xc1e804	                              shr eax, 4	      3220	revision.c	FUNCTION_94	IF_3	IF_4
0x90fe	      0x25ffffff07	                      and eax, 0x7ffffff	      3220	revision.c	FUNCTION_94	IF_3	IF_4
0x9103	       0xd00000004	           or eax, obj.show_early_output	      3220	revision.c	FUNCTION_94	IF_3	IF_4
0x9108	            0x89c2	                            mov edx, eax	      3220	revision.c	FUNCTION_94	IF_3	IF_4
0x910a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3220	revision.c	FUNCTION_94	IF_3	IF_4
0x910e	    0x81e2ffffff07	                      and edx, 0x7ffffff	      3220	revision.c	FUNCTION_94	IF_3	IF_4
0x9114	            0x89d1	                            mov ecx, edx	      3220	revision.c	FUNCTION_94	IF_3	IF_4
0x9116	          0xc1e104	                              shl ecx, 4	      3220	revision.c	FUNCTION_94	IF_3	IF_4
0x9119	            0x8b10	                    mov edx, dword [rax]	      3220	revision.c	FUNCTION_94	IF_3	IF_4
0x911b	    0x81e20f000080	                     and edx, 0x8000000f	      3220	revision.c	FUNCTION_94	IF_3	IF_4
0x9121	             0x9ca	                             or edx, ecx	      3220	revision.c	FUNCTION_94	IF_3	IF_4
0x9123	            0x8910	                    mov dword [rax], edx	      3220	revision.c	FUNCTION_94	IF_3	IF_4
0x9125	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3222	revision.c	FUNCTION_94	CALL_2
0x9129	    0x488b80a00800	           mov rax, qword [rax + 0x8a0] 	      3222	revision.c	FUNCTION_94	CALL_2
0x9130	          0x4889c7	                            mov rdi, rax	      3222	revision.c	FUNCTION_94	CALL_2
0x9133	      0xe800000000	                          call 0x4009178	      3222	revision.c	FUNCTION_94	CALL_2
0x9138	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3223	revision.c	FUNCTION_94	CALL_3
0x913c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3223	revision.c	FUNCTION_94	CALL_3
0x9140	          0x4889c7	                            mov rdi, rax	      3223	revision.c	FUNCTION_94	CALL_3
0x9143	      0xe800000000	                          call 0x4009188	      3223	revision.c	FUNCTION_94	CALL_3
0x9148	          0x4889c2	                            mov rdx, rax	      3223	revision.c	FUNCTION_94	CALL_3
0x914b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3223	revision.c	FUNCTION_94	CALL_3
0x914f	    0x488990a00800	            mov qword [rax + 0x8a0], rdx	      3223	revision.c	FUNCTION_94	CALL_3
0x9156	              0x90	                                     nop	      3224	revision.c	FUNCTION_94
0x9157	              0xc9	                                   leave	      3224	revision.c	FUNCTION_94
0x9158	              0xc3	                                     ret	      3224	revision.c	FUNCTION_94
limit_left_right	FOR,1:functions,0:WHILE,0:CALL,0:IF,3:ELSE,1:DO,0:SWITCH,0	66
0x2713	              0x55	                                push rbp	      1025	revision.c	FUNCTION_31
0x2714	          0x4889e5	                            mov rbp, rsp	      1025	revision.c	FUNCTION_31
0x2717	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1025	revision.c	FUNCTION_31
0x271b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1025	revision.c	FUNCTION_31
0x271f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1028	revision.c	FUNCTION_31	FOR_1
0x2723	        0x488945f0	             mov qword [rbp - 0x10], rax	      1028	revision.c	FUNCTION_31	FOR_1
0x2727	      0xe9b2000000	                           jmp 0x400281e	      1028	revision.c	FUNCTION_31	FOR_1
0x272c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1029	revision.c	FUNCTION_31	FOR_1
0x2730	          0x488b00	                    mov rax, qword [rax]	      1029	revision.c	FUNCTION_31	FOR_1
0x2733	        0x488945f8	                mov qword [rbp - 8], rax	      1029	revision.c	FUNCTION_31	FOR_1
0x2737	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1031	revision.c	FUNCTION_31	FOR_1	IF_1
0x273b	         0xfb64077	           movzx eax, byte [rax + 0x77] 	      1031	revision.c	FUNCTION_31	FOR_1	IF_1
0x273f	          0x83e002	                              and eax, 2	      1031	revision.c	FUNCTION_31	FOR_1	IF_1
0x2742	            0x84c0	                             test al, al	      1031	revision.c	FUNCTION_31	FOR_1	IF_1
0x2744	            0x7447	                            je 0x40027cd	      1031	revision.c	FUNCTION_31	FOR_1	IF_1
0x2746	        0x488b45f8	                mov rax, qword [rbp - 8]	      1032	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x274a	            0x8b00	                    mov eax, dword [rax]	      1032	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x274c	          0xc1e804	                              shr eax, 4	      1032	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x274f	      0x25ffffff07	                      and eax, 0x7ffffff	      1032	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x2754	      0x2500010000	                          and eax, 0x100	      1032	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x2759	            0x85c0	                           test eax, eax	      1032	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x275b	            0x7475	                            je 0x4002812	      1032	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x275d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1033	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x2761	            0x8b00	                    mov eax, dword [rax]	      1033	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x2763	          0xc1e804	                              shr eax, 4	      1033	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x2766	      0x25ffffff07	                      and eax, 0x7ffffff	      1033	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x276b	          0x83c808	                               or eax, 8	      1033	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x276e	            0x89c2	                            mov edx, eax	      1033	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x2770	        0x488b45f8	                mov rax, qword [rbp - 8]	      1033	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x2774	    0x81e2ffffff07	                      and edx, 0x7ffffff	      1033	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x277a	            0x89d1	                            mov ecx, edx	      1033	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x277c	          0xc1e104	                              shl ecx, 4	      1033	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x277f	            0x8b10	                    mov edx, dword [rax]	      1033	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x2781	    0x81e20f000080	                     and edx, 0x8000000f	      1033	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x2787	             0x9ca	                             or edx, ecx	      1033	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x2789	            0x8910	                    mov dword [rax], edx	      1033	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x278b	            0xeb45	                           jmp 0x4002812	      1033	revision.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x278d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1035	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x2791	            0x8b00	                    mov eax, dword [rax]	      1035	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x2793	          0xc1e804	                              shr eax, 4	      1035	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x2796	      0x25ffffff07	                      and eax, 0x7ffffff	      1035	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x279b	      0x2500010000	                          and eax, 0x100	      1035	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27a0	            0x85c0	                           test eax, eax	      1035	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27a2	            0x752e	                           jne 0x4002812	      1035	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27a4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1036	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27a8	            0x8b00	                    mov eax, dword [rax]	      1036	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27aa	          0xc1e804	                              shr eax, 4	      1036	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27ad	      0x25ffffff07	                      and eax, 0x7ffffff	      1036	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27b2	          0x83c808	                               or eax, 8	      1036	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27b5	            0x89c2	                            mov edx, eax	      1036	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1036	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27bb	    0x81e2ffffff07	                      and edx, 0x7ffffff	      1036	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27c1	            0x89d1	                            mov ecx, edx	      1036	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27c3	          0xc1e104	                              shl ecx, 4	      1036	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27c6	            0x8b10	                    mov edx, dword [rax]	      1036	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27c8	    0x81e20f000080	                     and edx, 0x8000000f	      1036	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27ce	             0x9ca	                             or edx, ecx	      1036	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27d0	            0x8910	                    mov dword [rax], edx	      1036	revision.c	FUNCTION_31	FOR_1	ELSE_1	IF_3
0x27d2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1028	revision.c	FUNCTION_31	FOR_1
0x27d6	        0x488b4008	                mov rax, qword [rax + 8]	      1028	revision.c	FUNCTION_31	FOR_1
0x27da	        0x488945f0	             mov qword [rbp - 0x10], rax	      1028	revision.c	FUNCTION_31	FOR_1
0x27de	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1028	revision.c	FUNCTION_31	FOR_1
0x27e3	     0xf8543ffffff	                           jne 0x400276c	      1028	revision.c	FUNCTION_31	FOR_1
0x27e9	              0x90	                                     nop	      1038	revision.c	FUNCTION_31
0x27ea	              0x5d	                                 pop rbp	      1038	revision.c	FUNCTION_31
0x27eb	              0xc3	                                     ret	      1038	revision.c	FUNCTION_31
get_saved_parents	FOR,0:functions,0:WHILE,0:CALL,1:IF,2:ELSE,0:DO,0:SWITCH,0	27
0x8f23	              0x55	                                push rbp	      3173	revision.c	FUNCTION_92
0x8f24	          0x4889e5	                            mov rbp, rsp	      3173	revision.c	FUNCTION_92
0x8f27	        0x4883ec20	                           sub rsp, 0x20	      3173	revision.c	FUNCTION_92
0x8f2b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3173	revision.c	FUNCTION_92
0x8f2f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3173	revision.c	FUNCTION_92
0x8f33	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3176	revision.c	FUNCTION_92	IF_1
0x8f37	    0x488b80980800	           mov rax, qword [rax + 0x898] 	      3176	revision.c	FUNCTION_92	IF_1
0x8f3e	          0x4885c0	                           test rax, rax	      3176	revision.c	FUNCTION_92	IF_1
0x8f41	            0x750a	                           jne 0x4008f8d	      3176	revision.c	FUNCTION_92	IF_1
0x8f43	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3177	revision.c	FUNCTION_92	IF_1
0x8f47	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3177	revision.c	FUNCTION_92	IF_1
0x8f4b	            0xeb33	                           jmp 0x4008fc0	      3177	revision.c	FUNCTION_92	IF_1
0x8f4d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3179	revision.c	FUNCTION_92	CALL_1
0x8f51	    0x488b80980800	           mov rax, qword [rax + 0x898] 	      3179	revision.c	FUNCTION_92	CALL_1
0x8f58	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3179	revision.c	FUNCTION_92	CALL_1
0x8f5c	          0x4889d6	                            mov rsi, rdx	      3179	revision.c	FUNCTION_92	CALL_1
0x8f5f	          0x4889c7	                            mov rdi, rax	      3179	revision.c	FUNCTION_92	CALL_1
0x8f62	      0xe888feffff	               call sym.saved_parents_at	      3179	revision.c	FUNCTION_92	CALL_1
0x8f67	          0x488b00	                    mov rax, qword [rax]	      3179	revision.c	FUNCTION_92	CALL_1
0x8f6a	        0x488945f8	                mov qword [rbp - 8], rax	      3179	revision.c	FUNCTION_92	CALL_1
0x8f6e	      0x48837df8ff	 cmp qword [rbp - 8], 0xffffffffffffffff	      3180	revision.c	FUNCTION_92	IF_2
0x8f73	            0x7507	                           jne 0x4008fbc	      3180	revision.c	FUNCTION_92	IF_2
0x8f75	      0xb800000000	                              mov eax, 0	      3181	revision.c	FUNCTION_92	IF_2
0x8f7a	            0xeb04	                           jmp 0x4008fc0	      3181	revision.c	FUNCTION_92	IF_2
0x8f7c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3182	revision.c	FUNCTION_92
0x8f80	              0xc9	                                   leave	      3183	revision.c	FUNCTION_92
0x8f81	              0xc3	                                     ret	      3183	revision.c	FUNCTION_92
gc_boundary	FOR,0:functions,0:WHILE,0:CALL,1:IF,1:ELSE,0:DO,0:SWITCH,0	18
0x934e	              0x55	                                push rbp	      3289	revision.c	FUNCTION_97
0x934f	          0x4889e5	                            mov rbp, rsp	      3289	revision.c	FUNCTION_97
0x9352	        0x4883ec10	                           sub rsp, 0x10	      3289	revision.c	FUNCTION_97
0x9356	        0x48897df8	                mov qword [rbp - 8], rdi	      3289	revision.c	FUNCTION_97
0x935a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3290	revision.c	FUNCTION_97	IF_1
0x935e	            0x8b10	                    mov edx, dword [rax]	      3290	revision.c	FUNCTION_97	IF_1
0x9360	        0x488b45f8	                mov rax, qword [rbp - 8]	      3290	revision.c	FUNCTION_97	IF_1
0x9364	          0x8b4004	                mov eax, dword [rax + 4]	      3290	revision.c	FUNCTION_97	IF_1
0x9367	            0x39c2	                            cmp edx, eax	      3290	revision.c	FUNCTION_97	IF_1
0x9369	            0x7516	                           jne 0x40093c1	      3290	revision.c	FUNCTION_97	IF_1
0x936b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3291	revision.c	FUNCTION_97	CALL_1
0x936f	      0xba00000000	                              mov edx, 0	      3291	revision.c	FUNCTION_97	CALL_1
0x9374	      0xbe00000000	                              mov esi, 0	      3291	revision.c	FUNCTION_97	CALL_1
0x9379	          0x4889c7	                            mov rdi, rax	      3291	revision.c	FUNCTION_97	CALL_1
0x937c	      0xe800000000	                          call 0x40093c1	      3291	revision.c	FUNCTION_97	CALL_1
0x9381	              0x90	                                     nop	      3292	revision.c	FUNCTION_97
0x9382	              0xc9	                                   leave	      3292	revision.c	FUNCTION_97
0x9383	              0xc3	                                     ret	      3292	revision.c	FUNCTION_97
create_boundary_commit_list	FOR,1:functions,0:WHILE,0:CALL,3:IF,4:ELSE,0:DO,0:SWITCH,0	84
0x9384	              0x55	                                push rbp	      3295	revision.c	FUNCTION_98
0x9385	          0x4889e5	                            mov rbp, rsp	      3295	revision.c	FUNCTION_98
0x9388	        0x4883ec30	                           sub rsp, 0x30	      3295	revision.c	FUNCTION_98
0x938c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3295	revision.c	FUNCTION_98
0x9390	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3298	revision.c	FUNCTION_98
0x9394	        0x4883c018	                           add rax, 0x18	      3298	revision.c	FUNCTION_98
0x9398	        0x488945e8	             mov qword [rbp - 0x18], rax	      3298	revision.c	FUNCTION_98
0x939c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3299	revision.c	FUNCTION_98
0x93a0	        0x488b4008	                mov rax, qword [rax + 8]	      3299	revision.c	FUNCTION_98
0x93a4	        0x488945f0	             mov qword [rbp - 0x10], rax	      3299	revision.c	FUNCTION_98
0x93a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3307	revision.c	FUNCTION_98	IF_1
0x93ac	          0x488b00	                    mov rax, qword [rax]	      3307	revision.c	FUNCTION_98	IF_1
0x93af	          0x4885c0	                           test rax, rax	      3307	revision.c	FUNCTION_98	IF_1
0x93b2	            0x741a	                            je 0x400940e	      3307	revision.c	FUNCTION_98	IF_1
0x93b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3308	revision.c	FUNCTION_98	IF_1	CALL_1
0x93b8	          0x488b00	                    mov rax, qword [rax]	      3308	revision.c	FUNCTION_98	IF_1	CALL_1
0x93bb	          0x4889c7	                            mov rdi, rax	      3308	revision.c	FUNCTION_98	IF_1	CALL_1
0x93be	      0xe800000000	                          call 0x4009403	      3308	revision.c	FUNCTION_98	IF_1	CALL_1
0x93c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3309	revision.c	FUNCTION_98	IF_1
0x93c7	    0x48c700000000	                      mov qword [rax], 0	      3309	revision.c	FUNCTION_98	IF_1
0x93ce	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      3316	revision.c	FUNCTION_98	FOR_1
0x93d5	      0xe997000000	                           jmp 0x40094b1	      3316	revision.c	FUNCTION_98	FOR_1
0x93da	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3317	revision.c	FUNCTION_98	FOR_1
0x93dd	        0x48c1e005	                              shl rax, 5	      3317	revision.c	FUNCTION_98	FOR_1
0x93e1	          0x4889c2	                            mov rdx, rax	      3317	revision.c	FUNCTION_98	FOR_1
0x93e4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3317	revision.c	FUNCTION_98	FOR_1
0x93e8	          0x4801d0	                            add rax, rdx	      3317	revision.c	FUNCTION_98	FOR_1
0x93eb	          0x488b00	                    mov rax, qword [rax]	      3317	revision.c	FUNCTION_98	FOR_1
0x93ee	        0x488945f8	                mov qword [rbp - 8], rax	      3317	revision.c	FUNCTION_98	FOR_1
0x93f2	      0x48837df800	                  cmp qword [rbp - 8], 0	      3318	revision.c	FUNCTION_98	FOR_1	IF_2
0x93f7	            0x746d	                            je 0x40094a6	      3318	revision.c	FUNCTION_98	FOR_1	IF_2
0x93f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3320	revision.c	FUNCTION_98	FOR_1	IF_3
0x93fd	            0x8b00	                    mov eax, dword [rax]	      3320	revision.c	FUNCTION_98	FOR_1	IF_3
0x93ff	          0xc1e804	                              shr eax, 4	      3320	revision.c	FUNCTION_98	FOR_1	IF_3
0x9402	      0x25ffffff07	                      and eax, 0x7ffffff	      3320	revision.c	FUNCTION_98	FOR_1	IF_3
0x9407	          0x83e040	                           and eax, 0x40	      3320	revision.c	FUNCTION_98	FOR_1	IF_3
0x940a	            0x85c0	                           test eax, eax	      3320	revision.c	FUNCTION_98	FOR_1	IF_3
0x940c	            0x745b	                            je 0x40094a9	      3320	revision.c	FUNCTION_98	FOR_1	IF_3
0x940e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3322	revision.c	FUNCTION_98	FOR_1	IF_4
0x9412	            0x8b00	                    mov eax, dword [rax]	      3322	revision.c	FUNCTION_98	FOR_1	IF_4
0x9414	          0xc1e804	                              shr eax, 4	      3322	revision.c	FUNCTION_98	FOR_1	IF_4
0x9417	      0x25ffffff07	                      and eax, 0x7ffffff	      3322	revision.c	FUNCTION_98	FOR_1	IF_4
0x941c	          0x83e028	                           and eax, 0x28	      3322	revision.c	FUNCTION_98	FOR_1	IF_4
0x941f	            0x85c0	                           test eax, eax	      3322	revision.c	FUNCTION_98	FOR_1	IF_4
0x9421	            0x7549	                           jne 0x40094ac	      3322	revision.c	FUNCTION_98	FOR_1	IF_4
0x9423	        0x488b45f8	                mov rax, qword [rbp - 8]	      3324	revision.c	FUNCTION_98	FOR_1
0x9427	            0x8b00	                    mov eax, dword [rax]	      3324	revision.c	FUNCTION_98	FOR_1
0x9429	          0xc1e804	                              shr eax, 4	      3324	revision.c	FUNCTION_98	FOR_1
0x942c	      0x25ffffff07	                      and eax, 0x7ffffff	      3324	revision.c	FUNCTION_98	FOR_1
0x9431	          0x83c820	                            or eax, 0x20	      3324	revision.c	FUNCTION_98	FOR_1
0x9434	            0x89c2	                            mov edx, eax	      3324	revision.c	FUNCTION_98	FOR_1
0x9436	        0x488b45f8	                mov rax, qword [rbp - 8]	      3324	revision.c	FUNCTION_98	FOR_1
0x943a	    0x81e2ffffff07	                      and edx, 0x7ffffff	      3324	revision.c	FUNCTION_98	FOR_1
0x9440	            0x89d1	                            mov ecx, edx	      3324	revision.c	FUNCTION_98	FOR_1
0x9442	          0xc1e104	                              shl ecx, 4	      3324	revision.c	FUNCTION_98	FOR_1
0x9445	            0x8b10	                    mov edx, dword [rax]	      3324	revision.c	FUNCTION_98	FOR_1
0x9447	    0x81e20f000080	                     and edx, 0x8000000f	      3324	revision.c	FUNCTION_98	FOR_1
0x944d	             0x9ca	                             or edx, ecx	      3324	revision.c	FUNCTION_98	FOR_1
0x944f	            0x8910	                    mov dword [rax], edx	      3324	revision.c	FUNCTION_98	FOR_1
0x9451	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3325	revision.c	FUNCTION_98	FOR_1	CALL_2
0x9455	        0x488b45f8	                mov rax, qword [rbp - 8]	      3325	revision.c	FUNCTION_98	FOR_1	CALL_2
0x9459	          0x4889d6	                            mov rsi, rdx	      3325	revision.c	FUNCTION_98	FOR_1	CALL_2
0x945c	          0x4889c7	                            mov rdi, rax	      3325	revision.c	FUNCTION_98	FOR_1	CALL_2
0x945f	      0xe800000000	                          call 0x40094a4	      3325	revision.c	FUNCTION_98	FOR_1	CALL_2
0x9464	            0xeb07	                           jmp 0x40094ad	      3325	revision.c	FUNCTION_98	FOR_1	CALL_2
0x9466	              0x90	                                     nop	      3319	revision.c	FUNCTION_98	FOR_1	IF_2
0x9467	            0xeb04	                           jmp 0x40094ad	      3319	revision.c	FUNCTION_98	FOR_1	IF_2
0x9469	              0x90	                                     nop	      3321	revision.c	FUNCTION_98	FOR_1	IF_3
0x946a	            0xeb01	                           jmp 0x40094ad	      3321	revision.c	FUNCTION_98	FOR_1	IF_3
0x946c	              0x90	                                     nop	      3323	revision.c	FUNCTION_98	FOR_1	IF_4
0x946d	        0x8345e401	               add dword [rbp - 0x1c], 1	      3316	revision.c	FUNCTION_98	FOR_1
0x9471	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3316	revision.c	FUNCTION_98	FOR_1
0x9475	            0x8b00	                    mov eax, dword [rax]	      3316	revision.c	FUNCTION_98	FOR_1
0x9477	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      3316	revision.c	FUNCTION_98	FOR_1
0x947a	     0xf875affffff	                            ja 0x400941a	      3316	revision.c	FUNCTION_98	FOR_1
0x9480	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3332	revision.c	FUNCTION_98	CALL_3
0x9484	          0x8b506c	            mov edx, dword [rax + 0x6c] 	      3332	revision.c	FUNCTION_98	CALL_3
0x9487	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3332	revision.c	FUNCTION_98	CALL_3
0x948b	            0x89d6	                            mov esi, edx	      3332	revision.c	FUNCTION_98	CALL_3
0x948d	          0x4889c7	                            mov rdi, rax	      3332	revision.c	FUNCTION_98	CALL_3
0x9490	      0xe800000000	                          call 0x40094d5	      3332	revision.c	FUNCTION_98	CALL_3
0x9495	              0x90	                                     nop	      3333	revision.c	FUNCTION_98
0x9496	              0xc9	                                   leave	      3333	revision.c	FUNCTION_98
0x9497	              0xc3	                                     ret	      3333	revision.c	FUNCTION_98
rewrite_one	FOR,1:functions,0:WHILE,0:CALL,2:IF,6:ELSE,0:DO,0:SWITCH,0	72
0x830b	              0x55	                                push rbp	      2919	revision.c	FUNCTION_83
0x830c	          0x4889e5	                            mov rbp, rsp	      2919	revision.c	FUNCTION_83
0x830f	        0x4883ec30	                           sub rsp, 0x30	      2919	revision.c	FUNCTION_83
0x8313	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2919	revision.c	FUNCTION_83
0x8317	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2919	revision.c	FUNCTION_83
0x831b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2919	revision.c	FUNCTION_83
0x8324	        0x488945f8	                mov qword [rbp - 8], rax	      2919	revision.c	FUNCTION_83
0x8328	            0x31c0	                            xor eax, eax	      2919	revision.c	FUNCTION_83
0x832a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2920	revision.c	FUNCTION_83
0x8332	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2923	revision.c	FUNCTION_83	FOR_1
0x8336	          0x488b00	                    mov rax, qword [rax]	      2923	revision.c	FUNCTION_83	FOR_1
0x8339	        0x488945f0	             mov qword [rbp - 0x10], rax	      2923	revision.c	FUNCTION_83	FOR_1
0x833d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2924	revision.c	FUNCTION_83	FOR_1	IF_1
0x8341	         0xfb64076	           movzx eax, byte [rax + 0x76] 	      2924	revision.c	FUNCTION_83	FOR_1	IF_1
0x8345	          0x83e004	                              and eax, 4	      2924	revision.c	FUNCTION_83	FOR_1	IF_1
0x8348	            0x84c0	                             test al, al	      2924	revision.c	FUNCTION_83	FOR_1	IF_1
0x834a	            0x7526	                           jne 0x40083b2	      2924	revision.c	FUNCTION_83	FOR_1	IF_1
0x834c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2925	revision.c	FUNCTION_83	FOR_1	IF_1	IF_2	CALL_1
0x8350	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      2925	revision.c	FUNCTION_83	FOR_1	IF_1	IF_2	CALL_1
0x8354	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2925	revision.c	FUNCTION_83	FOR_1	IF_1	IF_2	CALL_1
0x8358	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2925	revision.c	FUNCTION_83	FOR_1	IF_1	IF_2	CALL_1
0x835c	          0x4889c7	                            mov rdi, rax	      2925	revision.c	FUNCTION_83	FOR_1	IF_1	IF_2	CALL_1
0x835f	      0xe82899ffff	            call sym.add_parents_to_list	      2925	revision.c	FUNCTION_83	FOR_1	IF_1	IF_2	CALL_1
0x8364	            0x85c0	                           test eax, eax	      2925	revision.c	FUNCTION_83	FOR_1	IF_1	IF_2	CALL_1
0x8366	            0x790a	                           jns 0x40083b2	      2925	revision.c	FUNCTION_83	FOR_1	IF_1	IF_2	CALL_1
0x8368	      0xb802000000	                              mov eax, 2	      2926	revision.c	FUNCTION_83	FOR_1	IF_1	IF_2
0x836d	      0xe985000000	                           jmp 0x4008437	      2926	revision.c	FUNCTION_83	FOR_1	IF_1	IF_2
0x8372	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2927	revision.c	FUNCTION_83	FOR_1	IF_3
0x8376	            0x8b00	                    mov eax, dword [rax]	      2927	revision.c	FUNCTION_83	FOR_1	IF_3
0x8378	          0xc1e804	                              shr eax, 4	      2927	revision.c	FUNCTION_83	FOR_1	IF_3
0x837b	      0x25ffffff07	                      and eax, 0x7ffffff	      2927	revision.c	FUNCTION_83	FOR_1	IF_3
0x8380	          0x83e002	                              and eax, 2	      2927	revision.c	FUNCTION_83	FOR_1	IF_3
0x8383	            0x85c0	                           test eax, eax	      2927	revision.c	FUNCTION_83	FOR_1	IF_3
0x8385	            0x7407	                            je 0x40083ce	      2927	revision.c	FUNCTION_83	FOR_1	IF_3
0x8387	      0xb800000000	                              mov eax, 0	      2928	revision.c	FUNCTION_83	FOR_1	IF_3
0x838c	            0xeb69	                           jmp 0x4008437	      2928	revision.c	FUNCTION_83	FOR_1	IF_3
0x838e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2929	revision.c	FUNCTION_83	FOR_1	IF_4
0x8392	            0x8b00	                    mov eax, dword [rax]	      2929	revision.c	FUNCTION_83	FOR_1	IF_4
0x8394	          0xc1e804	                              shr eax, 4	      2929	revision.c	FUNCTION_83	FOR_1	IF_4
0x8397	      0x25ffffff07	                      and eax, 0x7ffffff	      2929	revision.c	FUNCTION_83	FOR_1	IF_4
0x839c	          0x83e004	                              and eax, 4	      2929	revision.c	FUNCTION_83	FOR_1	IF_4
0x839f	            0x85c0	                           test eax, eax	      2929	revision.c	FUNCTION_83	FOR_1	IF_4
0x83a1	            0x7507	                           jne 0x40083ea	      2929	revision.c	FUNCTION_83	FOR_1	IF_4
0x83a3	      0xb800000000	                              mov eax, 0	      2930	revision.c	FUNCTION_83	FOR_1	IF_4
0x83a8	            0xeb4d	                           jmp 0x4008437	      2930	revision.c	FUNCTION_83	FOR_1	IF_4
0x83aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2931	revision.c	FUNCTION_83	FOR_1	IF_5
0x83ae	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2931	revision.c	FUNCTION_83	FOR_1	IF_5
0x83b2	          0x4885c0	                           test rax, rax	      2931	revision.c	FUNCTION_83	FOR_1	IF_5
0x83b5	            0x7507	                           jne 0x40083fe	      2931	revision.c	FUNCTION_83	FOR_1	IF_5
0x83b7	      0xb801000000	                              mov eax, 1	      2932	revision.c	FUNCTION_83	FOR_1	IF_5
0x83bc	            0xeb39	                           jmp 0x4008437	      2932	revision.c	FUNCTION_83	FOR_1	IF_5
0x83be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2933	revision.c	FUNCTION_83	FOR_1	IF_6	CALL_2
0x83c2	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2933	revision.c	FUNCTION_83	FOR_1	IF_6	CALL_2
0x83c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2933	revision.c	FUNCTION_83	FOR_1	IF_6	CALL_2
0x83ca	          0x4889d6	                            mov rsi, rdx	      2933	revision.c	FUNCTION_83	FOR_1	IF_6	CALL_2
0x83cd	          0x4889c7	                            mov rdi, rax	      2933	revision.c	FUNCTION_83	FOR_1	IF_6	CALL_2
0x83d0	      0xe8cd8cffff	            call sym.one_relevant_parent	      2933	revision.c	FUNCTION_83	FOR_1	IF_6	CALL_2
0x83d5	        0x488945f0	             mov qword [rbp - 0x10], rax	      2933	revision.c	FUNCTION_83	FOR_1	IF_6	CALL_2
0x83d9	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2933	revision.c	FUNCTION_83	FOR_1	IF_6	CALL_2
0x83de	            0x7507	                           jne 0x4008427	      2933	revision.c	FUNCTION_83	FOR_1	IF_6	CALL_2
0x83e0	      0xb800000000	                              mov eax, 0	      2934	revision.c	FUNCTION_83	FOR_1	IF_6
0x83e5	            0xeb10	                           jmp 0x4008437	      2934	revision.c	FUNCTION_83	FOR_1	IF_6
0x83e7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2935	revision.c	FUNCTION_83	FOR_1
0x83eb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2935	revision.c	FUNCTION_83	FOR_1
0x83ef	          0x488910	                    mov qword [rax], rdx	      2935	revision.c	FUNCTION_83	FOR_1
0x83f2	      0xe93bffffff	                           jmp 0x4008372	      2936	revision.c	FUNCTION_83	FOR_1
0x83f7	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2937	revision.c	FUNCTION_83
0x83fb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2937	revision.c	FUNCTION_83
0x8404	            0x7405	                            je 0x400844b	      2937	revision.c	FUNCTION_83
0x8406	      0xe800000000	                          call 0x400844b	      2937	revision.c	FUNCTION_83
0x840b	              0xc9	                                   leave	      2937	revision.c	FUNCTION_83
0x840c	              0xc3	                                     ret	      2937	revision.c	FUNCTION_83
parse_commit	FOR,0:functions,0:WHILE,0:CALL,1:IF,0:ELSE,0:DO,0:SWITCH,0	10
0x515	              0x55	                                push rbp	        74	commit.h	FUNCTION_148
0x516	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_148
0x519	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_148
0x51d	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_148
0x521	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_148	CALL_1
0x525	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_148	CALL_1
0x52a	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_148	CALL_1
0x52d	      0xe800000000	                          call 0x4000572	        75	commit.h	FUNCTION_148	CALL_1
0x532	              0xc9	                                   leave	        76	commit.h	FUNCTION_148
0x533	              0xc3	                                     ret	        76	commit.h	FUNCTION_148
reset_revision_walk	FOR,0:functions,0:WHILE,0:CALL,1:IF,0:ELSE,0:DO,0:SWITCH,0	7
0x8040	              0x55	                                push rbp	      2854	revision.c	FUNCTION_80
0x8041	          0x4889e5	                            mov rbp, rsp	      2854	revision.c	FUNCTION_80
0x8044	      0xbf89000000	                           mov edi, 0x89	      2855	revision.c	FUNCTION_80	CALL_1
0x8049	      0xe800000000	                          call 0x400808e	      2855	revision.c	FUNCTION_80	CALL_1
0x804e	              0x90	                                     nop	      2856	revision.c	FUNCTION_80
0x804f	              0x5d	                                 pop rbp	      2856	revision.c	FUNCTION_80
0x8050	              0xc3	                                     ret	      2856	revision.c	FUNCTION_80
const_error	FOR,0:functions,0:WHILE,0:CALL,0:IF,0:ELSE,0:DO,0:SWITCH,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_123
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_123
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_123
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_123
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_123
rewrite_parents	FOR,0:functions,0:WHILE,1:CALL,2:IF,0:ELSE,0:DO,0:SWITCH,1	49
0x840d	              0x55	                                push rbp	      2941	revision.c	FUNCTION_84
0x840e	          0x4889e5	                            mov rbp, rsp	      2941	revision.c	FUNCTION_84
0x8411	        0x4883ec30	                           sub rsp, 0x30	      2941	revision.c	FUNCTION_84
0x8415	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2941	revision.c	FUNCTION_84
0x8419	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2941	revision.c	FUNCTION_84
0x841d	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2941	revision.c	FUNCTION_84
0x8421	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2942	revision.c	FUNCTION_84
0x8425	        0x4883c030	                           add rax, 0x30	      2942	revision.c	FUNCTION_84
0x8429	        0x488945f0	             mov qword [rbp - 0x10], rax	      2942	revision.c	FUNCTION_84
0x842d	            0xeb55	                           jmp 0x40084c4	      2943	revision.c	FUNCTION_84	WHILE_1
0x842f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2944	revision.c	FUNCTION_84	WHILE_1
0x8433	          0x488b00	                    mov rax, qword [rax]	      2944	revision.c	FUNCTION_84	WHILE_1
0x8436	        0x488945f8	                mov qword [rbp - 8], rax	      2944	revision.c	FUNCTION_84	WHILE_1
0x843a	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2945	revision.c	FUNCTION_84	WHILE_1	SWITCH_1	CALL_1
0x843e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2945	revision.c	FUNCTION_84	WHILE_1	SWITCH_1	CALL_1
0x8442	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2945	revision.c	FUNCTION_84	WHILE_1	SWITCH_1	CALL_1
0x8446	          0x4889ce	                            mov rsi, rcx	      2945	revision.c	FUNCTION_84	WHILE_1	SWITCH_1	CALL_1
0x8449	          0x4889d7	                            mov rdi, rdx	      2945	revision.c	FUNCTION_84	WHILE_1	SWITCH_1	CALL_1
0x844c	            0xffd0	                                call rax	      2945	revision.c	FUNCTION_84	WHILE_1	SWITCH_1	CALL_1
0x844e	          0x83f801	                              cmp eax, 1	      2945	revision.c	FUNCTION_84	WHILE_1	SWITCH_1	CALL_1
0x8451	            0x740c	                            je 0x400849f	      2945	revision.c	FUNCTION_84	WHILE_1	SWITCH_1	CALL_1
0x8453	          0x83f801	                              cmp eax, 1	      2945	revision.c	FUNCTION_84	WHILE_1	SWITCH_1	CALL_1
0x8456	            0x721f	                            jb 0x40084b7	      2945	revision.c	FUNCTION_84	WHILE_1	SWITCH_1	CALL_1
0x8458	          0x83f802	                              cmp eax, 2	      2945	revision.c	FUNCTION_84	WHILE_1	SWITCH_1	CALL_1
0x845b	            0x7413	                            je 0x40084b0	      2945	revision.c	FUNCTION_84	WHILE_1	SWITCH_1	CALL_1
0x845d	            0xeb19	                           jmp 0x40084b8	      2945	revision.c	FUNCTION_84	WHILE_1	SWITCH_1	CALL_1
0x845f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2949	revision.c	FUNCTION_84	WHILE_1	SWITCH_1
0x8463	        0x488b5008	                mov rdx, qword [rax + 8]	      2949	revision.c	FUNCTION_84	WHILE_1	SWITCH_1
0x8467	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2949	revision.c	FUNCTION_84	WHILE_1	SWITCH_1
0x846b	          0x488910	                    mov qword [rax], rdx	      2949	revision.c	FUNCTION_84	WHILE_1	SWITCH_1
0x846e	            0xeb14	                           jmp 0x40084c4	      2950	revision.c	FUNCTION_84	WHILE_1	SWITCH_1
0x8470	      0xb8ffffffff	                     mov eax, 0xffffffff	      2952	revision.c	FUNCTION_84	WHILE_1	SWITCH_1
0x8475	            0xeb31	                           jmp 0x40084e8	      2952	revision.c	FUNCTION_84	WHILE_1	SWITCH_1
0x8477	              0x90	                                     nop	      2947	revision.c	FUNCTION_84	WHILE_1	SWITCH_1
0x8478	        0x488b45f8	                mov rax, qword [rbp - 8]	      2954	revision.c	FUNCTION_84	WHILE_1
0x847c	        0x4883c008	                              add rax, 8	      2954	revision.c	FUNCTION_84	WHILE_1
0x8480	        0x488945f0	             mov qword [rbp - 0x10], rax	      2954	revision.c	FUNCTION_84	WHILE_1
0x8484	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2943	revision.c	FUNCTION_84	WHILE_1
0x8488	          0x488b00	                    mov rax, qword [rax]	      2943	revision.c	FUNCTION_84	WHILE_1
0x848b	          0x4885c0	                           test rax, rax	      2943	revision.c	FUNCTION_84	WHILE_1
0x848e	            0x759f	                           jne 0x400846f	      2943	revision.c	FUNCTION_84	WHILE_1
0x8490	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2956	revision.c	FUNCTION_84	CALL_2
0x8494	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2956	revision.c	FUNCTION_84	CALL_2
0x8498	          0x4889d6	                            mov rsi, rdx	      2956	revision.c	FUNCTION_84	CALL_2
0x849b	          0x4889c7	                            mov rdi, rax	      2956	revision.c	FUNCTION_84	CALL_2
0x849e	      0xe8a5f1ffff	       call sym.remove_duplicate_parents	      2956	revision.c	FUNCTION_84	CALL_2
0x84a3	      0xb800000000	                              mov eax, 0	      2957	revision.c	FUNCTION_84
0x84a8	              0xc9	                                   leave	      2958	revision.c	FUNCTION_84
0x84a9	              0xc3	                                     ret	      2958	revision.c	FUNCTION_84
get_revision_1	FOR,0:functions,0:WHILE,1:CALL,11:IF,9:ELSE,2:DO,0:SWITCH,1	125
0x9159	              0x55	                                push rbp	      3227	revision.c	FUNCTION_95
0x915a	          0x4889e5	                            mov rbp, rsp	      3227	revision.c	FUNCTION_95
0x915d	        0x4883ec20	                           sub rsp, 0x20	      3227	revision.c	FUNCTION_95
0x9161	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3227	revision.c	FUNCTION_95
0x9165	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3231	revision.c	FUNCTION_95	WHILE_1	IF_1
0x9169	    0x488b80f80700	           mov rax, qword [rax + 0x7f8] 	      3231	revision.c	FUNCTION_95	WHILE_1	IF_1
0x9170	          0x4885c0	                           test rax, rax	      3231	revision.c	FUNCTION_95	WHILE_1	IF_1
0x9173	            0x7419	                            je 0x40091ce	      3231	revision.c	FUNCTION_95	WHILE_1	IF_1
0x9175	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3232	revision.c	FUNCTION_95	WHILE_1	CALL_1
0x9179	    0x488b80f80700	           mov rax, qword [rax + 0x7f8] 	      3232	revision.c	FUNCTION_95	WHILE_1	CALL_1
0x9180	          0x4889c7	                            mov rdi, rax	      3232	revision.c	FUNCTION_95	WHILE_1	CALL_1
0x9183	      0xe800000000	                          call 0x40091c8	      3232	revision.c	FUNCTION_95	WHILE_1	CALL_1
0x9188	        0x488945f8	                mov qword [rbp - 8], rax	      3232	revision.c	FUNCTION_95	WHILE_1	CALL_1
0x918c	            0xeb10	                           jmp 0x40091de	      3232	revision.c	FUNCTION_95	WHILE_1	CALL_1
0x918e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3234	revision.c	FUNCTION_95	WHILE_1	CALL_2
0x9192	          0x4889c7	                            mov rdi, rax	      3234	revision.c	FUNCTION_95	WHILE_1	CALL_2
0x9195	      0xe800000000	                          call 0x40091da	      3234	revision.c	FUNCTION_95	WHILE_1	CALL_2
0x919a	        0x488945f8	                mov qword [rbp - 8], rax	      3234	revision.c	FUNCTION_95	WHILE_1	CALL_2
0x919e	      0x48837df800	                  cmp qword [rbp - 8], 0	      3236	revision.c	FUNCTION_95	WHILE_1	IF_2
0x91a3	            0x750a	                           jne 0x40091ef	      3236	revision.c	FUNCTION_95	WHILE_1	IF_2
0x91a5	      0xb800000000	                              mov eax, 0	      3237	revision.c	FUNCTION_95	WHILE_1	IF_2
0x91aa	      0xe973010000	                           jmp 0x4009362	      3237	revision.c	FUNCTION_95	WHILE_1	IF_2
0x91af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3239	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91b3	    0x488b80f80700	           mov rax, qword [rax + 0x7f8] 	      3239	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91ba	          0x4885c0	                           test rax, rax	      3239	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91bd	            0x7430	                            je 0x400922f	      3239	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91bf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3240	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91c3	            0x8b00	                    mov eax, dword [rax]	      3240	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91c5	          0xc1e804	                              shr eax, 4	      3240	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91c8	      0x25ffffff07	                      and eax, 0x7ffffff	      3240	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91cd	      0x2576ffff07	                      and eax, 0x7ffff76	      3240	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91d2	            0x89c2	                            mov edx, eax	      3240	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3240	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91d8	    0x81e2ffffff07	                      and edx, 0x7ffffff	      3240	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91de	            0x89d1	                            mov ecx, edx	      3240	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91e0	          0xc1e104	                              shl ecx, 4	      3240	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91e3	            0x8b10	                    mov edx, dword [rax]	      3240	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91e5	    0x81e20f000080	                     and edx, 0x8000000f	      3240	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91eb	             0x9ca	                             or edx, ecx	      3240	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91ed	            0x8910	                    mov dword [rax], edx	      3240	revision.c	FUNCTION_95	WHILE_1	IF_3
0x91ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3247	revision.c	FUNCTION_95	WHILE_1	IF_4
0x91f3	         0xfb64076	           movzx eax, byte [rax + 0x76] 	      3247	revision.c	FUNCTION_95	WHILE_1	IF_4
0x91f7	          0x83e004	                              and eax, 4	      3247	revision.c	FUNCTION_95	WHILE_1	IF_4
0x91fa	            0x84c0	                             test al, al	      3247	revision.c	FUNCTION_95	WHILE_1	IF_4
0x91fc	     0xf85ae000000	                           jne 0x40092f0	      3247	revision.c	FUNCTION_95	WHILE_1	IF_4
0x9202	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3248	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5
0x9206	    0x488b80d00400	           mov rax, qword [rax + 0x4d0] 	      3248	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5
0x920d	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      3248	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5
0x9211	            0x742a	                            je 0x400927d	      3248	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5
0x9213	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3249	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5	CALL_3
0x9217	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3249	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5	CALL_3
0x921b	          0x4889d6	                            mov rsi, rdx	      3249	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5	CALL_3
0x921e	          0x4889c7	                            mov rdi, rax	      3249	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5	CALL_3
0x9221	      0xe844f7ffff	                call sym.comparison_date	      3249	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5	CALL_3
0x9226	          0x4889c2	                            mov rdx, rax	      3249	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5	CALL_3
0x9229	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3249	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5	CALL_3
0x922d	    0x488b80d00400	           mov rax, qword [rax + 0x4d0] 	      3249	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5	CALL_3
0x9234	          0x4839c2	                            cmp rdx, rax	      3248	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5
0x9237	     0xf82d9000000	                            jb 0x4009356	      3248	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5
0x923d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3252	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_6
0x9241	    0x488b80f80700	           mov rax, qword [rax + 0x7f8] 	      3252	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_6
0x9248	          0x4885c0	                           test rax, rax	      3252	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_6
0x924b	            0x7415	                            je 0x40092a2	      3252	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_6
0x924d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3253	revision.c	FUNCTION_95	WHILE_1	IF_4	CALL_4
0x9251	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3253	revision.c	FUNCTION_95	WHILE_1	IF_4	CALL_4
0x9255	          0x4889d6	                            mov rsi, rdx	      3253	revision.c	FUNCTION_95	WHILE_1	IF_4	CALL_4
0x9258	          0x4889c7	                            mov rdi, rax	      3253	revision.c	FUNCTION_95	WHILE_1	IF_4	CALL_4
0x925b	      0xe8b285ffff	         call sym.try_to_simplify_commit	      3253	revision.c	FUNCTION_95	WHILE_1	IF_4	CALL_4
0x9260	            0xeb4e	                           jmp 0x40092f0	      3253	revision.c	FUNCTION_95	WHILE_1	IF_4	CALL_4
0x9262	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3254	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	CALL_5
0x9266	        0x488b75f8	                mov rsi, qword [rbp - 8]	      3254	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	CALL_5
0x926a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3254	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	CALL_5
0x926e	      0xb900000000	                              mov ecx, 0	      3254	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	CALL_5
0x9273	          0x4889c7	                            mov rdi, rax	      3254	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	CALL_5
0x9276	      0xe8118affff	            call sym.add_parents_to_list	      3254	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	CALL_5
0x927b	            0x85c0	                           test eax, eax	      3254	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	CALL_5
0x927d	            0x7931	                           jns 0x40092f0	      3254	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	CALL_5
0x927f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3255	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	IF_8
0x9283	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      3255	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	IF_8
0x9287	          0x83e002	                              and eax, 2	      3255	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	IF_8
0x928a	            0x84c0	                             test al, al	      3255	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	IF_8
0x928c	            0x7522	                           jne 0x40092f0	      3255	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	IF_8
0x928e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3257	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	CALL_7
0x9292	        0x4883c004	                              add rax, 4	      3257	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	CALL_7
0x9296	          0x4889c7	                            mov rdi, rax	      3256	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	IF_8	CALL_6
0x9299	      0xe800000000	                          call 0x40092de	      3256	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	IF_8	CALL_6
0x929e	          0x4889c6	                            mov rsi, rax	      3256	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	IF_8	CALL_6
0x92a1	      0xbf00000000	                              mov edi, 0	      3256	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	IF_8	CALL_6
0x92a6	      0xb800000000	                              mov eax, 0	      3256	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	IF_8	CALL_6
0x92ab	      0xe800000000	                          call 0x40092f0	      3256	revision.c	FUNCTION_95	WHILE_1	IF_4	ELSE_2	IF_7	IF_8	CALL_6
0x92b0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3261	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_8
0x92b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3261	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_8
0x92b8	          0x4889d6	                            mov rsi, rdx	      3261	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_8
0x92bb	          0x4889c7	                            mov rdi, rax	      3261	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_8
0x92be	      0xe800000000	                          call 0x4009303	      3261	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_8
0x92c3	            0x85c0	                           test eax, eax	      3261	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_8
0x92c5	            0x7455	                            je 0x400935c	      3261	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_8
0x92c7	          0x83f802	                              cmp eax, 2	      3261	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_8
0x92ca	            0x7522	                           jne 0x400932e	      3261	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_8
0x92cc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3266	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_10
0x92d0	        0x4883c004	                              add rax, 4	      3266	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_10
0x92d4	          0x4889c7	                            mov rdi, rax	      3265	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_9
0x92d7	      0xe800000000	                          call 0x400931c	      3265	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_9
0x92dc	          0x4889c6	                            mov rsi, rax	      3265	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_9
0x92df	      0xbf00000000	                              mov edi, 0	      3265	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_9
0x92e4	      0xb800000000	                              mov eax, 0	      3265	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_9
0x92e9	      0xe800000000	                          call 0x400932e	      3265	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_9
0x92ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3268	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	IF_9
0x92f2	         0xfb6407c	           movzx eax, byte [rax + 0x7c] 	      3268	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	IF_9
0x92f6	          0x83e001	                              and eax, 1	      3268	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	IF_9
0x92f9	            0x84c0	                             test al, al	      3268	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	IF_9
0x92fb	            0x7413	                            je 0x4009350	      3268	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	IF_9
0x92fd	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3269	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_11
0x9301	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3269	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_11
0x9305	          0x4889d6	                            mov rsi, rdx	      3269	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_11
0x9308	          0x4889c7	                            mov rdi, rax	      3269	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_11
0x930b	      0xe816fdffff	                   call sym.track_linear	      3269	revision.c	FUNCTION_95	WHILE_1	SWITCH_1	CALL_11
0x9310	        0x488b45f8	                mov rax, qword [rbp - 8]	      3270	revision.c	FUNCTION_95	WHILE_1	SWITCH_1
0x9314	            0xeb0c	                           jmp 0x4009362	      3270	revision.c	FUNCTION_95	WHILE_1	SWITCH_1
0x9316	              0x90	                                     nop	      3250	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5
0x9317	      0xe949feffff	                           jmp 0x40091a5	      3250	revision.c	FUNCTION_95	WHILE_1	IF_4	IF_5
0x931c	              0x90	                                     nop	      3263	revision.c	FUNCTION_95	WHILE_1	SWITCH_1
0x931d	      0xe943feffff	                           jmp 0x40091a5	      3272	revision.c	FUNCTION_95	WHILE_1
0x9322	              0xc9	                                   leave	      3273	revision.c	FUNCTION_95
0x9323	              0xc3	                                     ret	      3273	revision.c	FUNCTION_95
add_index_objects_to_pending	FOR,1:functions,0:WHILE,0:CALL,9:IF,3:ELSE,0:DO,0:SWITCH,0	83
0x342d	              0x55	                                push rbp	      1344	revision.c	FUNCTION_48
0x342e	          0x4889e5	                            mov rbp, rsp	      1344	revision.c	FUNCTION_48
0x3431	              0x53	                                push rbx	      1344	revision.c	FUNCTION_48
0x3432	    0x4881ec180100	                          sub rsp, 0x118	      1344	revision.c	FUNCTION_48
0x3439	    0x4889bde8feff	            mov qword [rbp - 0x118], rdi	      1344	revision.c	FUNCTION_48
0x3440	    0x89b5e4feffff	            mov dword [rbp - 0x11c], esi	      1344	revision.c	FUNCTION_48
0x3446	    0x64488b042528	                mov rax, qword fs:[0x28]	      1344	revision.c	FUNCTION_48
0x344f	        0x488945e8	             mov qword [rbp - 0x18], rax	      1344	revision.c	FUNCTION_48
0x3453	            0x31c0	                            xor eax, eax	      1344	revision.c	FUNCTION_48
0x3455	      0xbf00000000	                              mov edi, 0	      1347	revision.c	FUNCTION_48	CALL_1
0x345a	      0xe800000000	                          call 0x400349f	      1347	revision.c	FUNCTION_48	CALL_1
0x345f	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      1348	revision.c	FUNCTION_48	CALL_2
0x3466	      0xbe00000000	                              mov esi, 0	      1348	revision.c	FUNCTION_48	CALL_2
0x346b	          0x4889c7	                            mov rdi, rax	      1348	revision.c	FUNCTION_48	CALL_2
0x346e	      0xe892feffff	call sym.do_add_index_objects_to_pending	      1348	revision.c	FUNCTION_48	CALL_2
0x3473	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      1350	revision.c	FUNCTION_48	IF_1
0x347a	         0xfb64075	           movzx eax, byte [rax + 0x75] 	      1350	revision.c	FUNCTION_48	IF_1
0x347e	          0x83e008	                              and eax, 8	      1350	revision.c	FUNCTION_48	IF_1
0x3481	            0x84c0	                             test al, al	      1350	revision.c	FUNCTION_48	IF_1
0x3483	     0xf85f8000000	                           jne 0x40035c1	      1350	revision.c	FUNCTION_48	IF_1
0x3489	      0xbf00000000	                              mov edi, 0	      1353	revision.c	FUNCTION_48	CALL_3
0x348e	      0xe800000000	                          call 0x40034d3	      1353	revision.c	FUNCTION_48	CALL_3
0x3493	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      1353	revision.c	FUNCTION_48	CALL_3
0x349a	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1354	revision.c	FUNCTION_48	FOR_1
0x34a1	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      1354	revision.c	FUNCTION_48	FOR_1
0x34a8	      0xe9b0000000	                           jmp 0x400359d	      1354	revision.c	FUNCTION_48	FOR_1
0x34ad	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1355	revision.c	FUNCTION_48	FOR_1
0x34b4	          0x488b00	                    mov rax, qword [rax]	      1355	revision.c	FUNCTION_48	FOR_1
0x34b7	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      1355	revision.c	FUNCTION_48	FOR_1
0x34be	    0x488d9510ffff	                   lea rdx, [rbp - 0xf0]	      1356	revision.c	FUNCTION_48	FOR_1
0x34c5	      0xb800000000	                              mov eax, 0	      1356	revision.c	FUNCTION_48	FOR_1
0x34ca	      0xb91a000000	                           mov ecx, 0x1a	      1356	revision.c	FUNCTION_48	FOR_1
0x34cf	          0x4889d7	                            mov rdi, rdx	      1356	revision.c	FUNCTION_48	FOR_1
0x34d2	          0xf348ab	              rep stosq qword [rdi], rax	      1356	revision.c	FUNCTION_48	FOR_1
0x34d5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1358	revision.c	FUNCTION_48	FOR_1	IF_2
0x34dc	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1358	revision.c	FUNCTION_48	FOR_1	IF_2
0x34df	            0x85c0	                           test eax, eax	      1358	revision.c	FUNCTION_48	FOR_1	IF_2
0x34e1	            0x7571	                           jne 0x4003594	      1358	revision.c	FUNCTION_48	FOR_1	IF_2
0x34e3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x34ea	          0x4889c7	                            mov rdi, rax	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x34ed	      0xe800000000	                          call 0x4003532	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x34f2	          0x4889c3	                            mov rbx, rax	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x34f5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x34fc	      0xbe00000000	                              mov esi, 0	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x3501	          0x4889c7	                            mov rdi, rax	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x3504	      0xb800000000	                              mov eax, 0	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x3509	      0xe800000000	                          call 0x400354e	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x350e	          0x4889c1	                            mov rcx, rax	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x3511	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x3518	          0x4889da	                            mov rdx, rbx	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x351b	          0x4889ce	                            mov rsi, rcx	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x351e	          0x4889c7	                            mov rdi, rax	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x3521	      0xe800000000	                          call 0x4003566	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x3526	            0x85c0	                           test eax, eax	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x3528	            0x7e19	                           jle 0x4003583	      1361	revision.c	FUNCTION_48	FOR_1	IF_3	CALL_4
0x352a	    0x488d9510ffff	                   lea rdx, [rbp - 0xf0]	      1364	revision.c	FUNCTION_48	FOR_1	CALL_7
0x3531	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      1364	revision.c	FUNCTION_48	FOR_1	CALL_7
0x3538	          0x4889d6	                            mov rsi, rdx	      1364	revision.c	FUNCTION_48	FOR_1	CALL_7
0x353b	          0x4889c7	                            mov rdi, rax	      1364	revision.c	FUNCTION_48	FOR_1	CALL_7
0x353e	      0xe8c2fdffff	call sym.do_add_index_objects_to_pending	      1364	revision.c	FUNCTION_48	FOR_1	CALL_7
0x3543	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	      1365	revision.c	FUNCTION_48	FOR_1	CALL_8
0x354a	          0x4889c7	                            mov rdi, rax	      1365	revision.c	FUNCTION_48	FOR_1	CALL_8
0x354d	      0xe800000000	                          call 0x4003592	      1365	revision.c	FUNCTION_48	FOR_1	CALL_8
0x3552	            0xeb01	                           jmp 0x4003595	      1365	revision.c	FUNCTION_48	FOR_1	CALL_8
0x3554	              0x90	                                     nop	      1359	revision.c	FUNCTION_48	FOR_1	IF_2
0x3555	    0x488385f8feff	              add qword [rbp - 0x108], 8	      1354	revision.c	FUNCTION_48	FOR_1
0x355d	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1354	revision.c	FUNCTION_48	FOR_1
0x3564	          0x488b00	                    mov rax, qword [rax]	      1354	revision.c	FUNCTION_48	FOR_1
0x3567	          0x4885c0	                           test rax, rax	      1354	revision.c	FUNCTION_48	FOR_1
0x356a	     0xf853dffffff	                           jne 0x40034ed	      1354	revision.c	FUNCTION_48	FOR_1
0x3570	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1367	revision.c	FUNCTION_48	CALL_9
0x3577	          0x4889c7	                            mov rdi, rax	      1367	revision.c	FUNCTION_48	CALL_9
0x357a	      0xe800000000	                          call 0x40035bf	      1367	revision.c	FUNCTION_48	CALL_9
0x357f	            0xeb01	                           jmp 0x40035c2	      1367	revision.c	FUNCTION_48	CALL_9
0x3581	              0x90	                                     nop	      1351	revision.c	FUNCTION_48	IF_1
0x3582	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1368	revision.c	FUNCTION_48
0x3586	    0x644833042528	                xor rax, qword fs:[0x28]	      1368	revision.c	FUNCTION_48
0x358f	            0x7405	                            je 0x40035d6	      1368	revision.c	FUNCTION_48
0x3591	      0xe800000000	                          call 0x40035d6	      1368	revision.c	FUNCTION_48
0x3596	    0x4881c4180100	                          add rsp, 0x118	      1368	revision.c	FUNCTION_48
0x359d	              0x5b	                                 pop rbx	      1368	revision.c	FUNCTION_48
0x359e	              0x5d	                                 pop rbp	      1368	revision.c	FUNCTION_48
0x359f	              0xc3	                                     ret	      1368	revision.c	FUNCTION_48
prepare_revision_walk	FOR,1:functions,0:WHILE,0:CALL,12:IF,12:ELSE,0:DO,0:SWITCH,0	166
0x80ad	              0x55	                                push rbp	      2869	revision.c	FUNCTION_82
0x80ae	          0x4889e5	                            mov rbp, rsp	      2869	revision.c	FUNCTION_82
0x80b1	        0x4883ec50	                           sub rsp, 0x50	      2869	revision.c	FUNCTION_82
0x80b5	        0x48897db8	             mov qword [rbp - 0x48], rdi	      2869	revision.c	FUNCTION_82
0x80b9	    0x64488b042528	                mov rax, qword fs:[0x28]	      2869	revision.c	FUNCTION_82
0x80c2	        0x488945f8	                mov qword [rbp - 8], rax	      2869	revision.c	FUNCTION_82
0x80c6	            0x31c0	                            xor eax, eax	      2869	revision.c	FUNCTION_82
0x80c8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2872	revision.c	FUNCTION_82
0x80cc	        0x488945c8	             mov qword [rbp - 0x38], rax	      2872	revision.c	FUNCTION_82
0x80d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2874	revision.c	FUNCTION_82	CALL_1
0x80d4	        0x4883c008	                              add rax, 8	      2874	revision.c	FUNCTION_82	CALL_1
0x80d8	        0x488b5008	                mov rdx, qword [rax + 8]	      2874	revision.c	FUNCTION_82	CALL_1
0x80dc	          0x488b00	                    mov rax, qword [rax]	      2874	revision.c	FUNCTION_82	CALL_1
0x80df	        0x488945e0	             mov qword [rbp - 0x20], rax	      2874	revision.c	FUNCTION_82	CALL_1
0x80e3	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2874	revision.c	FUNCTION_82	CALL_1
0x80e7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2875	revision.c	FUNCTION_82
0x80eb	    0xc74008000000	                  mov dword [rax + 8], 0	      2875	revision.c	FUNCTION_82
0x80f2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2876	revision.c	FUNCTION_82
0x80f6	    0xc7400c000000	                mov dword [rax + 0xc], 0	      2876	revision.c	FUNCTION_82
0x80fd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2877	revision.c	FUNCTION_82
0x8101	    0x48c740100000	               mov qword [rax + 0x10], 0	      2877	revision.c	FUNCTION_82
0x8109	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      2878	revision.c	FUNCTION_82	FOR_1
0x8110	      0xe991000000	                           jmp 0x40081e6	      2878	revision.c	FUNCTION_82	FOR_1
0x8115	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2879	revision.c	FUNCTION_82	FOR_1
0x8119	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      2879	revision.c	FUNCTION_82	FOR_1
0x811c	          0x4863d2	                         movsxd rdx, edx	      2879	revision.c	FUNCTION_82	FOR_1
0x811f	        0x48c1e205	                              shl rdx, 5	      2879	revision.c	FUNCTION_82	FOR_1
0x8123	          0x4801d0	                            add rax, rdx	      2879	revision.c	FUNCTION_82	FOR_1
0x8126	        0x488945d0	             mov qword [rbp - 0x30], rax	      2879	revision.c	FUNCTION_82	FOR_1
0x812a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2880	revision.c	FUNCTION_82	FOR_1	CALL_2
0x812e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2880	revision.c	FUNCTION_82	FOR_1	CALL_2
0x8132	          0x4889d6	                            mov rsi, rdx	      2880	revision.c	FUNCTION_82	FOR_1	CALL_2
0x8135	          0x4889c7	                            mov rdi, rax	      2880	revision.c	FUNCTION_82	FOR_1	CALL_2
0x8138	      0xe8ab8bffff	                  call sym.handle_commit	      2880	revision.c	FUNCTION_82	FOR_1	CALL_2
0x813d	        0x488945d8	             mov qword [rbp - 0x28], rax	      2880	revision.c	FUNCTION_82	FOR_1	CALL_2
0x8141	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2881	revision.c	FUNCTION_82	FOR_1	IF_1
0x8146	            0x745a	                            je 0x40081e2	      2881	revision.c	FUNCTION_82	FOR_1	IF_1
0x8148	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2882	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x814c	            0x8b00	                    mov eax, dword [rax]	      2882	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x814e	          0xc1e804	                              shr eax, 4	      2882	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x8151	      0x25ffffff07	                      and eax, 0x7ffffff	      2882	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x8156	          0x83e001	                              and eax, 1	      2882	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x8159	            0x85c0	                           test eax, eax	      2882	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x815b	            0x7545	                           jne 0x40081e2	      2882	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x815d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2883	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x8161	            0x8b00	                    mov eax, dword [rax]	      2883	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x8163	          0xc1e804	                              shr eax, 4	      2883	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x8166	      0x25ffffff07	                      and eax, 0x7ffffff	      2883	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x816b	          0x83c801	                               or eax, 1	      2883	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x816e	            0x89c2	                            mov edx, eax	      2883	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x8170	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2883	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x8174	    0x81e2ffffff07	                      and edx, 0x7ffffff	      2883	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x817a	            0x89d1	                            mov ecx, edx	      2883	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x817c	          0xc1e104	                              shl ecx, 4	      2883	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x817f	            0x8b10	                    mov edx, dword [rax]	      2883	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x8181	    0x81e20f000080	                     and edx, 0x8000000f	      2883	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x8187	             0x9ca	                             or edx, ecx	      2883	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x8189	            0x8910	                    mov dword [rax], edx	      2883	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2
0x818b	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2884	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2	CALL_3
0x818f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2884	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2	CALL_3
0x8193	          0x4889d6	                            mov rsi, rdx	      2884	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2	CALL_3
0x8196	          0x4889c7	                            mov rdi, rax	      2884	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2	CALL_3
0x8199	      0xe800000000	                          call 0x40081de	      2884	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2	CALL_3
0x819e	        0x488945c8	             mov qword [rbp - 0x38], rax	      2884	revision.c	FUNCTION_82	FOR_1	IF_1	IF_2	CALL_3
0x81a2	        0x8345c401	               add dword [rbp - 0x3c], 1	      2878	revision.c	FUNCTION_82	FOR_1
0x81a6	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      2878	revision.c	FUNCTION_82	FOR_1
0x81a9	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2878	revision.c	FUNCTION_82	FOR_1
0x81ac	            0x39c2	                            cmp edx, eax	      2878	revision.c	FUNCTION_82	FOR_1
0x81ae	     0xf8761ffffff	                            ja 0x4008155	      2878	revision.c	FUNCTION_82	FOR_1
0x81b4	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2888	revision.c	FUNCTION_82	CALL_4
0x81b8	          0x4889c7	                            mov rdi, rax	      2888	revision.c	FUNCTION_82	CALL_4
0x81bb	      0xe800000000	                          call 0x4008200	      2888	revision.c	FUNCTION_82	CALL_4
0x81c0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2891	revision.c	FUNCTION_82	IF_3
0x81c4	         0xfb64075	           movzx eax, byte [rax + 0x75] 	      2891	revision.c	FUNCTION_82	IF_3
0x81c8	          0x83e002	                              and eax, 2	      2891	revision.c	FUNCTION_82	IF_3
0x81cb	            0x84c0	                             test al, al	      2891	revision.c	FUNCTION_82	IF_3
0x81cd	            0x751f	                           jne 0x400822e	      2891	revision.c	FUNCTION_82	IF_3
0x81cf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2892	revision.c	FUNCTION_82	IF_3	CALL_5
0x81d3	         0xfb64076	           movzx eax, byte [rax + 0x76] 	      2892	revision.c	FUNCTION_82	IF_3	CALL_5
0x81d7	          0x83e004	                              and eax, 4	      2892	revision.c	FUNCTION_82	IF_3	CALL_5
0x81da	            0x84c0	                             test al, al	      2891	revision.c	FUNCTION_82	IF_3
0x81dc	            0x741f	                            je 0x400823d	      2891	revision.c	FUNCTION_82	IF_3
0x81de	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2892	revision.c	FUNCTION_82	IF_3	CALL_5
0x81e2	          0x4889c7	                            mov rdi, rax	      2892	revision.c	FUNCTION_82	IF_3	CALL_5
0x81e5	      0xe8d695ffff	 call sym.limiting_can_increase_treesame	      2892	revision.c	FUNCTION_82	IF_3	CALL_5
0x81ea	            0x85c0	                           test eax, eax	      2892	revision.c	FUNCTION_82	IF_3	CALL_5
0x81ec	            0x740f	                            je 0x400823d	      2892	revision.c	FUNCTION_82	IF_3	CALL_5
0x81ee	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2893	revision.c	FUNCTION_82	IF_3
0x81f2	    0x48c780300800	              mov qword [rax + 0x830], 0	      2893	revision.c	FUNCTION_82	IF_3
0x81fd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2895	revision.c	FUNCTION_82	IF_4
0x8201	         0xfb64078	           movzx eax, byte [rax + 0x78] 	      2895	revision.c	FUNCTION_82	IF_4
0x8205	          0x83e080	                     and eax, 0xffffff80	      2895	revision.c	FUNCTION_82	IF_4
0x8208	            0x84c0	                             test al, al	      2895	revision.c	FUNCTION_82	IF_4
0x820a	            0x7414	                            je 0x4008260	      2895	revision.c	FUNCTION_82	IF_4
0x820c	      0xba02000000	                              mov edx, 2	      2896	revision.c	FUNCTION_82	IF_4	CALL_6
0x8211	      0xbe00000000	                              mov esi, 0	      2896	revision.c	FUNCTION_82	IF_4	CALL_6
0x8216	      0xbf00000000	                              mov edi, 0	      2896	revision.c	FUNCTION_82	IF_4	CALL_6
0x821b	      0xe800000000	                          call 0x4008260	      2896	revision.c	FUNCTION_82	IF_4	CALL_6
0x8220	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2900	revision.c	FUNCTION_82	IF_5
0x8224	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      2900	revision.c	FUNCTION_82	IF_5
0x8228	          0x83e030	                           and eax, 0x30	      2900	revision.c	FUNCTION_82	IF_5
0x822b	            0x3c20	                            cmp al, 0x20	      2900	revision.c	FUNCTION_82	IF_5
0x822d	            0x740c	                            je 0x400827b	      2900	revision.c	FUNCTION_82	IF_5
0x822f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2901	revision.c	FUNCTION_82	CALL_7
0x8233	          0x4889c7	                            mov rdi, rax	      2901	revision.c	FUNCTION_82	CALL_7
0x8236	      0xe800000000	                          call 0x400827b	      2901	revision.c	FUNCTION_82	CALL_7
0x823b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2902	revision.c	FUNCTION_82	IF_6
0x823f	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      2902	revision.c	FUNCTION_82	IF_6
0x8243	          0x83e030	                           and eax, 0x30	      2902	revision.c	FUNCTION_82	IF_6
0x8246	            0x84c0	                             test al, al	      2902	revision.c	FUNCTION_82	IF_6
0x8248	            0x740a	                            je 0x4008294	      2902	revision.c	FUNCTION_82	IF_6
0x824a	      0xb800000000	                              mov eax, 0	      2903	revision.c	FUNCTION_82	IF_6
0x824f	      0xe9a1000000	                           jmp 0x4008335	      2903	revision.c	FUNCTION_82	IF_6
0x8254	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2904	revision.c	FUNCTION_82	IF_7
0x8258	         0xfb64076	           movzx eax, byte [rax + 0x76] 	      2904	revision.c	FUNCTION_82	IF_7
0x825c	          0x83e004	                              and eax, 4	      2904	revision.c	FUNCTION_82	IF_7
0x825f	            0x84c0	                             test al, al	      2904	revision.c	FUNCTION_82	IF_7
0x8261	            0x7417	                            je 0x40082ba	      2904	revision.c	FUNCTION_82	IF_7
0x8263	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2905	revision.c	FUNCTION_82	IF_7	IF_8	CALL_8
0x8267	          0x4889c7	                            mov rdi, rax	      2905	revision.c	FUNCTION_82	IF_7	IF_8	CALL_8
0x826a	      0xe87da5ffff	                     call sym.limit_list	      2905	revision.c	FUNCTION_82	IF_7	IF_8	CALL_8
0x826f	            0x85c0	                           test eax, eax	      2905	revision.c	FUNCTION_82	IF_7	IF_8	CALL_8
0x8271	            0x7907	                           jns 0x40082ba	      2905	revision.c	FUNCTION_82	IF_7	IF_8	CALL_8
0x8273	      0xb8ffffffff	                     mov eax, 0xffffffff	      2906	revision.c	FUNCTION_82	IF_7	IF_8
0x8278	            0xeb7b	                           jmp 0x4008335	      2906	revision.c	FUNCTION_82	IF_7	IF_8
0x827a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2907	revision.c	FUNCTION_82	IF_9
0x827e	         0xfb64075	           movzx eax, byte [rax + 0x75] 	      2907	revision.c	FUNCTION_82	IF_9
0x8282	          0x83e001	                              and eax, 1	      2907	revision.c	FUNCTION_82	IF_9
0x8285	            0x84c0	                             test al, al	      2907	revision.c	FUNCTION_82	IF_9
0x8287	            0x7415	                            je 0x40082de	      2907	revision.c	FUNCTION_82	IF_9
0x8289	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2908	revision.c	FUNCTION_82	CALL_9
0x828d	          0x8b506c	            mov edx, dword [rax + 0x6c] 	      2908	revision.c	FUNCTION_82	CALL_9
0x8290	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2908	revision.c	FUNCTION_82	CALL_9
0x8294	            0x89d6	                            mov esi, edx	      2908	revision.c	FUNCTION_82	CALL_9
0x8296	          0x4889c7	                            mov rdi, rax	      2908	revision.c	FUNCTION_82	CALL_9
0x8299	      0xe800000000	                          call 0x40082de	      2908	revision.c	FUNCTION_82	CALL_9
0x829e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2909	revision.c	FUNCTION_82	IF_10
0x82a2	         0xfb64078	           movzx eax, byte [rax + 0x78] 	      2909	revision.c	FUNCTION_82	IF_10
0x82a6	          0x83e020	                           and eax, 0x20	      2909	revision.c	FUNCTION_82	IF_10
0x82a9	            0x84c0	                             test al, al	      2909	revision.c	FUNCTION_82	IF_10
0x82ab	            0x740c	                            je 0x40082f9	      2909	revision.c	FUNCTION_82	IF_10
0x82ad	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2910	revision.c	FUNCTION_82	CALL_10
0x82b1	          0x4889c7	                            mov rdi, rax	      2910	revision.c	FUNCTION_82	CALL_10
0x82b4	      0xe800000000	                          call 0x40082f9	      2910	revision.c	FUNCTION_82	CALL_10
0x82b9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2911	revision.c	FUNCTION_82	IF_11
0x82bd	         0xfb64075	           movzx eax, byte [rax + 0x75] 	      2911	revision.c	FUNCTION_82	IF_11
0x82c1	          0x83e002	                              and eax, 2	      2911	revision.c	FUNCTION_82	IF_11
0x82c4	            0x84c0	                             test al, al	      2911	revision.c	FUNCTION_82	IF_11
0x82c6	            0x740c	                            je 0x4008314	      2911	revision.c	FUNCTION_82	IF_11
0x82c8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2912	revision.c	FUNCTION_82	CALL_11
0x82cc	          0x4889c7	                            mov rdi, rax	      2912	revision.c	FUNCTION_82	CALL_11
0x82cf	      0xe88ffbffff	                call sym.simplify_merges	      2912	revision.c	FUNCTION_82	CALL_11
0x82d4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2913	revision.c	FUNCTION_82	IF_12
0x82d8	    0x488b80000800	           mov rax, qword [rax + 0x800] 	      2913	revision.c	FUNCTION_82	IF_12
0x82df	          0x4885c0	                           test rax, rax	      2913	revision.c	FUNCTION_82	IF_12
0x82e2	            0x740c	                            je 0x4008330	      2913	revision.c	FUNCTION_82	IF_12
0x82e4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2914	revision.c	FUNCTION_82	CALL_12
0x82e8	          0x4889c7	                            mov rdi, rax	      2914	revision.c	FUNCTION_82	CALL_12
0x82eb	      0xe8dbfcffff	                   call sym.set_children	      2914	revision.c	FUNCTION_82	CALL_12
0x82f0	      0xb800000000	                              mov eax, 0	      2915	revision.c	FUNCTION_82
0x82f5	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2916	revision.c	FUNCTION_82
0x82f9	    0x644833342528	                xor rsi, qword fs:[0x28]	      2916	revision.c	FUNCTION_82
0x8302	            0x7405	                            je 0x4008349	      2916	revision.c	FUNCTION_82
0x8304	      0xe800000000	                          call 0x4008349	      2916	revision.c	FUNCTION_82
0x8309	              0xc9	                                   leave	      2916	revision.c	FUNCTION_82
0x830a	              0xc3	                                     ret	      2916	revision.c	FUNCTION_82
get_revision_internal	FOR,1:functions,0:WHILE,1:CALL,7:IF,10:ELSE,0:DO,0:SWITCH,0	154
0x9498	              0x55	                                push rbp	      3336	revision.c	FUNCTION_99
0x9499	          0x4889e5	                            mov rbp, rsp	      3336	revision.c	FUNCTION_99
0x949c	        0x4883ec30	                           sub rsp, 0x30	      3336	revision.c	FUNCTION_99
0x94a0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3336	revision.c	FUNCTION_99
0x94a4	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      3337	revision.c	FUNCTION_99
0x94ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3340	revision.c	FUNCTION_99	IF_1
0x94b0	         0xfb64076	           movzx eax, byte [rax + 0x76] 	      3340	revision.c	FUNCTION_99	IF_1
0x94b4	          0x83e030	                           and eax, 0x30	      3340	revision.c	FUNCTION_99	IF_1
0x94b7	            0x3c20	                            cmp al, 0x20	      3340	revision.c	FUNCTION_99	IF_1
0x94b9	            0x754e	                           jne 0x4009549	      3340	revision.c	FUNCTION_99	IF_1
0x94bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3347	revision.c	FUNCTION_99	IF_1	CALL_1
0x94bf	          0x4889c7	                            mov rdi, rax	      3347	revision.c	FUNCTION_99	IF_1	CALL_1
0x94c2	      0xe800000000	                          call 0x4009507	      3347	revision.c	FUNCTION_99	IF_1	CALL_1
0x94c7	        0x488945e8	             mov qword [rbp - 0x18], rax	      3347	revision.c	FUNCTION_99	IF_1	CALL_1
0x94cb	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3348	revision.c	FUNCTION_99	IF_1	IF_2
0x94d0	            0x742e	                            je 0x4009540	      3348	revision.c	FUNCTION_99	IF_1	IF_2
0x94d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3349	revision.c	FUNCTION_99	IF_1	IF_2
0x94d6	            0x8b00	                    mov eax, dword [rax]	      3349	revision.c	FUNCTION_99	IF_1	IF_2
0x94d8	          0xc1e804	                              shr eax, 4	      3349	revision.c	FUNCTION_99	IF_1	IF_2
0x94db	      0x25ffffff07	                      and eax, 0x7ffffff	      3349	revision.c	FUNCTION_99	IF_1	IF_2
0x94e0	          0x83c808	                               or eax, 8	      3349	revision.c	FUNCTION_99	IF_1	IF_2
0x94e3	            0x89c2	                            mov edx, eax	      3349	revision.c	FUNCTION_99	IF_1	IF_2
0x94e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3349	revision.c	FUNCTION_99	IF_1	IF_2
0x94e9	    0x81e2ffffff07	                      and edx, 0x7ffffff	      3349	revision.c	FUNCTION_99	IF_1	IF_2
0x94ef	            0x89d1	                            mov ecx, edx	      3349	revision.c	FUNCTION_99	IF_1	IF_2
0x94f1	          0xc1e104	                              shl ecx, 4	      3349	revision.c	FUNCTION_99	IF_1	IF_2
0x94f4	            0x8b10	                    mov edx, dword [rax]	      3349	revision.c	FUNCTION_99	IF_1	IF_2
0x94f6	    0x81e20f000080	                     and edx, 0x8000000f	      3349	revision.c	FUNCTION_99	IF_1	IF_2
0x94fc	             0x9ca	                             or edx, ecx	      3349	revision.c	FUNCTION_99	IF_1	IF_2
0x94fe	            0x8910	                    mov dword [rax], edx	      3349	revision.c	FUNCTION_99	IF_1	IF_2
0x9500	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3350	revision.c	FUNCTION_99	IF_1
0x9504	      0xe9b3010000	                           jmp 0x40096fc	      3350	revision.c	FUNCTION_99	IF_1
0x9509	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3363	revision.c	FUNCTION_99	IF_3
0x950d	    0x8b80cc040000	           mov eax, dword [rax + 0x4cc] 	      3363	revision.c	FUNCTION_99	IF_3
0x9513	            0x85c0	                           test eax, eax	      3363	revision.c	FUNCTION_99	IF_3
0x9515	            0x747d	                            je 0x40095d4	      3363	revision.c	FUNCTION_99	IF_3
0x9517	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3364	revision.c	FUNCTION_99	IF_3	CALL_2
0x951b	          0x4889c7	                            mov rdi, rax	      3364	revision.c	FUNCTION_99	IF_3	CALL_2
0x951e	      0xe836fcffff	                 call sym.get_revision_1	      3364	revision.c	FUNCTION_99	IF_3	CALL_2
0x9523	        0x488945e8	             mov qword [rbp - 0x18], rax	      3364	revision.c	FUNCTION_99	IF_3	CALL_2
0x9527	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3365	revision.c	FUNCTION_99	IF_3	IF_4
0x952c	            0x7441	                            je 0x40095af	      3365	revision.c	FUNCTION_99	IF_3	IF_4
0x952e	            0xeb2e	                           jmp 0x400959e	      3366	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1
0x9530	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3367	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1
0x9534	    0x8b80c8040000	           mov eax, dword [rax + 0x4c8] 	      3367	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1
0x953a	          0x8d50ff	                      lea edx, [rax - 1]	      3367	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1
0x953d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3367	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1
0x9541	    0x8990c8040000	            mov dword [rax + 0x4c8], edx	      3367	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1
0x9547	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3368	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1	CALL_3
0x954b	          0x4889c7	                            mov rdi, rax	      3368	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1	CALL_3
0x954e	      0xe806fcffff	                 call sym.get_revision_1	      3368	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1	CALL_3
0x9553	        0x488945e8	             mov qword [rbp - 0x18], rax	      3368	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1	CALL_3
0x9557	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3369	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1	IF_5
0x955c	            0x7410	                            je 0x40095ae	      3369	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1	IF_5
0x955e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3366	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1
0x9562	    0x8b80c8040000	           mov eax, dword [rax + 0x4c8] 	      3366	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1
0x9568	            0x85c0	                           test eax, eax	      3366	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1
0x956a	            0x7fc4	                            jg 0x4009570	      3366	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1
0x956c	            0xeb01	                           jmp 0x40095af	      3366	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1
0x956e	              0x90	                                     nop	      3370	revision.c	FUNCTION_99	IF_3	IF_4	WHILE_1	IF_5
0x956f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3374	revision.c	FUNCTION_99	IF_3	IF_6
0x9573	    0x8b80cc040000	           mov eax, dword [rax + 0x4cc] 	      3374	revision.c	FUNCTION_99	IF_3	IF_6
0x9579	            0x85c0	                           test eax, eax	      3374	revision.c	FUNCTION_99	IF_3	IF_6
0x957b	            0x7e17	                           jle 0x40095d4	      3374	revision.c	FUNCTION_99	IF_3	IF_6
0x957d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3375	revision.c	FUNCTION_99	IF_3	IF_6
0x9581	    0x8b80cc040000	           mov eax, dword [rax + 0x4cc] 	      3375	revision.c	FUNCTION_99	IF_3	IF_6
0x9587	          0x8d50ff	                      lea edx, [rax - 1]	      3375	revision.c	FUNCTION_99	IF_3	IF_6
0x958a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3375	revision.c	FUNCTION_99	IF_3	IF_6
0x958e	    0x8990cc040000	            mov dword [rax + 0x4cc], edx	      3375	revision.c	FUNCTION_99	IF_3	IF_6
0x9594	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3378	revision.c	FUNCTION_99	IF_7
0x9599	            0x742e	                            je 0x4009609	      3378	revision.c	FUNCTION_99	IF_7
0x959b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3379	revision.c	FUNCTION_99	IF_7
0x959f	            0x8b00	                    mov eax, dword [rax]	      3379	revision.c	FUNCTION_99	IF_7
0x95a1	          0xc1e804	                              shr eax, 4	      3379	revision.c	FUNCTION_99	IF_7
0x95a4	      0x25ffffff07	                      and eax, 0x7ffffff	      3379	revision.c	FUNCTION_99	IF_7
0x95a9	          0x83c808	                               or eax, 8	      3379	revision.c	FUNCTION_99	IF_7
0x95ac	            0x89c2	                            mov edx, eax	      3379	revision.c	FUNCTION_99	IF_7
0x95ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3379	revision.c	FUNCTION_99	IF_7
0x95b2	    0x81e2ffffff07	                      and edx, 0x7ffffff	      3379	revision.c	FUNCTION_99	IF_7
0x95b8	            0x89d1	                            mov ecx, edx	      3379	revision.c	FUNCTION_99	IF_7
0x95ba	          0xc1e104	                              shl ecx, 4	      3379	revision.c	FUNCTION_99	IF_7
0x95bd	            0x8b10	                    mov edx, dword [rax]	      3379	revision.c	FUNCTION_99	IF_7
0x95bf	    0x81e20f000080	                     and edx, 0x8000000f	      3379	revision.c	FUNCTION_99	IF_7
0x95c5	             0x9ca	                             or edx, ecx	      3379	revision.c	FUNCTION_99	IF_7
0x95c7	            0x8910	                    mov dword [rax], edx	      3379	revision.c	FUNCTION_99	IF_7
0x95c9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3381	revision.c	FUNCTION_99	IF_8
0x95cd	         0xfb64076	           movzx eax, byte [rax + 0x76] 	      3381	revision.c	FUNCTION_99	IF_8
0x95d1	          0x83e030	                           and eax, 0x30	      3381	revision.c	FUNCTION_99	IF_8
0x95d4	            0x84c0	                             test al, al	      3381	revision.c	FUNCTION_99	IF_8
0x95d6	            0x7509	                           jne 0x4009621	      3381	revision.c	FUNCTION_99	IF_8
0x95d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3382	revision.c	FUNCTION_99	IF_8
0x95dc	      0xe9db000000	                           jmp 0x40096fc	      3382	revision.c	FUNCTION_99	IF_8
0x95e1	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3384	revision.c	FUNCTION_99	IF_9
0x95e6	            0x752e	                           jne 0x4009656	      3384	revision.c	FUNCTION_99	IF_9
0x95e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3390	revision.c	FUNCTION_99	IF_9
0x95ec	         0xfb65076	           movzx edx, byte [rax + 0x76] 	      3390	revision.c	FUNCTION_99	IF_9
0x95f0	          0x83e2cf	                     and edx, 0xffffffcf	      3390	revision.c	FUNCTION_99	IF_9
0x95f3	          0x83ca20	                            or edx, 0x20	      3390	revision.c	FUNCTION_99	IF_9
0x95f6	          0x885076	               mov byte [rax + 0x76], dl	      3390	revision.c	FUNCTION_99	IF_9
0x95f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3396	revision.c	FUNCTION_99	IF_9	CALL_4
0x95fd	          0x4889c7	                            mov rdi, rax	      3396	revision.c	FUNCTION_99	IF_9	CALL_4
0x9600	      0xe87ffdffff	    call sym.create_boundary_commit_list	      3396	revision.c	FUNCTION_99	IF_9	CALL_4
0x9605	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3398	revision.c	FUNCTION_99	IF_9	CALL_5
0x9609	          0x4889c7	                            mov rdi, rax	      3398	revision.c	FUNCTION_99	IF_9	CALL_5
0x960c	      0xe887feffff	          call sym.get_revision_internal	      3398	revision.c	FUNCTION_99	IF_9	CALL_5
0x9611	      0xe9a6000000	                           jmp 0x40096fc	      3398	revision.c	FUNCTION_99	IF_9	CALL_5
0x9616	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3408	revision.c	FUNCTION_99	FOR_1
0x961a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3408	revision.c	FUNCTION_99	FOR_1
0x961e	        0x488945f0	             mov qword [rbp - 0x10], rax	      3408	revision.c	FUNCTION_99	FOR_1
0x9622	      0xe986000000	                           jmp 0x40096ed	      3408	revision.c	FUNCTION_99	FOR_1
0x9627	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3410	revision.c	FUNCTION_99	FOR_1
0x962b	          0x488b00	                    mov rax, qword [rax]	      3410	revision.c	FUNCTION_99	FOR_1
0x962e	        0x488945f8	                mov qword [rbp - 8], rax	      3410	revision.c	FUNCTION_99	FOR_1
0x9632	        0x488b45f8	                mov rax, qword [rbp - 8]	      3411	revision.c	FUNCTION_99	FOR_1	IF_10
0x9636	            0x8b00	                    mov eax, dword [rax]	      3411	revision.c	FUNCTION_99	FOR_1	IF_10
0x9638	          0xc1e804	                              shr eax, 4	      3411	revision.c	FUNCTION_99	FOR_1	IF_10
0x963b	      0x25ffffff07	                      and eax, 0x7ffffff	      3411	revision.c	FUNCTION_99	FOR_1	IF_10
0x9640	          0x83e048	                           and eax, 0x48	      3411	revision.c	FUNCTION_99	FOR_1	IF_10
0x9643	            0x85c0	                           test eax, eax	      3411	revision.c	FUNCTION_99	FOR_1	IF_10
0x9645	            0x7559	                           jne 0x40096e0	      3411	revision.c	FUNCTION_99	FOR_1	IF_10
0x9647	        0x488b45f8	                mov rax, qword [rbp - 8]	      3413	revision.c	FUNCTION_99	FOR_1
0x964b	            0x8b00	                    mov eax, dword [rax]	      3413	revision.c	FUNCTION_99	FOR_1
0x964d	          0xc1e804	                              shr eax, 4	      3413	revision.c	FUNCTION_99	FOR_1
0x9650	      0x25ffffff07	                      and eax, 0x7ffffff	      3413	revision.c	FUNCTION_99	FOR_1
0x9655	          0x83c840	                            or eax, 0x40	      3413	revision.c	FUNCTION_99	FOR_1
0x9658	            0x89c2	                            mov edx, eax	      3413	revision.c	FUNCTION_99	FOR_1
0x965a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3413	revision.c	FUNCTION_99	FOR_1
0x965e	    0x81e2ffffff07	                      and edx, 0x7ffffff	      3413	revision.c	FUNCTION_99	FOR_1
0x9664	            0x89d1	                            mov ecx, edx	      3413	revision.c	FUNCTION_99	FOR_1
0x9666	          0xc1e104	                              shl ecx, 4	      3413	revision.c	FUNCTION_99	FOR_1
0x9669	            0x8b10	                    mov edx, dword [rax]	      3413	revision.c	FUNCTION_99	FOR_1
0x966b	    0x81e20f000080	                     and edx, 0x8000000f	      3413	revision.c	FUNCTION_99	FOR_1
0x9671	             0x9ca	                             or edx, ecx	      3413	revision.c	FUNCTION_99	FOR_1
0x9673	            0x8910	                    mov dword [rax], edx	      3413	revision.c	FUNCTION_99	FOR_1
0x9675	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3414	revision.c	FUNCTION_99	FOR_1	CALL_6
0x9679	        0x4883c018	                           add rax, 0x18	      3414	revision.c	FUNCTION_99	FOR_1	CALL_6
0x967d	          0x4889c7	                            mov rdi, rax	      3414	revision.c	FUNCTION_99	FOR_1	CALL_6
0x9680	      0xe8c9fcffff	                    call sym.gc_boundary	      3414	revision.c	FUNCTION_99	FOR_1	CALL_6
0x9685	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3415	revision.c	FUNCTION_99	FOR_1	CALL_7
0x9689	        0x488d5018	                   lea rdx, [rax + 0x18]	      3415	revision.c	FUNCTION_99	FOR_1	CALL_7
0x968d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3415	revision.c	FUNCTION_99	FOR_1	CALL_7
0x9691	      0xbe00000000	                              mov esi, 0	      3415	revision.c	FUNCTION_99	FOR_1	CALL_7
0x9696	          0x4889c7	                            mov rdi, rax	      3415	revision.c	FUNCTION_99	FOR_1	CALL_7
0x9699	      0xe800000000	                          call 0x40096de	      3415	revision.c	FUNCTION_99	FOR_1	CALL_7
0x969e	            0xeb01	                           jmp 0x40096e1	      3415	revision.c	FUNCTION_99	FOR_1	CALL_7
0x96a0	              0x90	                                     nop	      3412	revision.c	FUNCTION_99	FOR_1	IF_10
0x96a1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3408	revision.c	FUNCTION_99	FOR_1
0x96a5	        0x488b4008	                mov rax, qword [rax + 8]	      3408	revision.c	FUNCTION_99	FOR_1
0x96a9	        0x488945f0	             mov qword [rbp - 0x10], rax	      3408	revision.c	FUNCTION_99	FOR_1
0x96ad	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3408	revision.c	FUNCTION_99	FOR_1
0x96b2	     0xf856fffffff	                           jne 0x4009667	      3408	revision.c	FUNCTION_99	FOR_1
0x96b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3418	revision.c	FUNCTION_99
0x96bc	              0xc9	                                   leave	      3419	revision.c	FUNCTION_99
0x96bd	              0xc3	                                     ret	      3419	revision.c	FUNCTION_99
mark_uninteresting	FOR,0:functions,0:WHILE,0:CALL,1:IF,0:ELSE,0:DO,0:SWITCH,0	28
0x8051	              0x55	                                push rbp	      2862	revision.c	FUNCTION_81
0x8052	          0x4889e5	                            mov rbp, rsp	      2862	revision.c	FUNCTION_81
0x8055	        0x4883ec30	                           sub rsp, 0x30	      2862	revision.c	FUNCTION_81
0x8059	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2862	revision.c	FUNCTION_81
0x805d	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2862	revision.c	FUNCTION_81
0x8061	          0x8955dc	             mov dword [rbp - 0x24], edx	      2862	revision.c	FUNCTION_81
0x8064	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      2862	revision.c	FUNCTION_81
0x8068	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2863	revision.c	FUNCTION_81	CALL_1
0x806c	          0x4889c7	                            mov rdi, rax	      2863	revision.c	FUNCTION_81	CALL_1
0x806f	      0xe800000000	                          call 0x40080b4	      2863	revision.c	FUNCTION_81	CALL_1
0x8074	        0x488945f8	                mov qword [rbp - 8], rax	      2863	revision.c	FUNCTION_81	CALL_1
0x8078	        0x488b45f8	                mov rax, qword [rbp - 8]	      2864	revision.c	FUNCTION_81
0x807c	            0x8b00	                    mov eax, dword [rax]	      2864	revision.c	FUNCTION_81
0x807e	          0xc1e804	                              shr eax, 4	      2864	revision.c	FUNCTION_81
0x8081	      0x25ffffff07	                      and eax, 0x7ffffff	      2864	revision.c	FUNCTION_81
0x8086	          0x83c803	                               or eax, 3	      2864	revision.c	FUNCTION_81
0x8089	            0x89c2	                            mov edx, eax	      2864	revision.c	FUNCTION_81
0x808b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2864	revision.c	FUNCTION_81
0x808f	    0x81e2ffffff07	                      and edx, 0x7ffffff	      2864	revision.c	FUNCTION_81
0x8095	            0x89d1	                            mov ecx, edx	      2864	revision.c	FUNCTION_81
0x8097	          0xc1e104	                              shl ecx, 4	      2864	revision.c	FUNCTION_81
0x809a	            0x8b10	                    mov edx, dword [rax]	      2864	revision.c	FUNCTION_81
0x809c	    0x81e20f000080	                     and edx, 0x8000000f	      2864	revision.c	FUNCTION_81
0x80a2	             0x9ca	                             or edx, ecx	      2864	revision.c	FUNCTION_81
0x80a4	            0x8910	                    mov dword [rax], edx	      2864	revision.c	FUNCTION_81
0x80a6	      0xb800000000	                              mov eax, 0	      2865	revision.c	FUNCTION_81
0x80ab	              0xc9	                                   leave	      2866	revision.c	FUNCTION_81
0x80ac	              0xc3	                                     ret	      2866	revision.c	FUNCTION_81
handle_one_reflog_commit	FOR,0:functions,0:WHILE,0:CALL,4:IF,3:ELSE,1:DO,0:SWITCH,0	59
0x2f7e	              0x55	                                push rbp	      1227	revision.c	FUNCTION_41
0x2f7f	          0x4889e5	                            mov rbp, rsp	      1227	revision.c	FUNCTION_41
0x2f82	        0x4883ec20	                           sub rsp, 0x20	      1227	revision.c	FUNCTION_41
0x2f86	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1227	revision.c	FUNCTION_41
0x2f8a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1227	revision.c	FUNCTION_41
0x2f8e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1228	revision.c	FUNCTION_41
0x2f92	        0x488945f0	             mov qword [rbp - 0x10], rax	      1228	revision.c	FUNCTION_41
0x2f96	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1229	revision.c	FUNCTION_41	IF_1	CALL_1
0x2f9a	          0x4889c7	                            mov rdi, rax	      1229	revision.c	FUNCTION_41	IF_1	CALL_1
0x2f9d	      0xe8dcd4ffff	                    call sym.is_null_oid	      1229	revision.c	FUNCTION_41	IF_1	CALL_1
0x2fa2	            0x85c0	                           test eax, eax	      1229	revision.c	FUNCTION_41	IF_1	CALL_1
0x2fa4	     0xf859f000000	                           jne 0x4003089	      1229	revision.c	FUNCTION_41	IF_1	CALL_1
0x2faa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1230	revision.c	FUNCTION_41	IF_1	CALL_2
0x2fae	          0x4889c7	                            mov rdi, rax	      1230	revision.c	FUNCTION_41	IF_1	CALL_2
0x2fb1	      0xe800000000	                          call 0x4002ff6	      1230	revision.c	FUNCTION_41	IF_1	CALL_2
0x2fb6	        0x488945f8	                mov qword [rbp - 8], rax	      1230	revision.c	FUNCTION_41	IF_1	CALL_2
0x2fba	      0x48837df800	                  cmp qword [rbp - 8], 0	      1231	revision.c	FUNCTION_41	IF_1	IF_2
0x2fbf	            0x7458	                            je 0x4003059	      1231	revision.c	FUNCTION_41	IF_1	IF_2
0x2fc1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2fc5	            0x8b00	                    mov eax, dword [rax]	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2fc7	          0xc1e804	                              shr eax, 4	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2fca	      0x25ffffff07	                      and eax, 0x7ffffff	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2fcf	            0x89c2	                            mov edx, eax	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2fd1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2fd5	            0x8b00	                    mov eax, dword [rax]	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2fd7	             0x9d0	                             or eax, edx	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2fd9	      0x25ffffff07	                      and eax, 0x7ffffff	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2fde	            0x89c2	                            mov edx, eax	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2fe0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2fe4	    0x81e2ffffff07	                      and edx, 0x7ffffff	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2fea	            0x89d1	                            mov ecx, edx	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2fec	          0xc1e104	                              shl ecx, 4	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2fef	            0x8b10	                    mov edx, dword [rax]	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2ff1	    0x81e20f000080	                     and edx, 0x8000000f	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2ff7	             0x9ca	                             or edx, ecx	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2ff9	            0x8910	                    mov dword [rax], edx	      1232	revision.c	FUNCTION_41	IF_1	IF_2
0x2ffb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1234	revision.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x2fff	        0x488b4008	                mov rax, qword [rax + 8]	      1234	revision.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x3003	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1234	revision.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x3007	      0xba00000000	                              mov edx, 0	      1234	revision.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x300c	          0x4889ce	                            mov rsi, rcx	      1234	revision.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x300f	          0x4889c7	                            mov rdi, rax	      1234	revision.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x3012	      0xe800000000	                          call 0x4003057	      1234	revision.c	FUNCTION_41	IF_1	IF_2	CALL_3
0x3017	            0xeb30	                           jmp 0x4003089	      1242	revision.c	FUNCTION_41
0x3019	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1236	revision.c	FUNCTION_41	IF_1	ELSE_1	IF_3
0x301d	          0x8b4004	                mov eax, dword [rax + 4]	      1236	revision.c	FUNCTION_41	IF_1	ELSE_1	IF_3
0x3020	            0x85c0	                           test eax, eax	      1236	revision.c	FUNCTION_41	IF_1	ELSE_1	IF_3
0x3022	            0x7525	                           jne 0x4003089	      1236	revision.c	FUNCTION_41	IF_1	ELSE_1	IF_3
0x3024	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1237	revision.c	FUNCTION_41	IF_1	ELSE_1	IF_3	CALL_4
0x3028	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1237	revision.c	FUNCTION_41	IF_1	ELSE_1	IF_3	CALL_4
0x302c	          0x4889c6	                            mov rsi, rax	      1237	revision.c	FUNCTION_41	IF_1	ELSE_1	IF_3	CALL_4
0x302f	      0xbf00000000	                              mov edi, 0	      1237	revision.c	FUNCTION_41	IF_1	ELSE_1	IF_3	CALL_4
0x3034	      0xb800000000	                              mov eax, 0	      1237	revision.c	FUNCTION_41	IF_1	ELSE_1	IF_3	CALL_4
0x3039	      0xe800000000	                          call 0x400307e	      1237	revision.c	FUNCTION_41	IF_1	ELSE_1	IF_3	CALL_4
0x303e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1239	revision.c	FUNCTION_41	IF_1	ELSE_1	IF_3
0x3042	    0xc74004010000	                  mov dword [rax + 4], 1	      1239	revision.c	FUNCTION_41	IF_1	ELSE_1	IF_3
0x3049	              0x90	                                     nop	      1242	revision.c	FUNCTION_41
0x304a	              0xc9	                                   leave	      1242	revision.c	FUNCTION_41
0x304b	              0xc3	                                     ret	      1242	revision.c	FUNCTION_41
handle_refs	FOR,0:functions,0:WHILE,0:CALL,2:IF,1:ELSE,0:DO,0:SWITCH,0	32
0x2f0c	              0x55	                                push rbp	      1214	revision.c	FUNCTION_40
0x2f0d	          0x4889e5	                            mov rbp, rsp	      1214	revision.c	FUNCTION_40
0x2f10	        0x4883ec50	                           sub rsp, 0x50	      1214	revision.c	FUNCTION_40
0x2f14	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1214	revision.c	FUNCTION_40
0x2f18	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1214	revision.c	FUNCTION_40
0x2f1c	          0x8955bc	             mov dword [rbp - 0x44], edx	      1214	revision.c	FUNCTION_40
0x2f1f	        0x48894db0	             mov qword [rbp - 0x50], rcx	      1214	revision.c	FUNCTION_40
0x2f23	    0x64488b042528	                mov rax, qword fs:[0x28]	      1214	revision.c	FUNCTION_40
0x2f2c	        0x488945f8	                mov qword [rbp - 8], rax	      1214	revision.c	FUNCTION_40
0x2f30	            0x31c0	                            xor eax, eax	      1214	revision.c	FUNCTION_40
0x2f32	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1217	revision.c	FUNCTION_40	IF_1
0x2f37	            0x742e	                            je 0x4002fa7	      1217	revision.c	FUNCTION_40	IF_1
0x2f39	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      1222	revision.c	FUNCTION_40	CALL_1
0x2f3c	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      1222	revision.c	FUNCTION_40	CALL_1
0x2f40	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1222	revision.c	FUNCTION_40	CALL_1
0x2f44	          0x4889ce	                            mov rsi, rcx	      1222	revision.c	FUNCTION_40	CALL_1
0x2f47	          0x4889c7	                            mov rdi, rax	      1222	revision.c	FUNCTION_40	CALL_1
0x2f4a	      0xe8d7feffff	               call sym.init_all_refs_cb	      1222	revision.c	FUNCTION_40	CALL_1
0x2f4f	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1223	revision.c	FUNCTION_40	CALL_2
0x2f53	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1223	revision.c	FUNCTION_40	CALL_2
0x2f57	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1223	revision.c	FUNCTION_40	CALL_2
0x2f5b	      0xbe00000000	                              mov esi, 0	      1223	revision.c	FUNCTION_40	CALL_2
0x2f60	          0x4889cf	                            mov rdi, rcx	      1223	revision.c	FUNCTION_40	CALL_2
0x2f63	            0xffd0	                                call rax	      1223	revision.c	FUNCTION_40	CALL_2
0x2f65	            0xeb01	                           jmp 0x4002fa8	      1223	revision.c	FUNCTION_40	CALL_2
0x2f67	              0x90	                                     nop	      1219	revision.c	FUNCTION_40	IF_1
0x2f68	        0x488b45f8	                mov rax, qword [rbp - 8]	      1224	revision.c	FUNCTION_40
0x2f6c	    0x644833042528	                xor rax, qword fs:[0x28]	      1224	revision.c	FUNCTION_40
0x2f75	            0x7405	                            je 0x4002fbc	      1224	revision.c	FUNCTION_40
0x2f77	      0xe800000000	                          call 0x4002fbc	      1224	revision.c	FUNCTION_40
0x2f7c	              0xc9	                                   leave	      1224	revision.c	FUNCTION_40
0x2f7d	              0xc3	                                     ret	      1224	revision.c	FUNCTION_40
for_each_good_bisect_ref	FOR,0:functions,0:WHILE,0:CALL,1:IF,0:ELSE,0:DO,0:SWITCH,0	14
0x64ed	              0x55	                                push rbp	      2156	revision.c	FUNCTION_66
0x64ee	          0x4889e5	                            mov rbp, rsp	      2156	revision.c	FUNCTION_66
0x64f1	        0x4883ec20	                           sub rsp, 0x20	      2156	revision.c	FUNCTION_66
0x64f5	        0x48897df8	                mov qword [rbp - 8], rdi	      2156	revision.c	FUNCTION_66
0x64f9	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2156	revision.c	FUNCTION_66
0x64fd	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2156	revision.c	FUNCTION_66
0x6501	    0x488b0d000000	            mov rcx, qword [0x04006548] 	      2157	revision.c	FUNCTION_66	CALL_1
0x6508	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2157	revision.c	FUNCTION_66	CALL_1
0x650c	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      2157	revision.c	FUNCTION_66	CALL_1
0x6510	        0x488b45f8	                mov rax, qword [rbp - 8]	      2157	revision.c	FUNCTION_66	CALL_1
0x6514	          0x4889c7	                            mov rdi, rax	      2157	revision.c	FUNCTION_66	CALL_1
0x6517	      0xe801ffffff	            call sym.for_each_bisect_ref	      2157	revision.c	FUNCTION_66	CALL_1
0x651c	              0xc9	                                   leave	      2158	revision.c	FUNCTION_66
0x651d	              0xc3	                                     ret	      2158	revision.c	FUNCTION_66
add_reflogs_to_pending	FOR,0:functions,0:WHILE,0:CALL,3:IF,1:ELSE,0:DO,0:SWITCH,0	35
0x317d	              0x55	                                push rbp	      1284	revision.c	FUNCTION_45
0x317e	          0x4889e5	                            mov rbp, rsp	      1284	revision.c	FUNCTION_45
0x3181	        0x4883ec40	                           sub rsp, 0x40	      1284	revision.c	FUNCTION_45
0x3185	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1284	revision.c	FUNCTION_45
0x3189	          0x8975c4	             mov dword [rbp - 0x3c], esi	      1284	revision.c	FUNCTION_45
0x318c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1284	revision.c	FUNCTION_45
0x3195	        0x488945f8	                mov qword [rbp - 8], rax	      1284	revision.c	FUNCTION_45
0x3199	            0x31c0	                            xor eax, eax	      1284	revision.c	FUNCTION_45
0x319b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1287	revision.c	FUNCTION_45
0x319f	        0x488945d8	             mov qword [rbp - 0x28], rax	      1287	revision.c	FUNCTION_45
0x31a3	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1288	revision.c	FUNCTION_45
0x31a6	          0x8945d0	             mov dword [rbp - 0x30], eax	      1288	revision.c	FUNCTION_45
0x31a9	    0x488b05000000	            mov rax, qword [0x040031f0] 	      1289	revision.c	FUNCTION_45	CALL_1
0x31b0	          0x4889c7	                            mov rdi, rax	      1289	revision.c	FUNCTION_45	CALL_1
0x31b3	      0xe800000000	                          call 0x40031f8	      1289	revision.c	FUNCTION_45	CALL_1
0x31b8	        0x488945e8	             mov qword [rbp - 0x18], rax	      1289	revision.c	FUNCTION_45	CALL_1
0x31bc	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1290	revision.c	FUNCTION_45	CALL_2
0x31c0	          0x4889c6	                            mov rsi, rax	      1290	revision.c	FUNCTION_45	CALL_2
0x31c3	      0xbf00000000	                              mov edi, 0	      1290	revision.c	FUNCTION_45	CALL_2
0x31c8	      0xe800000000	                          call 0x400320d	      1290	revision.c	FUNCTION_45	CALL_2
0x31cd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1292	revision.c	FUNCTION_45	IF_1
0x31d1	         0xfb64075	           movzx eax, byte [rax + 0x75] 	      1292	revision.c	FUNCTION_45	IF_1
0x31d5	          0x83e008	                              and eax, 8	      1292	revision.c	FUNCTION_45	IF_1
0x31d8	            0x84c0	                             test al, al	      1292	revision.c	FUNCTION_45	IF_1
0x31da	            0x750c	                           jne 0x4003228	      1292	revision.c	FUNCTION_45	IF_1
0x31dc	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1293	revision.c	FUNCTION_45	CALL_3
0x31e0	          0x4889c7	                            mov rdi, rax	      1293	revision.c	FUNCTION_45	CALL_3
0x31e3	      0xe808ffffff	   call sym.add_other_reflogs_to_pending	      1293	revision.c	FUNCTION_45	CALL_3
0x31e8	              0x90	                                     nop	      1294	revision.c	FUNCTION_45
0x31e9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1294	revision.c	FUNCTION_45
0x31ed	    0x644833042528	                xor rax, qword fs:[0x28]	      1294	revision.c	FUNCTION_45
0x31f6	            0x7405	                            je 0x400323d	      1294	revision.c	FUNCTION_45
0x31f8	      0xe800000000	                          call 0x400323d	      1294	revision.c	FUNCTION_45
0x31fd	              0xc9	                                   leave	      1294	revision.c	FUNCTION_45
0x31fe	              0xc3	                                     ret	      1294	revision.c	FUNCTION_45
add_other_reflogs_to_pending	FOR,1:functions,0:WHILE,0:CALL,4:IF,1:ELSE,0:DO,0:SWITCH,0	42
0x30f0	              0x55	                                push rbp	      1265	revision.c	FUNCTION_44
0x30f1	          0x4889e5	                            mov rbp, rsp	      1265	revision.c	FUNCTION_44
0x30f4	        0x4883ec30	                           sub rsp, 0x30	      1265	revision.c	FUNCTION_44
0x30f8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1265	revision.c	FUNCTION_44
0x30fc	      0xbf00000000	                              mov edi, 0	      1268	revision.c	FUNCTION_44	CALL_1
0x3101	      0xe800000000	                          call 0x4003146	      1268	revision.c	FUNCTION_44	CALL_1
0x3106	        0x488945f0	             mov qword [rbp - 0x10], rax	      1268	revision.c	FUNCTION_44	CALL_1
0x310a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1269	revision.c	FUNCTION_44	FOR_1
0x310e	        0x488945e8	             mov qword [rbp - 0x18], rax	      1269	revision.c	FUNCTION_44	FOR_1
0x3112	            0xeb4e	                           jmp 0x40031a2	      1269	revision.c	FUNCTION_44	FOR_1
0x3114	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1270	revision.c	FUNCTION_44	FOR_1
0x3118	          0x488b00	                    mov rax, qword [rax]	      1270	revision.c	FUNCTION_44	FOR_1
0x311b	        0x488945f8	                mov qword [rbp - 8], rax	      1270	revision.c	FUNCTION_44	FOR_1
0x311f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1272	revision.c	FUNCTION_44	FOR_1	IF_1
0x3123	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1272	revision.c	FUNCTION_44	FOR_1	IF_1
0x3126	            0x85c0	                           test eax, eax	      1272	revision.c	FUNCTION_44	FOR_1	IF_1
0x3128	            0x7532	                           jne 0x400319c	      1272	revision.c	FUNCTION_44	FOR_1	IF_1
0x312a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1275	revision.c	FUNCTION_44	FOR_1	CALL_2
0x312e	          0x4889c7	                            mov rdi, rax	      1275	revision.c	FUNCTION_44	FOR_1	CALL_2
0x3131	      0xe800000000	                          call 0x4003176	      1275	revision.c	FUNCTION_44	FOR_1	CALL_2
0x3136	          0x4889c2	                            mov rdx, rax	      1275	revision.c	FUNCTION_44	FOR_1	CALL_2
0x3139	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1275	revision.c	FUNCTION_44	FOR_1	CALL_2
0x313d	        0x48895018	             mov qword [rax + 0x18], rdx	      1275	revision.c	FUNCTION_44	FOR_1	CALL_2
0x3141	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1276	revision.c	FUNCTION_44	FOR_1	CALL_3
0x3145	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1276	revision.c	FUNCTION_44	FOR_1	CALL_3
0x3149	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1276	revision.c	FUNCTION_44	FOR_1	CALL_3
0x314d	      0xbe00000000	                              mov esi, 0	      1276	revision.c	FUNCTION_44	FOR_1	CALL_3
0x3152	          0x4889c7	                            mov rdi, rax	      1276	revision.c	FUNCTION_44	FOR_1	CALL_3
0x3155	      0xe800000000	                          call 0x400319a	      1276	revision.c	FUNCTION_44	FOR_1	CALL_3
0x315a	            0xeb01	                           jmp 0x400319d	      1276	revision.c	FUNCTION_44	FOR_1	CALL_3
0x315c	              0x90	                                     nop	      1273	revision.c	FUNCTION_44	FOR_1	IF_1
0x315d	      0x488345e808	               add qword [rbp - 0x18], 8	      1269	revision.c	FUNCTION_44	FOR_1
0x3162	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1269	revision.c	FUNCTION_44	FOR_1
0x3166	          0x488b00	                    mov rax, qword [rax]	      1269	revision.c	FUNCTION_44	FOR_1
0x3169	          0x4885c0	                           test rax, rax	      1269	revision.c	FUNCTION_44	FOR_1
0x316c	            0x75a6	                           jne 0x4003154	      1269	revision.c	FUNCTION_44	FOR_1
0x316e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1280	revision.c	FUNCTION_44	CALL_4
0x3172	          0x4889c7	                            mov rdi, rax	      1280	revision.c	FUNCTION_44	CALL_4
0x3175	      0xe800000000	                          call 0x40031ba	      1280	revision.c	FUNCTION_44	CALL_4
0x317a	              0x90	                                     nop	      1281	revision.c	FUNCTION_44
0x317b	              0xc9	                                   leave	      1281	revision.c	FUNCTION_44
0x317c	              0xc3	                                     ret	      1281	revision.c	FUNCTION_44
remove_duplicate_parents	FOR,1:functions,0:WHILE,1:CALL,2:IF,2:ELSE,0:DO,0:SWITCH,0	90
0x7648	              0x55	                                push rbp	      2495	revision.c	FUNCTION_71
0x7649	          0x4889e5	                            mov rbp, rsp	      2495	revision.c	FUNCTION_71
0x764c	        0x4883ec40	                           sub rsp, 0x40	      2495	revision.c	FUNCTION_71
0x7650	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2495	revision.c	FUNCTION_71
0x7654	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2495	revision.c	FUNCTION_71
0x7658	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2496	revision.c	FUNCTION_71	CALL_1
0x765c	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2496	revision.c	FUNCTION_71	CALL_1
0x7660	    0x4881c2300800	                          add rdx, 0x830	      2496	revision.c	FUNCTION_71	CALL_1
0x7667	          0x4889c6	                            mov rsi, rax	      2496	revision.c	FUNCTION_71	CALL_1
0x766a	          0x4889d7	                            mov rdi, rdx	      2496	revision.c	FUNCTION_71	CALL_1
0x766d	      0xe800000000	                          call 0x40076b2	      2496	revision.c	FUNCTION_71	CALL_1
0x7672	        0x488945f0	             mov qword [rbp - 0x10], rax	      2496	revision.c	FUNCTION_71	CALL_1
0x7676	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2501	revision.c	FUNCTION_71
0x767a	        0x4883c030	                           add rax, 0x30	      2501	revision.c	FUNCTION_71
0x767e	        0x488945e0	             mov qword [rbp - 0x20], rax	      2501	revision.c	FUNCTION_71
0x7682	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      2502	revision.c	FUNCTION_71
0x7689	      0xe98c000000	                           jmp 0x400775a	      2503	revision.c	FUNCTION_71	WHILE_1
0x768e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2504	revision.c	FUNCTION_71	WHILE_1
0x7692	          0x488b00	                    mov rax, qword [rax]	      2504	revision.c	FUNCTION_71	WHILE_1
0x7695	        0x488945f8	                mov qword [rbp - 8], rax	      2504	revision.c	FUNCTION_71	WHILE_1
0x7699	        0x488b45f8	                mov rax, qword [rbp - 8]	      2505	revision.c	FUNCTION_71	WHILE_1	IF_1
0x769d	            0x8b00	                    mov eax, dword [rax]	      2505	revision.c	FUNCTION_71	WHILE_1	IF_1
0x769f	          0xc1e804	                              shr eax, 4	      2505	revision.c	FUNCTION_71	WHILE_1	IF_1
0x76a2	      0x25ffffff07	                      and eax, 0x7ffffff	      2505	revision.c	FUNCTION_71	WHILE_1	IF_1
0x76a7	          0x83e010	                           and eax, 0x10	      2505	revision.c	FUNCTION_71	WHILE_1	IF_1
0x76aa	            0x85c0	                           test eax, eax	      2505	revision.c	FUNCTION_71	WHILE_1	IF_1
0x76ac	            0x742e	                            je 0x400771c	      2505	revision.c	FUNCTION_71	WHILE_1	IF_1
0x76ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2506	revision.c	FUNCTION_71	WHILE_1	IF_1
0x76b2	        0x488b5008	                mov rdx, qword [rax + 8]	      2506	revision.c	FUNCTION_71	WHILE_1	IF_1
0x76b6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2506	revision.c	FUNCTION_71	WHILE_1	IF_1
0x76ba	          0x488910	                    mov qword [rax], rdx	      2506	revision.c	FUNCTION_71	WHILE_1	IF_1
0x76bd	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2507	revision.c	FUNCTION_71	WHILE_1	IF_1	IF_2
0x76c2	            0x7456	                            je 0x400775a	      2507	revision.c	FUNCTION_71	WHILE_1	IF_1	IF_2
0x76c4	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2508	revision.c	FUNCTION_71	WHILE_1	IF_1	CALL_2
0x76c7	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2508	revision.c	FUNCTION_71	WHILE_1	IF_1	CALL_2
0x76cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2508	revision.c	FUNCTION_71	WHILE_1	IF_1	CALL_2
0x76cf	          0x4889ce	                            mov rsi, rcx	      2508	revision.c	FUNCTION_71	WHILE_1	IF_1	CALL_2
0x76d2	          0x4889c7	                            mov rdi, rax	      2508	revision.c	FUNCTION_71	WHILE_1	IF_1	CALL_2
0x76d5	      0xe8049dffff	               call sym.compact_treesame	      2508	revision.c	FUNCTION_71	WHILE_1	IF_1	CALL_2
0x76da	            0xeb3e	                           jmp 0x400775a	      2509	revision.c	FUNCTION_71	WHILE_1	IF_1
0x76dc	        0x488b45f8	                mov rax, qword [rbp - 8]	      2511	revision.c	FUNCTION_71	WHILE_1
0x76e0	            0x8b00	                    mov eax, dword [rax]	      2511	revision.c	FUNCTION_71	WHILE_1
0x76e2	          0xc1e804	                              shr eax, 4	      2511	revision.c	FUNCTION_71	WHILE_1
0x76e5	      0x25ffffff07	                      and eax, 0x7ffffff	      2511	revision.c	FUNCTION_71	WHILE_1
0x76ea	          0x83c810	                            or eax, 0x10	      2511	revision.c	FUNCTION_71	WHILE_1
0x76ed	            0x89c2	                            mov edx, eax	      2511	revision.c	FUNCTION_71	WHILE_1
0x76ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      2511	revision.c	FUNCTION_71	WHILE_1
0x76f3	    0x81e2ffffff07	                      and edx, 0x7ffffff	      2511	revision.c	FUNCTION_71	WHILE_1
0x76f9	            0x89d1	                            mov ecx, edx	      2511	revision.c	FUNCTION_71	WHILE_1
0x76fb	          0xc1e104	                              shl ecx, 4	      2511	revision.c	FUNCTION_71	WHILE_1
0x76fe	            0x8b10	                    mov edx, dword [rax]	      2511	revision.c	FUNCTION_71	WHILE_1
0x7700	    0x81e20f000080	                     and edx, 0x8000000f	      2511	revision.c	FUNCTION_71	WHILE_1
0x7706	             0x9ca	                             or edx, ecx	      2511	revision.c	FUNCTION_71	WHILE_1
0x7708	            0x8910	                    mov dword [rax], edx	      2511	revision.c	FUNCTION_71	WHILE_1
0x770a	        0x8345dc01	               add dword [rbp - 0x24], 1	      2512	revision.c	FUNCTION_71	WHILE_1
0x770e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2513	revision.c	FUNCTION_71	WHILE_1
0x7712	        0x4883c008	                              add rax, 8	      2513	revision.c	FUNCTION_71	WHILE_1
0x7716	        0x488945e0	             mov qword [rbp - 0x20], rax	      2513	revision.c	FUNCTION_71	WHILE_1
0x771a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2503	revision.c	FUNCTION_71	WHILE_1
0x771e	          0x488b00	                    mov rax, qword [rax]	      2503	revision.c	FUNCTION_71	WHILE_1
0x7721	        0x488945e8	             mov qword [rbp - 0x18], rax	      2503	revision.c	FUNCTION_71	WHILE_1
0x7725	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2503	revision.c	FUNCTION_71	WHILE_1
0x772a	     0xf855effffff	                           jne 0x40076ce	      2503	revision.c	FUNCTION_71	WHILE_1
0x7730	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2516	revision.c	FUNCTION_71	FOR_1
0x7734	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2516	revision.c	FUNCTION_71	FOR_1
0x7738	        0x488945e8	             mov qword [rbp - 0x18], rax	      2516	revision.c	FUNCTION_71	FOR_1
0x773c	            0xeb3e	                           jmp 0x40077bc	      2516	revision.c	FUNCTION_71	FOR_1
0x773e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2517	revision.c	FUNCTION_71	FOR_1
0x7742	          0x488b10	                    mov rdx, qword [rax]	      2517	revision.c	FUNCTION_71	FOR_1
0x7745	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2517	revision.c	FUNCTION_71	FOR_1
0x7749	          0x488b00	                    mov rax, qword [rax]	      2517	revision.c	FUNCTION_71	FOR_1
0x774c	            0x8b00	                    mov eax, dword [rax]	      2517	revision.c	FUNCTION_71	FOR_1
0x774e	          0xc1e804	                              shr eax, 4	      2517	revision.c	FUNCTION_71	FOR_1
0x7751	      0x25ffffff07	                      and eax, 0x7ffffff	      2517	revision.c	FUNCTION_71	FOR_1
0x7756	      0x25efffff07	                      and eax, 0x7ffffef	      2517	revision.c	FUNCTION_71	FOR_1
0x775b	      0x25ffffff07	                      and eax, 0x7ffffff	      2517	revision.c	FUNCTION_71	FOR_1
0x7760	          0xc1e004	                              shl eax, 4	      2517	revision.c	FUNCTION_71	FOR_1
0x7763	            0x89c1	                            mov ecx, eax	      2517	revision.c	FUNCTION_71	FOR_1
0x7765	            0x8b02	                    mov eax, dword [rdx]	      2517	revision.c	FUNCTION_71	FOR_1
0x7767	      0x250f000080	                     and eax, 0x8000000f	      2517	revision.c	FUNCTION_71	FOR_1
0x776c	             0x9c8	                             or eax, ecx	      2517	revision.c	FUNCTION_71	FOR_1
0x776e	            0x8902	                    mov dword [rdx], eax	      2517	revision.c	FUNCTION_71	FOR_1
0x7770	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2516	revision.c	FUNCTION_71	FOR_1
0x7774	        0x488b4008	                mov rax, qword [rax + 8]	      2516	revision.c	FUNCTION_71	FOR_1
0x7778	        0x488945e8	             mov qword [rbp - 0x18], rax	      2516	revision.c	FUNCTION_71	FOR_1
0x777c	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2516	revision.c	FUNCTION_71	FOR_1
0x7781	            0x75bb	                           jne 0x400777e	      2516	revision.c	FUNCTION_71	FOR_1
0x7783	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2520	revision.c	FUNCTION_71
0x7786	              0xc9	                                   leave	      2521	revision.c	FUNCTION_71
0x7787	              0xc3	                                     ret	      2521	revision.c	FUNCTION_71
skip_prefix	FOR,0:functions,0:WHILE,0:CALL,0:IF,1:ELSE,0:DO,1:SWITCH,0	27
0xb	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_124
0xc	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_124
0xf	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_124
0x13	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_124
0x17	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_124
0x1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x1f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x22	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x24	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x2a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x2e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x31	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x36	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_124	DO_1	IF_1
0x38	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x3c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x40	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_124	DO_1
0x44	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x4f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_124	DO_1
0x53	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_124	DO_1
0x56	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_124	DO_1
0x58	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_124	DO_1
0x5a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_124
0x5f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_124
0x60	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_124
add_ref_exclusion	FOR,0:functions,0:WHILE,0:CALL,2:IF,1:ELSE,0:DO,0:SWITCH,0	29
0x2ead	              0x55	                                push rbp	      1203	revision.c	FUNCTION_39
0x2eae	          0x4889e5	                            mov rbp, rsp	      1203	revision.c	FUNCTION_39
0x2eb1	        0x4883ec10	                           sub rsp, 0x10	      1203	revision.c	FUNCTION_39
0x2eb5	        0x48897df8	                mov qword [rbp - 8], rdi	      1203	revision.c	FUNCTION_39
0x2eb9	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1203	revision.c	FUNCTION_39
0x2ebd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1204	revision.c	FUNCTION_39	IF_1
0x2ec1	          0x488b00	                    mov rax, qword [rax]	      1204	revision.c	FUNCTION_39	IF_1
0x2ec4	          0x4885c0	                           test rax, rax	      1204	revision.c	FUNCTION_39	IF_1
0x2ec7	            0x752a	                           jne 0x4002f33	      1204	revision.c	FUNCTION_39	IF_1
0x2ec9	      0xbe20000000	                           mov esi, 0x20	      1205	revision.c	FUNCTION_39	IF_1	CALL_1
0x2ece	      0xbf01000000	                              mov edi, 1	      1205	revision.c	FUNCTION_39	IF_1	CALL_1
0x2ed3	      0xe800000000	                          call 0x4002f18	      1205	revision.c	FUNCTION_39	IF_1	CALL_1
0x2ed8	          0x4889c2	                            mov rdx, rax	      1205	revision.c	FUNCTION_39	IF_1	CALL_1
0x2edb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1205	revision.c	FUNCTION_39	IF_1	CALL_1
0x2edf	          0x488910	                    mov qword [rax], rdx	      1205	revision.c	FUNCTION_39	IF_1	CALL_1
0x2ee2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1206	revision.c	FUNCTION_39	IF_1
0x2ee6	          0x488b00	                    mov rax, qword [rax]	      1206	revision.c	FUNCTION_39	IF_1
0x2ee9	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      1206	revision.c	FUNCTION_39	IF_1
0x2eed	          0x83ca01	                               or edx, 1	      1206	revision.c	FUNCTION_39	IF_1
0x2ef0	          0x885010	               mov byte [rax + 0x10], dl	      1206	revision.c	FUNCTION_39	IF_1
0x2ef3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1208	revision.c	FUNCTION_39	CALL_2
0x2ef7	          0x488b00	                    mov rax, qword [rax]	      1208	revision.c	FUNCTION_39	CALL_2
0x2efa	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1208	revision.c	FUNCTION_39	CALL_2
0x2efe	          0x4889d6	                            mov rsi, rdx	      1208	revision.c	FUNCTION_39	CALL_2
0x2f01	          0x4889c7	                            mov rdi, rax	      1208	revision.c	FUNCTION_39	CALL_2
0x2f04	      0xe800000000	                          call 0x4002f49	      1208	revision.c	FUNCTION_39	CALL_2
0x2f09	              0x90	                                     nop	      1209	revision.c	FUNCTION_39
0x2f0a	              0xc9	                                   leave	      1209	revision.c	FUNCTION_39
0x2f0b	              0xc3	                                     ret	      1209	revision.c	FUNCTION_39
cherry_pick_list	FOR,3:functions,0:WHILE,0:CALL,4:IF,8:ELSE,2:DO,0:SWITCH,0	184
0x2035	              0x55	                                push rbp	       831	revision.c	FUNCTION_27
0x2036	          0x4889e5	                            mov rbp, rsp	       831	revision.c	FUNCTION_27
0x2039	    0x4881ec200200	                          sub rsp, 0x220	       831	revision.c	FUNCTION_27
0x2040	    0x4889bde8fdff	            mov qword [rbp - 0x218], rdi	       831	revision.c	FUNCTION_27
0x2047	    0x4889b5e0fdff	            mov qword [rbp - 0x220], rsi	       831	revision.c	FUNCTION_27
0x204e	    0x64488b042528	                mov rax, qword fs:[0x28]	       831	revision.c	FUNCTION_27
0x2057	        0x488945f8	                mov qword [rbp - 8], rax	       831	revision.c	FUNCTION_27
0x205b	            0x31c0	                            xor eax, eax	       831	revision.c	FUNCTION_27
0x205d	    0xc785fcfdffff	              mov dword [rbp - 0x204], 0	       833	revision.c	FUNCTION_27
0x2067	    0xc78500feffff	              mov dword [rbp - 0x200], 0	       833	revision.c	FUNCTION_27
0x2071	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	       839	revision.c	FUNCTION_27	FOR_1
0x2078	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	       839	revision.c	FUNCTION_27	FOR_1
0x207f	            0xeb66	                           jmp 0x4002127	       839	revision.c	FUNCTION_27	FOR_1
0x2081	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       840	revision.c	FUNCTION_27	FOR_1
0x2088	          0x488b00	                    mov rax, qword [rax]	       840	revision.c	FUNCTION_27	FOR_1
0x208b	    0x48898520feff	            mov qword [rbp - 0x1e0], rax	       840	revision.c	FUNCTION_27	FOR_1
0x2092	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	       841	revision.c	FUNCTION_27	FOR_1
0x2099	            0x8b00	                    mov eax, dword [rax]	       841	revision.c	FUNCTION_27	FOR_1
0x209b	          0xc1e804	                              shr eax, 4	       841	revision.c	FUNCTION_27	FOR_1
0x209e	      0x25ffffff07	                      and eax, 0x7ffffff	       841	revision.c	FUNCTION_27	FOR_1
0x20a3	    0x898504feffff	            mov dword [rbp - 0x1fc], eax	       841	revision.c	FUNCTION_27	FOR_1
0x20a9	    0x8b8504feffff	            mov eax, dword [rbp - 0x1fc]	       842	revision.c	FUNCTION_27	FOR_1	IF_1
0x20af	          0x83e020	                           and eax, 0x20	       842	revision.c	FUNCTION_27	FOR_1	IF_1
0x20b2	            0x85c0	                           test eax, eax	       842	revision.c	FUNCTION_27	FOR_1	IF_1
0x20b4	            0x751f	                           jne 0x4002115	       842	revision.c	FUNCTION_27	FOR_1	IF_1
0x20b6	    0x8b8504feffff	            mov eax, dword [rbp - 0x1fc]	       844	revision.c	FUNCTION_27	FOR_1	ELSE_1	IF_2
0x20bc	      0x2500010000	                          and eax, 0x100	       844	revision.c	FUNCTION_27	FOR_1	ELSE_1	IF_2
0x20c1	            0x85c0	                           test eax, eax	       844	revision.c	FUNCTION_27	FOR_1	ELSE_1	IF_2
0x20c3	            0x7409	                            je 0x400210e	       844	revision.c	FUNCTION_27	FOR_1	ELSE_1	IF_2
0x20c5	    0x8385fcfdffff	              add dword [rbp - 0x204], 1	       845	revision.c	FUNCTION_27	FOR_1	ELSE_1	IF_2
0x20cc	            0xeb07	                           jmp 0x4002115	       845	revision.c	FUNCTION_27	FOR_1	ELSE_1	IF_2
0x20ce	    0x838500feffff	              add dword [rbp - 0x200], 1	       847	revision.c	FUNCTION_27	FOR_1	ELSE_2
0x20d5	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       839	revision.c	FUNCTION_27	FOR_1
0x20dc	        0x488b4008	                mov rax, qword [rax + 8]	       839	revision.c	FUNCTION_27	FOR_1
0x20e0	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	       839	revision.c	FUNCTION_27	FOR_1
0x20e7	    0x4883bd18feff	              cmp qword [rbp - 0x1e8], 0	       839	revision.c	FUNCTION_27	FOR_1
0x20ef	            0x7590	                           jne 0x40020c1	       839	revision.c	FUNCTION_27	FOR_1
0x20f1	    0x83bdfcfdffff	              cmp dword [rbp - 0x204], 0	       850	revision.c	FUNCTION_27	IF_3
0x20f8	     0xf8471020000	                            je 0x40023af	       850	revision.c	FUNCTION_27	IF_3
0x20fe	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	       850	revision.c	FUNCTION_27	IF_3
0x2105	     0xf8464020000	                            je 0x40023af	       850	revision.c	FUNCTION_27	IF_3
0x210b	    0x8b85fcfdffff	            mov eax, dword [rbp - 0x204]	       853	revision.c	FUNCTION_27
0x2111	    0x3b8500feffff	            cmp eax, dword [rbp - 0x200]	       853	revision.c	FUNCTION_27
0x2117	           0xf9cc0	                                 setl al	       853	revision.c	FUNCTION_27
0x211a	           0xfb6c0	                           movzx eax, al	       853	revision.c	FUNCTION_27
0x211d	    0x898508feffff	            mov dword [rbp - 0x1f8], eax	       853	revision.c	FUNCTION_27
0x2123	    0x488d8540feff	                  lea rax, [rbp - 0x1c0]	       854	revision.c	FUNCTION_27	CALL_1
0x212a	          0x4889c7	                            mov rdi, rax	       854	revision.c	FUNCTION_27	CALL_1
0x212d	      0xe800000000	                          call 0x4002172	       854	revision.c	FUNCTION_27	CALL_1
0x2132	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	       855	revision.c	FUNCTION_27
0x2139	    0x488b90080600	           mov rdx, qword [rax + 0x608] 	       855	revision.c	FUNCTION_27
0x2140	        0x48895580	             mov qword [rbp - 0x80], rdx	       855	revision.c	FUNCTION_27
0x2144	    0x488b90100600	           mov rdx, qword [rax + 0x610] 	       855	revision.c	FUNCTION_27
0x214b	        0x48895588	             mov qword [rbp - 0x78], rdx	       855	revision.c	FUNCTION_27
0x214f	    0x488b80180600	           mov rax, qword [rax + 0x618] 	       855	revision.c	FUNCTION_27
0x2156	        0x48894590	             mov qword [rbp - 0x70], rax	       855	revision.c	FUNCTION_27
0x215a	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	       858	revision.c	FUNCTION_27	FOR_2
0x2161	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	       858	revision.c	FUNCTION_27	FOR_2
0x2168	      0xe981000000	                           jmp 0x400222e	       858	revision.c	FUNCTION_27	FOR_2
0x216d	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       859	revision.c	FUNCTION_27	FOR_2
0x2174	          0x488b00	                    mov rax, qword [rax]	       859	revision.c	FUNCTION_27	FOR_2
0x2177	    0x48898528feff	            mov qword [rbp - 0x1d8], rax	       859	revision.c	FUNCTION_27	FOR_2
0x217e	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	       860	revision.c	FUNCTION_27	FOR_2
0x2185	            0x8b00	                    mov eax, dword [rax]	       860	revision.c	FUNCTION_27	FOR_2
0x2187	          0xc1e804	                              shr eax, 4	       860	revision.c	FUNCTION_27	FOR_2
0x218a	      0x25ffffff07	                      and eax, 0x7ffffff	       860	revision.c	FUNCTION_27	FOR_2
0x218f	    0x89850cfeffff	            mov dword [rbp - 0x1f4], eax	       860	revision.c	FUNCTION_27	FOR_2
0x2195	    0x8b850cfeffff	            mov eax, dword [rbp - 0x1f4]	       862	revision.c	FUNCTION_27	FOR_2	IF_4
0x219b	          0x83e020	                           and eax, 0x20	       862	revision.c	FUNCTION_27	FOR_2	IF_4
0x219e	            0x85c0	                           test eax, eax	       862	revision.c	FUNCTION_27	FOR_2	IF_4
0x21a0	            0x7536	                           jne 0x4002218	       862	revision.c	FUNCTION_27	FOR_2	IF_4
0x21a2	    0x8b850cfeffff	            mov eax, dword [rbp - 0x1f4]	       869	revision.c	FUNCTION_27	FOR_2	IF_5
0x21a8	      0x2500010000	                          and eax, 0x100	       869	revision.c	FUNCTION_27	FOR_2	IF_5
0x21ad	            0x85c0	                           test eax, eax	       869	revision.c	FUNCTION_27	FOR_2	IF_5
0x21af	           0xf95c0	                                setne al	       869	revision.c	FUNCTION_27	FOR_2	IF_5
0x21b2	           0xfb6c0	                           movzx eax, al	       869	revision.c	FUNCTION_27	FOR_2	IF_5
0x21b5	    0x3b8508feffff	            cmp eax, dword [rbp - 0x1f8]	       869	revision.c	FUNCTION_27	FOR_2	IF_5
0x21bb	            0x751e	                           jne 0x400221b	       869	revision.c	FUNCTION_27	FOR_2	IF_5
0x21bd	    0x488d9540feff	                  lea rdx, [rbp - 0x1c0]	       871	revision.c	FUNCTION_27	FOR_2	CALL_2
0x21c4	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	       871	revision.c	FUNCTION_27	FOR_2	CALL_2
0x21cb	          0x4889d6	                            mov rsi, rdx	       871	revision.c	FUNCTION_27	FOR_2	CALL_2
0x21ce	          0x4889c7	                            mov rdi, rax	       871	revision.c	FUNCTION_27	FOR_2	CALL_2
0x21d1	      0xe800000000	                          call 0x4002216	       871	revision.c	FUNCTION_27	FOR_2	CALL_2
0x21d6	            0xeb04	                           jmp 0x400221c	       871	revision.c	FUNCTION_27	FOR_2	CALL_2
0x21d8	              0x90	                                     nop	       863	revision.c	FUNCTION_27	FOR_2	IF_4
0x21d9	            0xeb01	                           jmp 0x400221c	       863	revision.c	FUNCTION_27	FOR_2	IF_4
0x21db	              0x90	                                     nop	       870	revision.c	FUNCTION_27	FOR_2	IF_5
0x21dc	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       858	revision.c	FUNCTION_27	FOR_2
0x21e3	        0x488b4008	                mov rax, qword [rax + 8]	       858	revision.c	FUNCTION_27	FOR_2
0x21e7	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	       858	revision.c	FUNCTION_27	FOR_2
0x21ee	    0x4883bd18feff	              cmp qword [rbp - 0x1e8], 0	       858	revision.c	FUNCTION_27	FOR_2
0x21f6	     0xf8571ffffff	                           jne 0x40021ad	       858	revision.c	FUNCTION_27	FOR_2
0x21fc	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	       875	revision.c	FUNCTION_27
0x2203	         0xfb64078	           movzx eax, byte [rax + 0x78] 	       875	revision.c	FUNCTION_27
0x2207	          0x83e002	                              and eax, 2	       875	revision.c	FUNCTION_27
0x220a	            0x84c0	                             test al, al	       875	revision.c	FUNCTION_27
0x220c	            0x7407	                            je 0x4002255	       875	revision.c	FUNCTION_27
0x220e	      0xb800020000	                          mov eax, 0x200	       875	revision.c	FUNCTION_27
0x2213	            0xeb05	                           jmp 0x400225a	       875	revision.c	FUNCTION_27
0x2215	      0xb808000000	                              mov eax, 8	       875	revision.c	FUNCTION_27
0x221a	    0x898510feffff	            mov dword [rbp - 0x1f0], eax	       875	revision.c	FUNCTION_27
0x2220	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	       878	revision.c	FUNCTION_27	FOR_3
0x2227	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	       878	revision.c	FUNCTION_27	FOR_3
0x222e	      0xe91d010000	                           jmp 0x4002390	       878	revision.c	FUNCTION_27	FOR_3
0x2233	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       879	revision.c	FUNCTION_27	FOR_3
0x223a	          0x488b00	                    mov rax, qword [rax]	       879	revision.c	FUNCTION_27	FOR_3
0x223d	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	       879	revision.c	FUNCTION_27	FOR_3
0x2244	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	       881	revision.c	FUNCTION_27	FOR_3
0x224b	            0x8b00	                    mov eax, dword [rax]	       881	revision.c	FUNCTION_27	FOR_3
0x224d	          0xc1e804	                              shr eax, 4	       881	revision.c	FUNCTION_27	FOR_3
0x2250	      0x25ffffff07	                      and eax, 0x7ffffff	       881	revision.c	FUNCTION_27	FOR_3
0x2255	    0x898514feffff	            mov dword [rbp - 0x1ec], eax	       881	revision.c	FUNCTION_27	FOR_3
0x225b	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	       883	revision.c	FUNCTION_27	FOR_3	IF_6
0x2261	          0x83e020	                           and eax, 0x20	       883	revision.c	FUNCTION_27	FOR_3	IF_6
0x2264	            0x85c0	                           test eax, eax	       883	revision.c	FUNCTION_27	FOR_3	IF_6
0x2266	     0xf85cb000000	                           jne 0x4002377	       883	revision.c	FUNCTION_27	FOR_3	IF_6
0x226c	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	       889	revision.c	FUNCTION_27	FOR_3	IF_7
0x2272	      0x2500010000	                          and eax, 0x100	       889	revision.c	FUNCTION_27	FOR_3	IF_7
0x2277	            0x85c0	                           test eax, eax	       889	revision.c	FUNCTION_27	FOR_3	IF_7
0x2279	           0xf95c0	                                setne al	       889	revision.c	FUNCTION_27	FOR_3	IF_7
0x227c	           0xfb6c0	                           movzx eax, al	       889	revision.c	FUNCTION_27	FOR_3	IF_7
0x227f	    0x3b8508feffff	            cmp eax, dword [rbp - 0x1f8]	       889	revision.c	FUNCTION_27	FOR_3	IF_7
0x2285	     0xf84af000000	                            je 0x400237a	       889	revision.c	FUNCTION_27	FOR_3	IF_7
0x228b	    0x488d9540feff	                  lea rdx, [rbp - 0x1c0]	       895	revision.c	FUNCTION_27	FOR_3	CALL_3
0x2292	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	       895	revision.c	FUNCTION_27	FOR_3	CALL_3
0x2299	          0x4889d6	                            mov rsi, rdx	       895	revision.c	FUNCTION_27	FOR_3	CALL_3
0x229c	          0x4889c7	                            mov rdi, rax	       895	revision.c	FUNCTION_27	FOR_3	CALL_3
0x229f	      0xe800000000	                          call 0x40022e4	       895	revision.c	FUNCTION_27	FOR_3	CALL_3
0x22a4	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	       895	revision.c	FUNCTION_27	FOR_3	CALL_3
0x22ab	    0x4883bd38feff	              cmp qword [rbp - 0x1c8], 0	       896	revision.c	FUNCTION_27	FOR_3	IF_8
0x22b3	     0xf8484000000	                            je 0x400237d	       896	revision.c	FUNCTION_27	FOR_3	IF_8
0x22b9	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	       899	revision.c	FUNCTION_27	FOR_3
0x22c0	            0x8b00	                    mov eax, dword [rax]	       899	revision.c	FUNCTION_27	FOR_3
0x22c2	          0xc1e804	                              shr eax, 4	       899	revision.c	FUNCTION_27	FOR_3
0x22c5	      0x25ffffff07	                      and eax, 0x7ffffff	       899	revision.c	FUNCTION_27	FOR_3
0x22ca	     0xb8510feffff	             or eax, dword [rbp - 0x1f0]	       899	revision.c	FUNCTION_27	FOR_3
0x22d0	      0x25ffffff07	                      and eax, 0x7ffffff	       899	revision.c	FUNCTION_27	FOR_3
0x22d5	            0x89c2	                            mov edx, eax	       899	revision.c	FUNCTION_27	FOR_3
0x22d7	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	       899	revision.c	FUNCTION_27	FOR_3
0x22de	    0x81e2ffffff07	                      and edx, 0x7ffffff	       899	revision.c	FUNCTION_27	FOR_3
0x22e4	            0x89d1	                            mov ecx, edx	       899	revision.c	FUNCTION_27	FOR_3
0x22e6	          0xc1e104	                              shl ecx, 4	       899	revision.c	FUNCTION_27	FOR_3
0x22e9	            0x8b10	                    mov edx, dword [rax]	       899	revision.c	FUNCTION_27	FOR_3
0x22eb	    0x81e20f000080	                     and edx, 0x8000000f	       899	revision.c	FUNCTION_27	FOR_3
0x22f1	             0x9ca	                             or edx, ecx	       899	revision.c	FUNCTION_27	FOR_3
0x22f3	            0x8910	                    mov dword [rax], edx	       899	revision.c	FUNCTION_27	FOR_3
0x22f5	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	       900	revision.c	FUNCTION_27	FOR_3
0x22fc	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       900	revision.c	FUNCTION_27	FOR_3
0x2300	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	       900	revision.c	FUNCTION_27	FOR_3
0x2307	        0x488b4028	            mov rax, qword [rax + 0x28] 	       900	revision.c	FUNCTION_27	FOR_3
0x230b	            0x8b00	                    mov eax, dword [rax]	       900	revision.c	FUNCTION_27	FOR_3
0x230d	          0xc1e804	                              shr eax, 4	       900	revision.c	FUNCTION_27	FOR_3
0x2310	      0x25ffffff07	                      and eax, 0x7ffffff	       900	revision.c	FUNCTION_27	FOR_3
0x2315	     0xb8510feffff	             or eax, dword [rbp - 0x1f0]	       900	revision.c	FUNCTION_27	FOR_3
0x231b	      0x25ffffff07	                      and eax, 0x7ffffff	       900	revision.c	FUNCTION_27	FOR_3
0x2320	      0x25ffffff07	                      and eax, 0x7ffffff	       900	revision.c	FUNCTION_27	FOR_3
0x2325	          0xc1e004	                              shl eax, 4	       900	revision.c	FUNCTION_27	FOR_3
0x2328	            0x89c1	                            mov ecx, eax	       900	revision.c	FUNCTION_27	FOR_3
0x232a	            0x8b02	                    mov eax, dword [rdx]	       900	revision.c	FUNCTION_27	FOR_3
0x232c	      0x250f000080	                     and eax, 0x8000000f	       900	revision.c	FUNCTION_27	FOR_3
0x2331	             0x9c8	                             or eax, ecx	       900	revision.c	FUNCTION_27	FOR_3
0x2333	            0x8902	                    mov dword [rdx], eax	       900	revision.c	FUNCTION_27	FOR_3
0x2335	            0xeb07	                           jmp 0x400237e	       900	revision.c	FUNCTION_27	FOR_3
0x2337	              0x90	                                     nop	       884	revision.c	FUNCTION_27	FOR_3	IF_6
0x2338	            0xeb04	                           jmp 0x400237e	       884	revision.c	FUNCTION_27	FOR_3	IF_6
0x233a	              0x90	                                     nop	       890	revision.c	FUNCTION_27	FOR_3	IF_7
0x233b	            0xeb01	                           jmp 0x400237e	       890	revision.c	FUNCTION_27	FOR_3	IF_7
0x233d	              0x90	                                     nop	       897	revision.c	FUNCTION_27	FOR_3	IF_8
0x233e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       878	revision.c	FUNCTION_27	FOR_3
0x2345	        0x488b4008	                mov rax, qword [rax + 8]	       878	revision.c	FUNCTION_27	FOR_3
0x2349	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	       878	revision.c	FUNCTION_27	FOR_3
0x2350	    0x4883bd18feff	              cmp qword [rbp - 0x1e8], 0	       878	revision.c	FUNCTION_27	FOR_3
0x2358	     0xf85d5feffff	                           jne 0x4002273	       878	revision.c	FUNCTION_27	FOR_3
0x235e	    0x488d8540feff	                  lea rax, [rbp - 0x1c0]	       903	revision.c	FUNCTION_27	CALL_4
0x2365	          0x4889c7	                            mov rdi, rax	       903	revision.c	FUNCTION_27	CALL_4
0x2368	      0xe800000000	                          call 0x40023ad	       903	revision.c	FUNCTION_27	CALL_4
0x236d	            0xeb01	                           jmp 0x40023b0	       903	revision.c	FUNCTION_27	CALL_4
0x236f	              0x90	                                     nop	       851	revision.c	FUNCTION_27	IF_3
0x2370	        0x488b45f8	                mov rax, qword [rbp - 8]	       904	revision.c	FUNCTION_27
0x2374	    0x644833042528	                xor rax, qword fs:[0x28]	       904	revision.c	FUNCTION_27
0x237d	            0x7405	                            je 0x40023c4	       904	revision.c	FUNCTION_27
0x237f	      0xe800000000	                          call 0x40023c4	       904	revision.c	FUNCTION_27
0x2384	              0xc9	                                   leave	       904	revision.c	FUNCTION_27
0x2385	              0xc3	                                     ret	       904	revision.c	FUNCTION_27
handle_one_ref	FOR,0:functions,0:WHILE,0:CALL,4:IF,1:ELSE,0:DO,0:SWITCH,0	53
0x2d6e	              0x55	                                push rbp	      1171	revision.c	FUNCTION_36
0x2d6f	          0x4889e5	                            mov rbp, rsp	      1171	revision.c	FUNCTION_36
0x2d72	        0x4883ec30	                           sub rsp, 0x30	      1171	revision.c	FUNCTION_36
0x2d76	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1171	revision.c	FUNCTION_36
0x2d7a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1171	revision.c	FUNCTION_36
0x2d7e	          0x8955dc	             mov dword [rbp - 0x24], edx	      1171	revision.c	FUNCTION_36
0x2d81	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1171	revision.c	FUNCTION_36
0x2d85	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1172	revision.c	FUNCTION_36
0x2d89	        0x488945f0	             mov qword [rbp - 0x10], rax	      1172	revision.c	FUNCTION_36
0x2d8d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1175	revision.c	FUNCTION_36	IF_1	CALL_1
0x2d91	        0x488b4008	                mov rax, qword [rax + 8]	      1175	revision.c	FUNCTION_36	IF_1	CALL_1
0x2d95	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1175	revision.c	FUNCTION_36	IF_1	CALL_1
0x2d99	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1175	revision.c	FUNCTION_36	IF_1	CALL_1
0x2d9d	          0x4889d6	                            mov rsi, rdx	      1175	revision.c	FUNCTION_36	IF_1	CALL_1
0x2da0	          0x4889c7	                            mov rdi, rax	      1175	revision.c	FUNCTION_36	IF_1	CALL_1
0x2da3	      0xe800000000	                          call 0x4002de8	      1175	revision.c	FUNCTION_36	IF_1	CALL_1
0x2da8	            0x85c0	                           test eax, eax	      1175	revision.c	FUNCTION_36	IF_1	CALL_1
0x2daa	            0x7407	                            je 0x4002df3	      1175	revision.c	FUNCTION_36	IF_1	CALL_1
0x2dac	      0xb800000000	                              mov eax, 0	      1176	revision.c	FUNCTION_36	IF_1
0x2db1	            0xeb71	                           jmp 0x4002e64	      1176	revision.c	FUNCTION_36	IF_1
0x2db3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1178	revision.c	FUNCTION_36	CALL_2
0x2db7	            0x8b00	                    mov eax, dword [rax]	      1178	revision.c	FUNCTION_36	CALL_2
0x2db9	            0x89c1	                            mov ecx, eax	      1178	revision.c	FUNCTION_36	CALL_2
0x2dbb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1178	revision.c	FUNCTION_36	CALL_2
0x2dbf	        0x488b4008	                mov rax, qword [rax + 8]	      1178	revision.c	FUNCTION_36	CALL_2
0x2dc3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1178	revision.c	FUNCTION_36	CALL_2
0x2dc7	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1178	revision.c	FUNCTION_36	CALL_2
0x2dcb	          0x4889c7	                            mov rdi, rax	      1178	revision.c	FUNCTION_36	CALL_2
0x2dce	      0xe811deffff	                  call sym.get_reference	      1178	revision.c	FUNCTION_36	CALL_2
0x2dd3	        0x488945f8	                mov qword [rbp - 8], rax	      1178	revision.c	FUNCTION_36	CALL_2
0x2dd7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1179	revision.c	FUNCTION_36	CALL_3
0x2ddb	            0x8b00	                    mov eax, dword [rax]	      1179	revision.c	FUNCTION_36	CALL_3
0x2ddd	            0x89c1	                            mov ecx, eax	      1179	revision.c	FUNCTION_36	CALL_3
0x2ddf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1179	revision.c	FUNCTION_36	CALL_3
0x2de3	        0x488b4008	                mov rax, qword [rax + 8]	      1179	revision.c	FUNCTION_36	CALL_3
0x2de7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1179	revision.c	FUNCTION_36	CALL_3
0x2deb	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1179	revision.c	FUNCTION_36	CALL_3
0x2def	          0x4189c8	                            mov r8d, ecx	      1179	revision.c	FUNCTION_36	CALL_3
0x2df2	      0xb900000000	                              mov ecx, 0	      1179	revision.c	FUNCTION_36	CALL_3
0x2df7	          0x4889c7	                            mov rdi, rax	      1179	revision.c	FUNCTION_36	CALL_3
0x2dfa	      0xe819fdffff	                call sym.add_rev_cmdline	      1179	revision.c	FUNCTION_36	CALL_3
0x2dff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1180	revision.c	FUNCTION_36	CALL_4
0x2e03	            0x8b00	                    mov eax, dword [rax]	      1180	revision.c	FUNCTION_36	CALL_4
0x2e05	            0x89c1	                            mov ecx, eax	      1180	revision.c	FUNCTION_36	CALL_4
0x2e07	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1180	revision.c	FUNCTION_36	CALL_4
0x2e0b	        0x488b4008	                mov rax, qword [rax + 8]	      1180	revision.c	FUNCTION_36	CALL_4
0x2e0f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1180	revision.c	FUNCTION_36	CALL_4
0x2e13	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1180	revision.c	FUNCTION_36	CALL_4
0x2e17	          0x4889c7	                            mov rdi, rax	      1180	revision.c	FUNCTION_36	CALL_4
0x2e1a	      0xe800000000	                          call 0x4002e5f	      1180	revision.c	FUNCTION_36	CALL_4
0x2e1f	      0xb800000000	                              mov eax, 0	      1181	revision.c	FUNCTION_36
0x2e24	              0xc9	                                   leave	      1182	revision.c	FUNCTION_36
0x2e25	              0xc3	                                     ret	      1182	revision.c	FUNCTION_36
handle_one_reflog_ent	FOR,0:functions,0:WHILE,0:CALL,2:IF,0:ELSE,0:DO,0:SWITCH,0	20
0x304c	              0x55	                                push rbp	      1247	revision.c	FUNCTION_42
0x304d	          0x4889e5	                            mov rbp, rsp	      1247	revision.c	FUNCTION_42
0x3050	        0x4883ec30	                           sub rsp, 0x30	      1247	revision.c	FUNCTION_42
0x3054	        0x48897df8	                mov qword [rbp - 8], rdi	      1247	revision.c	FUNCTION_42
0x3058	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1247	revision.c	FUNCTION_42
0x305c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1247	revision.c	FUNCTION_42
0x3060	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1247	revision.c	FUNCTION_42
0x3064	        0x448945dc	             mov dword [rbp - 0x24], r8d	      1247	revision.c	FUNCTION_42
0x3068	        0x4c894dd0	              mov qword [rbp - 0x30], r9	      1247	revision.c	FUNCTION_42
0x306c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1248	revision.c	FUNCTION_42	CALL_1
0x3070	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      1248	revision.c	FUNCTION_42	CALL_1
0x3074	          0x4889c7	                            mov rdi, rax	      1248	revision.c	FUNCTION_42	CALL_1
0x3077	      0xe802ffffff	       call sym.handle_one_reflog_commit	      1248	revision.c	FUNCTION_42	CALL_1
0x307c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1249	revision.c	FUNCTION_42	CALL_2
0x3080	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      1249	revision.c	FUNCTION_42	CALL_2
0x3084	          0x4889c7	                            mov rdi, rax	      1249	revision.c	FUNCTION_42	CALL_2
0x3087	      0xe8f2feffff	       call sym.handle_one_reflog_commit	      1249	revision.c	FUNCTION_42	CALL_2
0x308c	      0xb800000000	                              mov eax, 0	      1250	revision.c	FUNCTION_42
0x3091	              0xc9	                                   leave	      1251	revision.c	FUNCTION_42
0x3092	              0xc3	                                     ret	      1251	revision.c	FUNCTION_42
relevant_commit	FOR,0:functions,0:WHILE,0:CALL,0:IF,0:ELSE,0:DO,0:SWITCH,0	13
0x107c	              0x55	                                push rbp	       349	revision.c	FUNCTION_14
0x107d	          0x4889e5	                            mov rbp, rsp	       349	revision.c	FUNCTION_14
0x1080	        0x48897df8	                mov qword [rbp - 8], rdi	       349	revision.c	FUNCTION_14
0x1084	        0x488b45f8	                mov rax, qword [rbp - 8]	       350	revision.c	FUNCTION_14
0x1088	            0x8b00	                    mov eax, dword [rax]	       350	revision.c	FUNCTION_14
0x108a	          0xc1e804	                              shr eax, 4	       350	revision.c	FUNCTION_14
0x108d	      0x25ffffff07	                      and eax, 0x7ffffff	       350	revision.c	FUNCTION_14
0x1092	      0x2502040000	                          and eax, 0x402	       350	revision.c	FUNCTION_14
0x1097	          0x83f802	                              cmp eax, 2	       350	revision.c	FUNCTION_14
0x109a	           0xf95c0	                                setne al	       350	revision.c	FUNCTION_14
0x109d	           0xfb6c0	                           movzx eax, al	       350	revision.c	FUNCTION_14
0x10a0	              0x5d	                                 pop rbp	       351	revision.c	FUNCTION_14
0x10a1	              0xc3	                                     ret	       351	revision.c	FUNCTION_14
add_pending_commit_list	FOR,0:functions,0:WHILE,1:CALL,2:IF,0:ELSE,0:DO,0:SWITCH,0	43
0x3973	              0x55	                                push rbp	      1457	revision.c	FUNCTION_51
0x3974	          0x4889e5	                            mov rbp, rsp	      1457	revision.c	FUNCTION_51
0x3977	        0x4883ec30	                           sub rsp, 0x30	      1457	revision.c	FUNCTION_51
0x397b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1457	revision.c	FUNCTION_51
0x397f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1457	revision.c	FUNCTION_51
0x3983	          0x8955dc	             mov dword [rbp - 0x24], edx	      1457	revision.c	FUNCTION_51
0x3986	            0xeb70	                           jmp 0x4003a38	      1458	revision.c	FUNCTION_51	WHILE_1
0x3988	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1459	revision.c	FUNCTION_51	WHILE_1
0x398c	          0x488b00	                    mov rax, qword [rax]	      1459	revision.c	FUNCTION_51	WHILE_1
0x398f	        0x488945f8	                mov qword [rbp - 8], rax	      1459	revision.c	FUNCTION_51	WHILE_1
0x3993	        0x488b45f8	                mov rax, qword [rbp - 8]	      1460	revision.c	FUNCTION_51	WHILE_1
0x3997	            0x8b00	                    mov eax, dword [rax]	      1460	revision.c	FUNCTION_51	WHILE_1
0x3999	          0xc1e804	                              shr eax, 4	      1460	revision.c	FUNCTION_51	WHILE_1
0x399c	      0x25ffffff07	                      and eax, 0x7ffffff	      1460	revision.c	FUNCTION_51	WHILE_1
0x39a1	           0xb45dc	              or eax, dword [rbp - 0x24]	      1460	revision.c	FUNCTION_51	WHILE_1
0x39a4	      0x25ffffff07	                      and eax, 0x7ffffff	      1460	revision.c	FUNCTION_51	WHILE_1
0x39a9	            0x89c2	                            mov edx, eax	      1460	revision.c	FUNCTION_51	WHILE_1
0x39ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      1460	revision.c	FUNCTION_51	WHILE_1
0x39af	    0x81e2ffffff07	                      and edx, 0x7ffffff	      1460	revision.c	FUNCTION_51	WHILE_1
0x39b5	            0x89d1	                            mov ecx, edx	      1460	revision.c	FUNCTION_51	WHILE_1
0x39b7	          0xc1e104	                              shl ecx, 4	      1460	revision.c	FUNCTION_51	WHILE_1
0x39ba	            0x8b10	                    mov edx, dword [rax]	      1460	revision.c	FUNCTION_51	WHILE_1
0x39bc	    0x81e20f000080	                     and edx, 0x8000000f	      1460	revision.c	FUNCTION_51	WHILE_1
0x39c2	             0x9ca	                             or edx, ecx	      1460	revision.c	FUNCTION_51	WHILE_1
0x39c4	            0x8910	                    mov dword [rax], edx	      1460	revision.c	FUNCTION_51	WHILE_1
0x39c6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1461	revision.c	FUNCTION_51	WHILE_1	CALL_2
0x39ca	        0x4883c004	                              add rax, 4	      1461	revision.c	FUNCTION_51	WHILE_1	CALL_2
0x39ce	          0x4889c7	                            mov rdi, rax	      1461	revision.c	FUNCTION_51	WHILE_1	CALL_2
0x39d1	      0xe800000000	                          call 0x4003a16	      1461	revision.c	FUNCTION_51	WHILE_1	CALL_2
0x39d6	          0x4889c2	                            mov rdx, rax	      1461	revision.c	FUNCTION_51	WHILE_1	CALL_2
0x39d9	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1461	revision.c	FUNCTION_51	WHILE_1	CALL_2
0x39dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1461	revision.c	FUNCTION_51	WHILE_1	CALL_2
0x39e1	          0x4889ce	                            mov rsi, rcx	      1461	revision.c	FUNCTION_51	WHILE_1	CALL_2
0x39e4	          0x4889c7	                            mov rdi, rax	      1461	revision.c	FUNCTION_51	WHILE_1	CALL_2
0x39e7	      0xe800000000	                          call 0x4003a2c	      1461	revision.c	FUNCTION_51	WHILE_1	CALL_2
0x39ec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1462	revision.c	FUNCTION_51	WHILE_1
0x39f0	        0x488b4008	                mov rax, qword [rax + 8]	      1462	revision.c	FUNCTION_51	WHILE_1
0x39f4	        0x488945e0	             mov qword [rbp - 0x20], rax	      1462	revision.c	FUNCTION_51	WHILE_1
0x39f8	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1458	revision.c	FUNCTION_51	WHILE_1
0x39fd	            0x7589	                           jne 0x40039c8	      1458	revision.c	FUNCTION_51	WHILE_1
0x39ff	              0x90	                                     nop	      1464	revision.c	FUNCTION_51
0x3a00	              0xc9	                                   leave	      1464	revision.c	FUNCTION_51
0x3a01	              0xc3	                                     ret	      1464	revision.c	FUNCTION_51
